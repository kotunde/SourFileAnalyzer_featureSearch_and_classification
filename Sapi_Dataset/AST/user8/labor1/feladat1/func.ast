Dumping countBits:
[0;1;32mFunctionDecl[0m[0;33m 0x7485f38[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:16:1[0m, [0;33mcol:25[0m> [0;33mcol:5[0m[0;1;36m countBits[0m [0;32m'int (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7485ea0[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m number[0m [0;32m'int'[0m

Dumping countBits:
[0;1;32mFunctionDecl[0m[0;33m 0x7487da8[0m prev 0x7485f38 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:10:1[0m, [0;33mline:21:1[0m> [0;33mline:10:5[0m[0;1;36m countBits[0m [0;32m'int (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7487d10[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m number[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x74882b8[0m <[0;33mcol:27[0m, [0;33mline:21:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7487ed0[0m <[0;33mline:11:5[0m, [0;33mcol:14[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7487e68[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m darab[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7487f28[0m <[0;33mline:12:5[0m, [0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7487ee8[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7487e68[0m[0;1;36m 'darab'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7487f08[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x7488258[0m <[0;33mline:13:5[0m, [0;33mline:19:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7487fa0[0m <[0;33mline:13:11[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7487f88[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7487f48[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7487d10[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7487f68[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7488238[0m <[0;33mcol:22[0m, [0;33mline:19:5[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x7488168[0m <[0;33mline:15:9[0m, [0;33mline:17:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7488078[0m <[0;33mline:15:12[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x7488038[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7488018[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '&'
[0;34m  |   | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7488000[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7487fc0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7487d10[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7487fe0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7488058[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7488150[0m <[0;33mcol:31[0m, [0;33mline:17:9[0m>
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7488130[0m <[0;33mline:16:13[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7488098[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7487e68[0m[0;1;36m 'darab'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7488110[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74880f8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74880b8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7487e68[0m[0;1;36m 'darab'[0m [0;32m'int'[0m
[0;34m  |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x74880d8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7488218[0m <[0;33mline:18:9[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7488180[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7487d10[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x74881f8[0m <[0;33mcol:18[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '>>'
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74881e0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74881a0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7487d10[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x74881c0[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x74882a8[0m <[0;33mline:20:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7488290[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7488270[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7487e68[0m[0;1;36m 'darab'[0m [0;32m'int'[0m

Dumping countBits:
[0;1;32mFunctionDecl[0m[0;33m 0x710a9b8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:16:1[0m, [0;33mcol:25[0m> [0;33mcol:5[0m[0;1;36m countBits[0m [0;32m'int (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x710a920[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m number[0m [0;32m'int'[0m

Dumping countBits:
[0;1;32mFunctionDecl[0m[0;33m 0x710c828[0m prev 0x710a9b8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:10:1[0m, [0;33mline:21:1[0m> [0;33mline:10:5[0m[0;1;36m countBits[0m [0;32m'int (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x710c790[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m number[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x710cd38[0m <[0;33mcol:27[0m, [0;33mline:21:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x710c950[0m <[0;33mline:11:5[0m, [0;33mcol:14[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x710c8e8[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m darab[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x710c9a8[0m <[0;33mline:12:5[0m, [0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x710c968[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x710c8e8[0m[0;1;36m 'darab'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x710c988[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x710ccd8[0m <[0;33mline:13:5[0m, [0;33mline:19:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x710ca20[0m <[0;33mline:13:11[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x710ca08[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x710c9c8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x710c790[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x710c9e8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x710ccb8[0m <[0;33mcol:22[0m, [0;33mline:19:5[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x710cbe8[0m <[0;33mline:15:9[0m, [0;33mline:17:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x710caf8[0m <[0;33mline:15:12[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x710cab8[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x710ca98[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '&'
[0;34m  |   | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x710ca80[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x710ca40[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x710c790[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x710ca60[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x710cad8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x710cbd0[0m <[0;33mcol:31[0m, [0;33mline:17:9[0m>
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x710cbb0[0m <[0;33mline:16:13[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x710cb18[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x710c8e8[0m[0;1;36m 'darab'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x710cb90[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x710cb78[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x710cb38[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x710c8e8[0m[0;1;36m 'darab'[0m [0;32m'int'[0m
[0;34m  |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x710cb58[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x710cc98[0m <[0;33mline:18:9[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x710cc00[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x710c790[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x710cc78[0m <[0;33mcol:18[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '>>'
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x710cc60[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x710cc20[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x710c790[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x710cc40[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x710cd28[0m <[0;33mline:20:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x710cd10[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x710ccf0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x710c8e8[0m[0;1;36m 'darab'[0m [0;32m'int'[0m

Dumping setBit:
[0;1;32mFunctionDecl[0m[0;33m 0x7641710[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:17:1[0m, [0;33mcol:34[0m> [0;33mcol:5[0m[0;1;36m setBit[0m [0;32m'int (int &, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x76415b8[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m number[0m [0;32m'int &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7641638[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m order[0m [0;32m'int'[0m

Dumping setBit:
[0;1;32mFunctionDecl[0m[0;33m 0x76439e0[0m prev 0x7641710 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:30:1[0m, [0;33mline:36:1[0m> [0;33mline:30:5[0m[0;1;36m setBit[0m [0;32m'int (int &, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x76438c0[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m number[0m [0;32m'int &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7643940[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m order[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7643cf8[0m <[0;33mcol:36[0m, [0;33mline:36:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x7643be8[0m <[0;33mline:31:5[0m, [0;33mline:33:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7643b80[0m <[0;33mline:31:8[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7643ae8[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7643ad0[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7643a90[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7643940[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7643ab0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 31[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7643b60[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7643b48[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7643b08[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7643940[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7643b28[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7643bd0[0m <[0;33mcol:33[0m, [0;33mline:33:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7643bc0[0m <[0;33mline:32:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7643ba0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x7643c98[0m <[0;33mline:34:5[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '|=' ComputeLHSTy=[0;32m'unsigned long'[0m ComputeResultTy=[0;32m'unsigned long'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7643c00[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x76438c0[0m[0;1;36m 'number'[0m [0;32m'int &'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7643c78[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m  |   |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7643c20[0m <[0;33mcol:15[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7643c60[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7643c40[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7643940[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7643ce8[0m <[0;33mline:35:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7643cc8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m

Dumping setBit:
[0;1;32mFunctionDecl[0m[0;33m 0x634cc60[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:17:1[0m, [0;33mcol:34[0m> [0;33mcol:5[0m[0;1;36m setBit[0m [0;32m'int (int &, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634cb08[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m number[0m [0;32m'int &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634cb88[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m order[0m [0;32m'int'[0m

Dumping setBit:
[0;1;32mFunctionDecl[0m[0;33m 0x634ef30[0m prev 0x634cc60 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:30:1[0m, [0;33mline:36:1[0m> [0;33mline:30:5[0m[0;1;36m setBit[0m [0;32m'int (int &, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634ee10[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m number[0m [0;32m'int &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634ee90[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m order[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x634f248[0m <[0;33mcol:36[0m, [0;33mline:36:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x634f138[0m <[0;33mline:31:5[0m, [0;33mline:33:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x634f0d0[0m <[0;33mline:31:8[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x634f038[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x634f020[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x634efe0[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x634ee90[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x634f000[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 31[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x634f0b0[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x634f098[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x634f058[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x634ee90[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x634f078[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x634f120[0m <[0;33mcol:33[0m, [0;33mline:33:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x634f110[0m <[0;33mline:32:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x634f0f0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x634f1e8[0m <[0;33mline:34:5[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '|=' ComputeLHSTy=[0;32m'unsigned long'[0m ComputeResultTy=[0;32m'unsigned long'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x634f150[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x634ee10[0m[0;1;36m 'number'[0m [0;32m'int &'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x634f1c8[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m  |   |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x634f170[0m <[0;33mcol:15[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x634f1b0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x634f190[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x634ee90[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x634f238[0m <[0;33mline:35:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x634f218[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m

Dumping mean:
[0;1;32mFunctionDecl[0m[0;33m 0x692c3a0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:18:1[0m, [0;33mcol:44[0m> [0;33mcol:8[0m used[0;1;36m mean[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x692c208[0m <[0;33mcol:13[0m, [0;33mcol:26[0m> [0;33mcol:20[0m[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x692c288[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m numElements[0m [0;32m'int'[0m

Dumping mean:
[0;1;32mFunctionDecl[0m[0;33m 0x692e888[0m prev 0x692c3a0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:45:1[0m, [0;33mline:56:1[0m> [0;33mline:45:8[0m used[0;1;36m mean[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x692e768[0m <[0;33mcol:13[0m, [0;33mcol:26[0m> [0;33mcol:20[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x692e7e8[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;33mcol:33[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x692f110[0m <[0;33mcol:46[0m, [0;33mline:56:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x692eab8[0m <[0;33mline:46:5[0m, [0;33mline:48:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692e990[0m <[0;33mline:46:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692e978[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692e938[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x692e7e8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x692e958[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x692eaa0[0m <[0;33mcol:27[0m, [0;33mline:48:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x692ea90[0m <[0;33mline:47:9[0m, [0;33m/usr/include/math.h:98:35[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ea78[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x692ea58[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x692ea18[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ea00[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692e9b0[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6567048[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ea40[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x692e9d0[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x692eb88[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:49:5[0m, [0;33mcol:20[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x692eae8[0m <[0;33mcol:5[0m, [0;33mcol:19[0m> [0;33mcol:12[0m used[0;1;36m mean[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692eb70[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x692eb50[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x692ee30[0m <[0;33mline:50:5[0m, [0;33mline:52:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x692ec40[0m <[0;33mline:50:9[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x692ebb8[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x692ec20[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692ecc8[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ec98[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ec58[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x692ebb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ecb0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ec78[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x692e7e8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x692ed08[0m <[0;33mcol:34[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ece8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x692ebb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x692ee18[0m <[0;33mcol:39[0m, [0;33mline:52:5[0m>
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x692ede8[0m <[0;33mline:51:9[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ed20[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x692eae8[0m[0;1;36m 'mean'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692edd0[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x692edb0[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ed80[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ed40[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x692e768[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ed98[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ed60[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x692ebb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x692eee8[0m <[0;33mline:53:5[0m, [0;33mcol:18[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x692ee80[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m result[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692f0a8[0m <[0;33mline:54:5[0m, [0;33mcol:43[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ef00[0m <[0;33mcol:5[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x692ee80[0m[0;1;36m 'result'[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mParenExpr[0m[0;33m 0x692f088[0m <[0;33mcol:14[0m, [0;33mcol:43[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692f068[0m <[0;33mcol:15[0m, [0;33mcol:42[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692f050[0m <[0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ef20[0m <[0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x692eae8[0m[0;1;36m 'mean'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x692f028[0m <[0;33mcol:20[0m, [0;33mcol:42[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692f010[0m <[0;33mcol:28[0m, [0;33mcol:42[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m> part_of_explicit_cast
[0;34m  |         `-[0m[0;1;35mParenExpr[0m[0;33m 0x692eff0[0m <[0;33mcol:28[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692ef98[0m <[0;33mcol:29[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ef80[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ef40[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x692e7e8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |             `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x692ef60[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x692f100[0m <[0;33mline:55:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692f0e8[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692f0c8[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x692ee80[0m[0;1;36m 'result'[0m [0;32m'double'[0m

Dumping mean:
[0;1;32mFunctionDecl[0m[0;33m 0x652e580[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:18:1[0m, [0;33mcol:44[0m> [0;33mcol:8[0m used[0;1;36m mean[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x652e3e8[0m <[0;33mcol:13[0m, [0;33mcol:26[0m> [0;33mcol:20[0m[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x652e468[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m numElements[0m [0;32m'int'[0m

Dumping mean:
[0;1;32mFunctionDecl[0m[0;33m 0x6530a68[0m prev 0x652e580 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:45:1[0m, [0;33mline:56:1[0m> [0;33mline:45:8[0m used[0;1;36m mean[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6530948[0m <[0;33mcol:13[0m, [0;33mcol:26[0m> [0;33mcol:20[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65309c8[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;33mcol:33[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65312f0[0m <[0;33mcol:46[0m, [0;33mline:56:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6530c98[0m <[0;33mline:46:5[0m, [0;33mline:48:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6530b70[0m <[0;33mline:46:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530b58[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6530b18[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65309c8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6530b38[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6530c80[0m <[0;33mcol:27[0m, [0;33mline:48:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6530c70[0m <[0;33mline:47:9[0m, [0;33m/usr/include/math.h:98:35[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530c58[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x6530c38[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6530bf8[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530be0[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6530b90[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6169b98[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530c20[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6530bb0[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6530d68[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:49:5[0m, [0;33mcol:20[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6530cc8[0m <[0;33mcol:5[0m, [0;33mcol:19[0m> [0;33mcol:12[0m used[0;1;36m mean[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530d50[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6530d30[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6531010[0m <[0;33mline:50:5[0m, [0;33mline:52:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6530e20[0m <[0;33mline:50:9[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6530d98[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6530e00[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6530ea8[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530e78[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6530e38[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6530d98[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530e90[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6530e58[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65309c8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6530ee8[0m <[0;33mcol:34[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6530ec8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6530d98[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6530ff8[0m <[0;33mcol:39[0m, [0;33mline:52:5[0m>
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x6530fc8[0m <[0;33mline:51:9[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6530f00[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6530cc8[0m[0;1;36m 'mean'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530fb0[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6530f90[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530f60[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6530f20[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6530948[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6530f78[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6530f40[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6530d98[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x65310c8[0m <[0;33mline:53:5[0m, [0;33mcol:18[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6531060[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m result[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6531288[0m <[0;33mline:54:5[0m, [0;33mcol:43[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65310e0[0m <[0;33mcol:5[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6531060[0m[0;1;36m 'result'[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6531268[0m <[0;33mcol:14[0m, [0;33mcol:43[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6531248[0m <[0;33mcol:15[0m, [0;33mcol:42[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6531230[0m <[0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6531100[0m <[0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6530cc8[0m[0;1;36m 'mean'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6531208[0m <[0;33mcol:20[0m, [0;33mcol:42[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65311f0[0m <[0;33mcol:28[0m, [0;33mcol:42[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m> part_of_explicit_cast
[0;34m  |         `-[0m[0;1;35mParenExpr[0m[0;33m 0x65311d0[0m <[0;33mcol:28[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6531178[0m <[0;33mcol:29[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6531160[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6531120[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65309c8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |             `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6531140[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x65312e0[0m <[0;33mline:55:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65312c8[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65312a8[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6531060[0m[0;1;36m 'result'[0m [0;32m'double'[0m

Dumping stddev:
[0;1;32mFunctionDecl[0m[0;33m 0x5ec7458[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:20:1[0m, [0;33mcol:46[0m> [0;33mcol:8[0m[0;1;36m stddev[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ec7338[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ec73b8[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m numElements[0m [0;32m'int'[0m

Dumping stddev:
[0;1;32mFunctionDecl[0m[0;33m 0x5ec9ee8[0m prev 0x5ec7458 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:65:1[0m, [0;33mline:78:1[0m> [0;33mline:65:8[0m[0;1;36m stddev[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ec9dc8[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ec9e48[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5ecaa88[0m <[0;33mcol:48[0m, [0;33mline:78:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eca018[0m <[0;33mline:66:5[0m, [0;33mcol:17[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5ec9fb0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m atlag[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eca1b0[0m <[0;33mline:68:5[0m, [0;33mline:70:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eca088[0m <[0;33mline:68:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca070[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca030[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ec9e48[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eca050[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5eca198[0m <[0;33mcol:27[0m, [0;33mline:70:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5eca188[0m <[0;33mline:69:9[0m, [0;33m/usr/include/math.h:98:35[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca170[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x5eca150[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5eca110[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca0f8[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca0a8[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5b03138[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca138[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5eca0c8[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eca360[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:71:5[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca1c8[0m <[0;33mcol:5[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5ec9fb0[0m[0;1;36m 'atlag'[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5eca300[0m <[0;33mcol:13[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca2e8[0m <[0;33mcol:13[0m> [0;32m'double (*)(double *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca270[0m <[0;33mcol:13[0m> [0;32m'double (double *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5ec94d8[0m[0;1;36m 'mean'[0m [0;32m'double (double *, int)'[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca330[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca230[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ec9dc8[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca348[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca250[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ec9e48[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eca438[0m <[0;33mline:72:5[0m, [0;33mcol:19[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eca398[0m <[0;33mcol:5[0m, [0;33mcol:18[0m> [0;33mcol:12[0m used[0;1;36m tav[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca420[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eca400[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5eca868[0m <[0;33mline:73:5[0m, [0;33mline:76:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eca4f0[0m <[0;33mline:73:10[0m, [0;33mcol:17[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eca468[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eca4d0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eca578[0m <[0;33mcol:19[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca548[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca508[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eca468[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca560[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca528[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ec9e48[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5eca5b8[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca598[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eca468[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5eca848[0m <[0;33mcol:40[0m, [0;33mline:76:5[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eca750[0m <[0;33mline:74:9[0m, [0;33mcol:34[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eca5e8[0m <[0;33mcol:9[0m, [0;33mcol:29[0m> [0;33mcol:16[0m used[0;1;36m k[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eca730[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca700[0m <[0;33mcol:20[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eca6c0[0m <[0;33mcol:20[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca690[0m <[0;33mcol:20[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca650[0m <[0;33mcol:20[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ec9dc8[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca6a8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca670[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eca468[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca718[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca6e0[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5ec9fb0[0m[0;1;36m 'atlag'[0m [0;32m'double'[0m
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x5eca818[0m <[0;33mline:75:9[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca768[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eca398[0m[0;1;36m 'tav'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eca7f8[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca7c8[0m <[0;33mcol:14[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca788[0m <[0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eca5e8[0m[0;1;36m 'k'[0m [0;32m'double'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca7e0[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca7a8[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eca5e8[0m[0;1;36m 'k'[0m [0;32m'double'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5ecaa78[0m <[0;33mline:77:5[0m, [0;33mcol:38[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5ecaa50[0m <[0;33mcol:12[0m, [0;33mcol:38[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ecaa38[0m <[0;33mcol:12[0m> [0;32m'double (*)(double) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca9f0[0m <[0;33mcol:12[0m> [0;32m'double (double) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4f48130[0m[0;1;36m 'sqrt'[0m [0;32m'double (double) throw()'[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eca9d0[0m <[0;33mcol:17[0m, [0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca9a0[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca8e8[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eca398[0m[0;1;36m 'tav'[0m [0;32m'double'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca9b8[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m          `-[0m[0;1;35mParenExpr[0m[0;33m 0x5eca980[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eca960[0m <[0;33mcol:24[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m              |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eca948[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eca908[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ec9e48[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m              `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eca928[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m

Dumping stddev:
[0;1;32mFunctionDecl[0m[0;33m 0x69061f8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:20:1[0m, [0;33mcol:46[0m> [0;33mcol:8[0m[0;1;36m stddev[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x69060d8[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6906158[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m numElements[0m [0;32m'int'[0m

Dumping stddev:
[0;1;32mFunctionDecl[0m[0;33m 0x6908c88[0m prev 0x69061f8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:65:1[0m, [0;33mline:78:1[0m> [0;33mline:65:8[0m[0;1;36m stddev[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6908b68[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6908be8[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6909828[0m <[0;33mcol:48[0m, [0;33mline:78:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6908db8[0m <[0;33mline:66:5[0m, [0;33mcol:17[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6908d50[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m atlag[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6908f50[0m <[0;33mline:68:5[0m, [0;33mline:70:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6908e28[0m <[0;33mline:68:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6908e10[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6908dd0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6908be8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6908df0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6908f38[0m <[0;33mcol:27[0m, [0;33mline:70:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6908f28[0m <[0;33mline:69:9[0m, [0;33m/usr/include/math.h:98:35[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6908f10[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x6908ef0[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6908eb0[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6908e98[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6908e48[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6541308[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6908ed8[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6908e68[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6909100[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:71:5[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6908f68[0m <[0;33mcol:5[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6908d50[0m[0;1;36m 'atlag'[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x69090a0[0m <[0;33mcol:13[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6909088[0m <[0;33mcol:13[0m> [0;32m'double (*)(double *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909010[0m <[0;33mcol:13[0m> [0;32m'double (double *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6908278[0m[0;1;36m 'mean'[0m [0;32m'double (double *, int)'[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69090d0[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6908fd0[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6908b68[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69090e8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6908ff0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6908be8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x69091d8[0m <[0;33mline:72:5[0m, [0;33mcol:19[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6909138[0m <[0;33mcol:5[0m, [0;33mcol:18[0m> [0;33mcol:12[0m used[0;1;36m tav[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69091c0[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69091a0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6909608[0m <[0;33mline:73:5[0m, [0;33mline:76:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6909290[0m <[0;33mline:73:10[0m, [0;33mcol:17[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6909208[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6909270[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6909318[0m <[0;33mcol:19[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69092e8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69092a8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6909208[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6909300[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69092c8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6908be8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6909358[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909338[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6909208[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69095e8[0m <[0;33mcol:40[0m, [0;33mline:76:5[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x69094f0[0m <[0;33mline:74:9[0m, [0;33mcol:34[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6909388[0m <[0;33mcol:9[0m, [0;33mcol:29[0m> [0;33mcol:16[0m used[0;1;36m k[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69094d0[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69094a0[0m <[0;33mcol:20[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6909460[0m <[0;33mcol:20[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6909430[0m <[0;33mcol:20[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69093f0[0m <[0;33mcol:20[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6908b68[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6909448[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909410[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6909208[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69094b8[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909480[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6908d50[0m[0;1;36m 'atlag'[0m [0;32m'double'[0m
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x69095b8[0m <[0;33mline:75:9[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909508[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6909138[0m[0;1;36m 'tav'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6909598[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6909568[0m <[0;33mcol:14[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909528[0m <[0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6909388[0m[0;1;36m 'k'[0m [0;32m'double'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6909580[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909548[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6909388[0m[0;1;36m 'k'[0m [0;32m'double'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6909818[0m <[0;33mline:77:5[0m, [0;33mcol:38[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x69097f0[0m <[0;33mcol:12[0m, [0;33mcol:38[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69097d8[0m <[0;33mcol:12[0m> [0;32m'double (*)(double) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909790[0m <[0;33mcol:12[0m> [0;32m'double (double) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5986130[0m[0;1;36m 'sqrt'[0m [0;32m'double (double) throw()'[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6909770[0m <[0;33mcol:17[0m, [0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6909740[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6909688[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6909138[0m[0;1;36m 'tav'[0m [0;32m'double'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6909758[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m          `-[0m[0;1;35mParenExpr[0m[0;33m 0x6909720[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6909700[0m <[0;33mcol:24[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m              |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69096e8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69096a8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6908be8[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m              `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69096c8[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m

Dumping max2:
[0;1;32mFunctionDecl[0m[0;33m 0x5cf07d0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:19:1[0m, [0;33mcol:46[0m> [0;33mcol:10[0m[0;1;36m max2[0m [0;32m'double *(double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5cf0638[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5cf06b8[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m numElements[0m [0;32m'int'[0m

Dumping max2:
[0;1;32mFunctionDecl[0m[0;33m 0x5cf4180[0m prev 0x5cf07d0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:90:1[0m, [0;33mline:121:1[0m> [0;33mline:90:10[0m[0;1;36m max2[0m [0;32m'double *(double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5cf4060[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5cf40e0[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cf5508[0m <[0;33mcol:48[0m, [0;33mline:121:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cf4568[0m <[0;33mline:91:5[0m, [0;33mcol:30[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cf4258[0m <[0;33mcol:5[0m, [0;33mcol:29[0m> [0;33mcol:12[0m used[0;1;36m max[0m [0;32m'double [2]'[0m cinit
[0;34m  |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x5cf44a0[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'double [2]'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf44e0[0m <[0;33m/usr/include/math.h:98:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |     | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5cf4368[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5cf4328[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4310[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf42c0[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x592ad78[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4350[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5cf42e0[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4500[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x5cf4430[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5cf43f0[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf43d8[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4388[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x592ad78[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4418[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5cf43a8[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5cf4658[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:93:5[0m, [0;33mline:95:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf45d8[0m <[0;33mline:93:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf45c0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4580[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf40e0[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf45a0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cf4640[0m <[0;33mcol:27[0m, [0;33mline:95:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5cf4630[0m <[0;33mline:94:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4618[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf45f8[0m <[0;33mcol:16[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4258[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5cf5498[0m <[0;33mline:96:5[0m, [0;33mline:119:5[0m> has_else
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf46c8[0m <[0;33mline:96:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf46b0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4670[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf40e0[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf4690[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cf4980[0m <[0;33mcol:27[0m, [0;33mline:100:5[0m>
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf47f0[0m <[0;33mline:97:9[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf4740[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4728[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf46e8[0m <[0;33mcol:9[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4258[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf4708[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf47d8[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf47b8[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf47a0[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4760[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf4060[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf4780[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf4918[0m <[0;33mline:98:9[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf4868[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4850[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4810[0m <[0;33mcol:9[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4258[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf4830[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4900[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf48e0[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf48c8[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4888[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf4060[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf48a8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5cf4970[0m <[0;33mline:99:9[0m, [0;33mcol:16[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4958[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4938[0m <[0;33mcol:16[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4258[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cf5460[0m <[0;33mline:100:12[0m, [0;33mline:119:5[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cf4ab8[0m <[0;33mline:102:9[0m, [0;33mcol:31[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cf49c0[0m <[0;33mcol:9[0m, [0;33mcol:30[0m> [0;33mcol:16[0m used[0;1;36m maxi[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4aa0[0m <[0;33mcol:23[0m, [0;33mcol:30[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf4a80[0m <[0;33mcol:23[0m, [0;33mcol:30[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4a68[0m <[0;33mcol:23[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4a28[0m <[0;33mcol:23[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf4060[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf4a48[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cf4be0[0m <[0;33mline:103:9[0m, [0;33mcol:32[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cf4ae8[0m <[0;33mcol:9[0m, [0;33mcol:31[0m> [0;33mcol:16[0m used[0;1;36m maxi2[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4bc8[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf4ba8[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4b90[0m <[0;33mcol:24[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4b50[0m <[0;33mcol:24[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf4060[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf4b70[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x5cf5288[0m <[0;33mline:104:9[0m, [0;33mline:115:9[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cf4c98[0m <[0;33mline:104:14[0m, [0;33mcol:23[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cf4c10[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf4c78[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf4d20[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4cf0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4cb0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4c10[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4d08[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4cd0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf40e0[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5cf4d60[0m <[0;33mcol:42[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4d40[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4c10[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cf5270[0m <[0;33mcol:47[0m, [0;33mline:115:9[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5cf5258[0m <[0;33mline:105:13[0m, [0;33mline:114:13[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf4e58[0m <[0;33mline:105:17[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4e28[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf4de8[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4db8[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4d78[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf4060[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4dd0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4d98[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4c10[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4e40[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4e08[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf49c0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cf5238[0m <[0;33mcol:34[0m, [0;33mline:114:13[0m>
[0;34m  |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf4f40[0m <[0;33mline:106:17[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4e78[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf49c0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4f28[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf4f08[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4ed8[0m <[0;33mcol:24[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4e98[0m <[0;33mcol:24[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cf4060[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4ef0[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4eb8[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4c10[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x5cf5220[0m <[0;33mline:107:17[0m, [0;33mline:113:17[0m>
[0;34m  |   |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf4fd0[0m <[0;33mline:107:21[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4fa0[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4f60[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf49c0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf4fb8[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf4f80[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4ae8[0m[0;1;36m 'maxi2'[0m [0;32m'double'[0m
[0;34m  |   |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cf51f0[0m <[0;33mcol:35[0m, [0;33mline:113:17[0m>
[0;34m  |   |           |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cf5070[0m <[0;33mline:108:21[0m, [0;33mcol:29[0m>
[0;34m  |   |           | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cf5008[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m x[0m [0;32m'double'[0m
[0;34m  |   |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf50e0[0m <[0;33mline:109:21[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf5088[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf5008[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf50c8[0m <[0;33mcol:25[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf50a8[0m <[0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4ae8[0m[0;1;36m 'maxi2'[0m [0;32m'double'[0m
[0;34m  |   |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf5158[0m <[0;33mline:110:21[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf5100[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4ae8[0m[0;1;36m 'maxi2'[0m [0;32m'double'[0m
[0;34m  |   |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf5140[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf5120[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf49c0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf51d0[0m <[0;33mline:111:21[0m, [0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf5178[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf49c0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf51b8[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf5198[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf5008[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf5370[0m <[0;33mline:116:9[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf5318[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf5300[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf52c0[0m <[0;33mcol:9[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4258[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf52e0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf5358[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf5338[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf49c0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cf5440[0m <[0;33mline:117:9[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5cf53e8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf53d0[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf5390[0m <[0;33mcol:9[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4258[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cf53b0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf5428[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf5408[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4ae8[0m[0;1;36m 'maxi2'[0m [0;32m'double'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5cf54f8[0m <[0;33mline:120:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cf54e0[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cf54c0[0m <[0;33mcol:12[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cf4258[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m

Dumping max2:
[0;1;32mFunctionDecl[0m[0;33m 0x6f5b880[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:19:1[0m, [0;33mcol:46[0m> [0;33mcol:10[0m[0;1;36m max2[0m [0;32m'double *(double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6f5b6e8[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6f5b768[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m numElements[0m [0;32m'int'[0m

Dumping max2:
[0;1;32mFunctionDecl[0m[0;33m 0x6f5f230[0m prev 0x6f5b880 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:90:1[0m, [0;33mline:121:1[0m> [0;33mline:90:10[0m[0;1;36m max2[0m [0;32m'double *(double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6f5f110[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6f5f190[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f605b8[0m <[0;33mcol:48[0m, [0;33mline:121:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f5f618[0m <[0;33mline:91:5[0m, [0;33mcol:30[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f5f308[0m <[0;33mcol:5[0m, [0;33mcol:29[0m> [0;33mcol:12[0m used[0;1;36m max[0m [0;32m'double [2]'[0m cinit
[0;34m  |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6f5f550[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'double [2]'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f590[0m <[0;33m/usr/include/math.h:98:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |     | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6f5f418[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6f5f3d8[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f3c0[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f370[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b97178[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f400[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f5f390[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f5b0[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x6f5f4e0[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6f5f4a0[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f488[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f438[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b97178[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f4c8[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f5f458[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6f5f708[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:93:5[0m, [0;33mline:95:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f5f688[0m <[0;33mline:93:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f670[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f630[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f190[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5f650[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f5f6f0[0m <[0;33mcol:27[0m, [0;33mline:95:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6f5f6e0[0m <[0;33mline:94:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f6c8[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f6a8[0m <[0;33mcol:16[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5f308[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6f60548[0m <[0;33mline:96:5[0m, [0;33mline:119:5[0m> has_else
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f5f778[0m <[0;33mline:96:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f760[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f720[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f190[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5f740[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f5fa30[0m <[0;33mcol:27[0m, [0;33mline:100:5[0m>
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f5f8a0[0m <[0;33mline:97:9[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f5f7f0[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f7d8[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f798[0m <[0;33mcol:9[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5f308[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5f7b8[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f888[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f5f868[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f850[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f810[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f110[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5f830[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f5f9c8[0m <[0;33mline:98:9[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f5f918[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f900[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f8c0[0m <[0;33mcol:9[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5f308[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5f8e0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f9b0[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f5f990[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5f978[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f938[0m <[0;33mcol:18[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f110[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5f958[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6f5fa20[0m <[0;33mline:99:9[0m, [0;33mcol:16[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fa08[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5f9e8[0m <[0;33mcol:16[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5f308[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f60510[0m <[0;33mline:100:12[0m, [0;33mline:119:5[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f5fb68[0m <[0;33mline:102:9[0m, [0;33mcol:31[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f5fa70[0m <[0;33mcol:9[0m, [0;33mcol:30[0m> [0;33mcol:16[0m used[0;1;36m maxi[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fb50[0m <[0;33mcol:23[0m, [0;33mcol:30[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f5fb30[0m <[0;33mcol:23[0m, [0;33mcol:30[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fb18[0m <[0;33mcol:23[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5fad8[0m <[0;33mcol:23[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f110[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5faf8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f5fc90[0m <[0;33mline:103:9[0m, [0;33mcol:32[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f5fb98[0m <[0;33mcol:9[0m, [0;33mcol:31[0m> [0;33mcol:16[0m used[0;1;36m maxi2[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fc78[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f5fc58[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fc40[0m <[0;33mcol:24[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5fc00[0m <[0;33mcol:24[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f110[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5fc20[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x6f60338[0m <[0;33mline:104:9[0m, [0;33mline:115:9[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f5fd48[0m <[0;33mline:104:14[0m, [0;33mcol:23[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f5fcc0[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f5fd28[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f5fdd0[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fda0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5fd60[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fcc0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fdb8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5fd80[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f190[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f5fe10[0m <[0;33mcol:42[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5fdf0[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fcc0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f60320[0m <[0;33mcol:47[0m, [0;33mline:115:9[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6f60308[0m <[0;33mline:105:13[0m, [0;33mline:114:13[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f5ff08[0m <[0;33mline:105:17[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fed8[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f5fe98[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fe68[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5fe28[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f110[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fe80[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5fe48[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fcc0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5fef0[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5feb8[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fa70[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f602e8[0m <[0;33mcol:34[0m, [0;33mline:114:13[0m>
[0;34m  |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f5fff0[0m <[0;33mline:106:17[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5ff28[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fa70[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5ffd8[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f5ffb8[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5ff88[0m <[0;33mcol:24[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5ff48[0m <[0;33mcol:24[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6f5f110[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f5ffa0[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f5ff68[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fcc0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x6f602d0[0m <[0;33mline:107:17[0m, [0;33mline:113:17[0m>
[0;34m  |   |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f60080[0m <[0;33mline:107:21[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f60050[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60010[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fa70[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f60068[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60030[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fb98[0m[0;1;36m 'maxi2'[0m [0;32m'double'[0m
[0;34m  |   |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f602a0[0m <[0;33mcol:35[0m, [0;33mline:113:17[0m>
[0;34m  |   |           |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f60120[0m <[0;33mline:108:21[0m, [0;33mcol:29[0m>
[0;34m  |   |           | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f600b8[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m x[0m [0;32m'double'[0m
[0;34m  |   |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f60190[0m <[0;33mline:109:21[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60138[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f600b8[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f60178[0m <[0;33mcol:25[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60158[0m <[0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fb98[0m[0;1;36m 'maxi2'[0m [0;32m'double'[0m
[0;34m  |   |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f60208[0m <[0;33mline:110:21[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f601b0[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fb98[0m[0;1;36m 'maxi2'[0m [0;32m'double'[0m
[0;34m  |   |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f601f0[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f601d0[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fa70[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f60280[0m <[0;33mline:111:21[0m, [0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60228[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fa70[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f60268[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60248[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f600b8[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f60420[0m <[0;33mline:116:9[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f603c8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f603b0[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60370[0m <[0;33mcol:9[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5f308[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f60390[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f60408[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f603e8[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fa70[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f604f0[0m <[0;33mline:117:9[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f60498[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f60480[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60440[0m <[0;33mcol:9[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5f308[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f60460[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f604d8[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f604b8[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5fb98[0m[0;1;36m 'maxi2'[0m [0;32m'double'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6f605a8[0m <[0;33mline:120:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f60590[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f60570[0m <[0;33mcol:12[0m> [0;32m'double [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f5f308[0m[0;1;36m 'max'[0m [0;32m'double [2]'[0m

Dumping std::type_info::hash_code:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6259930[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo:140:5[0m, [0;33mline:148:5[0m> [0;33mline:140:12[0m[0;1;36m hash_code[0m [0;32m'std::size_t () const noexcept'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x625b920[0m <[0;33mline:141:5[0m, [0;33mline:148:5[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x625b910[0m <[0;33mline:143:7[0m, [0;33mline:144:38[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x625b8c0[0m <[0;33mline:143:14[0m, [0;33mline:144:38[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x625b8a8[0m <[0;33mline:143:14[0m> [0;32m'std::size_t (*)(const void *, std::size_t, std::size_t)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x625b830[0m <[0;33mcol:14[0m> [0;32m'std::size_t (const void *, std::size_t, std::size_t)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6258a68[0m[0;1;36m '_Hash_bytes'[0m [0;32m'std::size_t (const void *, std::size_t, std::size_t)'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x625b8f8[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m      | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x625b6f0[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x625b6c0[0m <[0;33mcol:26[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->name[0;33m 0x62593b8[0m
[0;34m      |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x625b6b0[0m <[0;33mcol:26[0m> [0;32m'const std::type_info *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x625b7a8[0m <[0;33mcol:34[0m, [0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x625b790[0m <[0;33mcol:34[0m> [0;32m'unsigned long (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x625b710[0m <[0;33mcol:34[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x62233b0[0m[0;1;36m '__builtin_strlen'[0m [0;32m'unsigned long (const char *) noexcept'[0m
[0;34m      | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x625b770[0m <[0;33mcol:51[0m, [0;33mcol:56[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x625b740[0m <[0;33mcol:51[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->name[0;33m 0x62593b8[0m
[0;34m      |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x625b730[0m <[0;33mcol:51[0m> [0;32m'const std::type_info *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x625b800[0m <[0;33mline:144:5[0m, [0;33mcol:37[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m static_cast<std::size_t> <NoOp>
[0;34m        `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x625b7d0[0m <[0;33mcol:25[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m[0;1;36m 3339675911[0m

Dumping std::codecvt_base:
[0;1;32mCXXRecordDecl[0m[0;33m 0x62dcc08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:136:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m class[0;1;36m codecvt_base[0m

Dumping std::codecvt:
[0;1;32mClassTemplateDecl[0m[0;33m 0x62dced0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:137:3[0m, [0;33mline:138:11[0m> [0;33mcol:11[0m[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62dccc0[0m <[0;33mline:137:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62dcd38[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62dcda8[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62dce40[0m <[0;33mline:138:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cbea28[0m[0;1;36m 'codecvt'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cc4348[0m[0;1;36m 'codecvt'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cc9ac8[0m[0;1;36m 'codecvt'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cd0e08[0m[0;1;36m 'codecvt'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62dd158[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:139:3[0m, [0;33mcol:49[0m> [0;33mcol:20[0m class[0;1;36m codecvt[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62dd3e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:141:3[0m, [0;33mcol:52[0m> [0;33mcol:20[0m class[0;1;36m codecvt[0m
[0;34m|-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateDecl[0m[0;33m 0x62dd830[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:143:3[0m, [0;33mline:144:11[0m> [0;33mcol:11[0m[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62dd620[0m <[0;33mline:143:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62dd698[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62dd708[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62dd7a0[0m <[0;33mline:144:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m class[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cdefb0[0m[0;1;36m 'codecvt_byname'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cdf1d0[0m[0;1;36m 'codecvt_byname'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cd9770[0m[0;1;36m 'codecvt_byname'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cdb060[0m[0;1;36m 'codecvt_byname'[0m

Dumping __codecvt_result:
[0;1;32mEnumDecl[0m[0;33m 0x648a5e0[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:180:1[0m, [0;33mline:186:1[0m> [0;33mline:180:6[0m[0;1;36m __codecvt_result[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x648a6a0[0m <[0;33mline:182:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_ok[0m [0;32m'__codecvt_result'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x648a6f0[0m <[0;33mline:183:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_partial[0m [0;32m'__codecvt_result'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x648a740[0m <[0;33mline:184:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_error[0m [0;32m'__codecvt_result'[0m
[0;34m`-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x648a790[0m <[0;33mline:185:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_noconv[0m [0;32m'__codecvt_result'[0m

Dumping std::error_code:
[0;1;32mCXXRecordDecl[0m[0;33m 0x6638c78[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:47:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m referenced class[0;1;36m error_code[0m

Dumping std::is_error_code_enum:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6638fb0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6638e90[0m <[0;33mline:52:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6638f20[0m <[0;33mline:53:5[0m, [0;33mcol:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6639240[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6640188[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::error_code'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66403c0[0m prev 0x6640188 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6641078[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_V2::error_category'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66412b0[0m prev 0x6641078 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6649c48[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6649e80[0m prev 0x6649c48 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x664cf18[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::error_condition'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x664d150[0m prev 0x664cf18 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6284d00[0m[0;1;36m 'is_error_code_enum'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x68f2f18[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Bit_iterator_base'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x68f3150[0m prev 0x68f2f18 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x68fe358[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Bit_iterator'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x68fe590[0m prev 0x68fe358 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ddc2d8[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ddc510[0m prev 0x6ddc2d8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6de9538[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6de9770[0m prev 0x6de9538 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6e22808[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6e22a40[0m prev 0x6e22808 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ee15b8[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ee17f0[0m prev 0x6ee15b8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6f0a4d8[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6f0a710[0m prev 0x6f0a4d8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6f4c288[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::move_iterator<std::__cxx11::basic_string<char> *>'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6f4c4c0[0m prev 0x6f4c288 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m

Dumping __code:
[0;1;32mParmVarDecl[0m[0;33m 0x663ac58[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:118:16[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __code[0m [0;32m'const std::error_code &'[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x663d050[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:139:3[0m, [0;33mcol:36[0m> [0;33mcol:14[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::errc) noexcept'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663cf58[0m <[0;33mcol:30[0m> [0;33mcol:34[0m [0;32m'std::errc'[0m

Dumping std::error_code:
[0;1;32mCXXRecordDecl[0m[0;33m 0x663d268[0m prev 0x6638c78 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:146:3[0m, [0;33mline:200:3[0m> [0;33mline:146:10[0m referenced struct[0;1;36m error_code[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x663d360[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit referenced struct[0;1;36m error_code[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x663d458[0m <[0;33mline:148:5[0m, [0;33mline:149:49[0m> [0;33mline:148:5[0m referenced[0;1;36m error_code[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x663ee18[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x663eee0[0m <[0;33mline:149:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x663ee78[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x663f040[0m <[0;33mcol:27[0m, [0;33mcol:44[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m| |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x663f020[0m <[0;33mcol:28[0m, [0;33mcol:44[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663f008[0m <[0;33mcol:28[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663ef90[0m <[0;33mcol:28[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x663cd60[0m[0;1;36m 'system_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f0b0[0m <[0;33mcol:47[0m, [0;33mcol:49[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x663d6b0[0m <[0;33mline:151:5[0m, [0;33mline:152:39[0m> [0;33mline:151:5[0m used[0;1;36m error_code[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663d518[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;33mcol:20[0m used[0;1;36m __v[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663d590[0m <[0;33mcol:25[0m, [0;33mcol:47[0m> [0;33mcol:47[0m used[0;1;36m __cat[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x663ee18[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663f100[0m <[0;33mline:152:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663f0c0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663d518[0m[0;1;36m '__v'[0m [0;32m'int'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x663ee78[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x663f160[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663f140[0m <[0;33mcol:30[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663d590[0m[0;1;36m '__cat'[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f1d0[0m <[0;33mcol:37[0m, [0;33mcol:39[0m>
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x663dce8[0m <[0;33mline:154:5[0m, [0;33mline:157:39[0m> [0;33mline:156:7[0m[0;1;36m error_code[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x663d768[0m <[0;33mline:154:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 0 index 0[0;1;36m _ErrorCodeEnum[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x663dad0[0m <[0;33mcol:39[0m, [0;33mline:155:61[0m> [0;33mline:154:39[0m typename depth 0 index 1
[0;34m| | `-[0mTemplateArgument type [0;32m'typename enable_if<is_error_code_enum<_ErrorCodeEnum>::value>::type'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x663dc40[0m <[0;33mline:156:7[0m, [0;33mline:157:39[0m> [0;33mline:156:7[0m[0;1;36m error_code[0m [0;32m'void (_ErrorCodeEnum) noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663db78[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __e[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f2b8[0m <[0;33mline:157:7[0m, [0;33mcol:39[0m>
[0;34m| |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x663f298[0m <[0;33mcol:9[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m| |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x663f1f0[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f1e0[0m <[0;33mcol:10[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x663f270[0m <[0;33mcol:17[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x663f208[0m <[0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'make_error_code'[0;33m 0x663d050[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663f250[0m <[0;33mcol:33[0m> [0;32m'_ErrorCodeEnum'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663db78[0m[0;1;36m '__e'[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x665d220[0m <[0;33mline:156:7[0m, [0;33mline:157:39[0m> [0;33mline:156:7[0m referenced[0;1;36m error_code[0m [0;32m'void (std::io_errc) noexcept'[0m
[0;34m|   |-[0mTemplateArgument type [0;32m'std::io_errc'[0m
[0;34m|   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x665d120[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __e[0m [0;32m'std::io_errc':'std::io_errc'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x663de78[0m <[0;33mline:159:5[0m, [0;33mline:164:5[0m> [0;33mline:160:5[0m used[0;1;36m assign[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663dd60[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __v[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663ddd8[0m <[0;33mcol:21[0m, [0;33mcol:43[0m> [0;33mcol:43[0m used[0;1;36m __cat[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f400[0m <[0;33mline:161:5[0m, [0;33mline:164:5[0m>
[0;34m|   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x663f348[0m <[0;33mline:162:7[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m|   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f2e0[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x663ee18[0m
[0;34m|   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f2d0[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663f330[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663f310[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663dd60[0m[0;1;36m '__v'[0m [0;32m'int'[0m
[0;34m|   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x663f3e0[0m <[0;33mline:163:7[0m, [0;33mcol:17[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m|     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f378[0m <[0;33mcol:7[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cat[0;33m 0x663ee78[0m
[0;34m|     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f368[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x663f3c8[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663f3a8[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663ddd8[0m[0;1;36m '__cat'[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x663df50[0m <[0;33mline:166:5[0m, [0;33mline:168:37[0m> [0;33mline:167:5[0m[0;1;36m clear[0m [0;32m'void () noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f550[0m <[0;33mline:168:5[0m, [0;33mcol:37[0m>
[0;34m|   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x663f520[0m <[0;33mcol:7[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m|     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f430[0m <[0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->assign[0;33m 0x663de78[0m
[0;34m|     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f420[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x663f460[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x663f500[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663f4e8[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663f4c8[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x663cd60[0m[0;1;36m 'system_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x663e560[0m <[0;33mline:171:5[0m, [0;33mline:175:46[0m> [0;33mline:174:7[0m[0;1;36m operator=[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x663dff0[0m <[0;33mline:171:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 0 index 0[0;1;36m _ErrorCodeEnum[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x663e4c0[0m <[0;33mline:172:7[0m, [0;33mline:175:46[0m> [0;33mline:174:7[0m[0;1;36m operator=[0m [0;32m'typename enable_if<is_error_code_enum<_ErrorCodeEnum>::value, error_code &>::type (_ErrorCodeEnum) noexcept'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663e3b0[0m <[0;33mcol:17[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __e[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f6b0[0m <[0;33mline:175:7[0m, [0;33mcol:46[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x663f6a0[0m <[0;33mcol:9[0m, [0;33mcol:43[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x663f680[0m <[0;33mcol:16[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m|         |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x663f5d8[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f5c8[0m <[0;33mcol:17[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m this
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x663f658[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x663f5f0[0m <[0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'make_error_code'[0;33m 0x663d050[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663f638[0m <[0;33mcol:40[0m> [0;32m'_ErrorCodeEnum'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663e3b0[0m[0;1;36m '__e'[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x663e678[0m <[0;33mline:177:5[0m, [0;33mline:178:47[0m> [0;33mcol:5[0m used[0;1;36m value[0m [0;32m'int () const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f730[0m <[0;33mcol:28[0m, [0;33mcol:47[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x663f720[0m <[0;33mcol:30[0m, [0;33mcol:37[0m>
[0;34m|     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663f708[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f6d8[0m <[0;33mcol:37[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x663ee18[0m
[0;34m|         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f6c8[0m <[0;33mcol:37[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x663e7a0[0m <[0;33mline:180:5[0m, [0;33mline:181:49[0m> [0;33mcol:5[0m used[0;1;36m category[0m [0;32m'const std::_V2::error_category &() const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f7c8[0m <[0;33mcol:31[0m, [0;33mcol:49[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x663f7b8[0m <[0;33mcol:33[0m, [0;33mcol:41[0m>
[0;34m|     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x663f7a0[0m <[0;33mcol:40[0m, [0;33mcol:41[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663f788[0m <[0;33mcol:41[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f758[0m <[0;33mcol:41[0m> [0;32m'const std::_V2::error_category *const'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cat[0;33m 0x663ee78[0m
[0;34m|           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f748[0m <[0;33mcol:41[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x663e8c0[0m <[0;33mline:183:5[0m, [0;33mline:184:37[0m> [0;33mcol:5[0m[0;1;36m default_error_condition[0m [0;32m'std::error_condition () const noexcept'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x663e9a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:92:33[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:189:43[0m> [0;33mline:188:5[0m used[0;1;36m message[0m [0;32m'std::__cxx11::string () const'[0m
[0;34m| |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663f990[0m <[0;33mline:189:5[0m, [0;33mcol:43[0m>
[0;34m| | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x663f980[0m <[0;33mcol:7[0m, [0;33mcol:40[0m>
[0;34m| |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x663f968[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m
[0;34m| |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x663f938[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::__cxx11::basic_string<char> &&) noexcept'[0m elidable
[0;34m| |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x663f920[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m| |         `-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x663f900[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x663f900[0m)
[0;34m| |           `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x663f8d0[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m
[0;34m| |             |-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f840[0m <[0;33mcol:14[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .message[0;33m 0x663a6a8[0m
[0;34m| |             | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x663f820[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |             |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f7f0[0m <[0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->category[0;33m 0x663e7a0[0m
[0;34m| |             |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f7e0[0m <[0;33mcol:14[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |             `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x663f8b0[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |               `-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f880[0m <[0;33mcol:33[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->value[0;33m 0x663e678[0m
[0;34m| |                 `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f870[0m <[0;33mcol:33[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| `-[0m[0;1;34mAbiTagAttr[0m[0;33m 0x663ea40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:92:47[0m, [0;33mcol:67[0m> cxx11
[0;34m|-[0m[0;1;32mCXXConversionDecl[0m[0;33m 0x663eae0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:191:5[0m, [0;33mline:192:29[0m> [0;33mline:191:14[0m[0;1;36m operator bool[0m [0;32m'bool () const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663fa50[0m <[0;33mline:192:5[0m, [0;33mcol:29[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x663fa40[0m <[0;33mcol:7[0m, [0;33mcol:26[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x663fa20[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663fa08[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x663f9b8[0m <[0;33mcol:14[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x663ee18[0m
[0;34m|       |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x663f9a8[0m <[0;33mcol:14[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x663f9e8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x663eb90[0m <[0;33mline:195:3[0m, [0;33mcol:10[0m> [0;33mcol:3[0m private
[0;34m|-[0m[0;1;32mFriendDecl[0m[0;33m 0x663edc0[0m <[0;33mline:196:5[0m, [0;33mcol:33[0m> [0;33mcol:12[0m [0;32m'class hash<error_code>':'std::hash<std::error_code>'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x663ee18[0m <[0;33mline:198:5[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m _M_value[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x663ee78[0m <[0;33mline:199:5[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m _M_cat[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x663fce8[0m <[0;33mline:146:10[0m> [0;33mcol:10[0m implicit used constexpr[0;1;36m error_code[0m [0;32m'void (const std::error_code &) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663fdf8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m used [0;32m'const std::error_code &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x663ee18[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6652ab8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6652a70[0m <[0;33mcol:10[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ._M_value[0;33m 0x663ee18[0m
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6652a50[0m <[0;33mcol:10[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663fdf8[0m[0;1;36m ''[0m [0;32m'const std::error_code &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x663ee78[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6652b60[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6652b18[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *const'[0m[0;36m lvalue[0m[0;36m[0m ._M_cat[0;33m 0x663ee78[0m
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6652af8[0m <[0;33mcol:10[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663fdf8[0m[0;1;36m ''[0m [0;32m'const std::error_code &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6652bb0[0m <[0;33mcol:10[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x663fe98[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit used constexpr[0;1;36m error_code[0m [0;32m'void (std::error_code &&) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663ffa8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m used [0;32m'std::error_code &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x663ee18[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6640b48[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6640b00[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m xvalue[0m[0;36m[0m ._M_value[0;33m 0x663ee18[0m
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6640ad0[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct std::error_code &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6640aa0[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663ffa8[0m[0;1;36m ''[0m [0;32m'std::error_code &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x663ee78[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6640c30[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6640be8[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m xvalue[0m[0;36m[0m ._M_cat[0;33m 0x663ee78[0m
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6640bb8[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct std::error_code &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6640b88[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663ffa8[0m[0;1;36m ''[0m [0;32m'std::error_code &&'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6640c80[0m <[0;33mcol:10[0m>
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6640058[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit referenced[0;1;36m ~error_code[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6651b28[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit[0;1;36m operator=[0m [0;32m'std::error_code &(const std::error_code &)'[0m inline default trivial noexcept-unevaluated 0x6651b28
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6651c38[0m <[0;33mcol:10[0m> [0;33mcol:10[0m [0;32m'const std::error_code &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6651ca8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit[0;1;36m operator=[0m [0;32m'std::error_code &(std::error_code &&)'[0m inline default trivial noexcept-unevaluated 0x6651ca8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6651db8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m [0;32m'std::error_code &&'[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x663fb10[0m prev 0x663d050 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:203:3[0m, [0;33mline:205:67[0m> [0;33mline:204:3[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::errc) noexcept'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663fa78[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __e[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6640ce8[0m <[0;33mline:205:3[0m, [0;33mcol:67[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6640cd8[0m <[0;33mcol:5[0m, [0;33mcol:64[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6640cc0[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6640c90[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::error_code &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6640a50[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x6640018[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m            |-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x663fc18[0m <[0;33mcol:23[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m static_cast<int> <IntegralCast>
[0;34m            | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663fc00[0m <[0;33mcol:40[0m> [0;32m'std::errc'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663fbc8[0m <[0;33mcol:40[0m> [0;32m'std::errc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663fa78[0m[0;1;36m '__e'[0m [0;32m'std::errc'[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x663fcc8[0m <[0;33mcol:46[0m, [0;33mcol:63[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663fcb0[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663fc90[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x663ce68[0m[0;1;36m 'generic_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m

Dumping std::system_error::_M_code:
[0;1;32mFieldDecl[0m[0;33m 0x6650530[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:344:5[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_code[0m [0;32m'std::error_code'[0m

Dumping std::system_error::code:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6651520[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:369:5[0m, [0;33mline:370:45[0m> [0;33mcol:5[0m[0;1;36m code[0m [0;32m'const std::error_code &() const noexcept'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x626fd88[0m <[0;33mcol:27[0m, [0;33mcol:45[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x626fd78[0m <[0;33mcol:29[0m, [0;33mcol:36[0m>
[0;34m    `-[0m[0;1;35mMemberExpr[0m[0;33m 0x626fd48[0m <[0;33mcol:36[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m ->_M_code[0;33m 0x6650530[0m
[0;34m      `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x626fd38[0m <[0;33mcol:36[0m> [0;32m'const std::system_error *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping std::hash<std::error_code>::hash:
[0;1;32mCXXRecordDecl[0m[0;33m 0x62704a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:386:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m hash[0m

Dumping std::hash<std::error_code>::operator():
[0;1;32mCXXMethodDecl[0m[0;33m 0x6270670[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:389:7[0m, [0;33mline:394:7[0m> [0;33mline:390:7[0m[0;1;36m operator()[0m [0;32m'std::size_t (const std::error_code &) const noexcept'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6270548[0m <[0;33mcol:18[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __e[0m [0;32m'const std::error_code &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6271278[0m <[0;33mline:391:7[0m, [0;33mline:394:7[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6270cb0[0m <[0;33mline:392:2[0m, [0;33mcol:58[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6270768[0m <[0;33mcol:2[0m, [0;33mcol:57[0m> [0;33mcol:15[0m used[0;1;36m __tmp[0m [0;32m'const std::size_t':'const unsigned long'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6270c30[0m <[0;33mcol:23[0m, [0;33mcol:57[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6270c18[0m <[0;33mcol:23[0m, [0;33mcol:40[0m> [0;32m'std::size_t (*)(const int &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6270b88[0m <[0;33mcol:23[0m, [0;33mcol:40[0m> [0;32m'std::size_t (const int &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6270a88[0m[0;1;36m 'hash'[0m [0;32m'std::size_t (const int &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x653b4e8[0m[0;1;36m 'hash'[0m)
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x62708b8[0m <[0;33mcol:45[0m, [0;33mcol:49[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ._M_value[0;33m 0x663ee18[0m
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6270898[0m <[0;33mcol:45[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6270548[0m[0;1;36m '__e'[0m [0;32m'const std::error_code &'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6271268[0m <[0;33mline:393:2[0m, [0;33mcol:58[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x6271220[0m <[0;33mcol:9[0m, [0;33mcol:58[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6271208[0m <[0;33mcol:9[0m, [0;33mcol:26[0m> [0;32m'std::size_t (*)(const std::_V2::error_category *const &, std::size_t)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6271170[0m <[0;33mcol:9[0m, [0;33mcol:26[0m> [0;32m'std::size_t (const std::_V2::error_category *const &, std::size_t)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6271068[0m[0;1;36m '__hash_combine'[0m [0;32m'std::size_t (const std::_V2::error_category *const &, std::size_t)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x653b838[0m[0;1;36m '__hash_combine'[0m)
[0;34m      |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6270d78[0m <[0;33mcol:41[0m, [0;33mcol:45[0m> [0;32m'const std::_V2::error_category *const'[0m[0;36m lvalue[0m[0;36m[0m ._M_cat[0;33m 0x663ee78[0m
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6270d58[0m <[0;33mcol:41[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6270548[0m[0;1;36m '__e'[0m [0;32m'const std::error_code &'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6271250[0m <[0;33mcol:53[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6270da8[0m <[0;33mcol:53[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6270768[0m[0;1;36m '__tmp'[0m [0;32m'const std::size_t':'const unsigned long'[0m

Dumping std::is_error_code_enum:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6284d00[0m parent 0x6638bc8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:205:3[0m, [0;33mcol:71[0m> [0;33mcol:22[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'std::io_errc'[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6284f68[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m implicit struct[0;1;36m is_error_code_enum[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x62851e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:209:3[0m, [0;33mline:211:68[0m> [0;33mline:210:3[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::io_errc) noexcept'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62850e8[0m <[0;33mcol:19[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m __e[0m [0;32m'std::io_errc'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6285680[0m <[0;33mline:211:3[0m, [0;33mcol:68[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6285670[0m <[0;33mcol:5[0m, [0;33mcol:65[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6285658[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6285628[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::error_code &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6285610[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x62853b8[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m            |-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x62852e8[0m <[0;33mcol:23[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m static_cast<int> <IntegralCast>
[0;34m            | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x62852d0[0m <[0;33mcol:40[0m> [0;32m'std::io_errc'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6285298[0m <[0;33mcol:40[0m> [0;32m'std::io_errc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x62850e8[0m[0;1;36m '__e'[0m [0;32m'std::io_errc'[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x6285398[0m <[0;33mcol:46[0m, [0;33mcol:64[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6285380[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6285360[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6285038[0m[0;1;36m 'iostream_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m

Dumping bind_textdomain_codeset:
[0;1;32mFunctionDecl[0m[0;33m 0x6ca2900[0m <[0;33m/usr/include/libintl.h:91:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/libintl.h:91:14[0m[0;1;36m bind_textdomain_codeset[0m [0;32m'char *(const char *, const char *) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca27d8[0m <[0;33mcol:39[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca2858[0m <[0;33mline:92:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __codeset[0m [0;32m'const char *'[0m

Dumping std::codecvt_base:
[0;1;32mCXXRecordDecl[0m[0;33m 0x6ca86a8[0m prev 0x62dcc08 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:46:3[0m, [0;33mline:56:3[0m> [0;33mline:46:9[0m referenced class[0;1;36m codecvt_base[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ca87a0[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit class[0;1;36m codecvt_base[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ca8830[0m <[0;33mline:48:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mEnumDecl[0m[0;33m 0x6ca8858[0m <[0;33mline:49:5[0m, [0;33mline:55:5[0m> [0;33mline:49:10[0m referenced[0;1;36m result[0m
[0;34m| |-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6ca8920[0m <[0;33mline:51:7[0m> [0;33mcol:7[0m[0;1;36m ok[0m [0;32m'std::codecvt_base::result'[0m
[0;34m| |-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6ca8970[0m <[0;33mline:52:7[0m> [0;33mcol:7[0m referenced[0;1;36m partial[0m [0;32m'std::codecvt_base::result'[0m
[0;34m| |-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6ca89c0[0m <[0;33mline:53:7[0m> [0;33mcol:7[0m referenced[0;1;36m error[0m [0;32m'std::codecvt_base::result'[0m
[0;34m| `-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6ca8a10[0m <[0;33mline:54:7[0m> [0;33mcol:7[0m referenced[0;1;36m noconv[0m [0;32m'std::codecvt_base::result'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cc1fe8[0m <[0;33mline:46:9[0m> [0;33mcol:9[0m implicit[0;1;36m ~codecvt_base[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ed49e8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit used constexpr[0;1;36m codecvt_base[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ed4e18[0m <[0;33mcol:9[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ed4ae8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit constexpr[0;1;36m codecvt_base[0m [0;32m'void (const std::codecvt_base &)'[0m inline default trivial noexcept-unevaluated 0x6ed4ae8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ed4bf8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::codecvt_base &'[0m
[0;34m`-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ed4c98[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit constexpr[0;1;36m codecvt_base[0m [0;32m'void (std::codecvt_base &&)'[0m inline default trivial noexcept-unevaluated 0x6ed4c98
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ed4da8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'std::codecvt_base &&'[0m

Dumping std::__codecvt_abstract_base:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6ca8c80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m[0;1;36m __codecvt_abstract_base[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ca8a78[0m <[0;33mline:67:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ca8ae8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ca8b58[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ca8bf0[0m <[0;33mline:68:5[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m| |-[0mpublic [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m| |-[0mpublic [0;32m'std::codecvt_base'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ca8ff8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m __codecvt_abstract_base[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ca9088[0m <[0;33mline:71:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ca9160[0m <[0;33mline:73:7[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m result[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ca90f0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m| |   `-[0m[0;32mEnumType[0m[0;33m 0x6ca8900[0m [0;32m'std::codecvt_base::result'[0m
[0;34m| |     `-[0m[0;1;32mEnum[0m[0;33m 0x6ca8858[0m[0;1;36m 'result'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ca91c8[0m <[0;33mline:74:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m intern_type[0m [0;32m'_InternT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ac0[0m [0;32m'_InternT'[0m dependent depth 0 index 0
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8a78[0m[0;1;36m '_InternT'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ca9230[0m <[0;33mline:75:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m extern_type[0m [0;32m'_ExternT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8b30[0m [0;32m'_ExternT'[0m dependent depth 0 index 1
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8ae8[0m[0;1;36m '_ExternT'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ca9298[0m <[0;33mline:76:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m state_type[0m [0;32m'_StateT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ba0[0m [0;32m'_StateT'[0m dependent depth 0 index 2
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8b58[0m[0;1;36m '_StateT'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ca9958[0m <[0;33mline:115:7[0m, [0;33mline:123:7[0m> [0;33mline:116:7[0m[0;1;36m out[0m [0;32m'std::__codecvt_abstract_base::result (std::__codecvt_abstract_base::state_type &, const std::__codecvt_abstract_base::intern_type *, const std::__codecvt_abstract_base::intern_type *, const std::__codecvt_abstract_base::intern_type *&, std::__codecvt_abstract_base::extern_type *, std::__codecvt_abstract_base::extern_type *, std::__codecvt_abstract_base::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9368[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9428[0m <[0;33mcol:32[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca94a0[0m <[0;33mline:117:4[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9580[0m <[0;33mcol:35[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9648[0m <[0;33mline:118:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca96c0[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca97a0[0m <[0;33mline:119:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m referenced[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbb980[0m <[0;33mline:120:7[0m, [0;33mline:123:7[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6cbb970[0m <[0;33mline:121:2[0m, [0;33mline:122:33[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cbb918[0m <[0;33mline:121:9[0m, [0;33mline:122:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cbb7f0[0m <[0;33mline:121:9[0m, [0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_out
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cbb7e0[0m <[0;33mcol:9[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb838[0m <[0;33mcol:22[0m> [0;32m'std::__codecvt_abstract_base::state_type':'_StateT'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9368[0m[0;1;36m '__state'[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb858[0m <[0;33mcol:31[0m> [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9428[0m[0;1;36m '__from'[0m [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb878[0m <[0;33mcol:39[0m> [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca94a0[0m[0;1;36m '__from_end'[0m [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb898[0m <[0;33mcol:51[0m> [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9580[0m[0;1;36m '__from_next'[0m [0;32m'const std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb8b8[0m <[0;33mline:122:8[0m> [0;32m'std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9648[0m[0;1;36m '__to'[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb8d8[0m <[0;33mcol:14[0m> [0;32m'std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca96c0[0m[0;1;36m '__to_end'[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb8f8[0m <[0;33mcol:24[0m> [0;32m'std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca97a0[0m[0;1;36m '__to_next'[0m [0;32m'std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ca9cf8[0m <[0;33mline:154:7[0m, [0;33mline:157:68[0m> [0;33mline:155:7[0m[0;1;36m unshift[0m [0;32m'std::__codecvt_abstract_base::result (std::__codecvt_abstract_base::state_type &, std::__codecvt_abstract_base::extern_type *, std::__codecvt_abstract_base::extern_type *, std::__codecvt_abstract_base::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9a40[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9ab8[0m <[0;33mcol:36[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9b30[0m <[0;33mcol:55[0m, [0;33mcol:68[0m> [0;33mcol:68[0m referenced[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9bb0[0m <[0;33mline:156:8[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbbac0[0m <[0;33mline:157:7[0m, [0;33mcol:68[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6cbbab0[0m <[0;33mcol:9[0m, [0;33mcol:65[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cbba70[0m <[0;33mcol:16[0m, [0;33mcol:65[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cbb9a8[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_unshift
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cbb998[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb9f0[0m <[0;33mcol:33[0m> [0;32m'std::__codecvt_abstract_base::state_type':'_StateT'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9a40[0m[0;1;36m '__state'[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbba10[0m <[0;33mcol:42[0m> [0;32m'std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9ab8[0m[0;1;36m '__to'[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbba30[0m <[0;33mcol:47[0m> [0;32m'std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9b30[0m[0;1;36m '__to_end'[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbba50[0m <[0;33mcol:56[0m> [0;32m'std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9bb0[0m[0;1;36m '__to_next'[0m [0;32m'std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6caa348[0m <[0;33mline:195:7[0m, [0;33mline:203:7[0m> [0;33mline:196:7[0m[0;1;36m in[0m [0;32m'std::__codecvt_abstract_base::result (std::__codecvt_abstract_base::state_type &, const std::__codecvt_abstract_base::extern_type *, const std::__codecvt_abstract_base::extern_type *, const std::__codecvt_abstract_base::extern_type *&, std::__codecvt_abstract_base::intern_type *, std::__codecvt_abstract_base::intern_type *, std::__codecvt_abstract_base::intern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9dc8[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9e68[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9ee0[0m <[0;33mline:197:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ca9fc0[0m <[0;33mcol:34[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6caa068[0m <[0;33mline:198:3[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6caa0e0[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6caa1c0[0m <[0;33mline:199:3[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbbc78[0m <[0;33mline:200:7[0m, [0;33mline:203:7[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6cbbc68[0m <[0;33mline:201:2[0m, [0;33mline:202:32[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cbbc10[0m <[0;33mline:201:9[0m, [0;33mline:202:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cbbae8[0m <[0;33mline:201:9[0m, [0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_in
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cbbad8[0m <[0;33mcol:9[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbb30[0m <[0;33mcol:21[0m> [0;32m'std::__codecvt_abstract_base::state_type':'_StateT'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9dc8[0m[0;1;36m '__state'[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbb50[0m <[0;33mcol:30[0m> [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9e68[0m[0;1;36m '__from'[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbb70[0m <[0;33mcol:38[0m> [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9ee0[0m[0;1;36m '__from_end'[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbb90[0m <[0;33mcol:50[0m> [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca9fc0[0m[0;1;36m '__from_next'[0m [0;32m'const std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbbb0[0m <[0;33mline:202:7[0m> [0;32m'std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6caa068[0m[0;1;36m '__to'[0m [0;32m'std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbbd0[0m <[0;33mcol:13[0m> [0;32m'std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6caa0e0[0m[0;1;36m '__to_end'[0m [0;32m'std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbbf0[0m <[0;33mcol:23[0m> [0;32m'std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6caa1c0[0m[0;1;36m '__to_next'[0m [0;32m'std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6caa478[0m <[0;33mline:205:7[0m, [0;33mline:207:37[0m> [0;33mline:206:7[0m[0;1;36m encoding[0m [0;32m'int () const throw()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbbd18[0m <[0;33mline:207:7[0m, [0;33mcol:37[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6cbbd08[0m <[0;33mcol:9[0m, [0;33mcol:34[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cbbce8[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cbbca0[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_encoding
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cbbc90[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6caa570[0m <[0;33mline:209:7[0m, [0;33mline:211:42[0m> [0;33mline:210:7[0m[0;1;36m always_noconv[0m [0;32m'bool () const throw()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbbdb8[0m <[0;33mline:211:7[0m, [0;33mcol:42[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6cbbda8[0m <[0;33mcol:9[0m, [0;33mcol:39[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cbbd88[0m <[0;33mcol:16[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cbbd40[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_always_noconv
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cbbd30[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6caa8d0[0m <[0;33mline:213:7[0m, [0;33mline:216:64[0m> [0;33mline:214:7[0m[0;1;36m length[0m [0;32m'int (std::__codecvt_abstract_base::state_type &, const std::__codecvt_abstract_base::extern_type *, const std::__codecvt_abstract_base::extern_type *, std::size_t) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6caa620[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6caa698[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6caa710[0m <[0;33mline:215:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6caa788[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbbef8[0m <[0;33mline:216:7[0m, [0;33mcol:64[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6cbbee8[0m <[0;33mcol:9[0m, [0;33mcol:61[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cbbea8[0m <[0;33mcol:16[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cbbde0[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_length
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cbbdd0[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbe28[0m <[0;33mcol:32[0m> [0;32m'std::__codecvt_abstract_base::state_type':'_StateT'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6caa620[0m[0;1;36m '__state'[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbe48[0m <[0;33mcol:41[0m> [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6caa698[0m[0;1;36m '__from'[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbe68[0m <[0;33mcol:49[0m> [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6caa710[0m[0;1;36m '__end'[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbe88[0m <[0;33mcol:56[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6caa788[0m[0;1;36m '__max'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6caa9c0[0m <[0;33mline:218:7[0m, [0;33mline:220:39[0m> [0;33mline:219:7[0m[0;1;36m max_length[0m [0;32m'int () const throw()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbbf98[0m <[0;33mline:220:7[0m, [0;33mcol:39[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6cbbf88[0m <[0;33mcol:9[0m, [0;33mcol:36[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cbbf68[0m <[0;33mcol:16[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cbbf20[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_max_length
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cbbf10[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6caaa60[0m <[0;33mline:222:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6caab68[0m <[0;33mline:223:7[0m, [0;33mline:224:76[0m> [0;33mcol:7[0m[0;1;36m __codecvt_abstract_base<_InternT, _ExternT, _StateT>[0m [0;32m'void (std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6caaa98[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:38[0m referenced[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbb7c8[0m <[0;33mcol:47[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cbb7a8[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6cbbfd8[0m <[0;33mcol:65[0m, [0;33mcol:72[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbbfb8[0m <[0;33mcol:66[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6caaa98[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbc0a0[0m <[0;33mcol:74[0m, [0;33mcol:76[0m>
[0;34m| |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6caac60[0m <[0;33mline:226:7[0m, [0;33mline:227:36[0m> [0;33mcol:7[0m[0;1;36m ~__codecvt_abstract_base<_InternT, _ExternT, _StateT>[0m [0;32m'void ()'[0m virtual
[0;34m| | |-[0mOverrides: [ 0x65ebf28 facet::~facet 'void () noexcept' ]
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbc0b0[0m <[0;33mcol:34[0m, [0;33mcol:36[0m>
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cba9b0[0m <[0;33mline:236:7[0m, [0;33mline:240:40[0m> [0;33mline:237:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base::result (std::__codecvt_abstract_base::state_type &, const std::__codecvt_abstract_base::intern_type *, const std::__codecvt_abstract_base::intern_type *, const std::__codecvt_abstract_base::intern_type *&, std::__codecvt_abstract_base::extern_type *, std::__codecvt_abstract_base::extern_type *, std::__codecvt_abstract_base::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cba610[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cba688[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cba700[0m <[0;33mline:238:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cba780[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cba7f8[0m <[0;33mline:239:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cba870[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cba8f0[0m <[0;33mline:240:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbacb0[0m <[0;33mline:242:7[0m, [0;33mline:244:60[0m> [0;33mline:243:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base::result (std::__codecvt_abstract_base::state_type &, std::__codecvt_abstract_base::extern_type *, std::__codecvt_abstract_base::extern_type *, std::__codecvt_abstract_base::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbaa98[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbab10[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbab88[0m <[0;33mline:244:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbac08[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbb120[0m <[0;33mline:246:7[0m, [0;33mline:250:39[0m> [0;33mline:247:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base::result (std::__codecvt_abstract_base::state_type &, const std::__codecvt_abstract_base::extern_type *, const std::__codecvt_abstract_base::extern_type *, const std::__codecvt_abstract_base::extern_type *&, std::__codecvt_abstract_base::intern_type *, std::__codecvt_abstract_base::intern_type *, std::__codecvt_abstract_base::intern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbad80[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbadf8[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbae70[0m <[0;33mline:248:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbaef0[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbaf68[0m <[0;33mline:249:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbafe0[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbb060[0m <[0;33mline:250:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbb228[0m <[0;33mline:252:7[0m, [0;33mline:253:37[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbb2f0[0m <[0;33mline:255:7[0m, [0;33mline:256:42[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbb5b8[0m <[0;33mline:258:7[0m, [0;33mline:260:51[0m> [0;33mline:259:7[0m[0;1;36m do_length[0m [0;32m'int (std::__codecvt_abstract_base::state_type &, const std::__codecvt_abstract_base::extern_type *, const std::__codecvt_abstract_base::extern_type *, std::size_t) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbb3a0[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbb418[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbb490[0m <[0;33mline:260:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbb508[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbb6a8[0m <[0;33mline:262:7[0m, [0;33mline:263:39[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cbecd8[0m <[0;33mline:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m| |-[0mpublic [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m| |-[0mpublic [0;32m'std::codecvt_base'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cbefa8[0m prev 0x6cbecd8 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __codecvt_abstract_base[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cbf038[0m <[0;33mline:71:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cbf060[0m <[0;33mline:73:7[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m result[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ca90f0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m| |   `-[0m[0;32mEnumType[0m[0;33m 0x6ca8900[0m [0;32m'std::codecvt_base::result'[0m
[0;34m| |     `-[0m[0;1;32mEnum[0m[0;33m 0x6ca8858[0m[0;1;36m 'result'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cbf0f8[0m <[0;33mline:74:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m intern_type[0m [0;32m'char':'char'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf0c0[0m [0;32m'char'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ac0[0m [0;32m'_InternT'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8a78[0m[0;1;36m '_InternT'[0m
[0;34m| |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cbf188[0m <[0;33mline:75:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m extern_type[0m [0;32m'char':'char'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf150[0m [0;32m'char'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8b30[0m [0;32m'_ExternT'[0m dependent depth 0 index 1
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8ae8[0m[0;1;36m '_ExternT'[0m
[0;34m| |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cbf218[0m <[0;33mline:76:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m state_type[0m [0;32m'__mbstate_t':'__mbstate_t'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf1e0[0m [0;32m'__mbstate_t'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ba0[0m [0;32m'_StateT'[0m dependent depth 0 index 2
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8b58[0m[0;1;36m '_StateT'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x61e20a0[0m [0;32m'__mbstate_t'[0m
[0;34m| |     `-[0m[0;1;32mCXXRecord[0m[0;33m 0x61e2010[0m[0;1;36m ''[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbf8d8[0m <[0;33mline:115:7[0m, [0;33mline:123:7[0m> [0;33mline:116:7[0m[0;1;36m out[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbf318[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbf3d8[0m <[0;33mcol:32[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbf450[0m <[0;33mline:117:4[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbf530[0m <[0;33mcol:35[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbf5f8[0m <[0;33mline:118:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbf670[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbf750[0m <[0;33mline:119:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbfc88[0m <[0;33mline:154:7[0m, [0;33mline:157:68[0m> [0;33mline:155:7[0m[0;1;36m unshift[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbf9d0[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbfa48[0m <[0;33mcol:36[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbfac0[0m <[0;33mcol:55[0m, [0;33mcol:68[0m> [0;33mcol:68[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbfb40[0m <[0;33mline:156:8[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc0228[0m <[0;33mline:195:7[0m, [0;33mline:203:7[0m> [0;33mline:196:7[0m[0;1;36m in[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbfd68[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbfe08[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbfe80[0m <[0;33mline:197:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbff30[0m <[0;33mcol:34[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbffd8[0m <[0;33mline:198:3[0m, [0;33mcol:16[0m> [0;33mcol:16[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0050[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0100[0m <[0;33mline:199:3[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc0310[0m <[0;33mline:205:7[0m, [0;33mline:207:37[0m> [0;33mline:206:7[0m[0;1;36m encoding[0m [0;32m'int () const throw()'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc03c0[0m <[0;33mline:209:7[0m, [0;33mline:211:42[0m> [0;33mline:210:7[0m[0;1;36m always_noconv[0m [0;32m'bool () const throw()'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc0720[0m <[0;33mline:213:7[0m, [0;33mline:216:64[0m> [0;33mline:214:7[0m[0;1;36m length[0m [0;32m'int (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::size_t) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0480[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc04f8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0570[0m <[0;33mline:215:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc05d8[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc07f0[0m <[0;33mline:218:7[0m, [0;33mline:220:39[0m> [0;33mline:219:7[0m[0;1;36m max_length[0m [0;32m'int () const throw()'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc08a0[0m <[0;33mline:222:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc0990[0m <[0;33mline:223:7[0m, [0;33mline:224:76[0m> [0;33mcol:7[0m[0;1;36m __codecvt_abstract_base[0m [0;32m'void (std::size_t)'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc08c8[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:38[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cc0a78[0m <[0;33mline:226:7[0m, [0;33mline:227:36[0m> [0;33mcol:7[0m[0;1;36m ~__codecvt_abstract_base[0m [0;32m'void () noexcept'[0m virtual
[0;34m| | `-[0mOverrides: [ 0x65ebf28 facet::~facet 'void () noexcept' ]
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc0f20[0m <[0;33mline:236:7[0m, [0;33mline:240:40[0m> [0;33mline:237:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0b80[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0bf8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0c70[0m <[0;33mline:238:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0cf0[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0d68[0m <[0;33mline:239:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0de0[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc0e60[0m <[0;33mline:240:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc1230[0m <[0;33mline:242:7[0m, [0;33mline:244:60[0m> [0;33mline:243:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1018[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1090[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1108[0m <[0;33mline:244:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1188[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc16b0[0m <[0;33mline:246:7[0m, [0;33mline:250:39[0m> [0;33mline:247:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1310[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1388[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1400[0m <[0;33mline:248:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1480[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc14f8[0m <[0;33mline:249:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1570[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc15f0[0m <[0;33mline:250:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc1798[0m <[0;33mline:252:7[0m, [0;33mline:253:37[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc1848[0m <[0;33mline:255:7[0m, [0;33mline:256:42[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc1b10[0m <[0;33mline:258:7[0m, [0;33mline:260:51[0m> [0;33mline:259:7[0m[0;1;36m do_length[0m [0;32m'int (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1908[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1980[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc19f8[0m <[0;33mline:260:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1a60[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc1be0[0m <[0;33mline:262:7[0m, [0;33mline:263:39[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc1cb8[0m <[0;33mline:68:11[0m> [0;33mcol:11[0m implicit[0;1;36m __codecvt_abstract_base[0m [0;32m'void (const std::__codecvt_abstract_base<char, char, __mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cc1cb8
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1dc8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t> &'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc1e68[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t> &(const std::__codecvt_abstract_base<char, char, __mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cc1e68
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc1f78[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::__codecvt_abstract_base<char, char, __mbstate_t> &'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cc45f8[0m <[0;33mline:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m| |-[0mpublic [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m| |-[0mpublic [0;32m'std::codecvt_base'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cc48c8[0m prev 0x6cc45f8 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __codecvt_abstract_base[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc4958[0m <[0;33mline:71:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc4980[0m <[0;33mline:73:7[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m result[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ca90f0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m| |   `-[0m[0;32mEnumType[0m[0;33m 0x6ca8900[0m [0;32m'std::codecvt_base::result'[0m
[0;34m| |     `-[0m[0;1;32mEnum[0m[0;33m 0x6ca8858[0m[0;1;36m 'result'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc4a18[0m <[0;33mline:74:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m intern_type[0m [0;32m'wchar_t':'wchar_t'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cc49e0[0m [0;32m'wchar_t'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ac0[0m [0;32m'_InternT'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8a78[0m[0;1;36m '_InternT'[0m
[0;34m| |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25ea0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc4a80[0m <[0;33mline:75:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m extern_type[0m [0;32m'char':'char'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf150[0m [0;32m'char'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8b30[0m [0;32m'_ExternT'[0m dependent depth 0 index 1
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8ae8[0m[0;1;36m '_ExternT'[0m
[0;34m| |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc4ae8[0m <[0;33mline:76:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m state_type[0m [0;32m'__mbstate_t':'__mbstate_t'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf1e0[0m [0;32m'__mbstate_t'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ba0[0m [0;32m'_StateT'[0m dependent depth 0 index 2
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8b58[0m[0;1;36m '_StateT'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x61e20a0[0m [0;32m'__mbstate_t'[0m
[0;34m| |     `-[0m[0;1;32mCXXRecord[0m[0;33m 0x61e2010[0m[0;1;36m ''[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc5148[0m <[0;33mline:115:7[0m, [0;33mline:123:7[0m> [0;33mline:116:7[0m[0;1;36m out[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4bb8[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4c78[0m <[0;33mcol:32[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4cf0[0m <[0;33mline:117:4[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4dd0[0m <[0;33mcol:35[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4e98[0m <[0;33mline:118:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4f10[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4fc0[0m <[0;33mline:119:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc54a8[0m <[0;33mline:154:7[0m, [0;33mline:157:68[0m> [0;33mline:155:7[0m[0;1;36m unshift[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5240[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc52b8[0m <[0;33mcol:36[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5330[0m <[0;33mcol:55[0m, [0;33mcol:68[0m> [0;33mcol:68[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc53b0[0m <[0;33mline:156:8[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc5ad8[0m <[0;33mline:195:7[0m, [0;33mline:203:7[0m> [0;33mline:196:7[0m[0;1;36m in[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5588[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5628[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc56a0[0m <[0;33mline:197:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5750[0m <[0;33mcol:34[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc57f8[0m <[0;33mline:198:3[0m, [0;33mcol:16[0m> [0;33mcol:16[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5870[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5950[0m <[0;33mline:199:3[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc5bc0[0m <[0;33mline:205:7[0m, [0;33mline:207:37[0m> [0;33mline:206:7[0m[0;1;36m encoding[0m [0;32m'int () const throw()'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc5c70[0m <[0;33mline:209:7[0m, [0;33mline:211:42[0m> [0;33mline:210:7[0m[0;1;36m always_noconv[0m [0;32m'bool () const throw()'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc5f80[0m <[0;33mline:213:7[0m, [0;33mline:216:64[0m> [0;33mline:214:7[0m[0;1;36m length[0m [0;32m'int (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5d30[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5da8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5e20[0m <[0;33mline:215:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc5e88[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc6050[0m <[0;33mline:218:7[0m, [0;33mline:220:39[0m> [0;33mline:219:7[0m[0;1;36m max_length[0m [0;32m'int () const throw()'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc6100[0m <[0;33mline:222:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc61f0[0m <[0;33mline:223:7[0m, [0;33mline:224:76[0m> [0;33mcol:7[0m[0;1;36m __codecvt_abstract_base[0m [0;32m'void (std::size_t)'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6128[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:38[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cc62d8[0m <[0;33mline:226:7[0m, [0;33mline:227:36[0m> [0;33mcol:7[0m[0;1;36m ~__codecvt_abstract_base[0m [0;32m'void () noexcept'[0m virtual
[0;34m| | `-[0mOverrides: [ 0x65ebf28 facet::~facet 'void () noexcept' ]
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc6780[0m <[0;33mline:236:7[0m, [0;33mline:240:40[0m> [0;33mline:237:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc63e0[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6458[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc64d0[0m <[0;33mline:238:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6550[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc65c8[0m <[0;33mline:239:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6640[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc66c0[0m <[0;33mline:240:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc6a90[0m <[0;33mline:242:7[0m, [0;33mline:244:60[0m> [0;33mline:243:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6878[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc68f0[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6968[0m <[0;33mline:244:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc69e8[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc6f10[0m <[0;33mline:246:7[0m, [0;33mline:250:39[0m> [0;33mline:247:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6b70[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6be8[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6c60[0m <[0;33mline:248:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6ce0[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6d58[0m <[0;33mline:249:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6dd0[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc6e50[0m <[0;33mline:250:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc6ff8[0m <[0;33mline:252:7[0m, [0;33mline:253:37[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc70a8[0m <[0;33mline:255:7[0m, [0;33mline:256:42[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc7370[0m <[0;33mline:258:7[0m, [0;33mline:260:51[0m> [0;33mline:259:7[0m[0;1;36m do_length[0m [0;32m'int (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc7168[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc71e0[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc7258[0m <[0;33mline:260:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc72c0[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc7440[0m <[0;33mline:262:7[0m, [0;33mline:263:39[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc7518[0m <[0;33mline:68:11[0m> [0;33mcol:11[0m implicit[0;1;36m __codecvt_abstract_base[0m [0;32m'void (const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cc7518
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc7628[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t> &'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc76c8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t> &(const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cc76c8
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc77d8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t> &'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cc9da8[0m <[0;33mline:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m| |-[0mpublic [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m| |-[0mpublic [0;32m'std::codecvt_base'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cca078[0m prev 0x6cc9da8 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __codecvt_abstract_base[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cca108[0m <[0;33mline:71:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cca130[0m <[0;33mline:73:7[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m result[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ca90f0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m| |   `-[0m[0;32mEnumType[0m[0;33m 0x6ca8900[0m [0;32m'std::codecvt_base::result'[0m
[0;34m| |     `-[0m[0;1;32mEnum[0m[0;33m 0x6ca8858[0m[0;1;36m 'result'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cca1c8[0m <[0;33mline:74:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m intern_type[0m [0;32m'char16_t':'char16_t'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cca190[0m [0;32m'char16_t'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ac0[0m [0;32m'_InternT'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8a78[0m[0;1;36m '_InternT'[0m
[0;34m| |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25ee0[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cca230[0m <[0;33mline:75:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m extern_type[0m [0;32m'char':'char'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf150[0m [0;32m'char'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8b30[0m [0;32m'_ExternT'[0m dependent depth 0 index 1
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8ae8[0m[0;1;36m '_ExternT'[0m
[0;34m| |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cca298[0m <[0;33mline:76:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m state_type[0m [0;32m'__mbstate_t':'__mbstate_t'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf1e0[0m [0;32m'__mbstate_t'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ba0[0m [0;32m'_StateT'[0m dependent depth 0 index 2
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8b58[0m[0;1;36m '_StateT'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x61e20a0[0m [0;32m'__mbstate_t'[0m
[0;34m| |     `-[0m[0;1;32mCXXRecord[0m[0;33m 0x61e2010[0m[0;1;36m ''[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccc698[0m <[0;33mline:115:7[0m, [0;33mline:123:7[0m> [0;33mline:116:7[0m[0;1;36m out[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cca368[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cca428[0m <[0;33mcol:32[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cca4a0[0m <[0;33mline:117:4[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cca580[0m <[0;33mcol:35[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccc3e8[0m <[0;33mline:118:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccc460[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccc510[0m <[0;33mline:119:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccc9f8[0m <[0;33mline:154:7[0m, [0;33mline:157:68[0m> [0;33mline:155:7[0m[0;1;36m unshift[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccc790[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccc808[0m <[0;33mcol:36[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccc880[0m <[0;33mcol:55[0m, [0;33mcol:68[0m> [0;33mcol:68[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccc900[0m <[0;33mline:156:8[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccd028[0m <[0;33mline:195:7[0m, [0;33mline:203:7[0m> [0;33mline:196:7[0m[0;1;36m in[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cccad8[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cccb78[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cccbf0[0m <[0;33mline:197:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cccca0[0m <[0;33mcol:34[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cccd48[0m <[0;33mline:198:3[0m, [0;33mcol:16[0m> [0;33mcol:16[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cccdc0[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cccea0[0m <[0;33mline:199:3[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccd110[0m <[0;33mline:205:7[0m, [0;33mline:207:37[0m> [0;33mline:206:7[0m[0;1;36m encoding[0m [0;32m'int () const throw()'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccd1c0[0m <[0;33mline:209:7[0m, [0;33mline:211:42[0m> [0;33mline:210:7[0m[0;1;36m always_noconv[0m [0;32m'bool () const throw()'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccd4d0[0m <[0;33mline:213:7[0m, [0;33mline:216:64[0m> [0;33mline:214:7[0m[0;1;36m length[0m [0;32m'int (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccd280[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccd2f8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccd370[0m <[0;33mline:215:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccd3d8[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccd5a0[0m <[0;33mline:218:7[0m, [0;33mline:220:39[0m> [0;33mline:219:7[0m[0;1;36m max_length[0m [0;32m'int () const throw()'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ccd650[0m <[0;33mline:222:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ccd740[0m <[0;33mline:223:7[0m, [0;33mline:224:76[0m> [0;33mcol:7[0m used[0;1;36m __codecvt_abstract_base[0m [0;32m'void (std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccd678[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:38[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m| | | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ed4978[0m <[0;33mcol:52[0m, [0;33mcol:72[0m> [0;32m'locale::facet':'std::locale::facet'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::size_t) throw()'[0m
[0;34m| | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ed4960[0m <[0;33mcol:66[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ed4920[0m <[0;33mcol:66[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ccd678[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'std::codecvt_base'[0m
[0;34m| | | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ed4e28[0m <[0;33mcol:7[0m> [0;32m'std::codecvt_base'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbc0a0[0m <[0;33mcol:74[0m, [0;33mcol:76[0m>
[0;34m| |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6ccd828[0m <[0;33mline:226:7[0m, [0;33mline:227:36[0m> [0;33mcol:7[0m used[0;1;36m ~__codecvt_abstract_base[0m [0;32m'void () noexcept'[0m virtual
[0;34m| | |-[0mOverrides: [ 0x65ebf28 facet::~facet 'void () noexcept' ]
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbc0b0[0m <[0;33mcol:34[0m, [0;33mcol:36[0m>
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccdcd0[0m <[0;33mline:236:7[0m, [0;33mline:240:40[0m> [0;33mline:237:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccd930[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccd9a8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccda20[0m <[0;33mline:238:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccdaa0[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccdb18[0m <[0;33mline:239:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccdb90[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccdc10[0m <[0;33mline:240:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccdfe0[0m <[0;33mline:242:7[0m, [0;33mline:244:60[0m> [0;33mline:243:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccddc8[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccde40[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccdeb8[0m <[0;33mline:244:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccdf38[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cce460[0m <[0;33mline:246:7[0m, [0;33mline:250:39[0m> [0;33mline:247:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce0c0[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce138[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce1b0[0m <[0;33mline:248:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce230[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce2a8[0m <[0;33mline:249:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce320[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce3a0[0m <[0;33mline:250:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cce548[0m <[0;33mline:252:7[0m, [0;33mline:253:37[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cce5f8[0m <[0;33mline:255:7[0m, [0;33mline:256:42[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cce8c0[0m <[0;33mline:258:7[0m, [0;33mline:260:51[0m> [0;33mline:259:7[0m[0;1;36m do_length[0m [0;32m'int (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce6b8[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce730[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce7a8[0m <[0;33mline:260:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cce810[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cce990[0m <[0;33mline:262:7[0m, [0;33mline:263:39[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ccea68[0m <[0;33mline:68:11[0m> [0;33mcol:11[0m implicit[0;1;36m __codecvt_abstract_base[0m [0;32m'void (const std::__codecvt_abstract_base<char16_t, char, __mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6ccea68
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cceb78[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t> &'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccec18[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t> &(const std::__codecvt_abstract_base<char16_t, char, __mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6ccec18
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cced28[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::__codecvt_abstract_base<char16_t, char, __mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cd10e8[0m <[0;33mline:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m  | `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m  |-[0mpublic [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m  |-[0mpublic [0;32m'std::codecvt_base'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cd13b8[0m prev 0x6cd10e8 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __codecvt_abstract_base[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd1448[0m <[0;33mline:71:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cd1470[0m <[0;33mline:73:7[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m result[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ca90f0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m  |   `-[0m[0;32mEnumType[0m[0;33m 0x6ca8900[0m [0;32m'std::codecvt_base::result'[0m
[0;34m  |     `-[0m[0;1;32mEnum[0m[0;33m 0x6ca8858[0m[0;1;36m 'result'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cd1508[0m <[0;33mline:74:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m intern_type[0m [0;32m'char32_t':'char32_t'[0m
[0;34m  | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cd14d0[0m [0;32m'char32_t'[0m sugar
[0;34m  |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ac0[0m [0;32m'_InternT'[0m dependent depth 0 index 0
[0;34m  |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8a78[0m[0;1;36m '_InternT'[0m
[0;34m  |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25f00[0m [0;32m'char32_t'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cd1570[0m <[0;33mline:75:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m extern_type[0m [0;32m'char':'char'[0m
[0;34m  | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf150[0m [0;32m'char'[0m sugar
[0;34m  |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8b30[0m [0;32m'_ExternT'[0m dependent depth 0 index 1
[0;34m  |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8ae8[0m[0;1;36m '_ExternT'[0m
[0;34m  |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cd15d8[0m <[0;33mline:76:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m state_type[0m [0;32m'__mbstate_t':'__mbstate_t'[0m
[0;34m  | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6cbf1e0[0m [0;32m'__mbstate_t'[0m sugar
[0;34m  |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6ca8ba0[0m [0;32m'_StateT'[0m dependent depth 0 index 2
[0;34m  |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6ca8b58[0m[0;1;36m '_StateT'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x61e20a0[0m [0;32m'__mbstate_t'[0m
[0;34m  |     `-[0m[0;1;32mCXXRecord[0m[0;33m 0x61e2010[0m[0;1;36m ''[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd1c38[0m <[0;33mline:115:7[0m, [0;33mline:123:7[0m> [0;33mline:116:7[0m[0;1;36m out[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd16a8[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd1768[0m <[0;33mcol:32[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd17e0[0m <[0;33mline:117:4[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd18c0[0m <[0;33mcol:35[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd1988[0m <[0;33mline:118:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd1a00[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd1ab0[0m <[0;33mline:119:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd1f98[0m <[0;33mline:154:7[0m, [0;33mline:157:68[0m> [0;33mline:155:7[0m[0;1;36m unshift[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd1d30[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd1da8[0m <[0;33mcol:36[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd1e20[0m <[0;33mcol:55[0m, [0;33mcol:68[0m> [0;33mcol:68[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd1ea0[0m <[0;33mline:156:8[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd25c8[0m <[0;33mline:195:7[0m, [0;33mline:203:7[0m> [0;33mline:196:7[0m[0;1;36m in[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&) const'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2078[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2118[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2190[0m <[0;33mline:197:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2240[0m <[0;33mcol:34[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd22e8[0m <[0;33mline:198:3[0m, [0;33mcol:16[0m> [0;33mcol:16[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2360[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2440[0m <[0;33mline:199:3[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd26b0[0m <[0;33mline:205:7[0m, [0;33mline:207:37[0m> [0;33mline:206:7[0m[0;1;36m encoding[0m [0;32m'int () const throw()'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd2760[0m <[0;33mline:209:7[0m, [0;33mline:211:42[0m> [0;33mline:210:7[0m[0;1;36m always_noconv[0m [0;32m'bool () const throw()'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd2a70[0m <[0;33mline:213:7[0m, [0;33mline:216:64[0m> [0;33mline:214:7[0m[0;1;36m length[0m [0;32m'int (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2820[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2898[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2910[0m <[0;33mline:215:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2978[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd2b40[0m <[0;33mline:218:7[0m, [0;33mline:220:39[0m> [0;33mline:219:7[0m[0;1;36m max_length[0m [0;32m'int () const throw()'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd2bf0[0m <[0;33mline:222:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd2ce0[0m <[0;33mline:223:7[0m, [0;33mline:224:76[0m> [0;33mcol:7[0m used[0;1;36m __codecvt_abstract_base[0m [0;32m'void (std::size_t)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2c18[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:38[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m  | | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ed4ef0[0m <[0;33mcol:52[0m, [0;33mcol:72[0m> [0;32m'locale::facet':'std::locale::facet'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::size_t) throw()'[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ed4ed8[0m <[0;33mcol:66[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ed4e98[0m <[0;33mcol:66[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd2c18[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;32m'std::codecvt_base'[0m
[0;34m  | | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ed4f48[0m <[0;33mcol:7[0m> [0;32m'std::codecvt_base'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbc0a0[0m <[0;33mcol:74[0m, [0;33mcol:76[0m>
[0;34m  |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cd2dc8[0m <[0;33mline:226:7[0m, [0;33mline:227:36[0m> [0;33mcol:7[0m used[0;1;36m ~__codecvt_abstract_base[0m [0;32m'void () noexcept'[0m virtual
[0;34m  | |-[0mOverrides: [ 0x65ebf28 facet::~facet 'void () noexcept' ]
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbc0b0[0m <[0;33mcol:34[0m, [0;33mcol:36[0m>
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd3270[0m <[0;33mline:236:7[0m, [0;33mline:240:40[0m> [0;33mline:237:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&) const'[0m virtual pure
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2ed0[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2f48[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd2fc0[0m <[0;33mline:238:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3040[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd30b8[0m <[0;33mline:239:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3130[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd31b0[0m <[0;33mline:240:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd3580[0m <[0;33mline:242:7[0m, [0;33mline:244:60[0m> [0;33mline:243:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&) const'[0m virtual pure
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3368[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd33e0[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3458[0m <[0;33mline:244:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd34d8[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd3a00[0m <[0;33mline:246:7[0m, [0;33mline:250:39[0m> [0;33mline:247:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&) const'[0m virtual pure
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3660[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd36d8[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3750[0m <[0;33mline:248:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd37d0[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3848[0m <[0;33mline:249:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd38c0[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3940[0m <[0;33mline:250:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd3ae8[0m <[0;33mline:252:7[0m, [0;33mline:253:37[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd3b98[0m <[0;33mline:255:7[0m, [0;33mline:256:42[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual pure
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd3e60[0m <[0;33mline:258:7[0m, [0;33mline:260:51[0m> [0;33mline:259:7[0m[0;1;36m do_length[0m [0;32m'int (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual pure
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3c58[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3cd0[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3d48[0m <[0;33mline:260:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd3db0[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd3f30[0m <[0;33mline:262:7[0m, [0;33mline:263:39[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd4008[0m <[0;33mline:68:11[0m> [0;33mcol:11[0m implicit[0;1;36m __codecvt_abstract_base[0m [0;32m'void (const std::__codecvt_abstract_base<char32_t, char, __mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd4008
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4118[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t> &'[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd41b8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t> &(const std::__codecvt_abstract_base<char32_t, char, __mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd41b8
[0;34m    `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd42c8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::__codecvt_abstract_base<char32_t, char, __mbstate_t> &'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6cbc2d0[0m prev 0x62dced0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:273:4[0m, [0;33mline:331:5[0m> [0;33mline:274:11[0m[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6cbc0c0[0m <[0;33mline:273:13[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6cbc138[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6cbc1a8[0m <[0;33mcol:51[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cbc240[0m prev 0x62dce40 <[0;33mline:274:5[0m, [0;33mline:331:5[0m> [0;33mline:274:11[0m class[0;1;36m codecvt[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared
[0;34m| |-[0mpublic [0;32m'__codecvt_abstract_base<_InternT, _ExternT, _StateT>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cbc4c0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cbc550[0m <[0;33mline:277:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cbc5d8[0m <[0;33mline:279:7[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m result[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ca90f0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m| |   `-[0m[0;32mEnumType[0m[0;33m 0x6ca8900[0m [0;32m'std::codecvt_base::result'[0m
[0;34m| |     `-[0m[0;1;32mEnum[0m[0;33m 0x6ca8858[0m[0;1;36m 'result'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cbc640[0m <[0;33mline:280:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m intern_type[0m [0;32m'_InternT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6cbc110[0m [0;32m'_InternT'[0m dependent depth 0 index 0
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6cbc0c0[0m[0;1;36m '_InternT'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cbc6a8[0m <[0;33mline:281:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m extern_type[0m [0;32m'_ExternT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6cbc180[0m [0;32m'_ExternT'[0m dependent depth 0 index 1
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6cbc138[0m[0;1;36m '_ExternT'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cbc710[0m <[0;33mline:282:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m state_type[0m [0;32m'_StateT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6cbc1f0[0m [0;32m'_StateT'[0m dependent depth 0 index 2
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6cbc1a8[0m[0;1;36m '_StateT'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cbc768[0m <[0;33mline:284:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6cbc7a0[0m <[0;33mline:285:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m _M_c_locale_codecvt[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cbc7f0[0m <[0;33mline:287:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mVarDecl[0m[0;33m 0x6cbc878[0m <[0;33mline:288:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cbc9c8[0m <[0;33mline:290:7[0m, [0;33mline:294:9[0m> [0;33mline:291:7[0m[0;1;36m codecvt<_InternT, _ExternT, _StateT>[0m [0;32m'void (std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbc8f0[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m referenced[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbe290[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cbe270[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'__codecvt_abstract_base<_InternT, _ExternT, _StateT>'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6cbe400[0m <[0;33mline:292:62[0m, [0;33mcol:69[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbe3e0[0m <[0;33mcol:63[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cbc8f0[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6cbc7a0[0m[0;1;36m '_M_c_locale_codecvt'[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbe488[0m <[0;33mline:293:22[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m <[0;31mNullToPointer[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cbe448[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbe4d8[0m <[0;33mline:294:7[0m, [0;33mcol:9[0m>
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cbcb98[0m <[0;33mline:296:7[0m, [0;33mline:297:51[0m> [0;33mcol:7[0m[0;1;36m codecvt<_InternT, _ExternT, _StateT>[0m [0;32m'void (std::__c_locale, std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbca88[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __cloc[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbcb00[0m <[0;33mcol:34[0m, [0;33mcol:50[0m> [0;33mcol:41[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbe2c8[0m <[0;33mcol:50[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cbe2a8[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cbcc50[0m <[0;33mline:299:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cbccc0[0m <[0;33mline:300:7[0m, [0;33mline:301:20[0m> [0;33mcol:7[0m[0;1;36m ~codecvt<_InternT, _ExternT, _StateT>[0m [0;32m'void ()'[0m virtual
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cbe4e8[0m <[0;33mcol:18[0m, [0;33mcol:20[0m>
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbd318[0m <[0;33mline:303:7[0m, [0;33mline:307:32[0m> [0;33mline:304:7[0m[0;1;36m do_out[0m [0;32m'std::codecvt::result (std::codecvt::state_type &, const std::codecvt::intern_type *, const std::codecvt::intern_type *, const std::codecvt::intern_type *&, std::codecvt::extern_type *, std::codecvt::extern_type *, std::codecvt::extern_type *&) const'[0m virtual
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbcde8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::codecvt::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbcea8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::codecvt::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbcf20[0m <[0;33mline:305:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbcfd0[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd098[0m <[0;33mline:306:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd110[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::codecvt::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd1c0[0m <[0;33mline:307:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::codecvt::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbd668[0m <[0;33mline:309:7[0m, [0;33mline:311:52[0m> [0;33mline:310:7[0m[0;1;36m do_unshift[0m [0;32m'std::codecvt::result (std::codecvt::state_type &, std::codecvt::extern_type *, std::codecvt::extern_type *, std::codecvt::extern_type *&) const'[0m virtual
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd400[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::codecvt::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd478[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd4f0[0m <[0;33mline:311:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::codecvt::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd570[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::codecvt::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbdbf8[0m <[0;33mline:313:7[0m, [0;33mline:317:31[0m> [0;33mline:314:7[0m[0;1;36m do_in[0m [0;32m'std::codecvt::result (std::codecvt::state_type &, const std::codecvt::extern_type *, const std::codecvt::extern_type *, const std::codecvt::extern_type *&, std::codecvt::intern_type *, std::codecvt::intern_type *, std::codecvt::intern_type *&) const'[0m virtual
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd738[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::codecvt::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd7d8[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd850[0m <[0;33mline:315:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd900[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbd9a8[0m <[0;33mline:316:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::codecvt::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbda20[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::codecvt::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbdad0[0m <[0;33mline:317:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::codecvt::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbdd00[0m <[0;33mline:319:7[0m, [0;33mline:320:33[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbddc8[0m <[0;33mline:322:7[0m, [0;33mline:323:38[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbe0e0[0m <[0;33mline:325:7[0m, [0;33mline:327:43[0m> [0;33mline:326:7[0m[0;1;36m do_length[0m [0;32m'int (std::codecvt::state_type &, const std::codecvt::extern_type *, const std::codecvt::extern_type *, std::size_t) const'[0m virtual
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbde78[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::codecvt::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbdef0[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbdf68[0m <[0;33mline:327:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::codecvt::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbdfe0[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cbe1d0[0m <[0;33mline:329:7[0m, [0;33mline:330:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cbea28[0m[0;1;36m 'codecvt'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cc4348[0m[0;1;36m 'codecvt'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cc9ac8[0m[0;1;36m 'codecvt'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cd0e08[0m[0;1;36m 'codecvt'[0m

Dumping std::codecvt::id:
[0;1;32mVarDecl[0m[0;33m 0x6cbe918[0m parent 0x6cbc240 prev 0x6cbc878 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:333:3[0m, [0;33mline:334:54[0m> [0;33mcol:54[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m callinit
[0;34m`-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cbe9c0[0m <[0;33mcol:54[0m> [0;32m'locale::id':'std::locale::id'[0m[0;36m[0m[0;36m[0m [0;32m'void ()'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cbea28[0m prev 0x62dd158 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:337:3[0m, [0;33mline:393:3[0m> [0;33mline:338:11[0m class[0;1;36m codecvt[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'__codecvt_abstract_base<char, char, mbstate_t>':'std::__codecvt_abstract_base<char, char, __mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cc2100[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mFriendDecl[0m[0;33m 0x6cc2290[0m <[0;33mline:341:7[0m, [0;33mcol:33[0m> [0;33mcol:14[0m [0;32m'class messages<char>':'std::__cxx11::messages<char>'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc22d0[0m <[0;33mline:343:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc2308[0m <[0;33mline:345:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m intern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc2370[0m <[0;33mline:346:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m extern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc23d8[0m <[0;33mline:347:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m state_type[0m [0;32m'mbstate_t':'__mbstate_t'[0m
[0;34m| `-[0m[0;32mTypedefType[0m[0;33m 0x61f4d10[0m [0;32m'mbstate_t'[0m sugar
[0;34m|   |-[0m[0;1;32mTypedef[0m[0;33m 0x61e25c0[0m[0;1;36m 'mbstate_t'[0m
[0;34m|   `-[0m[0;32mTypedefType[0m[0;33m 0x61e2590[0m [0;32m'__mbstate_t'[0m sugar
[0;34m|     |-[0m[0;1;32mTypedef[0m[0;33m 0x61e2518[0m[0;1;36m '__mbstate_t'[0m
[0;34m|     `-[0m[0;32mElaboratedType[0m[0;33m 0x61e24c0[0m [0;32m'struct __mbstate_t'[0m sugar
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x61e20a0[0m [0;32m'__mbstate_t'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x61e2010[0m[0;1;36m ''[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc2430[0m <[0;33mline:349:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x6cc2468[0m <[0;33mline:350:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m _M_c_locale_codecvt[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc24b8[0m <[0;33mline:352:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mVarDecl[0m[0;33m 0x6cc2540[0m <[0;33mline:353:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc2688[0m <[0;33mline:355:7[0m, [0;33mline:356:32[0m> [0;33mcol:7[0m[0;1;36m codecvt[0m [0;32m'void (std::size_t)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc25b8[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cc42b8[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cc4298[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc2858[0m <[0;33mline:358:7[0m, [0;33mline:359:51[0m> [0;33mcol:7[0m[0;1;36m codecvt[0m [0;32m'void (std::__c_locale, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc2748[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __cloc[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc27c0[0m <[0;33mcol:34[0m, [0;33mcol:50[0m> [0;33mcol:41[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cc42f0[0m <[0;33mcol:50[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cc42d0[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc2910[0m <[0;33mline:361:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cc2980[0m <[0;33mline:362:7[0m, [0;33mline:363:16[0m> [0;33mcol:7[0m[0;1;36m ~codecvt[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc0a78 __codecvt_abstract_base::~__codecvt_abstract_base 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc2fe8[0m <[0;33mline:365:7[0m, [0;33mline:369:32[0m> [0;33mline:366:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::codecvt<char, char, __mbstate_t>::state_type &, const std::codecvt<char, char, __mbstate_t>::intern_type *, const std::codecvt<char, char, __mbstate_t>::intern_type *, const std::codecvt<char, char, __mbstate_t>::intern_type *&, std::codecvt<char, char, __mbstate_t>::extern_type *, std::codecvt<char, char, __mbstate_t>::extern_type *, std::codecvt<char, char, __mbstate_t>::extern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cc0f20 __codecvt_abstract_base::do_out 'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc2ab8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::codecvt<char, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc2b78[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc2bf0[0m <[0;33mline:367:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc2ca0[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt<char, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc2d68[0m <[0;33mline:368:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc2de0[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc2e90[0m <[0;33mline:369:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc3338[0m <[0;33mline:371:7[0m, [0;33mline:373:52[0m> [0;33mline:372:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::codecvt<char, char, __mbstate_t>::state_type &, std::codecvt<char, char, __mbstate_t>::extern_type *, std::codecvt<char, char, __mbstate_t>::extern_type *, std::codecvt<char, char, __mbstate_t>::extern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cc1230 __codecvt_abstract_base::do_unshift 'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc30d0[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::codecvt<char, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3148[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc31c0[0m <[0;33mline:373:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3240[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc38c8[0m <[0;33mline:375:7[0m, [0;33mline:379:31[0m> [0;33mline:376:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::codecvt<char, char, __mbstate_t>::state_type &, const std::codecvt<char, char, __mbstate_t>::extern_type *, const std::codecvt<char, char, __mbstate_t>::extern_type *, const std::codecvt<char, char, __mbstate_t>::extern_type *&, std::codecvt<char, char, __mbstate_t>::intern_type *, std::codecvt<char, char, __mbstate_t>::intern_type *, std::codecvt<char, char, __mbstate_t>::intern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cc16b0 __codecvt_abstract_base::do_in 'std::__codecvt_abstract_base<char, char, __mbstate_t>::result (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char, char, __mbstate_t>::intern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3408[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::codecvt<char, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc34a8[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3520[0m <[0;33mline:377:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc35d0[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3678[0m <[0;33mline:378:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::codecvt<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc36f0[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc37a0[0m <[0;33mline:379:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char, char, __mbstate_t>::intern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc39d0[0m <[0;33mline:381:7[0m, [0;33mline:382:33[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc1798 __codecvt_abstract_base::do_encoding 'int () const throw()' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc3a98[0m <[0;33mline:384:7[0m, [0;33mline:385:38[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc1848 __codecvt_abstract_base::do_always_noconv 'bool () const throw()' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc3db0[0m <[0;33mline:387:7[0m, [0;33mline:389:43[0m> [0;33mline:388:7[0m[0;1;36m do_length[0m [0;32m'int (std::codecvt<char, char, __mbstate_t>::state_type &, const std::codecvt<char, char, __mbstate_t>::extern_type *, const std::codecvt<char, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cc1b10 __codecvt_abstract_base::do_length 'int (std::__codecvt_abstract_base<char, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char, char, __mbstate_t>::extern_type *, std::size_t) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3b48[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::codecvt<char, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3bc0[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3c38[0m <[0;33mline:389:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc3cb0[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc3ea0[0m <[0;33mline:391:7[0m, [0;33mline:392:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc1be0 __codecvt_abstract_base::do_max_length 'int () const throw()' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc3f68[0m <[0;33mline:338:11[0m> [0;33mcol:11[0m implicit[0;1;36m codecvt[0m [0;32m'void (const std::codecvt<char, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cc3f68
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4078[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt<char, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc4118[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::codecvt<char, char, mbstate_t> &(const std::codecvt<char, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cc4118
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc4228[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt<char, char, mbstate_t> &'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cc4348[0m prev 0x62dd3e0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:400:3[0m, [0;33mline:458:5[0m> [0;33mline:401:11[0m class[0;1;36m codecvt[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'__codecvt_abstract_base<wchar_t, char, mbstate_t>':'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cc7878[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mFriendDecl[0m[0;33m 0x6cc7a10[0m <[0;33mline:404:7[0m, [0;33mcol:36[0m> [0;33mcol:14[0m [0;32m'class messages<wchar_t>':'std::__cxx11::messages<wchar_t>'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc7a50[0m <[0;33mline:406:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc7a88[0m <[0;33mline:408:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m intern_type[0m [0;32m'wchar_t'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25ea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc7af0[0m <[0;33mline:409:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m extern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cc7b58[0m <[0;33mline:410:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m state_type[0m [0;32m'mbstate_t':'__mbstate_t'[0m
[0;34m| `-[0m[0;32mTypedefType[0m[0;33m 0x61f4d10[0m [0;32m'mbstate_t'[0m sugar
[0;34m|   |-[0m[0;1;32mTypedef[0m[0;33m 0x61e25c0[0m[0;1;36m 'mbstate_t'[0m
[0;34m|   `-[0m[0;32mTypedefType[0m[0;33m 0x61e2590[0m [0;32m'__mbstate_t'[0m sugar
[0;34m|     |-[0m[0;1;32mTypedef[0m[0;33m 0x61e2518[0m[0;1;36m '__mbstate_t'[0m
[0;34m|     `-[0m[0;32mElaboratedType[0m[0;33m 0x61e24c0[0m [0;32m'struct __mbstate_t'[0m sugar
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x61e20a0[0m [0;32m'__mbstate_t'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x61e2010[0m[0;1;36m ''[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc7bb0[0m <[0;33mline:412:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x6cc7be8[0m <[0;33mline:413:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m _M_c_locale_codecvt[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc7c38[0m <[0;33mline:415:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mVarDecl[0m[0;33m 0x6cc7cc0[0m <[0;33mline:416:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc7e08[0m <[0;33mline:418:7[0m, [0;33mline:419:32[0m> [0;33mcol:7[0m[0;1;36m codecvt[0m [0;32m'void (std::size_t)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc7d38[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cc9a38[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cc9a18[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc7fd8[0m <[0;33mline:421:7[0m, [0;33mline:422:51[0m> [0;33mcol:7[0m[0;1;36m codecvt[0m [0;32m'void (std::__c_locale, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc7ec8[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __cloc[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc7f40[0m <[0;33mcol:34[0m, [0;33mcol:50[0m> [0;33mcol:41[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cc9a70[0m <[0;33mcol:50[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cc9a50[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cc8090[0m <[0;33mline:424:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cc8100[0m <[0;33mline:425:7[0m, [0;33mline:426:16[0m> [0;33mcol:7[0m[0;1;36m ~codecvt[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc62d8 __codecvt_abstract_base::~__codecvt_abstract_base 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc8768[0m <[0;33mline:428:7[0m, [0;33mline:432:32[0m> [0;33mline:429:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::codecvt<wchar_t, char, __mbstate_t>::state_type &, const std::codecvt<wchar_t, char, __mbstate_t>::intern_type *, const std::codecvt<wchar_t, char, __mbstate_t>::intern_type *, const std::codecvt<wchar_t, char, __mbstate_t>::intern_type *&, std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cc6780 __codecvt_abstract_base::do_out 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8238[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc82f8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::codecvt<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8370[0m <[0;33mline:430:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8420[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt<wchar_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc84e8[0m <[0;33mline:431:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8560[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8610[0m <[0;33mline:432:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc8ab8[0m <[0;33mline:434:7[0m, [0;33mline:437:29[0m> [0;33mline:435:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::codecvt<wchar_t, char, __mbstate_t>::state_type &, std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cc6a90 __codecvt_abstract_base::do_unshift 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8850[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc88c8[0m <[0;33mline:436:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8940[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc89c0[0m <[0;33mline:437:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc9048[0m <[0;33mline:439:7[0m, [0;33mline:444:32[0m> [0;33mline:440:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::codecvt<wchar_t, char, __mbstate_t>::state_type &, const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&, std::codecvt<wchar_t, char, __mbstate_t>::intern_type *, std::codecvt<wchar_t, char, __mbstate_t>::intern_type *, std::codecvt<wchar_t, char, __mbstate_t>::intern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cc6f10 __codecvt_abstract_base::do_in 'std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::intern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8b88[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8c28[0m <[0;33mline:441:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from[0m [0;32m'const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8ca0[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8d50[0m <[0;33mline:442:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8df8[0m <[0;33mline:443:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8e70[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc8f20[0m <[0;33mline:444:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc9150[0m <[0;33mline:446:7[0m, [0;33mline:447:37[0m> [0;33mcol:11[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc6ff8 __codecvt_abstract_base::do_encoding 'int () const throw()' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc9218[0m <[0;33mline:449:7[0m, [0;33mline:450:43[0m> [0;33mcol:12[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc70a8 __codecvt_abstract_base::do_always_noconv 'bool () const throw()' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc9530[0m <[0;33mline:452:7[0m, [0;33mline:454:47[0m> [0;33mline:453:11[0m[0;1;36m do_length[0m [0;32m'int (std::codecvt<wchar_t, char, __mbstate_t>::state_type &, const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cc7370 __codecvt_abstract_base::do_length 'int (std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::extern_type *, std::size_t) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc92c8[0m <[0;33mcol:21[0m, [0;33mcol:31[0m> [0;33mcol:32[0m [0;32m'std::codecvt<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc9340[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc93b8[0m <[0;33mline:454:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc9430[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc9620[0m <[0;33mline:456:7[0m, [0;33mline:457:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc7440 __codecvt_abstract_base::do_max_length 'int () const throw()' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cc96e8[0m <[0;33mline:401:11[0m> [0;33mcol:11[0m implicit[0;1;36m codecvt[0m [0;32m'void (const std::codecvt<wchar_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cc96e8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc97f8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt<wchar_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cc9898[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::codecvt<wchar_t, char, mbstate_t> &(const std::codecvt<wchar_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cc9898
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cc99a8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt<wchar_t, char, mbstate_t> &'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cc9ac8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:467:3[0m, [0;33mline:518:5[0m> [0;33mline:468:11[0m class[0;1;36m codecvt[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'__codecvt_abstract_base<char16_t, char, mbstate_t>':'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ccedc8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ccee58[0m <[0;33mline:471:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ccee90[0m <[0;33mline:473:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m intern_type[0m [0;32m'char16_t'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25ee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cceef8[0m <[0;33mline:474:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m extern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ccef60[0m <[0;33mline:475:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m state_type[0m [0;32m'mbstate_t':'__mbstate_t'[0m
[0;34m| `-[0m[0;32mTypedefType[0m[0;33m 0x61f4d10[0m [0;32m'mbstate_t'[0m sugar
[0;34m|   |-[0m[0;1;32mTypedef[0m[0;33m 0x61e25c0[0m[0;1;36m 'mbstate_t'[0m
[0;34m|   `-[0m[0;32mTypedefType[0m[0;33m 0x61e2590[0m [0;32m'__mbstate_t'[0m sugar
[0;34m|     |-[0m[0;1;32mTypedef[0m[0;33m 0x61e2518[0m[0;1;36m '__mbstate_t'[0m
[0;34m|     `-[0m[0;32mElaboratedType[0m[0;33m 0x61e24c0[0m [0;32m'struct __mbstate_t'[0m sugar
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x61e20a0[0m [0;32m'__mbstate_t'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x61e2010[0m[0;1;36m ''[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ccefb8[0m <[0;33mline:477:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mVarDecl[0m[0;33m 0x6ccf040[0m <[0;33mline:478:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ccf188[0m <[0;33mline:480:7[0m, [0;33mline:482:70[0m> [0;33mline:481:7[0m used[0;1;36m codecvt[0m [0;32m'void (std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccf0b8[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd0be8[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd0bc8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'__codecvt_abstract_base<char16_t, char, mbstate_t>':'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cd0d58[0m <[0;33mline:482:9[0m, [0;33mcol:66[0m> [0;32m'__codecvt_abstract_base<char16_t, char, mbstate_t>':'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::size_t)'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd0d40[0m <[0;33mcol:60[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd0d00[0m <[0;33mcol:60[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ccf0b8[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd0db8[0m <[0;33mcol:68[0m, [0;33mcol:70[0m>
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ccf238[0m <[0;33mline:484:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6ccf2a8[0m <[0;33mline:485:7[0m, [0;33mline:486:16[0m> [0;33mcol:7[0m used[0;1;36m ~codecvt[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6ccd828 __codecvt_abstract_base::~__codecvt_abstract_base 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccf918[0m <[0;33mline:488:7[0m, [0;33mline:492:32[0m> [0;33mline:489:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::codecvt<char16_t, char, __mbstate_t>::state_type &, const std::codecvt<char16_t, char, __mbstate_t>::intern_type *, const std::codecvt<char16_t, char, __mbstate_t>::intern_type *, const std::codecvt<char16_t, char, __mbstate_t>::intern_type *&, std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::codecvt<char16_t, char, __mbstate_t>::extern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6ccdcd0 __codecvt_abstract_base::do_out 'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccf3e8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccf4a8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccf520[0m <[0;33mline:490:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccf5d0[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt<char16_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccf698[0m <[0;33mline:491:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccf710[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccf7c0[0m <[0;33mline:492:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ccfc68[0m <[0;33mline:494:7[0m, [0;33mline:497:29[0m> [0;33mline:495:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::codecvt<char16_t, char, __mbstate_t>::state_type &, std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::codecvt<char16_t, char, __mbstate_t>::extern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6ccdfe0 __codecvt_abstract_base::do_unshift 'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccfa00[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccfa78[0m <[0;33mline:496:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccfaf0[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccfb70[0m <[0;33mline:497:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd01f8[0m <[0;33mline:499:7[0m, [0;33mline:504:32[0m> [0;33mline:500:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::codecvt<char16_t, char, __mbstate_t>::state_type &, const std::codecvt<char16_t, char, __mbstate_t>::extern_type *, const std::codecvt<char16_t, char, __mbstate_t>::extern_type *, const std::codecvt<char16_t, char, __mbstate_t>::extern_type *&, std::codecvt<char16_t, char, __mbstate_t>::intern_type *, std::codecvt<char16_t, char, __mbstate_t>::intern_type *, std::codecvt<char16_t, char, __mbstate_t>::intern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cce460 __codecvt_abstract_base::do_in 'std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::intern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccfd38[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccfdd8[0m <[0;33mline:501:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccfe50[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccff00[0m <[0;33mline:502:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccffa8[0m <[0;33mline:503:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd0020[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd00d0[0m <[0;33mline:504:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd0300[0m <[0;33mline:506:7[0m, [0;33mline:507:37[0m> [0;33mcol:11[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cce548 __codecvt_abstract_base::do_encoding 'int () const throw()' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd03c8[0m <[0;33mline:509:7[0m, [0;33mline:510:43[0m> [0;33mcol:12[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cce5f8 __codecvt_abstract_base::do_always_noconv 'bool () const throw()' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd06e0[0m <[0;33mline:512:7[0m, [0;33mline:514:47[0m> [0;33mline:513:11[0m[0;1;36m do_length[0m [0;32m'int (std::codecvt<char16_t, char, __mbstate_t>::state_type &, const std::codecvt<char16_t, char, __mbstate_t>::extern_type *, const std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cce8c0 __codecvt_abstract_base::do_length 'int (std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char16_t, char, __mbstate_t>::extern_type *, std::size_t) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd0478[0m <[0;33mcol:21[0m, [0;33mcol:31[0m> [0;33mcol:32[0m [0;32m'std::codecvt<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd04f0[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd0568[0m <[0;33mline:514:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd05e0[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd07d0[0m <[0;33mline:516:7[0m, [0;33mline:517:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cce990 __codecvt_abstract_base::do_max_length 'int () const throw()' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd0898[0m <[0;33mline:468:11[0m> [0;33mcol:11[0m implicit[0;1;36m codecvt[0m [0;32m'void (const std::codecvt<char16_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd0898
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd09a8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt<char16_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd0a48[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::codecvt<char16_t, char, mbstate_t> &(const std::codecvt<char16_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd0a48
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd0b58[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt<char16_t, char, mbstate_t> &'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cd0e08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:524:3[0m, [0;33mline:575:5[0m> [0;33mline:525:11[0m class[0;1;36m codecvt[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'__codecvt_abstract_base<char32_t, char, mbstate_t>':'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cd4368[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd43f8[0m <[0;33mline:528:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cd4430[0m <[0;33mline:530:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m intern_type[0m [0;32m'char32_t'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25f00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cd4498[0m <[0;33mline:531:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m extern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6cd4500[0m <[0;33mline:532:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m state_type[0m [0;32m'mbstate_t':'__mbstate_t'[0m
[0;34m| `-[0m[0;32mTypedefType[0m[0;33m 0x61f4d10[0m [0;32m'mbstate_t'[0m sugar
[0;34m|   |-[0m[0;1;32mTypedef[0m[0;33m 0x61e25c0[0m[0;1;36m 'mbstate_t'[0m
[0;34m|   `-[0m[0;32mTypedefType[0m[0;33m 0x61e2590[0m [0;32m'__mbstate_t'[0m sugar
[0;34m|     |-[0m[0;1;32mTypedef[0m[0;33m 0x61e2518[0m[0;1;36m '__mbstate_t'[0m
[0;34m|     `-[0m[0;32mElaboratedType[0m[0;33m 0x61e24c0[0m [0;32m'struct __mbstate_t'[0m sugar
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x61e20a0[0m [0;32m'__mbstate_t'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x61e2010[0m[0;1;36m ''[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd4558[0m <[0;33mline:534:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mVarDecl[0m[0;33m 0x6cd45e0[0m <[0;33mline:535:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd4728[0m <[0;33mline:537:7[0m, [0;33mline:539:70[0m> [0;33mline:538:7[0m used[0;1;36m codecvt[0m [0;32m'void (std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4658[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd6188[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd6168[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'__codecvt_abstract_base<char32_t, char, mbstate_t>':'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cd62f8[0m <[0;33mline:539:9[0m, [0;33mcol:66[0m> [0;32m'__codecvt_abstract_base<char32_t, char, mbstate_t>':'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::size_t)'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd62e0[0m <[0;33mcol:60[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd62a0[0m <[0;33mcol:60[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd4658[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd6358[0m <[0;33mcol:68[0m, [0;33mcol:70[0m>
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd47d8[0m <[0;33mline:541:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cd4848[0m <[0;33mline:542:7[0m, [0;33mline:543:16[0m> [0;33mcol:7[0m used[0;1;36m ~codecvt[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cd2dc8 __codecvt_abstract_base::~__codecvt_abstract_base 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd4eb8[0m <[0;33mline:545:7[0m, [0;33mline:549:32[0m> [0;33mline:546:7[0m[0;1;36m do_out[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::codecvt<char32_t, char, __mbstate_t>::state_type &, const std::codecvt<char32_t, char, __mbstate_t>::intern_type *, const std::codecvt<char32_t, char, __mbstate_t>::intern_type *, const std::codecvt<char32_t, char, __mbstate_t>::intern_type *&, std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::codecvt<char32_t, char, __mbstate_t>::extern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cd3270 __codecvt_abstract_base::do_out 'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4988[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4a48[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4ac0[0m <[0;33mline:547:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4b70[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt<char32_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4c38[0m <[0;33mline:548:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4cb0[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4d60[0m <[0;33mline:549:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd5208[0m <[0;33mline:551:7[0m, [0;33mline:554:29[0m> [0;33mline:552:7[0m[0;1;36m do_unshift[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::codecvt<char32_t, char, __mbstate_t>::state_type &, std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::codecvt<char32_t, char, __mbstate_t>::extern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cd3580 __codecvt_abstract_base::do_unshift 'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd4fa0[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5018[0m <[0;33mline:553:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5090[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5110[0m <[0;33mline:554:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd5798[0m <[0;33mline:556:7[0m, [0;33mline:561:32[0m> [0;33mline:557:7[0m[0;1;36m do_in[0m [0;32m'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::codecvt<char32_t, char, __mbstate_t>::state_type &, const std::codecvt<char32_t, char, __mbstate_t>::extern_type *, const std::codecvt<char32_t, char, __mbstate_t>::extern_type *, const std::codecvt<char32_t, char, __mbstate_t>::extern_type *&, std::codecvt<char32_t, char, __mbstate_t>::intern_type *, std::codecvt<char32_t, char, __mbstate_t>::intern_type *, std::codecvt<char32_t, char, __mbstate_t>::intern_type *&) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cd3a00 __codecvt_abstract_base::do_in 'std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::result (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *&, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *, std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::intern_type *&) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd52d8[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5378[0m <[0;33mline:558:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd53f0[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from_end[0m [0;32m'const std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd54a0[0m <[0;33mline:559:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __from_next[0m [0;32m'const std::codecvt<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5548[0m <[0;33mline:560:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd55c0[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5670[0m <[0;33mline:561:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd58a0[0m <[0;33mline:563:7[0m, [0;33mline:564:37[0m> [0;33mcol:11[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cd3ae8 __codecvt_abstract_base::do_encoding 'int () const throw()' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd5968[0m <[0;33mline:566:7[0m, [0;33mline:567:43[0m> [0;33mcol:12[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cd3b98 __codecvt_abstract_base::do_always_noconv 'bool () const throw()' ]
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd5c80[0m <[0;33mline:569:7[0m, [0;33mline:571:47[0m> [0;33mline:570:11[0m[0;1;36m do_length[0m [0;32m'int (std::codecvt<char32_t, char, __mbstate_t>::state_type &, const std::codecvt<char32_t, char, __mbstate_t>::extern_type *, const std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cd3e60 __codecvt_abstract_base::do_length 'int (std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::state_type &, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, const std::__codecvt_abstract_base<char32_t, char, __mbstate_t>::extern_type *, std::size_t) const' ]
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5a18[0m <[0;33mcol:21[0m, [0;33mcol:31[0m> [0;33mcol:32[0m [0;32m'std::codecvt<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5a90[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5b08[0m <[0;33mline:571:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5b80[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd5d70[0m <[0;33mline:573:7[0m, [0;33mline:574:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cd3f30 __codecvt_abstract_base::do_max_length 'int () const throw()' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd5e38[0m <[0;33mline:525:11[0m> [0;33mcol:11[0m implicit[0;1;36m codecvt[0m [0;32m'void (const std::codecvt<char32_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd5e38
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd5f48[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt<char32_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd5fe8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::codecvt<char32_t, char, mbstate_t> &(const std::codecvt<char32_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd5fe8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd60f8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt<char32_t, char, mbstate_t> &'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6cd6570[0m prev 0x62dd830 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:581:3[0m, [0;33mline:606:5[0m> [0;33mline:582:11[0m[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6cd6368[0m <[0;33mline:581:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6cd63d8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6cd6448[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cd64e0[0m prev 0x62dd7a0 <[0;33mline:582:5[0m, [0;33mline:606:5[0m> [0;33mline:582:11[0m class[0;1;36m codecvt_byname[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared
[0;34m| |-[0mpublic [0;32m'codecvt<_InternT, _ExternT, _StateT>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cd6760[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt_byname[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd67f0[0m <[0;33mline:584:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd6980[0m <[0;33mline:585:7[0m, [0;33mline:595:7[0m> [0;33mline:586:7[0m[0;1;36m codecvt_byname<_InternT, _ExternT, _StateT>[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd6830[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __s[0m [0;32m'const char *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd68a8[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;33mcol:46[0m referenced[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd6d50[0m <[0;33mcol:55[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd6d30[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'codecvt<_InternT, _ExternT, _StateT>'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6cd6ec0[0m <[0;33mline:587:45[0m, [0;33mcol:52[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd6ea0[0m <[0;33mcol:46[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd68a8[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd73d0[0m <[0;33mline:588:7[0m, [0;33mline:595:7[0m>
[0;34m| |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6cd73b8[0m <[0;33mline:589:2[0m, [0;33mline:594:4[0m>
[0;34m| |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6cd71a0[0m <[0;33mline:589:6[0m, [0;33mline:590:43[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6cd7038[0m <[0;33mline:589:6[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m| |     | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6cd6fb8[0m <[0;33mcol:6[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd6fa0[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *, const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m| |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd6f10[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x625ad38[0m[0;1;36m '__builtin_strcmp'[0m [0;32m'int (const char *, const char *) noexcept'[0m
[0;34m| |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd6fe8[0m <[0;33mcol:23[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd6f30[0m <[0;33mcol:23[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd6830[0m[0;1;36m '__s'[0m [0;32m'const char *'[0m
[0;34m| |     | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd7000[0m <[0;33mcol:28[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |     | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6cd6f50[0m <[0;33mcol:28[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "C"[0m
[0;34m| |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd7018[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6cd7180[0m <[0;33mline:590:9[0m, [0;33mcol:43[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m| |     |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6cd7100[0m <[0;33mcol:9[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd70e8[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *, const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m| |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd7058[0m <[0;33mcol:9[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x625ad38[0m[0;1;36m '__builtin_strcmp'[0m [0;32m'int (const char *, const char *) noexcept'[0m
[0;34m| |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd7130[0m <[0;33mcol:26[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd7078[0m <[0;33mcol:26[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd6830[0m[0;1;36m '__s'[0m [0;32m'const char *'[0m
[0;34m| |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd7148[0m <[0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |     |   |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6cd7098[0m <[0;33mcol:31[0m> [0;32m'const char [6]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "POSIX"[0m
[0;34m| |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd7160[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd7398[0m <[0;33mline:591:4[0m, [0;33mline:594:4[0m>
[0;34m| |       |-[0m[0;1;35mCallExpr[0m[0;33m 0x6cd7270[0m <[0;33mline:592:6[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cd71d0[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_S_destroy_c_locale
[0;34m| |       | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cd71c0[0m <[0;33mcol:6[0m> [0;32m'codecvt_byname<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cd7228[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_c_locale_codecvt
[0;34m| |       |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cd7218[0m <[0;33mcol:32[0m> [0;32m'codecvt_byname<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cd7368[0m <[0;33mline:593:6[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |         |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cd72a8[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_S_create_c_locale
[0;34m| |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cd7298[0m <[0;33mcol:6[0m> [0;32m'codecvt_byname<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |         |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6cd7300[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_c_locale_codecvt
[0;34m| |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6cd72f0[0m <[0;33mcol:31[0m> [0;32m'codecvt_byname<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd7348[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd6830[0m[0;1;36m '__s'[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd6b58[0m <[0;33mline:598:7[0m, [0;33mline:600:47[0m> [0;33mline:599:7[0m[0;1;36m codecvt_byname<_InternT, _ExternT, _StateT>[0m [0;32m'void (const std::__cxx11::string &, std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd6a48[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m __s[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd6ac0[0m <[0;33mcol:41[0m, [0;33mcol:57[0m> [0;33mcol:48[0m referenced[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd6d88[0m <[0;33mcol:57[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd6d68[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'codecvt_byname<_InternT, _ExternT, _StateT>'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6cd7478[0m <[0;33mline:600:23[0m, [0;33mcol:43[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6cd7438[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6cd7408[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .c_str[0;33m 0x64d7140[0m
[0;34m| | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd73e8[0m <[0;33mcol:24[0m> [0;32m'const std::__cxx11::string':'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd6a48[0m[0;1;36m '__s'[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd7458[0m <[0;33mcol:37[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd6ac0[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd74e0[0m <[0;33mcol:45[0m, [0;33mcol:47[0m>
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd6c10[0m <[0;33mline:603:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| `-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cd6c80[0m <[0;33mline:604:7[0m, [0;33mline:605:27[0m> [0;33mcol:7[0m[0;1;36m ~codecvt_byname<_InternT, _ExternT, _StateT>[0m [0;32m'void ()'[0m virtual
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd74f0[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cdefb0[0m[0;1;36m 'codecvt_byname'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cdf1d0[0m[0;1;36m 'codecvt_byname'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cd9770[0m[0;1;36m 'codecvt_byname'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6cdb060[0m[0;1;36m 'codecvt_byname'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cd7540[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:609:3[0m, [0;33mline:625:5[0m> [0;33mline:610:11[0m class[0;1;36m codecvt_byname[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'codecvt<char16_t, char, mbstate_t>':'std::codecvt<char16_t, char, mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cd7920[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd79b0[0m <[0;33mline:613:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd7b40[0m <[0;33mline:614:7[0m, [0;33mline:616:54[0m> [0;33mline:615:7[0m used[0;1;36m codecvt_byname[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd79f0[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __s[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd7a68[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;33mcol:46[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd8298[0m <[0;33mcol:55[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd8278[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'codecvt<char16_t, char, mbstate_t>':'std::codecvt<char16_t, char, mbstate_t>'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cd8448[0m <[0;33mline:616:9[0m, [0;33mcol:50[0m> [0;32m'codecvt<char16_t, char, mbstate_t>':'std::codecvt<char16_t, char, mbstate_t>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::size_t)'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd8430[0m <[0;33mcol:44[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd83f0[0m <[0;33mcol:44[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd7a68[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd84a8[0m <[0;33mcol:52[0m, [0;33mcol:54[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd7d18[0m <[0;33mline:618:7[0m, [0;33mline:620:47[0m> [0;33mline:619:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const std::__cxx11::string &, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd7c08[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __s[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd7c80[0m <[0;33mcol:41[0m, [0;33mcol:57[0m> [0;33mcol:48[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd82d0[0m <[0;33mcol:57[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd82b0[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'std::codecvt_byname<char16_t, char, mbstate_t>'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cd8598[0m <[0;33mline:620:9[0m, [0;33mcol:43[0m> [0;32m'std::codecvt_byname<char16_t, char, mbstate_t>'[0m[0;36m[0m[0;36m[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6cd8508[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6cd84d8[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .c_str[0;33m 0x64d7140[0m
[0;34m| |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd84b8[0m <[0;33mcol:24[0m> [0;32m'const std::__cxx11::string':'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd7c08[0m[0;1;36m '__s'[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd8580[0m <[0;33mcol:37[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd8528[0m <[0;33mcol:37[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd7c80[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd8600[0m <[0;33mcol:45[0m, [0;33mcol:47[0m>
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd7dd0[0m <[0;33mline:622:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cd7e40[0m <[0;33mline:623:7[0m, [0;33mline:624:27[0m> [0;33mcol:7[0m used[0;1;36m ~codecvt_byname[0m [0;32m'void () noexcept'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6ccf2a8 codecvt::~codecvt 'void () noexcept' ]
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd8610[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd7f48[0m <[0;33mline:610:11[0m> [0;33mcol:11[0m implicit[0;1;36m codecvt_byname[0m [0;32m'void (const std::codecvt_byname<char16_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd7f48
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd8058[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt_byname<char16_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd80f8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::codecvt_byname<char16_t, char, mbstate_t> &(const std::codecvt_byname<char16_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd80f8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd8208[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt_byname<char16_t, char, mbstate_t> &'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cd8660[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:627:3[0m, [0;33mline:643:5[0m> [0;33mline:628:11[0m class[0;1;36m codecvt_byname[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'codecvt<char32_t, char, mbstate_t>':'std::codecvt<char32_t, char, mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cd8a40[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd8ad0[0m <[0;33mline:631:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd8c60[0m <[0;33mline:632:7[0m, [0;33mline:634:54[0m> [0;33mline:633:7[0m used[0;1;36m codecvt_byname[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd8b10[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __s[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd8b88[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;33mcol:46[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd93b8[0m <[0;33mcol:55[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd9398[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'codecvt<char32_t, char, mbstate_t>':'std::codecvt<char32_t, char, mbstate_t>'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cd9568[0m <[0;33mline:634:9[0m, [0;33mcol:50[0m> [0;32m'codecvt<char32_t, char, mbstate_t>':'std::codecvt<char32_t, char, mbstate_t>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::size_t)'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd9550[0m <[0;33mcol:44[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd9510[0m <[0;33mcol:44[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd8b88[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd95c8[0m <[0;33mcol:52[0m, [0;33mcol:54[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd8e38[0m <[0;33mline:636:7[0m, [0;33mline:638:47[0m> [0;33mline:637:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const std::__cxx11::string &, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd8d28[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __s[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd8da0[0m <[0;33mcol:41[0m, [0;33mcol:57[0m> [0;33mcol:48[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd93f0[0m <[0;33mcol:57[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cd93d0[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'std::codecvt_byname<char32_t, char, mbstate_t>'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cd96b8[0m <[0;33mline:638:9[0m, [0;33mcol:43[0m> [0;32m'std::codecvt_byname<char32_t, char, mbstate_t>'[0m[0;36m[0m[0;36m[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6cd9628[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6cd95f8[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .c_str[0;33m 0x64d7140[0m
[0;34m| |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd95d8[0m <[0;33mcol:24[0m> [0;32m'const std::__cxx11::string':'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd8d28[0m[0;1;36m '__s'[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd96a0[0m <[0;33mcol:37[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd9648[0m <[0;33mcol:37[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cd8da0[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd9720[0m <[0;33mcol:45[0m, [0;33mcol:47[0m>
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd8ef0[0m <[0;33mline:640:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cd8f60[0m <[0;33mline:641:7[0m, [0;33mline:642:27[0m> [0;33mcol:7[0m used[0;1;36m ~codecvt_byname[0m [0;32m'void () noexcept'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6cd4848 codecvt::~codecvt 'void () noexcept' ]
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd9730[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd9068[0m <[0;33mline:628:11[0m> [0;33mcol:11[0m implicit[0;1;36m codecvt_byname[0m [0;32m'void (const std::codecvt_byname<char32_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd9068
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd9178[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt_byname<char32_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cd9218[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::codecvt_byname<char32_t, char, mbstate_t> &(const std::codecvt_byname<char32_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cd9218
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd9328[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::codecvt_byname<char32_t, char, mbstate_t> &'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cd9770[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:649:3[0m, [0;33mcol:61[0m> [0;33mcol:25[0m class[0;1;36m codecvt_byname[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'codecvt<char, char, __mbstate_t>':'std::codecvt<char, char, mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cd9bb0[0m prev 0x6cd9770 <[0;33mline:582:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cd9c40[0m <[0;33mline:584:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd9da0[0m <[0;33mline:585:7[0m, [0;33mline:595:7[0m> [0;33mline:586:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd9c68[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __s[0m [0;32m'const char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd9cd0[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;33mcol:46[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cd9f88[0m <[0;33mline:598:7[0m, [0;33mline:600:47[0m> [0;33mline:599:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const std::__cxx11::string &, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd9e68[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __s[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cd9ed0[0m <[0;33mcol:41[0m, [0;33mcol:57[0m> [0;33mcol:48[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cda050[0m <[0;33mline:603:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cda0a0[0m <[0;33mline:604:7[0m, [0;33mline:605:27[0m> [0;33mcol:7[0m[0;1;36m ~codecvt_byname[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc2980 codecvt::~codecvt 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cda1b8[0m <[0;33mline:649:25[0m> [0;33mcol:25[0m implicit[0;1;36m codecvt_byname[0m [0;32m'void (const std::codecvt_byname<char, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cda1b8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cda2c8[0m <[0;33mcol:25[0m> [0;33mcol:25[0m [0;32m'const std::codecvt_byname<char, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cda368[0m <[0;33mcol:25[0m> [0;33mcol:25[0m implicit[0;1;36m operator=[0m [0;32m'std::codecvt_byname<char, char, mbstate_t> &(const std::codecvt_byname<char, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cda368
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cda478[0m <[0;33mcol:25[0m> [0;33mcol:25[0m [0;32m'const std::codecvt_byname<char, char, mbstate_t> &'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cdb060[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:660:3[0m, [0;33mcol:64[0m> [0;33mcol:25[0m class[0;1;36m codecvt_byname[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'codecvt<wchar_t, char, __mbstate_t>':'std::codecvt<wchar_t, char, mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cdb440[0m prev 0x6cdb060 <[0;33mline:582:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cdb4d0[0m <[0;33mline:584:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cdb630[0m <[0;33mline:585:7[0m, [0;33mline:595:7[0m> [0;33mline:586:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cdb4f8[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __s[0m [0;32m'const char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cdb560[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;33mcol:46[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cdb818[0m <[0;33mline:598:7[0m, [0;33mline:600:47[0m> [0;33mline:599:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const std::__cxx11::string &, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cdb6f8[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __s[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cdb760[0m <[0;33mcol:41[0m, [0;33mcol:57[0m> [0;33mcol:48[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cdb8e0[0m <[0;33mline:603:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cdb930[0m <[0;33mline:604:7[0m, [0;33mline:605:27[0m> [0;33mcol:7[0m[0;1;36m ~codecvt_byname[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cc8100 codecvt::~codecvt 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cdba48[0m <[0;33mline:660:25[0m> [0;33mcol:25[0m implicit[0;1;36m codecvt_byname[0m [0;32m'void (const std::codecvt_byname<wchar_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cdba48
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cdbb58[0m <[0;33mcol:25[0m> [0;33mcol:25[0m [0;32m'const std::codecvt_byname<wchar_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cdbbf8[0m <[0;33mcol:25[0m> [0;33mcol:25[0m implicit[0;1;36m operator=[0m [0;32m'std::codecvt_byname<wchar_t, char, mbstate_t> &(const std::codecvt_byname<wchar_t, char, mbstate_t> &)'[0m inline default_delete noexcept-unevaluated 0x6cdbbf8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cdbd08[0m <[0;33mcol:25[0m> [0;33mcol:25[0m [0;32m'const std::codecvt_byname<wchar_t, char, mbstate_t> &'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cdefb0[0m prev 0x6cd7540 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:672:3[0m, [0;33mcol:65[0m> [0;33mcol:25[0m class[0;1;36m codecvt_byname[0m
[0;34m|-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6cdf1d0[0m prev 0x6cd8660 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:673:3[0m, [0;33mcol:65[0m> [0;33mcol:25[0m class[0;1;36m codecvt_byname[0m
[0;34m|-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::__do_str_codecvt:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6da33f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:52:3[0m, [0;33mline:101:5[0m> [0;33mline:55:5[0m[0;1;36m __do_str_codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da2bb8[0m <[0;33mline:52:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _OutStr[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da2c28[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _InChar[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da2c98[0m <[0;33mcol:48[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced typename depth 0 index 2[0;1;36m _Codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da2d08[0m <[0;33mline:53:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da2d78[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced typename depth 0 index 4[0;1;36m _Fn[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6da3358[0m <[0;33mline:54:5[0m, [0;33mline:101:5[0m> [0;33mline:55:5[0m[0;1;36m __do_str_codecvt[0m [0;32m'bool (const _InChar *, const _InChar *, _OutStr &, const _Codecvt &, _State &, std::size_t &, _Fn)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da2e58[0m <[0;33mcol:22[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __first[0m [0;32m'const _InChar *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da2ed0[0m <[0;33mcol:46[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __last[0m [0;32m'const _InChar *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da2f78[0m <[0;33mline:56:8[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __outstr[0m [0;32m'_OutStr &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da3018[0m <[0;33mcol:27[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __cvt[0m [0;32m'const _Codecvt &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da30b8[0m <[0;33mcol:50[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m __state[0m [0;32m'_State &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da3158[0m <[0;33mline:57:8[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __count[0m [0;32m'std::size_t &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da31d0[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __fn[0m [0;32m'_Fn'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da6148[0m <[0;33mline:58:5[0m, [0;33mline:101:5[0m>
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x6da3750[0m <[0;33mline:59:7[0m, [0;33mline:64:2[0m>
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da35d0[0m <[0;33mline:59:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da34c8[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x6139228[0m[0;33m 0x615d5a8[0m[0;33m 0x61605c8[0m[0;33m 0x61800e8[0m[0;33m 0x61810d8[0m[0;33m 0x6216d58[0m[0;33m 0x62987e0[0m[0;33m 0x6298d00[0m[0;33m 0x6471a80[0m[0;33m 0x6472730[0m[0;33m 0x6473248[0m[0;33m 0x64739d8[0m[0;33m 0x6649080[0m[0;33m 0x66499e0[0m[0;33m 0x664a4b0[0m[0;33m 0x664ac90[0m[0;33m 0x66b84e8[0m[0;33m 0x68e9188[0m[0;33m 0x6abe208[0m[0;33m 0x6b8b268[0m[0;33m 0x6bdf790[0m[0;33m 0x6be0dd0[0m[0;33m 0x6d92868[0m[0;33m 0x6d92fb0[0m[0;33m 0x6d934e0[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3488[0m <[0;33mcol:11[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2e58[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da34a8[0m <[0;33mcol:22[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2ed0[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da3728[0m <[0;33mline:60:2[0m, [0;33mline:64:2[0m>
[0;34m    |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6da3670[0m <[0;33mline:61:4[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da3628[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .clear
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3608[0m <[0;33mcol:4[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da36e8[0m <[0;33mline:62:4[0m, [0;33mcol:14[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m    |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3690[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da3158[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m    |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da36d0[0m <[0;33mcol:14[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da36b0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6da3718[0m <[0;33mline:63:4[0m, [0;33mcol:11[0m>
[0;34m    |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6da3708[0m <[0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da3818[0m <[0;33mline:66:7[0m, [0;33mcol:28[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da3778[0m <[0;33mcol:7[0m, [0;33mcol:27[0m> [0;33mcol:14[0m referenced[0;1;36m __outchars[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3800[0m <[0;33mcol:27[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da37e0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da38c8[0m <[0;33mline:67:7[0m, [0;33mcol:28[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da3840[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;33mcol:12[0m referenced[0;1;36m __next[0m [0;32m'auto'[0m cinit
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da38a8[0m <[0;33mcol:21[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2e58[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da3af8[0m <[0;33mline:68:7[0m, [0;33mcol:51[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da38f0[0m <[0;33mcol:7[0m, [0;33mcol:50[0m> [0;33mcol:18[0m referenced[0;1;36m __maxlen[0m [0;32m'const auto'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3ac0[0m <[0;33mcol:29[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da3a00[0m <[0;33mcol:48[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6165698[0m[0;33m 0x6186fe8[0m[0;33m 0x646a1c8[0m[0;33m 0x65c8478[0m[0;33m 0x65c9488[0m[0;33m 0x646ba58[0m[0;33m 0x646c498[0m[0;33m 0x646d328[0m[0;33m 0x646dd18[0m[0;33m 0x646e7a8[0m[0;33m 0x646f7e8[0m[0;33m 0x6470078[0m[0;33m 0x6470958[0m[0;33m 0x64711b8[0m[0;33m 0x68f9b08[0m[0;33m 0x68fd988[0m
[0;34m    |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6da39c0[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da3978[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .max_length
[0;34m    |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3958[0m <[0;33mcol:29[0m> [0;32m'const _Codecvt'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da3018[0m[0;1;36m '__cvt'[0m [0;32m'const _Codecvt &'[0m
[0;34m    |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da39e0[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da3bd0[0m <[0;33mline:70:7[0m, [0;33mcol:36[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da3b68[0m <[0;33mcol:7[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __result[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m    |-[0m[0;1;35mDoStmt[0m[0;33m 0x6da51d0[0m <[0;33mline:71:7[0m, [0;33mline:81:51[0m>
[0;34m    | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da4890[0m <[0;33mline:72:2[0m, [0;33mline:79:2[0m>
[0;34m    | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6da3f00[0m <[0;33mline:73:4[0m, [0;33mcol:66[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da3c08[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .resize
[0;34m    | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3be8[0m <[0;33mcol:4[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3ec8[0m <[0;33mcol:20[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da3e08[0m <[0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6165698[0m[0;33m 0x6186fe8[0m[0;33m 0x646a1c8[0m[0;33m 0x65c8478[0m[0;33m 0x65c9488[0m[0;33m 0x646ba58[0m[0;33m 0x646c498[0m[0;33m 0x646d328[0m[0;33m 0x646dd18[0m[0;33m 0x646e7a8[0m[0;33m 0x646f7e8[0m[0;33m 0x6470078[0m[0;33m 0x6470958[0m[0;33m 0x64711b8[0m[0;33m 0x68f9b08[0m[0;33m 0x68fd988[0m
[0;34m    | | |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6da3cb8[0m <[0;33mcol:20[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da3c70[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m    | | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3c50[0m <[0;33mcol:20[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da3de8[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '*'
[0;34m    | | |     |-[0m[0;1;35mParenExpr[0m[0;33m 0x6da3da8[0m <[0;33mcol:38[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3d70[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da3d18[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6164ee8[0m[0;33m 0x6186828[0m[0;33m 0x68f5378[0m
[0;34m    | | |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3cd8[0m <[0;33mcol:39[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2ed0[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | | |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3cf8[0m <[0;33mcol:48[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3840[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3dc8[0m <[0;33mcol:58[0m> [0;32m'const auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da38f0[0m[0;1;36m '__maxlen'[0m [0;32m'const auto'[0m
[0;34m    | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da41c8[0m <[0;33mline:74:4[0m, [0;33mcol:51[0m>
[0;34m    | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da3f38[0m <[0;33mcol:4[0m, [0;33mcol:41[0m> [0;33mcol:9[0m referenced[0;1;36m __outnext[0m [0;32m'auto'[0m cinit
[0;34m    | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da4190[0m <[0;33mcol:21[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da40d0[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6165698[0m[0;33m 0x6186fe8[0m[0;33m 0x646a1c8[0m[0;33m 0x65c8478[0m[0;33m 0x65c9488[0m[0;33m 0x646ba58[0m[0;33m 0x646c498[0m[0;33m 0x646d328[0m[0;33m 0x646dd18[0m[0;33m 0x646e7a8[0m[0;33m 0x646f7e8[0m[0;33m 0x6470078[0m[0;33m 0x6470958[0m[0;33m 0x64711b8[0m[0;33m 0x68f9b08[0m[0;33m 0x68fd988[0m
[0;34m    | | |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da4080[0m <[0;33mcol:21[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da4028[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x6272878[0m[0;33m 0x6274f88[0m[0;33m 0x6283178[0m
[0;34m    | | |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6da4008[0m <[0;33mcol:22[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da3fc0[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .front
[0;34m    | | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3fa0[0m <[0;33mcol:22[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da40b0[0m <[0;33mcol:41[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3778[0m[0;1;36m '__outchars'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da4480[0m <[0;33mline:75:4[0m, [0;33mcol:47[0m>
[0;34m    | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da41f0[0m <[0;33mcol:4[0m, [0;33mcol:46[0m> [0;33mcol:15[0m referenced[0;1;36m __outlast[0m [0;32m'const auto'[0m cinit
[0;34m    | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da4448[0m <[0;33mcol:27[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da4388[0m <[0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6165698[0m[0;33m 0x6186fe8[0m[0;33m 0x646a1c8[0m[0;33m 0x65c8478[0m[0;33m 0x65c9488[0m[0;33m 0x646ba58[0m[0;33m 0x646c498[0m[0;33m 0x646d328[0m[0;33m 0x646dd18[0m[0;33m 0x646e7a8[0m[0;33m 0x646f7e8[0m[0;33m 0x6470078[0m[0;33m 0x6470958[0m[0;33m 0x64711b8[0m[0;33m 0x68f9b08[0m[0;33m 0x68fd988[0m
[0;34m    | | |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da4338[0m <[0;33mcol:27[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da42e0[0m <[0;33mcol:27[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x6272878[0m[0;33m 0x6274f88[0m[0;33m 0x6283178[0m
[0;34m    | | |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6da42c0[0m <[0;33mcol:28[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da4278[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .back
[0;34m    | | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4258[0m <[0;33mcol:28[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da4368[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da4670[0m <[0;33mline:76:4[0m, [0;33mline:77:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4498[0m <[0;33mline:76:4[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3b68[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m    | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6da4618[0m <[0;33mcol:15[0m, [0;33mline:77:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   |-[0m[0;1;35mParenExpr[0m[0;33m 0x6da4518[0m <[0;33mline:76:15[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da44f8[0m <[0;33mcol:16[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '.*'
[0;34m    | | |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da44b8[0m <[0;33mcol:16[0m> [0;32m'const _Codecvt'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da3018[0m[0;1;36m '__cvt'[0m [0;32m'const _Codecvt &'[0m
[0;34m    | | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da44d8[0m <[0;33mcol:23[0m> [0;32m'_Fn'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da31d0[0m[0;1;36m '__fn'[0m [0;32m'_Fn'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4538[0m <[0;33mcol:29[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da30b8[0m[0;1;36m '__state'[0m [0;32m'_State &'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4558[0m <[0;33mcol:38[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3840[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4578[0m <[0;33mcol:46[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2ed0[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4598[0m <[0;33mcol:54[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3840[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da45b8[0m <[0;33mline:77:6[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3f38[0m[0;1;36m '__outnext'[0m [0;32m'auto'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da45d8[0m <[0;33mcol:17[0m> [0;32m'const auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da41f0[0m[0;1;36m '__outlast'[0m [0;32m'const auto'[0m
[0;34m    | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da45f8[0m <[0;33mcol:28[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3f38[0m[0;1;36m '__outnext'[0m [0;32m'auto'[0m
[0;34m    | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da4870[0m <[0;33mline:78:4[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4690[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3778[0m[0;1;36m '__outchars'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da4838[0m <[0;33mcol:17[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da47e0[0m <[0;33mcol:27[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6164ee8[0m[0;33m 0x6186828[0m[0;33m 0x68f5378[0m
[0;34m    | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da46b0[0m <[0;33mcol:17[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3f38[0m[0;1;36m '__outnext'[0m [0;32m'auto'[0m
[0;34m    | |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da47b0[0m <[0;33mcol:29[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da4758[0m <[0;33mcol:29[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x6272878[0m[0;33m 0x6274f88[0m[0;33m 0x6283178[0m
[0;34m    | |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6da4738[0m <[0;33mcol:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |         `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da46f0[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .front
[0;34m    | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da46d0[0m <[0;33mcol:30[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da51b0[0m <[0;33mline:80:14[0m, [0;33mline:81:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da4f20[0m <[0;33mline:80:14[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da4d88[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da4d58[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da4d40[0m <[0;33mcol:14[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da48c8[0m <[0;33mcol:14[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3b68[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m    |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da4d70[0m <[0;33mcol:26[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4920[0m <[0;33mcol:26[0m, [0;33mcol:40[0m> [0;32m'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ca8970[0m[0;1;36m 'partial'[0m [0;32m'std::codecvt_base::result'[0m
[0;34m    |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da4ee8[0m <[0;33mcol:51[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da4de8[0m <[0;33mcol:58[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x613caa8[0m[0;33m 0x615edc8[0m[0;33m 0x6161388[0m[0;33m 0x61817c8[0m[0;33m 0x6181da8[0m[0;33m 0x62172e8[0m[0;33m 0x6299260[0m[0;33m 0x6299780[0m[0;33m 0x64742a0[0m[0;33m 0x64749a8[0m[0;33m 0x64750a8[0m[0;33m 0x664bba0[0m[0;33m 0x664c9c0[0m[0;33m 0x664d7e0[0m[0;33m 0x664f820[0m[0;33m 0x66b8b78[0m[0;33m 0x68ea4c8[0m[0;33m 0x6abea98[0m[0;33m 0x6b8ccf8[0m[0;33m 0x6be13a0[0m[0;33m 0x6be1960[0m[0;33m 0x6d93be8[0m[0;33m 0x6d942f0[0m[0;33m 0x6d94800[0m
[0;34m    |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4da8[0m <[0;33mcol:51[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3840[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4dc8[0m <[0;33mcol:61[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2ed0[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da5178[0m <[0;33mline:81:10[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da50b8[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x6139ac8[0m[0;33m 0x615e768[0m[0;33m 0x6160ca8[0m[0;33m 0x6182408[0m[0;33m 0x6182a78[0m[0;33m 0x6475910[0m[0;33m 0x6476038[0m[0;33m 0x6476778[0m[0;33m 0x6640ea0[0m[0;33m 0x6648010[0m[0;33m 0x68e9c18[0m[0;33m 0x6abf268[0m[0;33m 0x6b8c038[0m[0;33m 0x6d94f28[0m[0;33m 0x6d95cc8[0m[0;33m 0x6d964e8[0m
[0;34m    |     |-[0m[0;1;35mParenExpr[0m[0;33m 0x6da5078[0m <[0;33mcol:10[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da5040[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da4fe8[0m <[0;33mcol:27[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6164ee8[0m[0;33m 0x6186828[0m[0;33m 0x68f5378[0m
[0;34m    |     |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6da4fa8[0m <[0;33mcol:11[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da4f60[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m    |     |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4f40[0m <[0;33mcol:11[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4fc8[0m <[0;33mcol:29[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3778[0m[0;1;36m '__outchars'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5098[0m <[0;33mcol:43[0m> [0;32m'const auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da38f0[0m[0;1;36m '__maxlen'[0m [0;32m'const auto'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x6da5820[0m <[0;33mline:83:7[0m, [0;33mline:87:2[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da56b0[0m <[0;33mline:83:11[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da5680[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da5668[0m <[0;33mcol:11[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da51f0[0m <[0;33mcol:11[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3b68[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da5698[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5248[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ca89c0[0m[0;1;36m 'error'[0m [0;32m'std::codecvt_base::result'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da5800[0m <[0;33mline:84:2[0m, [0;33mline:87:2[0m>
[0;34m    |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da57c0[0m <[0;33mline:85:4[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da56d0[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da3158[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m    |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da5788[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da5730[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6164ee8[0m[0;33m 0x6186828[0m[0;33m 0x68f5378[0m
[0;34m    |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da56f0[0m <[0;33mcol:14[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3840[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5710[0m <[0;33mcol:23[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2e58[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6da57f0[0m <[0;33mline:86:4[0m, [0;33mcol:11[0m>
[0;34m    |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6da57e0[0m <[0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x6da6100[0m <[0;33mline:89:7[0m, [0;33mline:98:2[0m> has_else
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da5cf8[0m <[0;33mline:89:11[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da5cc8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da5cb0[0m <[0;33mcol:11[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5838[0m <[0;33mcol:11[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3b68[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da5ce0[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5890[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ca8a10[0m[0;1;36m 'noconv'[0m [0;32m'std::codecvt_base::result'[0m
[0;34m    | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da5f00[0m <[0;33mline:90:2[0m, [0;33mline:93:2[0m>
[0;34m    | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6da5dc0[0m <[0;33mline:91:4[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da5d38[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .assign
[0;34m    | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5d18[0m <[0;33mcol:4[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5d80[0m <[0;33mcol:20[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2e58[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5da0[0m <[0;33mcol:29[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2ed0[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da5ee0[0m <[0;33mline:92:4[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5df0[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da3158[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m    | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da5ea8[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da5e50[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6164ee8[0m[0;33m 0x6186828[0m[0;33m 0x68f5378[0m
[0;34m    | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5e10[0m <[0;33mcol:14[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2ed0[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5e30[0m <[0;33mcol:23[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2e58[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da60e0[0m <[0;33mline:95:2[0m, [0;33mline:98:2[0m>
[0;34m    |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6da5fa8[0m <[0;33mline:96:4[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6da5f40[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .resize
[0;34m    |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5f20[0m <[0;33mcol:4[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2f78[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5f88[0m <[0;33mcol:20[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3778[0m[0;1;36m '__outchars'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da60c0[0m <[0;33mline:97:4[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5fd0[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da3158[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m    |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da6088[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da6030[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6164ee8[0m[0;33m 0x6186828[0m[0;33m 0x68f5378[0m
[0;34m    |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da5ff0[0m <[0;33mcol:14[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da3840[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da6010[0m <[0;33mcol:23[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da2e58[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6da6138[0m <[0;33mline:100:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6da6128[0m <[0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true

Dumping std::__str_codecvt_in:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6da6c08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:104:3[0m, [0;33mline:119:5[0m> [0;33mline:106:5[0m[0;1;36m __str_codecvt_in[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da61a0[0m <[0;33mline:104:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _CharT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da6218[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Traits[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da6288[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced typename depth 0 index 2[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da62f8[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6da6b68[0m <[0;33mline:105:5[0m, [0;33mline:119:5[0m> [0;33mline:106:5[0m[0;1;36m __str_codecvt_in[0m [0;32m'bool (const char *, const char *, basic_string<_CharT, _Traits, _Alloc> &, const codecvt<_CharT, char, _State> &, _State &, std::size_t &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da63b0[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da6430[0m <[0;33mcol:43[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da6630[0m <[0;33mline:107:8[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __outstr[0m [0;32m'basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da68d0[0m <[0;33mline:108:8[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __cvt[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da6978[0m <[0;33mline:109:8[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __state[0m [0;32m'_State &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da69f0[0m <[0;33mcol:25[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __count[0m [0;32m'std::size_t &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da7978[0m <[0;33mline:110:5[0m, [0;33mline:119:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da6e50[0m <[0;33mline:111:7[0m, [0;33mcol:53[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6da6df0[0m <[0;33mcol:7[0m, [0;33mcol:52[0m> [0;33mcol:13[0m referenced[0;1;36m _Codecvt[0m [0;32m'codecvt<_CharT, char, _State>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6da6cc0[0m [0;32m'codecvt<_CharT, char, _State>'[0m dependent codecvt
[0;34m    |     |-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |     |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m    |     `-[0mTemplateArgument type [0;32m'_State'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da7510[0m <[0;33mline:112:7[0m, [0;33mline:115:37[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6da74b0[0m <[0;33mline:112:7[0m, [0;33mline:115:32[0m> [0;33mline:112:13[0m referenced[0;1;36m _ConvFn[0m [0;32m'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m
[0;34m    |   `-[0m[0;32mMemberPointerType[0m[0;33m 0x6da73f0[0m [0;32m'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m dependent
[0;34m    |     |-[0m[0;32mTypedefType[0m[0;33m 0x6da6eb0[0m [0;32m'_Codecvt'[0m sugar dependent
[0;34m    |     | |-[0m[0;1;32mTypeAlias[0m[0;33m 0x6da6df0[0m[0;1;36m '_Codecvt'[0m
[0;34m    |     | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6da6cc0[0m [0;32m'codecvt<_CharT, char, _State>'[0m dependent codecvt
[0;34m    |     |   |-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |     |   |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m    |     |   `-[0mTemplateArgument type [0;32m'_State'[0m
[0;34m    |     `-[0m[0;32mParenType[0m[0;33m 0x6da7390[0m [0;32m'codecvt_base::result (_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m sugar dependent
[0;34m    |       `-[0m[0;32mFunctionProtoType[0m[0;33m 0x6da7330[0m [0;32m'codecvt_base::result (_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m dependent const cdecl
[0;34m    |         |-[0m[0;32mElaboratedType[0m[0;33m 0x6ca90f0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m    |         | `-[0m[0;32mEnumType[0m[0;33m 0x6ca8900[0m [0;32m'std::codecvt_base::result'[0m
[0;34m    |         |   `-[0m[0;1;32mEnum[0m[0;33m 0x6ca8858[0m[0;1;36m 'result'[0m
[0;34m    |         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x6da6940[0m [0;32m'_State &'[0m dependent
[0;34m    |         | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6da6340[0m [0;32m'_State'[0m dependent depth 0 index 3
[0;34m    |         |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6da62f8[0m[0;1;36m '_State'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x5d26400[0m [0;32m'const char *'[0m
[0;34m    |         | `-[0mQualType[0;33m 0x5d25961[0m [0;32m'const char'[0m const
[0;34m    |         |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x5d26400[0m [0;32m'const char *'[0m
[0;34m    |         | `-[0mQualType[0;33m 0x5d25961[0m [0;32m'const char'[0m const
[0;34m    |         |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m    |         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x6cbf4c0[0m [0;32m'const char *&'[0m
[0;34m    |         | `-[0m[0;32mPointerType[0m[0;33m 0x5d26400[0m [0;32m'const char *'[0m
[0;34m    |         |   `-[0mQualType[0;33m 0x5d25961[0m [0;32m'const char'[0m const
[0;34m    |         |     `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x6da7100[0m [0;32m'_CharT *'[0m dependent
[0;34m    |         | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6da61f0[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6da61a0[0m[0;1;36m '_CharT'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x6da7100[0m [0;32m'_CharT *'[0m dependent
[0;34m    |         | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6da61f0[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6da61a0[0m[0;1;36m '_CharT'[0m
[0;34m    |         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6da7220[0m [0;32m'_CharT *&'[0m dependent
[0;34m    |           `-[0m[0;32mPointerType[0m[0;33m 0x6da7100[0m [0;32m'_CharT *'[0m dependent
[0;34m    |             `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6da61f0[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |               `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6da61a0[0m[0;1;36m '_CharT'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da77d0[0m <[0;33mline:116:7[0m, [0;33mcol:56[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da7560[0m <[0;33mcol:7[0m, [0;33mcol:54[0m> [0;33mcol:15[0m referenced[0;1;36m __fn[0m [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da77a0[0m <[0;33mcol:22[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da7748[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x6272878[0m[0;33m 0x6274f88[0m[0;33m 0x6283178[0m
[0;34m    |     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x6da7710[0m <[0;33mcol:23[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6da7968[0m <[0;33mline:117:7[0m, [0;33mline:118:23[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6da7910[0m <[0;33mline:117:14[0m, [0;33mline:118:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da77e8[0m <[0;33mline:117:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__do_str_codecvt'[0;33m 0x6da33f8[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da7830[0m <[0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da63b0[0m[0;1;36m '__first'[0m [0;32m'const char *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da7850[0m <[0;33mcol:40[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da6430[0m[0;1;36m '__last'[0m [0;32m'const char *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da7870[0m <[0;33mcol:48[0m> [0;32m'basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da6630[0m[0;1;36m '__outstr'[0m [0;32m'basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da7890[0m <[0;33mcol:58[0m> [0;32m'const codecvt<_CharT, char, _State>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da68d0[0m[0;1;36m '__cvt'[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da78b0[0m <[0;33mcol:65[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da6978[0m[0;1;36m '__state'[0m [0;32m'_State &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da78d0[0m <[0;33mline:118:10[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da69f0[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da78f0[0m <[0;33mcol:19[0m> [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da7560[0m[0;1;36m '__fn'[0m [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m

Dumping std::__str_codecvt_in:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6da8218[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:121:3[0m, [0;33mline:130:5[0m> [0;33mline:123:5[0m[0;1;36m __str_codecvt_in[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da79a8[0m <[0;33mline:121:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _CharT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da7a18[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Traits[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da7a88[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced typename depth 0 index 2[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da7af8[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6da8178[0m <[0;33mline:122:5[0m, [0;33mline:130:5[0m> [0;33mline:123:5[0m[0;1;36m __str_codecvt_in[0m [0;32m'bool (const char *, const char *, basic_string<_CharT, _Traits, _Alloc> &, const codecvt<_CharT, char, _State> &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da7bb0[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da7c30[0m <[0;33mcol:43[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da7e30[0m <[0;33mline:124:8[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __outstr[0m [0;32m'basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da8030[0m <[0;33mline:125:8[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __cvt[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da8560[0m <[0;33mline:126:5[0m, [0;33mline:130:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da8348[0m <[0;33mline:127:7[0m, [0;33mcol:26[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da82a0[0m <[0;33mcol:7[0m, [0;33mcol:25[0m> [0;33mcol:14[0m referenced[0;1;36m __state[0m [0;32m'_State'[0m cinit
[0;34m    |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6da8308[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da83d8[0m <[0;33mline:128:7[0m, [0;33mcol:17[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da8370[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6da8550[0m <[0;33mline:129:7[0m, [0;33mcol:77[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6da8500[0m <[0;33mcol:14[0m, [0;33mcol:77[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da83f0[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__str_codecvt_in'[0;33m 0x6da8218[0m[0;33m 0x6da6c08[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da8440[0m <[0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da7bb0[0m[0;1;36m '__first'[0m [0;32m'const char *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da8460[0m <[0;33mcol:40[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da7c30[0m[0;1;36m '__last'[0m [0;32m'const char *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da8480[0m <[0;33mcol:48[0m> [0;32m'basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da7e30[0m[0;1;36m '__outstr'[0m [0;32m'basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da84a0[0m <[0;33mcol:58[0m> [0;32m'const codecvt<_CharT, char, _State>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da8030[0m[0;1;36m '__cvt'[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da84c0[0m <[0;33mcol:65[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da82a0[0m[0;1;36m '__state'[0m [0;32m'_State'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da84e0[0m <[0;33mcol:74[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da8370[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::__str_codecvt_out:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6da9008[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:133:3[0m, [0;33mline:148:5[0m> [0;33mline:135:5[0m[0;1;36m __str_codecvt_out[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da8588[0m <[0;33mline:133:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _CharT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da85f8[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Traits[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da8668[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced typename depth 0 index 2[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da86d8[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6da8f68[0m <[0;33mline:134:5[0m, [0;33mline:148:5[0m> [0;33mline:135:5[0m[0;1;36m __str_codecvt_out[0m [0;32m'bool (const _CharT *, const _CharT *, basic_string<char, _Traits, _Alloc> &, const codecvt<_CharT, char, _State> &, _State &, std::size_t &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da87b8[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __first[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da8830[0m <[0;33mcol:46[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __last[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da8ad0[0m <[0;33mline:136:9[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __outstr[0m [0;32m'basic_string<char, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da8cd0[0m <[0;33mline:137:9[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __cvt[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da8d78[0m <[0;33mline:138:9[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __state[0m [0;32m'_State &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da8df0[0m <[0;33mcol:26[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __count[0m [0;32m'std::size_t &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da9d48[0m <[0;33mline:139:5[0m, [0;33mline:148:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da9250[0m <[0;33mline:140:7[0m, [0;33mcol:53[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6da91f0[0m <[0;33mcol:7[0m, [0;33mcol:52[0m> [0;33mcol:13[0m referenced[0;1;36m _Codecvt[0m [0;32m'codecvt<_CharT, char, _State>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6da90c0[0m [0;32m'codecvt<_CharT, char, _State>'[0m dependent codecvt
[0;34m    |     |-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |     |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m    |     `-[0mTemplateArgument type [0;32m'_State'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da98e0[0m <[0;33mline:141:7[0m, [0;33mline:144:31[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6da9880[0m <[0;33mline:141:7[0m, [0;33mline:144:26[0m> [0;33mline:141:13[0m referenced[0;1;36m _ConvFn[0m [0;32m'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m
[0;34m    |   `-[0m[0;32mMemberPointerType[0m[0;33m 0x6da97c0[0m [0;32m'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m dependent
[0;34m    |     |-[0m[0;32mTypedefType[0m[0;33m 0x6da92b0[0m [0;32m'_Codecvt'[0m sugar dependent
[0;34m    |     | |-[0m[0;1;32mTypeAlias[0m[0;33m 0x6da91f0[0m[0;1;36m '_Codecvt'[0m
[0;34m    |     | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6da90c0[0m [0;32m'codecvt<_CharT, char, _State>'[0m dependent codecvt
[0;34m    |     |   |-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |     |   |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m    |     |   `-[0mTemplateArgument type [0;32m'_State'[0m
[0;34m    |     `-[0m[0;32mParenType[0m[0;33m 0x6da9760[0m [0;32m'codecvt_base::result (_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m sugar dependent
[0;34m    |       `-[0m[0;32mFunctionProtoType[0m[0;33m 0x6da9700[0m [0;32m'codecvt_base::result (_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m dependent const cdecl
[0;34m    |         |-[0m[0;32mElaboratedType[0m[0;33m 0x6ca90f0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m    |         | `-[0m[0;32mEnumType[0m[0;33m 0x6ca8900[0m [0;32m'std::codecvt_base::result'[0m
[0;34m    |         |   `-[0m[0;1;32mEnum[0m[0;33m 0x6ca8858[0m[0;1;36m 'result'[0m
[0;34m    |         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x6da8d40[0m [0;32m'_State &'[0m dependent
[0;34m    |         | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6da8720[0m [0;32m'_State'[0m dependent depth 0 index 3
[0;34m    |         |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6da86d8[0m[0;1;36m '_State'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x6da8780[0m [0;32m'const _CharT *'[0m dependent
[0;34m    |         | `-[0mQualType[0;33m 0x6da85d1[0m [0;32m'const _CharT'[0m const
[0;34m    |         |   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6da85d0[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6da8588[0m[0;1;36m '_CharT'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x6da8780[0m [0;32m'const _CharT *'[0m dependent
[0;34m    |         | `-[0mQualType[0;33m 0x6da85d1[0m [0;32m'const _CharT'[0m const
[0;34m    |         |   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6da85d0[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6da8588[0m[0;1;36m '_CharT'[0m
[0;34m    |         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x6da9470[0m [0;32m'const _CharT *&'[0m dependent
[0;34m    |         | `-[0m[0;32mPointerType[0m[0;33m 0x6da8780[0m [0;32m'const _CharT *'[0m dependent
[0;34m    |         |   `-[0mQualType[0;33m 0x6da85d1[0m [0;32m'const _CharT'[0m const
[0;34m    |         |     `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6da85d0[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |       `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6da8588[0m[0;1;36m '_CharT'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x5d265d0[0m [0;32m'char *'[0m
[0;34m    |         | `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x5d265d0[0m [0;32m'char *'[0m
[0;34m    |         | `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m    |         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6cbf6e0[0m [0;32m'char *&'[0m
[0;34m    |           `-[0m[0;32mPointerType[0m[0;33m 0x5d265d0[0m [0;32m'char *'[0m
[0;34m    |             `-[0m[0;32mBuiltinType[0m[0;33m 0x5d25960[0m [0;32m'char'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6da9ba0[0m <[0;33mline:145:7[0m, [0;33mcol:57[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6da9930[0m <[0;33mcol:7[0m, [0;33mcol:54[0m> [0;33mcol:15[0m referenced[0;1;36m __fn[0m [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da9b70[0m <[0;33mcol:22[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da9b18[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x6272878[0m[0;33m 0x6274f88[0m[0;33m 0x6283178[0m
[0;34m    |     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x6da9ae0[0m <[0;33mcol:23[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6da9d38[0m <[0;33mline:146:7[0m, [0;33mline:147:23[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6da9ce0[0m <[0;33mline:146:14[0m, [0;33mline:147:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6da9bb8[0m <[0;33mline:146:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__do_str_codecvt'[0;33m 0x6da33f8[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da9c00[0m <[0;33mcol:31[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da87b8[0m[0;1;36m '__first'[0m [0;32m'const _CharT *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da9c20[0m <[0;33mcol:40[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da8830[0m[0;1;36m '__last'[0m [0;32m'const _CharT *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da9c40[0m <[0;33mcol:48[0m> [0;32m'basic_string<char, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da8ad0[0m[0;1;36m '__outstr'[0m [0;32m'basic_string<char, _Traits, _Alloc> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da9c60[0m <[0;33mcol:58[0m> [0;32m'const codecvt<_CharT, char, _State>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da8cd0[0m[0;1;36m '__cvt'[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da9c80[0m <[0;33mcol:65[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da8d78[0m[0;1;36m '__state'[0m [0;32m'_State &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da9ca0[0m <[0;33mline:147:10[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da8df0[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da9cc0[0m <[0;33mcol:19[0m> [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da9930[0m[0;1;36m '__fn'[0m [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m

Dumping std::__str_codecvt_out:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6daa608[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:150:3[0m, [0;33mline:159:5[0m> [0;33mline:152:5[0m[0;1;36m __str_codecvt_out[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da9d78[0m <[0;33mline:150:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _CharT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da9de8[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Traits[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da9e58[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced typename depth 0 index 2[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6da9ec8[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6daa568[0m <[0;33mline:151:5[0m, [0;33mline:159:5[0m> [0;33mline:152:5[0m[0;1;36m __str_codecvt_out[0m [0;32m'bool (const _CharT *, const _CharT *, basic_string<char, _Traits, _Alloc> &, const codecvt<_CharT, char, _State> &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6da9fa8[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __first[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6daa020[0m <[0;33mcol:46[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __last[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6daa220[0m <[0;33mline:153:9[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __outstr[0m [0;32m'basic_string<char, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6daa420[0m <[0;33mline:154:9[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __cvt[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6daa950[0m <[0;33mline:155:5[0m, [0;33mline:159:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6daa738[0m <[0;33mline:156:7[0m, [0;33mcol:26[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6daa690[0m <[0;33mcol:7[0m, [0;33mcol:25[0m> [0;33mcol:14[0m referenced[0;1;36m __state[0m [0;32m'_State'[0m cinit
[0;34m    |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6daa6f8[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6daa7c8[0m <[0;33mline:157:7[0m, [0;33mcol:17[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6daa760[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6daa940[0m <[0;33mline:158:7[0m, [0;33mcol:78[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6daa8f0[0m <[0;33mcol:14[0m, [0;33mcol:78[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6daa7e0[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__str_codecvt_out'[0;33m 0x6daa608[0m[0;33m 0x6da9008[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6daa830[0m <[0;33mcol:32[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6da9fa8[0m[0;1;36m '__first'[0m [0;32m'const _CharT *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6daa850[0m <[0;33mcol:41[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6daa020[0m[0;1;36m '__last'[0m [0;32m'const _CharT *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6daa870[0m <[0;33mcol:49[0m> [0;32m'basic_string<char, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6daa220[0m[0;1;36m '__outstr'[0m [0;32m'basic_string<char, _Traits, _Alloc> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6daa890[0m <[0;33mcol:59[0m> [0;32m'const codecvt<_CharT, char, _State>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6daa420[0m[0;1;36m '__cvt'[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6daa8b0[0m <[0;33mcol:66[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6daa690[0m[0;1;36m '__state'[0m [0;32m'_State'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6daa8d0[0m <[0;33mcol:75[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6daa760[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping code:
[0;1;32mFunctionDecl[0m[0;33m 0x6dd09b8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:23:1[0m, [0;33mcol:34[0m> [0;33mcol:13[0m[0;1;36m code[0m [0;32m'std::string (std::string)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6dd0918[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m text[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m

Dumping decode:
[0;1;32mFunctionDecl[0m[0;33m 0x6dd0b78[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:24:1[0m, [0;33mcol:36[0m> [0;33mcol:13[0m[0;1;36m decode[0m [0;32m'std::string (std::string)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6dd0ad8[0m <[0;33mcol:20[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m text[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m

Dumping code:
[0;1;32mFunctionDecl[0m[0;33m 0x6dd76f8[0m prev 0x6dd09b8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:180:1[0m, [0;33mline:215:1[0m> [0;33mline:180:13[0m[0;1;36m code[0m [0;32m'std::string (std::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6dd7658[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m used[0;1;36m text[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6dd9ae8[0m <[0;33mcol:36[0m, [0;33mline:215:1[0m>
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6dd9a38[0m <[0;33mline:182:5[0m, [0;33mline:213:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6dd7840[0m <[0;33mline:182:9[0m, [0;33mcol:23[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6dd77b8[0m <[0;33mcol:9[0m, [0;33mcol:22[0m> [0;33mcol:20[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6dd7820[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd7970[0m <[0;33mcol:25[0m, [0;33mcol:47[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7958[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7858[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6dd7930[0m <[0;33mcol:27[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7918[0m <[0;33mcol:35[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  | |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd78c8[0m <[0;33mcol:35[0m, [0;33mcol:47[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd7898[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x64cb3e8[0m
[0;34m  | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd78e8[0m <[0;33mcol:35[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7878[0m <[0;33mcol:35[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6dd79b0[0m <[0;33mcol:50[0m, [0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7990[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6dd9a00[0m <[0;33mcol:55[0m, [0;33mline:213:5[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6dd8160[0m <[0;33mline:183:9[0m, [0;33mline:186:9[0m>
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6dd8128[0m <[0;33mline:183:12[0m, [0;33mcol:90[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6dd8108[0m <[0;33mcol:13[0m, [0;33mcol:90[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd80e8[0m <[0;33mcol:14[0m, [0;33mcol:89[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |   | |     |-[0m[0;1;35mParenExpr[0m[0;33m 0x6dd7d38[0m <[0;33mcol:14[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd7d18[0m <[0;33mcol:15[0m, [0;33mcol:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | |     |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd7b50[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7b20[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7b08[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     |   | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd7a98[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |     |   | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd7a68[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |     |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd79c8[0m <[0;33mcol:15[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |     |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7ad8[0m <[0;33mcol:23[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |   | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7ac0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     |   | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7a48[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7b38[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |   |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd7af0[0m <[0;33mcol:27[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   | |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd7cf8[0m <[0;33mcol:34[0m, [0;33mcol:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7cc8[0m <[0;33mcol:34[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7cb0[0m <[0;33mcol:34[0m, [0;33mcol:43[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd7c40[0m <[0;33mcol:34[0m, [0;33mcol:43[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |     |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd7c10[0m <[0;33mcol:34[0m, [0;33mcol:39[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |     |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7b70[0m <[0;33mcol:34[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |     |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7c80[0m <[0;33mcol:42[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7c68[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7bf0[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7ce0[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |       `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd7c98[0m <[0;33mcol:46[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   | |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x6dd80c8[0m <[0;33mcol:54[0m, [0;33mcol:89[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd80a8[0m <[0;33mcol:55[0m, [0;33mcol:86[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd7ee0[0m <[0;33mcol:55[0m, [0;33mcol:67[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7eb0[0m <[0;33mcol:55[0m, [0;33mcol:64[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |         | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7e98[0m <[0;33mcol:55[0m, [0;33mcol:64[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |         | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd7e28[0m <[0;33mcol:55[0m, [0;33mcol:64[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |         | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd7df8[0m <[0;33mcol:55[0m, [0;33mcol:60[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |         | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7d58[0m <[0;33mcol:55[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |         | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7e68[0m <[0;33mcol:63[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |         | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7e50[0m <[0;33mcol:63[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |         | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7dd8[0m <[0;33mcol:63[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7ec8[0m <[0;33mcol:67[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |         |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd7e80[0m <[0;33mcol:67[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   | |         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8088[0m <[0;33mcol:74[0m, [0;33mcol:86[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8058[0m <[0;33mcol:74[0m, [0;33mcol:83[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8040[0m <[0;33mcol:74[0m, [0;33mcol:83[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |           |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd7fd0[0m <[0;33mcol:74[0m, [0;33mcol:83[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |           |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd7fa0[0m <[0;33mcol:74[0m, [0;33mcol:79[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |           |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7f00[0m <[0;33mcol:74[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8010[0m <[0;33mcol:82[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |           |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd7ff8[0m <[0;33mcol:82[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |           |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd7f80[0m <[0;33mcol:82[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8070[0m <[0;33mcol:86[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |             `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd8028[0m <[0;33mcol:86[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6dd8148[0m <[0;33mcol:94[0m, [0;33mline:186:9[0m>
[0;34m  |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6dd8140[0m <[0;33mline:185:13[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6dd86c0[0m <[0;33mline:188:9[0m, [0;33mline:192:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8300[0m <[0;33mline:188:12[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd82d0[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd82b8[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd8248[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd8218[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8178[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8288[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8270[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd81f8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd82e8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd82a0[0m <[0;33mcol:24[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6dd86a0[0m <[0;33mcol:29[0m, [0;33mline:192:9[0m>
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8678[0m <[0;33mline:189:13[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd83f0[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd83c0[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8320[0m <[0;33mcol:13[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8430[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8418[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd83a0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8660[0m <[0;33mcol:26[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8640[0m <[0;33mcol:26[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8628[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8610[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd8518[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd84e8[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8448[0m <[0;33mcol:26[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8558[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8540[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd84c8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x6dd85f0[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd85d0[0m <[0;33mcol:40[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd85a0[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd8570[0m <[0;33mcol:40[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd85b8[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |           `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd8588[0m <[0;33mcol:44[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6dd8698[0m <[0;33mline:190:13[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6dd8c20[0m <[0;33mline:194:9[0m, [0;33mline:199:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8860[0m <[0;33mline:194:12[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8830[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8818[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd87a8[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd8778[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd86d8[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd87e8[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd87d0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8758[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8848[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd8800[0m <[0;33mcol:25[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6dd8c00[0m <[0;33mcol:30[0m, [0;33mline:199:9[0m>
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8bd8[0m <[0;33mline:196:13[0m, [0;33mcol:45[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd8950[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd8920[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8880[0m <[0;33mcol:13[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8990[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8978[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8900[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8bc0[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8ba0[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8b88[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8b70[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd8a78[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd8a48[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd89a8[0m <[0;33mcol:26[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8ab8[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8aa0[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8a28[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x6dd8b50[0m <[0;33mcol:37[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8b30[0m <[0;33mcol:38[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8b00[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd8ad0[0m <[0;33mcol:38[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8b18[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |           `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd8ae8[0m <[0;33mcol:42[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6dd8bf8[0m <[0;33mline:197:13[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6dd9340[0m <[0;33mline:201:9[0m, [0;33mline:205:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8f88[0m <[0;33mline:201:12[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8dc0[0m <[0;33mcol:12[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8d90[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8d78[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd8d08[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd8cd8[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8c38[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8d48[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8d30[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8cb8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8da8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd8d60[0m <[0;33mcol:24[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd8f68[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8f38[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8f20[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd8eb0[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd8e80[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8de0[0m <[0;33mcol:31[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8ef0[0m <[0;33mcol:39[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8ed8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8e60[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd8f50[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd8f08[0m <[0;33mcol:42[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6dd9320[0m <[0;33mcol:47[0m, [0;33mline:205:9[0m>
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd92f8[0m <[0;33mline:202:13[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd9078[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd9048[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd8fa8[0m <[0;33mcol:13[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd90b8[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd90a0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9028[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6dd92d0[0m <[0;33mcol:26[0m, [0;33mcol:47[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd92b8[0m <[0;33mcol:32[0m, [0;33mcol:47[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |   |   |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x6dd9298[0m <[0;33mcol:32[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd9248[0m <[0;33mcol:33[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9230[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9218[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |         |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd91a0[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |         |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd9170[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   |         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd90d0[0m <[0;33mcol:33[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd91e0[0m <[0;33mcol:41[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd91c8[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9150[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6dd91f8[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6dd9318[0m <[0;33mline:203:13[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6dd99e8[0m <[0;33mline:208:9[0m, [0;33mline:211:9[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd96a8[0m <[0;33mline:208:12[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd94e0[0m <[0;33mcol:12[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd94b0[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9498[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd9428[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd93f8[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |     | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9358[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9468[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9450[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd93d8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd94c8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd9480[0m <[0;33mcol:24[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd9688[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9658[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9640[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd95d0[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd95a0[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |     |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9500[0m <[0;33mcol:31[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9610[0m <[0;33mcol:39[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd95f8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9580[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9670[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dd9628[0m <[0;33mcol:42[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6dd99c8[0m <[0;33mcol:47[0m, [0;33mline:211:9[0m>
[0;34m  |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd99a0[0m <[0;33mline:209:13[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd9798[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd9768[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |       | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd96c8[0m <[0;33mcol:13[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd97d8[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd97c0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9748[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9988[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd9968[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9950[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9938[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd98c0[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd9890[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |       |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd97f0[0m <[0;33mcol:26[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |       |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9900[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd98e8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9870[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd77b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |       |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6dd9918[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6dd99c0[0m <[0;33mline:210:13[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6dd9ad8[0m <[0;33mline:214:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6dd9aa8[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::__cxx11::basic_string<char> &&) noexcept'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9a90[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9a70[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd7658[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m

Dumping decode:
[0;1;32mFunctionDecl[0m[0;33m 0x6dd9c20[0m prev 0x6dd0b78 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:217:1[0m, [0;33mline:252:1[0m> [0;33mline:217:13[0m[0;1;36m decode[0m [0;32m'std::string (std::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6dd9b80[0m <[0;33mcol:20[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m text[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ddc010[0m <[0;33mcol:38[0m, [0;33mline:252:1[0m>
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6ddbf60[0m <[0;33mline:219:5[0m, [0;33mline:250:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6dd9d68[0m <[0;33mline:219:9[0m, [0;33mcol:23[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6dd9ce0[0m <[0;33mcol:9[0m, [0;33mcol:22[0m> [0;33mcol:20[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6dd9d48[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dd9e98[0m <[0;33mcol:25[0m, [0;33mcol:47[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9e80[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9d80[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6dd9e58[0m <[0;33mcol:27[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9e40[0m <[0;33mcol:35[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  | |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd9df0[0m <[0;33mcol:35[0m, [0;33mcol:47[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd9dc0[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x64cb3e8[0m
[0;34m  | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9e10[0m <[0;33mcol:35[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9da0[0m <[0;33mcol:35[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6dd9ed8[0m <[0;33mcol:50[0m, [0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9eb8[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ddbf28[0m <[0;33mcol:55[0m, [0;33mline:250:5[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6dda688[0m <[0;33mline:220:9[0m, [0;33mline:223:9[0m>
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6dda650[0m <[0;33mline:220:12[0m, [0;33mcol:90[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6dda630[0m <[0;33mcol:13[0m, [0;33mcol:90[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dda610[0m <[0;33mcol:14[0m, [0;33mcol:89[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |   | |     |-[0m[0;1;35mParenExpr[0m[0;33m 0x6dda260[0m <[0;33mcol:14[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dda240[0m <[0;33mcol:15[0m, [0;33mcol:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | |     |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dda078[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda048[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda030[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     |   | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dd9fc0[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |     |   | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dd9f90[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |     |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9ef0[0m <[0;33mcol:15[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |     |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda000[0m <[0;33mcol:23[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |   | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd9fe8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     |   | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd9f70[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda060[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |   |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dda018[0m <[0;33mcol:27[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   | |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dda220[0m <[0;33mcol:34[0m, [0;33mcol:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda1f0[0m <[0;33mcol:34[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda1d8[0m <[0;33mcol:34[0m, [0;33mcol:43[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dda168[0m <[0;33mcol:34[0m, [0;33mcol:43[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |     |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dda138[0m <[0;33mcol:34[0m, [0;33mcol:39[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |     |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda098[0m <[0;33mcol:34[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |     |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda1a8[0m <[0;33mcol:42[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda190[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda118[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda208[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     |       `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dda1c0[0m <[0;33mcol:46[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   | |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x6dda5f0[0m <[0;33mcol:54[0m, [0;33mcol:89[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dda5d0[0m <[0;33mcol:55[0m, [0;33mcol:86[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dda408[0m <[0;33mcol:55[0m, [0;33mcol:67[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda3d8[0m <[0;33mcol:55[0m, [0;33mcol:64[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |         | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda3c0[0m <[0;33mcol:55[0m, [0;33mcol:64[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |         | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dda350[0m <[0;33mcol:55[0m, [0;33mcol:64[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |         | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dda320[0m <[0;33mcol:55[0m, [0;33mcol:60[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |         | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda280[0m <[0;33mcol:55[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |         | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda390[0m <[0;33mcol:63[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |         | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda378[0m <[0;33mcol:63[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |         | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda300[0m <[0;33mcol:63[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda3f0[0m <[0;33mcol:67[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |         |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dda3a8[0m <[0;33mcol:67[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   | |         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dda5b0[0m <[0;33mcol:74[0m, [0;33mcol:86[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda580[0m <[0;33mcol:74[0m, [0;33mcol:83[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda568[0m <[0;33mcol:74[0m, [0;33mcol:83[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |           |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dda4f8[0m <[0;33mcol:74[0m, [0;33mcol:83[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |           |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dda4c8[0m <[0;33mcol:74[0m, [0;33mcol:79[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |           |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda428[0m <[0;33mcol:74[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda538[0m <[0;33mcol:82[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |           |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda520[0m <[0;33mcol:82[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |           |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda4a8[0m <[0;33mcol:82[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda598[0m <[0;33mcol:86[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |             `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dda550[0m <[0;33mcol:86[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6dda670[0m <[0;33mcol:94[0m, [0;33mline:223:9[0m>
[0;34m  |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6dda668[0m <[0;33mline:222:13[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ddabe8[0m <[0;33mline:225:9[0m, [0;33mline:229:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6dda828[0m <[0;33mline:225:12[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda7f8[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda7e0[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dda770[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dda740[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda6a0[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda7b0[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda798[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda720[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda810[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6dda7c8[0m <[0;33mcol:24[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ddabc8[0m <[0;33mcol:29[0m, [0;33mline:229:9[0m>
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddaba0[0m <[0;33mline:226:13[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dda918[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dda8e8[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda848[0m <[0;33mcol:13[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda958[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dda940[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda8c8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddab88[0m <[0;33mcol:26[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddab68[0m <[0;33mcol:26[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddab50[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddab38[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddaa40[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddaa10[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda970[0m <[0;33mcol:26[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddaa80[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddaa68[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dda9f0[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x6ddab18[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddaaf8[0m <[0;33mcol:40[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddaac8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddaa98[0m <[0;33mcol:40[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddaae0[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |           `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddaab0[0m <[0;33mcol:44[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6ddabc0[0m <[0;33mline:227:13[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ddb148[0m <[0;33mline:231:9[0m, [0;33mline:236:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddad88[0m <[0;33mline:231:12[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddad58[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddad40[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddacd0[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddaca0[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddac00[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddad10[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddacf8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddac80[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddad70[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddad28[0m <[0;33mcol:25[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ddb128[0m <[0;33mcol:30[0m, [0;33mline:236:9[0m>
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddb100[0m <[0;33mline:233:13[0m, [0;33mcol:45[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddae78[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddae48[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddada8[0m <[0;33mcol:13[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddaeb8[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddaea0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddae28[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb0e8[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddb0c8[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb0b0[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb098[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddafa0[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddaf70[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddaed0[0m <[0;33mcol:26[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddafe0[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddafc8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddaf50[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x6ddb078[0m <[0;33mcol:37[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddb058[0m <[0;33mcol:38[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb028[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddaff8[0m <[0;33mcol:38[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb040[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |           `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddb010[0m <[0;33mcol:42[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6ddb120[0m <[0;33mline:234:13[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ddb868[0m <[0;33mline:238:9[0m, [0;33mline:242:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddb4b0[0m <[0;33mline:238:12[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddb2e8[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb2b8[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb2a0[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddb230[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddb200[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb160[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb270[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb258[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb1e0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb2d0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddb288[0m <[0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddb490[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb460[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb448[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddb3d8[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddb3a8[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb308[0m <[0;33mcol:30[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb418[0m <[0;33mcol:38[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb400[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb388[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb478[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddb430[0m <[0;33mcol:42[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ddb848[0m <[0;33mcol:47[0m, [0;33mline:242:9[0m>
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddb820[0m <[0;33mline:239:13[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddb5a0[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddb570[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb4d0[0m <[0;33mcol:13[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb5e0[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb5c8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb550[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6ddb7f8[0m <[0;33mcol:26[0m, [0;33mcol:47[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb7e0[0m <[0;33mcol:32[0m, [0;33mcol:47[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |   |   |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x6ddb7c0[0m <[0;33mcol:32[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddb770[0m <[0;33mcol:33[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb758[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb740[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |         |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddb6c8[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |         |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddb698[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |   |   |         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb5f8[0m <[0;33mcol:33[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb708[0m <[0;33mcol:41[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb6f0[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb678[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ddb720[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6ddb840[0m <[0;33mline:240:13[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6ddbf10[0m <[0;33mline:245:9[0m, [0;33mline:248:9[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddbbd0[0m <[0;33mline:245:12[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddba08[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb9d8[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb9c0[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddb950[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddb920[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |     | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb880[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb990[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb978[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddb900[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddb9f0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddb9a8[0m <[0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddbbb0[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbb80[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbb68[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddbaf8[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddbac8[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |     |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddba28[0m <[0;33mcol:30[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbb38[0m <[0;33mcol:38[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbb20[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddbaa8[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbb98[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6ddbb50[0m <[0;33mcol:42[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ddbef0[0m <[0;33mcol:47[0m, [0;33mline:248:9[0m>
[0;34m  |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddbec8[0m <[0;33mline:246:13[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddbcc0[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddbc90[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |       | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddbbf0[0m <[0;33mcol:13[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbd00[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbce8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddbc70[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbeb0[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ddbe90[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbe78[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbe60[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ddbde8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ddbdb8[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x64cc2f0[0m
[0;34m  |       |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddbd18[0m <[0;33mcol:26[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |       |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbe28[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbe10[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddbd98[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6dd9ce0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |       |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ddbe40[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       `-[0m[0;1;35mContinueStmt[0m[0;33m 0x6ddbee8[0m <[0;33mline:247:13[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ddc000[0m <[0;33mline:251:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ddbfd0[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::__cxx11::basic_string<char> &&) noexcept'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddbfb8[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddbf98[0m <[0;33mcol:12[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6dd9b80[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m

Dumping splitText:
[0;1;32mFunctionDecl[0m[0;33m 0x649af10[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.h:25:1[0m, [0;33mcol:31[0m> [0;33mcol:5[0m[0;1;36m splitText[0m [0;32m'int (std::string)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x649ae18[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m text[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m

Dumping splitText:
[0;1;32mFunctionDecl[0m[0;33m 0x64a62c0[0m prev 0x649af10 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:262:1[0m, [0;33mline:279:1[0m> [0;33mline:262:5[0m[0;1;36m splitText[0m [0;32m'int (std::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64a6228[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m text[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64b7ef0[0m <[0;33mcol:33[0m, [0;33mline:279:1[0m>
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64b2e50[0m <[0;33mline:264:5[0m, [0;33mcol:16[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m adl
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b2e38[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b2db8[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e93ce8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64a6388[0m <[0;33mcol:5[0m, [0;33mcol:10[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5f2e190[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b2da0[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x64a63b8[0m <[0;33mcol:16[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "A feldarabolt szavak: "[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64b3038[0m <[0;33mline:265:5[0m, [0;33mcol:45[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64b2ea0[0m <[0;33mcol:5[0m, [0;33mcol:44[0m> [0;33mcol:11[0m used[0;1;36m cstr[0m [0;32m'char *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x64b2ff8[0m <[0;33mcol:18[0m, [0;33mcol:44[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x5781d80[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(std::size_t)'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64b2fc8[0m <[0;33mcol:27[0m, [0;33mcol:43[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x64b2f58[0m <[0;33mcol:27[0m, [0;33mcol:39[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |       | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x64b2f28[0m <[0;33mcol:27[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x5b94ad8[0m
[0;34m  |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b2f78[0m <[0;33mcol:27[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b2f08[0m <[0;33mcol:27[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64a6228[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b2fb0[0m <[0;33mcol:43[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64b2f90[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x64b31d0[0m <[0;33mline:266:5[0m, [0;33mcol:30[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b31b8[0m <[0;33mcol:5[0m> [0;32m'char *(*)(char *__restrict, const char *__restrict) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b3140[0m <[0;33mcol:5[0m> [0;32m'char *(char *__restrict, const char *__restrict) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f304a8[0m[0;1;36m 'strcpy'[0m [0;32m'char *(char *__restrict, const char *__restrict) throw()'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b3200[0m <[0;33mcol:12[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b3098[0m <[0;33mcol:12[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b2ea0[0m[0;1;36m 'cstr'[0m [0;32m'char *'[0m
[0;34m  | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x64b3108[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m  |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x64b30d8[0m <[0;33mcol:18[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .c_str[0;33m 0x5ba0830[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b3128[0m <[0;33mcol:18[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b30b8[0m <[0;33mcol:18[0m> [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64a6228[0m[0;1;36m 'text'[0m [0;32m'std::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64b32b8[0m <[0;33mline:267:5[0m, [0;33mcol:12[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64b3230[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64b3298[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64b3350[0m <[0;33mline:268:5[0m, [0;33mcol:15[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64b32e8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m pch[0m [0;32m'char *'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64b3528[0m <[0;33mline:269:5[0m, [0;33mcol:36[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b3368[0m <[0;33mcol:5[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b32e8[0m[0;1;36m 'pch'[0m [0;32m'char *'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x64b34c8[0m <[0;33mcol:11[0m, [0;33mcol:36[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b34b0[0m <[0;33mcol:11[0m> [0;32m'char *(*)(char *__restrict, const char *__restrict) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b3490[0m <[0;33mcol:11[0m> [0;32m'char *(char *__restrict, const char *__restrict) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f33b08[0m[0;1;36m 'strtok'[0m [0;32m'char *(char *__restrict, const char *__restrict) throw()'[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b34f8[0m <[0;33mcol:19[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b33d0[0m <[0;33mcol:19[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b2ea0[0m[0;1;36m 'cstr'[0m [0;32m'char *'[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b3510[0m <[0;33mcol:24[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x64b3468[0m <[0;33mcol:24[0m> [0;32m'const char [11]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " ,.-!?    "[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x64b7380[0m <[0;33mline:270:5[0m, [0;33mline:274:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64b35b0[0m <[0;33mline:270:12[0m, [0;33m/home/tunde/Downloads/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/lib/clang/9.0.0/include/stddef.h:84:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b3580[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:270:12[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b3548[0m <[0;33mcol:12[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b32e8[0m[0;1;36m 'pch'[0m [0;32m'char *'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b3598[0m <[0;33m/home/tunde/Downloads/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/lib/clang/9.0.0/include/stddef.h:84:18[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mNullToPointer[0m>
[0;34m  | |   `-[0m[0;1;35mGNUNullExpr[0m[0;33m 0x64b3568[0m <[0;33mcol:18[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64b7358[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:270:25[0m, [0;33mline:274:5[0m>
[0;34m  |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64b7188[0m <[0;33mline:271:9[0m, [0;33mcol:25[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m adl
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b7170[0m <[0;33mcol:23[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b7150[0m <[0;33mcol:23[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e93ce8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64b5500[0m <[0;33mcol:9[0m, [0;33mcol:20[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m adl
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b54e8[0m <[0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b54c8[0m <[0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e93ce8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b35f0[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5f2e190[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b54b0[0m <[0;33mcol:20[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b5498[0m <[0;33mcol:20[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b3620[0m <[0;33mcol:20[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b32e8[0m[0;1;36m 'pch'[0m [0;32m'char *'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b7138[0m <[0;33mcol:25[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x64b5538[0m <[0;33mcol:25[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\t"[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64b7300[0m <[0;33mline:272:9[0m, [0;33mcol:41[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b71c0[0m <[0;33mcol:9[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b32e8[0m[0;1;36m 'pch'[0m [0;32m'char *'[0m
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x64b72a0[0m <[0;33mcol:15[0m, [0;33mcol:41[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b7288[0m <[0;33mcol:15[0m> [0;32m'char *(*)(char *__restrict, const char *__restrict) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b7268[0m <[0;33mcol:15[0m> [0;32m'char *(char *__restrict, const char *__restrict) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f33b08[0m[0;1;36m 'strtok'[0m [0;32m'char *(char *__restrict, const char *__restrict) throw()'[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b72d0[0m <[0;33m/home/tunde/Downloads/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/lib/clang/9.0.0/include/stddef.h:84:18[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mNullToPointer[0m>
[0;34m  |   |   | `-[0m[0;1;35mGNUNullExpr[0m[0;33m 0x64b7228[0m <[0;33mcol:18[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b72e8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor1/feladat1/func.cpp:272:29[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x64b7240[0m <[0;33mcol:29[0m> [0;32m'const char [11]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " ,.-!?    "[0m
[0;34m  |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64b7340[0m <[0;33mline:273:9[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b7320[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b3230[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCXXDeleteExpr[0m[0;33m 0x64b73d0[0m <[0;33mline:276:5[0m, [0;33mcol:15[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x57820b0[0m[0;1;36m 'operator delete[]'[0m [0;32m'void (void *) noexcept'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b73b8[0m <[0;33mcol:15[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b7398[0m <[0;33mcol:15[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b2ea0[0m[0;1;36m 'cstr'[0m [0;32m'char *'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64b7e70[0m <[0;33mline:277:5[0m, [0;33mcol:21[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b7e58[0m <[0;33mcol:14[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b7de0[0m <[0;33mcol:14[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e8a158[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b7410[0m <[0;33mcol:5[0m, [0;33mcol:10[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5f2e190[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b7dc8[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b7d90[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e8f8a8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e6c2f8[0m[0;1;36m 'endl'[0m)
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x64b7ee0[0m <[0;33mline:278:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64b7ec8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64b7ea8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64b3230[0m[0;1;36m 'i'[0m [0;32m'int'[0m

