Dumping Felveteli::beiratkozas:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5e53318[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.h:19:5[0m, [0;33mcol:26[0m> [0;33mcol:10[0m used[0;1;36m beiratkozas[0m [0;32m'void (Diak)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e53250[0m <[0;33mcol:22[0m> [0;33mcol:26[0m [0;32m'Diak'[0m

Dumping Felveteli::beiratkozas:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5e6bfc0[0m parent 0x5e31938 prev 0x5e53318 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.cpp:18:1[0m, [0;33mline:20:1[0m> [0;33mline:18:17[0m used[0;1;36m beiratkozas[0m [0;32m'void (Diak)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e6bf30[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mcol:34[0m used[0;1;36m d[0m [0;32m'Diak'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5e6c210[0m <[0;33mcol:37[0m, [0;33mline:20:1[0m>
[0;34m  `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5e6c1a0[0m <[0;33mline:19:5[0m, [0;33mcol:23[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5e6c170[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x5e45c78[0m
[0;34m    | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5e6c0c0[0m <[0;33mcol:5[0m> [0;32m'vector<Diak>':'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m ->diakok[0;33m 0x5e52ed0[0m
[0;34m    |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5e6c0b0[0m <[0;33mcol:5[0m> [0;32m'Felveteli *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e6c1f8[0m <[0;33mcol:22[0m> [0;32m'const Diak'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e6c150[0m <[0;33mcol:22[0m> [0;32m'Diak'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e6bf30[0m[0;1;36m 'd'[0m [0;32m'Diak'[0m

Dumping Felveteli::rendezesABC:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5b76c10[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.h:20:5[0m, [0;33mcol:22[0m> [0;33mcol:10[0m[0;1;36m rendezesABC[0m [0;32m'void ()'[0m

Dumping Felveteli::rendezesABC:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5b8fb40[0m parent 0x5b55568 prev 0x5b76c10 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.cpp:21:1[0m, [0;33mline:23:1[0m> [0;33mline:21:17[0m[0;1;36m rendezesABC[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b95ca0[0m <[0;33mcol:31[0m, [0;33mline:23:1[0m>
[0;34m  `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5b95c88[0m <[0;33mline:22:5[0m, [0;33mcol:59[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5b94830[0m <[0;33mcol:5[0m, [0;33mcol:59[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b94818[0m <[0;33mcol:5[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, EntityComparator)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b94790[0m <[0;33mcol:5[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, EntityComparator)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5b94668[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, EntityComparator)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5b42688[0m[0;1;36m 'sort'[0m)
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5b95a70[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5b95928[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5b8fd48[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b8fd18[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x5b671a0[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b8fc88[0m <[0;33mcol:10[0m> [0;32m'vector<Diak>':'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m ->diakok[0;33m 0x5b76700[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5b8fc78[0m <[0;33mcol:10[0m> [0;32m'Felveteli *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5b95af0[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5b95ad8[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5b929d0[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b929a0[0m <[0;33mcol:26[0m, [0;33mcol:33[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x5b673a8[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b92910[0m <[0;33mcol:26[0m> [0;32m'vector<Diak>':'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m ->diakok[0;33m 0x5b76700[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5b92900[0m <[0;33mcol:26[0m> [0;32m'Felveteli *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5b95c58[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'EntityComparator':'EntityComparator'[0m[0;36m[0m[0;36m[0m [0;32m'void (EntityComparator &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5b95b20[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'EntityComparator'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x5b942e0[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'EntityComparator'[0m[0;36m[0m[0;36m[0m functional cast to struct EntityComparator <ConstructorConversion>
[0;34m            `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5b92d78[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'EntityComparator'[0m[0;36m[0m[0;36m[0m [0;32m'void (int)'[0m
[0;34m              `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5b92a00[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m

Dumping Felveteli::rendezesAtlag:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6041290[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.h:21:5[0m, [0;33mcol:24[0m> [0;33mcol:10[0m[0;1;36m rendezesAtlag[0m [0;32m'void ()'[0m

Dumping Felveteli::rendezesAtlag:
[0;1;32mCXXMethodDecl[0m[0;33m 0x60605a0[0m parent 0x601fca8 prev 0x6041290 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.cpp:24:1[0m, [0;33mline:26:1[0m> [0;33mline:24:17[0m[0;1;36m rendezesAtlag[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6060b78[0m <[0;33mcol:33[0m, [0;33mline:26:1[0m>
[0;34m  `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6060b60[0m <[0;33mline:25:5[0m, [0;33mcol:59[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x60609e0[0m <[0;33mcol:5[0m, [0;33mcol:59[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60609c8[0m <[0;33mcol:5[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, EntityComparator)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60609a0[0m <[0;33mcol:5[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, EntityComparator)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x605ef28[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >, EntityComparator)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x600cdc8[0m[0;1;36m 'sort'[0m)
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6060a68[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6060a50[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60607a8[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6060778[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x6031800[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60606e8[0m <[0;33mcol:10[0m> [0;32m'vector<Diak>':'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m ->diakok[0;33m 0x6040cc0[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x60606d8[0m <[0;33mcol:10[0m> [0;32m'Felveteli *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6060ae8[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6060ad0[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6060898[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6060868[0m <[0;33mcol:26[0m, [0;33mcol:33[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x6031a08[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60607d8[0m <[0;33mcol:26[0m> [0;32m'vector<Diak>':'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m ->diakok[0;33m 0x6040cc0[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x60607c8[0m <[0;33mcol:26[0m> [0;32m'Felveteli *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6060b30[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'EntityComparator':'EntityComparator'[0m[0;36m[0m[0;36m[0m [0;32m'void (EntityComparator &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6060b18[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'EntityComparator'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x6060918[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'EntityComparator'[0m[0;36m[0m[0;36m[0m functional cast to struct EntityComparator <ConstructorConversion>
[0;34m            `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x60608e8[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'EntityComparator'[0m[0;36m[0m[0;36m[0m [0;32m'void (int)'[0m
[0;34m              `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60608c8[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m

Dumping Felveteli::kiiratas:
[0;1;32mCXXMethodDecl[0m[0;33m 0x73e8158[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.h:22:5[0m, [0;33mcol:27[0m> [0;33mcol:10[0m[0;1;36m kiiratas[0m [0;32m'void (std::ostream &)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73e8090[0m <[0;33mcol:19[0m, [0;33mcol:26[0m> [0;33mcol:27[0m [0;32m'std::ostream &'[0m

Dumping Felveteli::kiiratas:
[0;1;32mCXXMethodDecl[0m[0;33m 0x7407a38[0m parent 0x73c6b38 prev 0x73e8158 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.cpp:27:1[0m, [0;33mline:31:1[0m> [0;33mline:27:17[0m[0;1;36m kiiratas[0m [0;32m'void (std::ostream &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x74079a8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m o[0m [0;32m'std::ostream &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7418f60[0m <[0;33mcol:38[0m, [0;33mline:31:1[0m>
[0;34m  `-[0m[0;1;35mCXXForRangeStmt[0m[0;33m 0x740a348[0m <[0;33mline:28:5[0m, [0;33mline:30:5[0m>
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7407e20[0m <[0;33mline:28:17[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7407c38[0m <[0;33mcol:17[0m> [0;33mcol:17[0m implicit used[0;1;36m __range1[0m [0;32m'std::vector<Diak, std::allocator<Diak> > &'[0m cinit
[0;34m    |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7407b38[0m <[0;33mcol:17[0m> [0;32m'vector<Diak>':'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m ->diakok[0;33m 0x73e7a10[0m
[0;34m    |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7407b28[0m <[0;33mcol:17[0m> [0;32m'Felveteli *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7408320[0m <[0;33mcol:15[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7407e88[0m <[0;33mcol:15[0m> [0;33mcol:15[0m implicit used[0;1;36m __begin1[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m cinit
[0;34m    |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7408140[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7408110[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &&) noexcept'[0m elidable
[0;34m    |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x74080f8[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7407ff8[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7407fc8[0m <[0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x73d8690[0m
[0;34m    |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7407e38[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7407c38[0m[0;1;36m '__range1'[0m [0;32m'std::vector<Diak, std::allocator<Diak> > &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7408338[0m <[0;33mcol:15[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7407f00[0m <[0;33mcol:15[0m> [0;33mcol:15[0m implicit used[0;1;36m __end1[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m cinit
[0;34m    |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7408308[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x74082d8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &&) noexcept'[0m elidable
[0;34m    |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x74082c0[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x74081e8[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x74081b8[0m <[0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x73d8898[0m
[0;34m    |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7407e58[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7407c38[0m[0;1;36m '__range1'[0m [0;32m'std::vector<Diak, std::allocator<Diak> > &'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7409ff0[0m <[0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7409fd8[0m <[0;33mcol:15[0m> [0;32m'bool (*)(const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &, const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7409f60[0m <[0;33mcol:15[0m> [0;32m'bool (const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &, const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7409de0[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &, const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &) noexcept'[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7409f30[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7408350[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7407e88[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7409f48[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7408370[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7407f00[0m[0;1;36m '__end1'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x740a110[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x740a0f8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x740a078[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7403340[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &() noexcept'[0m
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x740a028[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7407e88[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7407be0[0m <[0;33mcol:9[0m, [0;33mcol:23[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7407b78[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'Diak':'Diak'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x740a318[0m <[0;33mcol:15[0m> [0;32m'Diak':'Diak'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Diak &) noexcept(false)'[0m
[0;34m    |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x740a300[0m <[0;33mcol:15[0m> [0;32m'const Diak':'const Diak'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x740a230[0m <[0;33mcol:15[0m> [0;32m'Diak':'Diak'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x740a218[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x740a1a0[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7403090[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >::reference () const noexcept'[0m
[0;34m    |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x740a188[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x740a140[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7407e88[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7418f48[0m <[0;33mcol:25[0m, [0;33mline:30:5[0m>
[0;34m      `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7418f10[0m <[0;33mline:29:9[0m, [0;33mcol:12[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m adl
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7418ef8[0m <[0;33mcol:10[0m> [0;32m'std::ostream &(*)(std::ostream &, Diak &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7418e80[0m <[0;33mcol:10[0m> [0;32m'std::ostream &(std::ostream &, Diak &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x707fac8[0m[0;1;36m 'operator<<'[0m [0;32m'std::ostream &(std::ostream &, Diak &)'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x740a3a8[0m <[0;33mcol:9[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x74079a8[0m[0;1;36m 'o'[0m [0;32m'std::ostream &'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x740a3c8[0m <[0;33mcol:12[0m> [0;32m'Diak':'Diak'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7407b78[0m[0;1;36m 'i'[0m [0;32m'Diak':'Diak'[0m

Dumping Felveteli::bejutottak:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5ad5c40[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.h:23:5[0m, [0;33mcol:29[0m> [0;33mcol:10[0m[0;1;36m bejutottak[0m [0;32m'void (std::ostream &)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ad5bb0[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;33mcol:29[0m [0;32m'std::ostream &'[0m

Dumping Felveteli::bejutottak:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5b069c0[0m parent 0x5ab3c18 prev 0x5ad5c40 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user8/labor10/feladat1/felveteli.cpp:32:1[0m, [0;33mline:39:1[0m> [0;33mline:32:17[0m[0;1;36m bejutottak[0m [0;32m'void (std::ostream &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5b06930[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m used[0;1;36m o[0m [0;32m'std::ostream &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b08f60[0m <[0;33mcol:40[0m, [0;33mline:39:1[0m>
[0;34m  `-[0m[0;1;35mCXXForRangeStmt[0m[0;33m 0x5b08090[0m <[0;33mline:34:5[0m, [0;33mline:38:5[0m>
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5b06d00[0m <[0;33mline:34:17[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5b06b90[0m <[0;33mcol:17[0m> [0;33mcol:17[0m implicit used[0;1;36m __range1[0m [0;32m'std::vector<Diak, std::allocator<Diak> > &'[0m cinit
[0;34m    |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b06ac0[0m <[0;33mcol:17[0m> [0;32m'vector<Diak>':'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m ->diakok[0;33m 0x5ad53b0[0m
[0;34m    |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5b06ab0[0m <[0;33mcol:17[0m> [0;32m'Felveteli *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5b071d0[0m <[0;33mcol:15[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5b06d68[0m <[0;33mcol:15[0m> [0;33mcol:15[0m implicit used[0;1;36m __begin1[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m cinit
[0;34m    |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5b06ff8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5b06fc8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &&) noexcept'[0m elidable
[0;34m    |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5b06fb0[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5b06ed8[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b06ea8[0m <[0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x5ac5e50[0m
[0;34m    |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b06d18[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b06b90[0m[0;1;36m '__range1'[0m [0;32m'std::vector<Diak, std::allocator<Diak> > &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5b071e8[0m <[0;33mcol:15[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5b06de0[0m <[0;33mcol:15[0m> [0;33mcol:15[0m implicit used[0;1;36m __end1[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m cinit
[0;34m    |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5b071b8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5b07188[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &&) noexcept'[0m elidable
[0;34m    |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5b07170[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5b070a0[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >::iterator':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b07070[0m <[0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x5ac6058[0m
[0;34m    |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b06d38[0m <[0;33mcol:15[0m> [0;32m'std::vector<Diak, std::allocator<Diak> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b06b90[0m[0;1;36m '__range1'[0m [0;32m'std::vector<Diak, std::allocator<Diak> > &'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5b07e70[0m <[0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b07e58[0m <[0;33mcol:15[0m> [0;32m'bool (*)(const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &, const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b07e38[0m <[0;33mcol:15[0m> [0;32m'bool (const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &, const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5af7780[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &, const __normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &) noexcept'[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b07e08[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b07200[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b06d68[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b07e20[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b07220[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b06de0[0m[0;1;36m '__end1'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5b07f00[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b07ee8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b07ec8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5af0ce0[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > > &() noexcept'[0m
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b07ea8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b06d68[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5b06b68[0m <[0;33mcol:9[0m, [0;33mcol:23[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5b06b00[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'Diak':'Diak'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5b08060[0m <[0;33mcol:15[0m> [0;32m'Diak':'Diak'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Diak &) noexcept(false)'[0m
[0;34m    |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b08048[0m <[0;33mcol:15[0m> [0;32m'const Diak':'const Diak'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5b07fa0[0m <[0;33mcol:15[0m> [0;32m'Diak':'Diak'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b07f88[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b07f68[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5af0a30[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >::reference () const noexcept'[0m
[0;34m    |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b07f50[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b07f30[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b06d68[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >':'__gnu_cxx::__normal_iterator<Diak *, std::vector<Diak, std::allocator<Diak> > >'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b08f48[0m <[0;33mcol:25[0m, [0;33mline:38:5[0m>
[0;34m      `-[0m[0;1;35mIfStmt[0m[0;33m 0x5b08f30[0m <[0;33mline:35:9[0m, [0;33mline:37:9[0m>
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5b081b0[0m <[0;33mline:35:12[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m        | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5b08140[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m        | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b08110[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getAtlag[0;33m 0x576c360[0m
[0;34m        | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b08160[0m <[0;33mcol:12[0m> [0;32m'const Diak'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b080f0[0m <[0;33mcol:12[0m> [0;32m'Diak':'Diak'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b06b00[0m[0;1;36m 'i'[0m [0;32m'Diak':'Diak'[0m
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b08198[0m <[0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m        |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5b08178[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 5[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b08f18[0m <[0;33mcol:31[0m, [0;33mline:37:9[0m>
[0;34m          `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5b08ee0[0m <[0;33mline:36:13[0m, [0;33mcol:16[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m adl
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b08ec8[0m <[0;33mcol:14[0m> [0;32m'std::ostream &(*)(std::ostream &, Diak &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b08ea8[0m <[0;33mcol:14[0m> [0;32m'std::ostream &(std::ostream &, Diak &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x576c748[0m[0;1;36m 'operator<<'[0m [0;32m'std::ostream &(std::ostream &, Diak &)'[0m
[0;34m            |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b081d0[0m <[0;33mcol:13[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5b06930[0m[0;1;36m 'o'[0m [0;32m'std::ostream &'[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b081f0[0m <[0;33mcol:16[0m> [0;32m'Diak':'Diak'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b06b00[0m[0;1;36m 'i'[0m [0;32m'Diak':'Diak'[0m

