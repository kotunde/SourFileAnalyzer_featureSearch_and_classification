Dumping std::countBits:
[0;1;32mFunctionDecl[0m[0;33m 0x65d7660[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:13:1[0m, [0;33mline:24:1[0m> [0;33mline:13:5[0m[0;1;36m countBits[0m [0;32m'int (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d75c8[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m number[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65d7c18[0m <[0;33mline:14:1[0m, [0;33mline:24:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x65d77a8[0m <[0;33mline:15:2[0m, [0;33mcol:12[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x65d7720[0m <[0;33mcol:2[0m, [0;33mcol:11[0m> [0;33mcol:6[0m used[0;1;36m db[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65d7788[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x65d7860[0m <[0;33mline:16:2[0m, [0;33mcol:15[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x65d77d8[0m <[0;33mcol:2[0m, [0;33mcol:14[0m> [0;33mcol:6[0m used[0;1;36m maszk[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65d7840[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x65d7b98[0m <[0;33mline:17:2[0m, [0;33mline:22:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x65d7918[0m <[0;33mline:17:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x65d7890[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65d78f8[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65d7988[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65d7970[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65d7930[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65d7890[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65d7950[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 32[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x65d79c8[0m <[0;33mcol:26[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65d79a8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65d7890[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65d7b78[0m <[0;33mcol:31[0m, [0;33mline:22:2[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x65d7ad8[0m <[0;33mline:18:3[0m, [0;33mline:20:3[0m>
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65d7a70[0m <[0;33mline:18:7[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65d7a50[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '&'
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65d7a20[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65d79e0[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65d75c8[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65d7a38[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65d7a00[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65d77d8[0m[0;1;36m 'maszk'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65d7ac0[0m <[0;33mcol:21[0m, [0;33mline:20:3[0m>
[0;34m  |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x65d7aa8[0m <[0;33mline:19:4[0m, [0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65d7a88[0m <[0;33mcol:4[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65d7720[0m[0;1;36m 'db'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x65d7b48[0m <[0;33mline:21:3[0m, [0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '<<=' ComputeLHSTy=[0;32m'int'[0m ComputeResultTy=[0;32m'int'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65d7af0[0m <[0;33mcol:3[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65d77d8[0m[0;1;36m 'maszk'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65d7b10[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x65d7c08[0m <[0;33mline:23:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65d7bf0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65d7bd0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65d7720[0m[0;1;36m 'db'[0m [0;32m'int'[0m

Dumping std::setBit:
[0;1;32mFunctionDecl[0m[0;33m 0x623d8d0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:26:1[0m, [0;33mline:35:1[0m> [0;33mline:26:5[0m[0;1;36m setBit[0m [0;32m'int (int &, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x623d770[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m number[0m [0;32m'int &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x623d7f0[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m order[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x623dd60[0m <[0;33mline:27:1[0m, [0;33mline:35:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x623dd18[0m <[0;33mline:28:2[0m, [0;33mline:33:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x623da70[0m <[0;33mline:28:6[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x623d9d8[0m <[0;33mcol:6[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x623d9c0[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x623d980[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x623d7f0[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x623d9a0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x623da50[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x623da38[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x623d9f8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x623d7f0[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x623da18[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 32[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x623dce8[0m <[0;33mcol:33[0m, [0;33mline:33:2[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x623db30[0m <[0;33mline:29:3[0m, [0;33mcol:16[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x623daa8[0m <[0;33mcol:3[0m, [0;33mcol:15[0m> [0;33mcol:7[0m used[0;1;36m maszk[0m [0;32m'int'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x623db10[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x623dbb8[0m <[0;33mline:30:3[0m, [0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '<<=' ComputeLHSTy=[0;32m'int'[0m ComputeResultTy=[0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x623db48[0m <[0;33mcol:3[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x623daa8[0m[0;1;36m 'maszk'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x623dba0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x623db68[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x623d7f0[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x623dc98[0m <[0;33mline:31:3[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x623dbe8[0m <[0;33mcol:3[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x623d770[0m[0;1;36m 'number'[0m [0;32m'int &'[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x623dc78[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '|'
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x623dc48[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x623dc08[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x623d770[0m[0;1;36m 'number'[0m [0;32m'int &'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x623dc60[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x623dc28[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x623daa8[0m[0;1;36m 'maszk'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x623dcd8[0m <[0;33mline:32:3[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x623dcb8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x623dd50[0m <[0;33mline:34:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x623dd30[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::mean:
[0;1;32mFunctionDecl[0m[0;33m 0x57cb880[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:37:1[0m, [0;33mline:44:1[0m> [0;33mline:37:8[0m used[0;1;36m mean[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57cb6e8[0m <[0;33mcol:13[0m, [0;33mcol:26[0m> [0;33mcol:20[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57cb768[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;33mcol:33[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57cbd90[0m <[0;33mline:38:1[0m, [0;33mline:44:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57cb9e8[0m <[0;33mline:39:2[0m, [0;33mcol:16[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57cb948[0m <[0;33mcol:2[0m, [0;33mcol:15[0m> [0;33mcol:9[0m used[0;1;36m sum[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cb9d0[0m <[0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57cb9b0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x57cbc90[0m <[0;33mline:40:2[0m, [0;33mline:42:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57cbaa0[0m <[0;33mline:40:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57cba18[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57cba80[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57cbb28[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cbaf8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57cbab8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57cba18[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cbb10[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57cbad8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57cb768[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57cbb68[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57cbb48[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57cba18[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57cbc78[0m <[0;33mcol:40[0m, [0;33mline:42:2[0m>
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x57cbc48[0m <[0;33mline:41:3[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57cbb80[0m <[0;33mcol:3[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57cb948[0m[0;1;36m 'sum'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cbc30[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x57cbc10[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cbbe0[0m <[0;33mcol:10[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57cbba0[0m <[0;33mcol:10[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57cb6e8[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cbbf8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57cbbc0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57cba18[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x57cbd80[0m <[0;33mline:43:2[0m, [0;33mcol:16[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cbd68[0m <[0;33mcol:9[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x57cbd38[0m <[0;33mcol:9[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '/=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57cbcc8[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57cb948[0m[0;1;36m 'sum'[0m [0;32m'double'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cbd20[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m          `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57cbd08[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57cbce8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57cb768[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m

Dumping std::stddev:
[0;1;32mFunctionDecl[0m[0;33m 0x6781120[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:46:1[0m, [0;33mline:57:1[0m> [0;33mline:46:8[0m[0;1;36m stddev[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6781000[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6781080[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6781a88[0m <[0;33mline:47:1[0m, [0;33mline:57:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6781980[0m <[0;33mline:48:2[0m, [0;33mline:55:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6781228[0m <[0;33mline:48:6[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781210[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67811d0[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6781080[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67811f0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6781958[0m <[0;33mcol:23[0m, [0;33mline:55:2[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6781300[0m <[0;33mline:49:3[0m, [0;33mcol:19[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6781260[0m <[0;33mcol:3[0m, [0;33mcol:18[0m> [0;33mcol:10[0m used[0;1;36m temp2[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67812e8[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67812c8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6781510[0m <[0;33mline:50:3[0m, [0;33mcol:42[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6781330[0m <[0;33mcol:3[0m, [0;33mcol:41[0m> [0;33mcol:10[0m used[0;1;36m temp1[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x67814b0[0m <[0;33mcol:18[0m, [0;33mcol:41[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781498[0m <[0;33mcol:18[0m> [0;32m'double (*)(double *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6781420[0m <[0;33mcol:18[0m> [0;32m'double (double *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6780aa0[0m[0;1;36m 'mean'[0m [0;32m'double (double *, int)'[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67814e0[0m <[0;33mcol:23[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67813e0[0m <[0;33mcol:23[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6781000[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67814f8[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6781400[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6781080[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x6781838[0m <[0;33mline:51:3[0m, [0;33mline:53:3[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67815c8[0m <[0;33mline:51:8[0m, [0;33mcol:17[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6781540[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67815a8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6781650[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781620[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67815e0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6781540[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781638[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6781600[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6781080[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6781690[0m <[0;33mcol:36[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6781670[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6781540[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6781828[0m <[0;33mcol:41[0m, [0;33mline:53:3[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6781a78[0m <[0;33mline:56:2[0m, [0;33m/usr/include/math.h:98:35[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781a60[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m      `-[0m[0;1;35mParenExpr[0m[0;33m 0x6781a40[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6781a00[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67819e8[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6781998[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x61c4540[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m          `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781a28[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m            `-[0m[0;1;35mStringLiteral[0m[0;33m 0x67819b8[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m

Dumping std::max2:
[0;1;32mFunctionDecl[0m[0;33m 0x65cca90[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:59:1[0m, [0;33mline:91:1[0m> [0;33mline:59:10[0m[0;1;36m max2[0m [0;32m'double *(double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65cc8f0[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:22[0m used[0;1;36m array[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65cc970[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65ce290[0m <[0;33mline:60:1[0m, [0;33mline:91:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x65ccef0[0m <[0;33mline:61:2[0m, [0;33mcol:42[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x65ccb58[0m <[0;33mcol:2[0m, [0;33mcol:41[0m> [0;33mcol:11[0m used[0;1;36m tomb[0m [0;32m'double *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x65ccea8[0m <[0;33mcol:18[0m, [0;33mcol:41[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x581c408[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(std::size_t)'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ccdd8[0m <[0;33mcol:29[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65ccbc0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |     `-[0m[0;1;35mInitListExpr[0m[0;33m 0x65cce28[0m <[0;33mcol:31[0m, [0;33mcol:41[0m> [0;32m'double [2]'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cce78[0m <[0;33m/usr/include/math.h:98:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       | `-[0m[0;1;35mParenExpr[0m[0;33m 0x65ccc88[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x65ccc48[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ccc30[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ccbe0[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6011540[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ccc70[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x65ccc00[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cce90[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |         `-[0m[0;1;35mParenExpr[0m[0;33m 0x65ccd50[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x65ccd10[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cccf8[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ccca8[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6011540[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ccd38[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |               `-[0m[0;1;35mStringLiteral[0m[0;33m 0x65cccc8[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x65ccfe0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:62:2[0m, [0;33mline:64:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65ccf60[0m <[0;33mline:62:6[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ccf48[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ccf08[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc970[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65ccf28[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65ccfc8[0m <[0;33mcol:24[0m, [0;33mline:64:2[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x65ccfb8[0m <[0;33mline:63:3[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ccfa0[0m <[0;33mcol:10[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ccf80[0m <[0;33mcol:10[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x65cd330[0m <[0;33mline:65:2[0m, [0;33mline:69:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cd050[0m <[0;33mline:65:6[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd038[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ccff8[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc970[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd018[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65cd308[0m <[0;33mcol:24[0m, [0;33mline:69:2[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cd178[0m <[0;33mline:66:3[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd0c8[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd0b0[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd070[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd090[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd160[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd140[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd128[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd0e8[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd108[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cd2a0[0m <[0;33mline:67:3[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd1f0[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd1d8[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd198[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd1b8[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd288[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd268[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd250[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd210[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd230[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x65cd2f8[0m <[0;33mline:68:3[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd2e0[0m <[0;33mcol:10[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd2c0[0m <[0;33mcol:10[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x65cd968[0m <[0;33mline:70:2[0m, [0;33mline:78:2[0m> has_else
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cd468[0m <[0;33mline:70:6[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd438[0m <[0;33mcol:6[0m, [0;33mcol:13[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd3a0[0m <[0;33mcol:6[0m, [0;33mcol:13[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd388[0m <[0;33mcol:6[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd348[0m <[0;33mcol:6[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd368[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd450[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd418[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd400[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd3c0[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd3e0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65cd6d8[0m <[0;33mcol:27[0m, [0;33mline:73:2[0m>
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cd590[0m <[0;33mline:71:3[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd4e0[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd4c8[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd488[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd4a8[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd578[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd558[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd540[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd500[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd520[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cd6b8[0m <[0;33mline:72:3[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |   |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd608[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd5f0[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd5b0[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  | |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd5d0[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd6a0[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd680[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd668[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd628[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd648[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65cd948[0m <[0;33mline:75:2[0m, [0;33mline:78:2[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cd800[0m <[0;33mline:76:3[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd750[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd738[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd6f8[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd718[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd7e8[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd7c8[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd7b0[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd770[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd790[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cd928[0m <[0;33mline:77:3[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd878[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd860[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd820[0m <[0;33mcol:3[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd840[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd910[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cd8f0[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cd8d8[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cd898[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cd8b8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x65ce210[0m <[0;33mline:79:2[0m, [0;33mline:89:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x65cda30[0m <[0;33mline:79:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x65cd9a8[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cda10[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cdab8[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cda88[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cda48[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65cd9a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdaa0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cda68[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc970[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x65cdaf8[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdad8[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65cd9a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65ce1f8[0m <[0;33mcol:40[0m, [0;33mline:89:2[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x65ce1d0[0m <[0;33mline:80:3[0m, [0;33mline:88:3[0m> has_else
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cdc48[0m <[0;33mline:80:7[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdc18[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cdb80[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdb50[0m <[0;33mcol:7[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdb10[0m <[0;33mcol:7[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdb68[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdb30[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65cd9a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdc30[0m <[0;33mcol:18[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cdbf8[0m <[0;33mcol:18[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdbe0[0m <[0;33mcol:18[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdba0[0m <[0;33mcol:18[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cdbc0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65cded0[0m <[0;33mcol:27[0m, [0;33mline:83:3[0m>
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cdd70[0m <[0;33mline:81:4[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cdcc0[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdca8[0m <[0;33mcol:4[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdc68[0m <[0;33mcol:4[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |     | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cdc88[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdd58[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cdd38[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdd20[0m <[0;33mcol:14[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdce0[0m <[0;33mcol:14[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |     | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cdd00[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65cdeb0[0m <[0;33mline:82:4[0m, [0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |   |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cdde8[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cddd0[0m <[0;33mcol:4[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdd90[0m <[0;33mcol:4[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |     |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cddb0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cde98[0m <[0;33mcol:14[0m, [0;33mcol:21[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cde78[0m <[0;33mcol:14[0m, [0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cde48[0m <[0;33mcol:14[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cde08[0m <[0;33mcol:14[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cde60[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cde28[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65cd9a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65ce1b8[0m <[0;33mline:84:8[0m, [0;33mline:88:3[0m>
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x65ce1a0[0m <[0;33mline:85:4[0m, [0;33mline:87:4[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65ce028[0m <[0;33mline:85:8[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdff8[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cdf60[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdf30[0m <[0;33mcol:8[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdef0[0m <[0;33mcol:8[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdf48[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdf10[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65cd9a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ce010[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65cdfd8[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65cdfc0[0m <[0;33mcol:19[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65cdf80[0m <[0;33mcol:19[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |         |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65cdfa0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65ce188[0m <[0;33mcol:28[0m, [0;33mline:87:4[0m>
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65ce168[0m <[0;33mline:86:5[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |             |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65ce0a0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ce088[0m <[0;33mcol:5[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ce048[0m <[0;33mcol:5[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m
[0;34m  |             | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65ce068[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ce150[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |               `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x65ce130[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |                 |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ce100[0m <[0;33mcol:15[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |                 | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ce0c0[0m <[0;33mcol:15[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65cc8f0[0m[0;1;36m 'array'[0m [0;32m'double *':'double *'[0m
[0;34m  |                 `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ce118[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |                   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ce0e0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65cd9a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x65ce280[0m <[0;33mline:90:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65ce268[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65ce248[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65ccb58[0m[0;1;36m 'tomb'[0m [0;32m'double *'[0m

Dumping std::capitalizeWords:
[0;1;32mFunctionDecl[0m[0;33m 0x6e1ca28[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:93:1[0m, [0;33mline:106:1[0m> [0;33mline:93:8[0m[0;1;36m capitalizeWords[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6e1c960[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6e1d228[0m <[0;33mline:94:1[0m, [0;33mline:106:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6e1cc70[0m <[0;33mline:96:2[0m, [0;33mcol:26[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6e1cbe8[0m <[0;33mcol:2[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m size[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6e1d1a8[0m <[0;33mline:97:2[0m, [0;33mline:104:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6e1cd28[0m <[0;33mline:97:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6e1cca0[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e1cd08[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6e1cdb0[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e1cd80[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e1cd40[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6e1cca0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e1cd98[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e1cd60[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6e1cbe8[0m[0;1;36m 'size'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6e1cdf0[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e1cdd0[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6e1cca0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6e1d190[0m <[0;33mcol:33[0m, [0;33mline:104:2[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6e1d168[0m <[0;33mline:98:3[0m, [0;33mline:103:3[0m> has_else
[0;34m  |     |-[0m[0;1;35mOpaqueValueExpr[0m[0;33m 0x6e1d150[0m <[0;33m<invalid sloc>[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6e1d000[0m <[0;33mline:98:27[0m, [0;33mline:100:3[0m>
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6e1d140[0m <[0;33mline:101:8[0m, [0;33mline:103:3[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6e1d218[0m <[0;33mline:105:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e1d200[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e1d1e0[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6e1c960[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'int'[0m

Dumping std::type_info::hash_code:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5a1e1a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo:140:5[0m, [0;33mline:148:5[0m> [0;33mline:140:12[0m[0;1;36m hash_code[0m [0;32m'std::size_t () const noexcept'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5a23240[0m <[0;33mline:141:5[0m, [0;33mline:148:5[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5a23230[0m <[0;33mline:143:7[0m, [0;33mline:144:38[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5a231e0[0m <[0;33mline:143:14[0m, [0;33mline:144:38[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a231c8[0m <[0;33mline:143:14[0m> [0;32m'std::size_t (*)(const void *, std::size_t, std::size_t)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a23148[0m <[0;33mcol:14[0m> [0;32m'std::size_t (const void *, std::size_t, std::size_t)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5a18f78[0m[0;1;36m '_Hash_bytes'[0m [0;32m'std::size_t (const void *, std::size_t, std::size_t)'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a23218[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m      | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5a22da8[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a22d78[0m <[0;33mcol:26[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->name[0;33m 0x5a1dbf8[0m
[0;34m      |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a22d68[0m <[0;33mcol:26[0m> [0;32m'const std::type_info *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x5a230c0[0m <[0;33mcol:34[0m, [0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a230a8[0m <[0;33mcol:34[0m> [0;32m'unsigned long (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a22fd0[0m <[0;33mcol:34[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5a22e80[0m[0;1;36m '__builtin_strlen'[0m [0;32m'unsigned long (const char *) noexcept'[0m
[0;34m      | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5a23030[0m <[0;33mcol:51[0m, [0;33mcol:56[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a23000[0m <[0;33mcol:51[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->name[0;33m 0x5a1dbf8[0m
[0;34m      |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a22ff0[0m <[0;33mcol:51[0m> [0;32m'const std::type_info *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5a23118[0m <[0;33mline:144:5[0m, [0;33mcol:37[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m static_cast<std::size_t> <NoOp>
[0;34m        `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5a230e8[0m <[0;33mcol:25[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m[0;1;36m 3339675911[0m

Dumping std::codecvt_base:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5cc56c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:136:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m class[0;1;36m codecvt_base[0m

Dumping std::codecvt:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5cc5990[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:137:3[0m, [0;33mline:138:11[0m> [0;33mcol:11[0m[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5cc5780[0m <[0;33mline:137:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5cc57f8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5cc5868[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5cc5900[0m <[0;33mline:138:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5cc5c18[0m[0;1;36m 'codecvt'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5cc5ea0[0m[0;1;36m 'codecvt'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5cc5c18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:139:3[0m, [0;33mcol:49[0m> [0;33mcol:20[0m class[0;1;36m codecvt[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5cc5ea0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:141:3[0m, [0;33mcol:52[0m> [0;33mcol:20[0m class[0;1;36m codecvt[0m
[0;34m|-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5cc62f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:143:3[0m, [0;33mline:144:11[0m> [0;33mcol:11[0m[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5cc60e0[0m <[0;33mline:143:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5cc6158[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5cc61c8[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5cc6260[0m <[0;33mline:144:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m class[0;1;36m codecvt_byname[0m

Dumping __codecvt_result:
[0;1;32mEnumDecl[0m[0;33m 0x5ed8140[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:180:1[0m, [0;33mline:186:1[0m> [0;33mline:180:6[0m[0;1;36m __codecvt_result[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x5ed8200[0m <[0;33mline:182:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_ok[0m [0;32m'__codecvt_result'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x5ed8250[0m <[0;33mline:183:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_partial[0m [0;32m'__codecvt_result'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x5ed82a0[0m <[0;33mline:184:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_error[0m [0;32m'__codecvt_result'[0m
[0;34m`-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x5ed82f0[0m <[0;33mline:185:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_noconv[0m [0;32m'__codecvt_result'[0m

Dumping std::error_code:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5faaee8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:47:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m referenced class[0;1;36m error_code[0m

Dumping std::is_error_code_enum:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5fab220[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fab100[0m <[0;33mline:52:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fab190[0m <[0;33mline:53:5[0m, [0;33mcol:53[0m> [0;33mcol:12[0m invalid struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m parsing_base_specifiers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fab480[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5fcb570[0m[0;1;36m 'is_error_code_enum'[0m

Dumping __code:
[0;1;32mParmVarDecl[0m[0;33m 0x5face38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:118:16[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __code[0m [0;32m'const std::error_code &'[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x5fadb80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:139:3[0m, [0;33mcol:36[0m> [0;33mcol:14[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::errc) noexcept'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fada88[0m <[0;33mcol:30[0m> [0;33mcol:34[0m [0;32m'std::errc'[0m

Dumping std::error_code:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5fadd98[0m prev 0x5faaee8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:146:3[0m, [0;33mline:200:3[0m> [0;33mline:146:10[0m referenced struct[0;1;36m error_code[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fae2b8[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit referenced struct[0;1;36m error_code[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5fae3b8[0m <[0;33mline:148:5[0m, [0;33mline:149:49[0m> [0;33mline:148:5[0m referenced[0;1;36m error_code[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x5fafb98[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fafc60[0m <[0;33mline:149:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x5fafbf8[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5fafdc0[0m <[0;33mcol:27[0m, [0;33mcol:44[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m| |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fafda0[0m <[0;33mcol:28[0m, [0;33mcol:44[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fafd88[0m <[0;33mcol:28[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fafd10[0m <[0;33mcol:28[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fad890[0m[0;1;36m 'system_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fafe30[0m <[0;33mcol:47[0m, [0;33mcol:49[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5fae610[0m <[0;33mline:151:5[0m, [0;33mline:152:39[0m> [0;33mline:151:5[0m used[0;1;36m error_code[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fae478[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;33mcol:20[0m used[0;1;36m __v[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fae4f0[0m <[0;33mcol:25[0m, [0;33mcol:47[0m> [0;33mcol:47[0m used[0;1;36m __cat[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x5fafb98[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fafe80[0m <[0;33mline:152:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fafe40[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fae478[0m[0;1;36m '__v'[0m [0;32m'int'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x5fafbf8[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5fafee0[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fafec0[0m <[0;33mcol:30[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fae4f0[0m[0;1;36m '__cat'[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5faff50[0m <[0;33mcol:37[0m, [0;33mcol:39[0m>
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5faea78[0m <[0;33mline:154:5[0m, [0;33mline:157:39[0m> [0;33mline:156:7[0m[0;1;36m error_code[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fae6c8[0m <[0;33mline:154:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 0 index 0[0;1;36m _ErrorCodeEnum[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fae868[0m <[0;33mcol:39[0m> [0;33mcol:39[0m typename depth 0 index 1
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5fae9d0[0m <[0;33mline:156:7[0m, [0;33mline:157:39[0m> [0;33mline:156:7[0m[0;1;36m error_code[0m [0;32m'void (_ErrorCodeEnum) noexcept'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fae908[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __e[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb0038[0m <[0;33mline:157:7[0m, [0;33mcol:39[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fb0018[0m <[0;33mcol:9[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m|       |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5faff70[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5faff60[0m <[0;33mcol:10[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m this
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fafff0[0m <[0;33mcol:17[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5faff88[0m <[0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'make_error_code'[0;33m 0x5fadb80[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5faffd0[0m <[0;33mcol:33[0m> [0;32m'_ErrorCodeEnum'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fae908[0m[0;1;36m '__e'[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5faec08[0m <[0;33mline:159:5[0m, [0;33mline:164:5[0m> [0;33mline:160:5[0m used[0;1;36m assign[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5faeaf0[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __v[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5faeb68[0m <[0;33mcol:21[0m, [0;33mcol:43[0m> [0;33mcol:43[0m used[0;1;36m __cat[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb0180[0m <[0;33mline:161:5[0m, [0;33mline:164:5[0m>
[0;34m|   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fb00c8[0m <[0;33mline:162:7[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m|   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb0060[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x5fafb98[0m
[0;34m|   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb0050[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb00b0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb0090[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5faeaf0[0m[0;1;36m '__v'[0m [0;32m'int'[0m
[0;34m|   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fb0160[0m <[0;33mline:163:7[0m, [0;33mcol:17[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m|     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb00f8[0m <[0;33mcol:7[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cat[0;33m 0x5fafbf8[0m
[0;34m|     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb00e8[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5fb0148[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb0128[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5faeb68[0m[0;1;36m '__cat'[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5faece0[0m <[0;33mline:166:5[0m, [0;33mline:168:37[0m> [0;33mline:167:5[0m[0;1;36m clear[0m [0;32m'void () noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb02d0[0m <[0;33mline:168:5[0m, [0;33mcol:37[0m>
[0;34m|   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5fb02a0[0m <[0;33mcol:7[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m|     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb01b0[0m <[0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->assign[0;33m 0x5faec08[0m
[0;34m|     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb01a0[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fb01e0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fb0280[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb0268[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb0248[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fad890[0m[0;1;36m 'system_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5faf310[0m <[0;33mline:171:5[0m, [0;33mline:175:46[0m> [0;33mline:174:7[0m[0;1;36m operator=[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5faed80[0m <[0;33mline:171:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 0 index 0[0;1;36m _ErrorCodeEnum[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5faf270[0m <[0;33mline:172:7[0m, [0;33mline:175:46[0m> [0;33mline:174:7[0m[0;1;36m operator=[0m [0;32m'typename enable_if<is_error_code_enum<_ErrorCodeEnum>::value, error_code &>::type (_ErrorCodeEnum) noexcept'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5faf160[0m <[0;33mcol:17[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __e[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb0430[0m <[0;33mline:175:7[0m, [0;33mcol:46[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fb0420[0m <[0;33mcol:9[0m, [0;33mcol:43[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fb0400[0m <[0;33mcol:16[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m|         |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5fb0358[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb0348[0m <[0;33mcol:17[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m this
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fb03d8[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5fb0370[0m <[0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'make_error_code'[0;33m 0x5fadb80[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb03b8[0m <[0;33mcol:40[0m> [0;32m'_ErrorCodeEnum'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5faf160[0m[0;1;36m '__e'[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5faf3f8[0m <[0;33mline:177:5[0m, [0;33mline:178:47[0m> [0;33mcol:5[0m used[0;1;36m value[0m [0;32m'int () const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb04b0[0m <[0;33mcol:28[0m, [0;33mcol:47[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fb04a0[0m <[0;33mcol:30[0m, [0;33mcol:37[0m>
[0;34m|     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb0488[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb0458[0m <[0;33mcol:37[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x5fafb98[0m
[0;34m|         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb0448[0m <[0;33mcol:37[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5faf520[0m <[0;33mline:180:5[0m, [0;33mline:181:49[0m> [0;33mcol:5[0m used[0;1;36m category[0m [0;32m'const std::_V2::error_category &() const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb0548[0m <[0;33mcol:31[0m, [0;33mcol:49[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fb0538[0m <[0;33mcol:33[0m, [0;33mcol:41[0m>
[0;34m|     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5fb0520[0m <[0;33mcol:40[0m, [0;33mcol:41[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb0508[0m <[0;33mcol:41[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb04d8[0m <[0;33mcol:41[0m> [0;32m'const std::_V2::error_category *const'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cat[0;33m 0x5fafbf8[0m
[0;34m|           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb04c8[0m <[0;33mcol:41[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5faf640[0m <[0;33mline:183:5[0m, [0;33mline:184:37[0m> [0;33mcol:5[0m[0;1;36m default_error_condition[0m [0;32m'std::error_condition () const noexcept'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5faf720[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:92:33[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:189:43[0m> [0;33mline:188:5[0m used[0;1;36m message[0m [0;32m'std::__cxx11::string () const'[0m
[0;34m| |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb0688[0m <[0;33mline:189:5[0m, [0;33mcol:43[0m>
[0;34m| | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fb0678[0m <[0;33mcol:7[0m, [0;33mcol:40[0m>
[0;34m| |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5fb0650[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb05c0[0m <[0;33mcol:14[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .message[0;33m 0x5fac888[0m
[0;34m| |     | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5fb05a0[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |     |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb0570[0m <[0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->category[0;33m 0x5faf520[0m
[0;34m| |     |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb0560[0m <[0;33mcol:14[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5fb0630[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb0600[0m <[0;33mcol:33[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->value[0;33m 0x5faf3f8[0m
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb05f0[0m <[0;33mcol:33[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| `-[0m[0;1;34mAbiTagAttr[0m[0;33m 0x5faf7c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:92:47[0m, [0;33mcol:67[0m> cxx11
[0;34m|-[0m[0;1;32mCXXConversionDecl[0m[0;33m 0x5faf860[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:191:5[0m, [0;33mline:192:29[0m> [0;33mline:191:14[0m[0;1;36m operator bool[0m [0;32m'bool () const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb0748[0m <[0;33mline:192:5[0m, [0;33mcol:29[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fb0738[0m <[0;33mcol:7[0m, [0;33mcol:26[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fb0718[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb0700[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb06b0[0m <[0;33mcol:14[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x5fafb98[0m
[0;34m|       |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fb06a0[0m <[0;33mcol:14[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fb06e0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x5faf910[0m <[0;33mline:195:3[0m, [0;33mcol:10[0m> [0;33mcol:3[0m private
[0;34m|-[0m[0;1;32mFriendDecl[0m[0;33m 0x5fafb40[0m <[0;33mline:196:5[0m, [0;33mcol:33[0m> [0;33mcol:12[0m [0;32m'class hash<error_code>':'std::hash<std::error_code>'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5fafb98[0m <[0;33mline:198:5[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m _M_value[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5fafbf8[0m <[0;33mline:199:5[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m _M_cat[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5fb09e0[0m <[0;33mline:146:10[0m> [0;33mcol:10[0m implicit used constexpr[0;1;36m error_code[0m [0;32m'void (const std::error_code &) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb0af8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m used [0;32m'const std::error_code &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x5fafb98[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fbe938[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fbe8f0[0m <[0;33mcol:10[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ._M_value[0;33m 0x5fafb98[0m
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fbe8d0[0m <[0;33mcol:10[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb0af8[0m[0;1;36m ''[0m [0;32m'const std::error_code &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x5fafbf8[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fbe9e0[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fbe998[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *const'[0m[0;36m lvalue[0m[0;36m[0m ._M_cat[0;33m 0x5fafbf8[0m
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fbe978[0m <[0;33mcol:10[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb0af8[0m[0;1;36m ''[0m [0;32m'const std::error_code &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fbea30[0m <[0;33mcol:10[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5fb0b98[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit used constexpr[0;1;36m error_code[0m [0;32m'void (std::error_code &&) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb0ca8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m used [0;32m'std::error_code &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x5fafb98[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb0f38[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb0ef0[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m xvalue[0m[0;36m[0m ._M_value[0;33m 0x5fafb98[0m
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5fb0ec0[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct std::error_code &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb0e90[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb0ca8[0m[0;1;36m ''[0m [0;32m'std::error_code &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x5fafbf8[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb1020[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb0fd8[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m xvalue[0m[0;36m[0m ._M_cat[0;33m 0x5fafbf8[0m
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5fb0fa8[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct std::error_code &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb0f78[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb0ca8[0m[0;1;36m ''[0m [0;32m'std::error_code &&'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb1070[0m <[0;33mcol:10[0m>
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x5fb0d58[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit referenced[0;1;36m ~error_code[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5fbc638[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit[0;1;36m operator=[0m [0;32m'std::error_code &(const std::error_code &)'[0m inline default trivial noexcept-unevaluated 0x5fbc638
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fbc748[0m <[0;33mcol:10[0m> [0;33mcol:10[0m [0;32m'const std::error_code &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5fbe4f0[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit[0;1;36m operator=[0m [0;32m'std::error_code &(std::error_code &&)'[0m inline default trivial noexcept-unevaluated 0x5fbe4f0
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fbe5f8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m [0;32m'std::error_code &&'[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x5fb0808[0m prev 0x5fadb80 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:203:3[0m, [0;33mline:205:67[0m> [0;33mline:204:3[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::errc) noexcept'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb0770[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __e[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb10d8[0m <[0;33mline:205:3[0m, [0;33mcol:67[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fb10c8[0m <[0;33mcol:5[0m, [0;33mcol:64[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5fb10b0[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5fb1080[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::error_code &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5fb0e40[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x5fb0d18[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m            |-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5fb0910[0m <[0;33mcol:23[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m static_cast<int> <IntegralCast>
[0;34m            | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb08f8[0m <[0;33mcol:40[0m> [0;32m'std::errc'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb08c0[0m <[0;33mcol:40[0m> [0;32m'std::errc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb0770[0m[0;1;36m '__e'[0m [0;32m'std::errc'[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fb09c0[0m <[0;33mcol:46[0m, [0;33mcol:63[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb09a8[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb0988[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fad998[0m[0;1;36m 'generic_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m

Dumping std::system_error::_M_code:
[0;1;32mFieldDecl[0m[0;33m 0x5fbb250[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:344:5[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_code[0m [0;32m'std::error_code'[0m

Dumping std::system_error::code:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5fbc240[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:369:5[0m, [0;33mline:370:45[0m> [0;33mcol:5[0m[0;1;36m code[0m [0;32m'const std::error_code &() const noexcept'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fbf7e0[0m <[0;33mcol:27[0m, [0;33mcol:45[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fbf7d0[0m <[0;33mcol:29[0m, [0;33mcol:36[0m>
[0;34m    `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fbf7a0[0m <[0;33mcol:36[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m ->_M_code[0;33m 0x5fbb250[0m
[0;34m      `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5fbf790[0m <[0;33mcol:36[0m> [0;32m'const std::system_error *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping std::hash<std::error_code>::hash:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbfcc0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:386:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m hash[0m

Dumping std::hash<std::error_code>::operator():
[0;1;32mCXXMethodDecl[0m[0;33m 0x5fbfe90[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:389:7[0m, [0;33mline:394:7[0m> [0;33mline:390:7[0m[0;1;36m operator()[0m [0;32m'std::size_t (const std::error_code &) const noexcept'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fbfd60[0m <[0;33mcol:18[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __e[0m [0;32m'const std::error_code &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fc0220[0m <[0;33mline:391:7[0m, [0;33mline:394:7[0m>
[0;34m  `-[0m[0;1;35mDeclStmt[0m[0;33m 0x5fc0108[0m <[0;33mline:392:2[0m, [0;33mcol:58[0m>
[0;34m    `-[0m[0;1;32mVarDecl[0m[0;33m 0x5fbff88[0m <[0;33mcol:2[0m, [0;33mcol:15[0m> [0;33mcol:15[0m used[0;1;36m __tmp[0m [0;32m'const std::size_t':'const unsigned long'[0m

Dumping std::is_error_code_enum:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5fcb570[0m parent 0x5faae38 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:205:3[0m, [0;33mcol:71[0m> [0;33mcol:22[0m invalid struct[0;1;36m is_error_code_enum[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m parsing_base_specifiers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'std::io_errc'[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fcb7a8[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m implicit struct[0;1;36m is_error_code_enum[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x5fcba20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:209:3[0m, [0;33mline:211:68[0m> [0;33mline:210:3[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::io_errc) noexcept'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fcb928[0m <[0;33mcol:19[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m __e[0m [0;32m'std::io_errc'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fcbca8[0m <[0;33mline:211:3[0m, [0;33mcol:68[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fcbc98[0m <[0;33mcol:5[0m, [0;33mcol:65[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5fcbc80[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5fcbc50[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::error_code &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5fcbc38[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x5fcbbf8[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m            |-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5fcbb28[0m <[0;33mcol:23[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m static_cast<int> <IntegralCast>
[0;34m            | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcbb10[0m <[0;33mcol:40[0m> [0;32m'std::io_errc'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcbad8[0m <[0;33mcol:40[0m> [0;32m'std::io_errc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcb928[0m[0;1;36m '__e'[0m [0;32m'std::io_errc'[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fcbbd8[0m <[0;33mcol:46[0m, [0;33mcol:64[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcbbc0[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcbba0[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fcb878[0m[0;1;36m 'iostream_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m

Dumping std::bind_textdomain_codeset:
[0;1;32mFunctionDecl[0m[0;33m 0x6340c20[0m <[0;33m/usr/include/libintl.h:91:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/libintl.h:91:14[0m[0;1;36m bind_textdomain_codeset[0m [0;32m'char *(const char *, const char *) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6340af8[0m <[0;33mcol:39[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6340b78[0m <[0;33mline:92:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __codeset[0m [0;32m'const char *'[0m

Dumping std::std::codecvt_base:
[0;1;32mCXXRecordDecl[0m[0;33m 0x6341860[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:46:3[0m, [0;33mline:56:3[0m> [0;33mline:46:9[0m referenced class[0;1;36m codecvt_base[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6341978[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit class[0;1;36m codecvt_base[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6341a08[0m <[0;33mline:48:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m`-[0m[0;1;32mEnumDecl[0m[0;33m 0x6341a30[0m <[0;33mline:49:5[0m, [0;33mline:55:5[0m> [0;33mline:49:10[0m referenced[0;1;36m result[0m
[0;34m  |-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6341af0[0m <[0;33mline:51:7[0m> [0;33mcol:7[0m[0;1;36m ok[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m  |-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6341b40[0m <[0;33mline:52:7[0m> [0;33mcol:7[0m referenced[0;1;36m partial[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m  |-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6341b90[0m <[0;33mline:53:7[0m> [0;33mcol:7[0m referenced[0;1;36m error[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m  `-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6341be0[0m <[0;33mline:54:7[0m> [0;33mcol:7[0m referenced[0;1;36m noconv[0m [0;32m'std::std::codecvt_base::result'[0m

Dumping std::std::__codecvt_abstract_base:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6341e50[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m[0;1;36m __codecvt_abstract_base[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6341c48[0m <[0;33mline:67:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6341cb8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6341d28[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6341dc0[0m <[0;33mline:68:5[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m| |-[0mpublic [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m| |-[0mpublic [0;32m'std::std::codecvt_base'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63421c8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m __codecvt_abstract_base[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6342258[0m <[0;33mline:71:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6342330[0m <[0;33mline:73:7[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m result[0m [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x63422c0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m| |   `-[0m[0;32mEnumType[0m[0;33m 0x6341ad0[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m| |     `-[0m[0;1;32mEnum[0m[0;33m 0x6341a30[0m[0;1;36m 'result'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6342398[0m <[0;33mline:74:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m intern_type[0m [0;32m'_InternT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6341c90[0m [0;32m'_InternT'[0m dependent depth 0 index 0
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6341c48[0m[0;1;36m '_InternT'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6342400[0m <[0;33mline:75:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m extern_type[0m [0;32m'_ExternT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6341d00[0m [0;32m'_ExternT'[0m dependent depth 0 index 1
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6341cb8[0m[0;1;36m '_ExternT'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6342468[0m <[0;33mline:76:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m state_type[0m [0;32m'_StateT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6341d70[0m [0;32m'_StateT'[0m dependent depth 0 index 2
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6341d28[0m[0;1;36m '_StateT'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6342b28[0m <[0;33mline:115:7[0m, [0;33mline:123:7[0m> [0;33mline:116:7[0m[0;1;36m out[0m [0;32m'std::std::__codecvt_abstract_base::result (std::std::__codecvt_abstract_base::state_type &, const std::std::__codecvt_abstract_base::intern_type *, const std::std::__codecvt_abstract_base::intern_type *, const std::std::__codecvt_abstract_base::intern_type *&, std::std::__codecvt_abstract_base::extern_type *, std::std::__codecvt_abstract_base::extern_type *, std::std::__codecvt_abstract_base::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342538[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __state[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63425f8[0m <[0;33mcol:32[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m __from[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342670[0m <[0;33mline:117:4[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __from_end[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342750[0m <[0;33mcol:35[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __from_next[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342818[0m <[0;33mline:118:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __to[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342890[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m __to_end[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342970[0m <[0;33mline:119:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m referenced[0;1;36m __to_next[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6345260[0m <[0;33mline:120:7[0m, [0;33mline:123:7[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6345250[0m <[0;33mline:121:2[0m, [0;33mline:122:33[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x63451f8[0m <[0;33mline:121:9[0m, [0;33mline:122:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x63450d0[0m <[0;33mline:121:9[0m, [0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_out
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x63450c0[0m <[0;33mcol:9[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345118[0m <[0;33mcol:22[0m> [0;32m'std::std::__codecvt_abstract_base::state_type':'_StateT'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342538[0m[0;1;36m '__state'[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345138[0m <[0;33mcol:31[0m> [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63425f8[0m[0;1;36m '__from'[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345158[0m <[0;33mcol:39[0m> [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342670[0m[0;1;36m '__from_end'[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345178[0m <[0;33mcol:51[0m> [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342750[0m[0;1;36m '__from_next'[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345198[0m <[0;33mline:122:8[0m> [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342818[0m[0;1;36m '__to'[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63451b8[0m <[0;33mcol:14[0m> [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342890[0m[0;1;36m '__to_end'[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63451d8[0m <[0;33mcol:24[0m> [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342970[0m[0;1;36m '__to_next'[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6342ec8[0m <[0;33mline:154:7[0m, [0;33mline:157:68[0m> [0;33mline:155:7[0m[0;1;36m unshift[0m [0;32m'std::std::__codecvt_abstract_base::result (std::std::__codecvt_abstract_base::state_type &, std::std::__codecvt_abstract_base::extern_type *, std::std::__codecvt_abstract_base::extern_type *, std::std::__codecvt_abstract_base::extern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342c10[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __state[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342c88[0m <[0;33mcol:36[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __to[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342d00[0m <[0;33mcol:55[0m, [0;33mcol:68[0m> [0;33mcol:68[0m referenced[0;1;36m __to_end[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342d80[0m <[0;33mline:156:8[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __to_next[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63453a0[0m <[0;33mline:157:7[0m, [0;33mcol:68[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6345390[0m <[0;33mcol:9[0m, [0;33mcol:65[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6345350[0m <[0;33mcol:16[0m, [0;33mcol:65[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6345288[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_unshift
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6345278[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63452d0[0m <[0;33mcol:33[0m> [0;32m'std::std::__codecvt_abstract_base::state_type':'_StateT'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342c10[0m[0;1;36m '__state'[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63452f0[0m <[0;33mcol:42[0m> [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342c88[0m[0;1;36m '__to'[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345310[0m <[0;33mcol:47[0m> [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342d00[0m[0;1;36m '__to_end'[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345330[0m <[0;33mcol:56[0m> [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342d80[0m[0;1;36m '__to_next'[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6343518[0m <[0;33mline:195:7[0m, [0;33mline:203:7[0m> [0;33mline:196:7[0m[0;1;36m in[0m [0;32m'std::std::__codecvt_abstract_base::result (std::std::__codecvt_abstract_base::state_type &, const std::std::__codecvt_abstract_base::extern_type *, const std::std::__codecvt_abstract_base::extern_type *, const std::std::__codecvt_abstract_base::extern_type *&, std::std::__codecvt_abstract_base::intern_type *, std::std::__codecvt_abstract_base::intern_type *, std::std::__codecvt_abstract_base::intern_type *&) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6342f98[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __state[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343038[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __from[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63430b0[0m <[0;33mline:197:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __from_end[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343190[0m <[0;33mcol:34[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced[0;1;36m __from_next[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343238[0m <[0;33mline:198:3[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __to[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63432b0[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __to_end[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343390[0m <[0;33mline:199:3[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __to_next[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6345558[0m <[0;33mline:200:7[0m, [0;33mline:203:7[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6345548[0m <[0;33mline:201:2[0m, [0;33mline:202:32[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x63454f0[0m <[0;33mline:201:9[0m, [0;33mline:202:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x63453c8[0m <[0;33mline:201:9[0m, [0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_in
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x63453b8[0m <[0;33mcol:9[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345410[0m <[0;33mcol:21[0m> [0;32m'std::std::__codecvt_abstract_base::state_type':'_StateT'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6342f98[0m[0;1;36m '__state'[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345430[0m <[0;33mcol:30[0m> [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6343038[0m[0;1;36m '__from'[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345450[0m <[0;33mcol:38[0m> [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63430b0[0m[0;1;36m '__from_end'[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345470[0m <[0;33mcol:50[0m> [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6343190[0m[0;1;36m '__from_next'[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345490[0m <[0;33mline:202:7[0m> [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6343238[0m[0;1;36m '__to'[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63454b0[0m <[0;33mcol:13[0m> [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63432b0[0m[0;1;36m '__to_end'[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63454d0[0m <[0;33mcol:23[0m> [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6343390[0m[0;1;36m '__to_next'[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6343648[0m <[0;33mline:205:7[0m, [0;33mline:207:37[0m> [0;33mline:206:7[0m[0;1;36m encoding[0m [0;32m'int () const throw()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63455f8[0m <[0;33mline:207:7[0m, [0;33mcol:37[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x63455e8[0m <[0;33mcol:9[0m, [0;33mcol:34[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x63455c8[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6345580[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_encoding
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6345570[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6343740[0m <[0;33mline:209:7[0m, [0;33mline:211:42[0m> [0;33mline:210:7[0m[0;1;36m always_noconv[0m [0;32m'bool () const throw()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6345698[0m <[0;33mline:211:7[0m, [0;33mcol:42[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6345688[0m <[0;33mcol:9[0m, [0;33mcol:39[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6345668[0m <[0;33mcol:16[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6345620[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_always_noconv
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6345610[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6343aa0[0m <[0;33mline:213:7[0m, [0;33mline:216:64[0m> [0;33mline:214:7[0m[0;1;36m length[0m [0;32m'int (std::std::__codecvt_abstract_base::state_type &, const std::std::__codecvt_abstract_base::extern_type *, const std::std::__codecvt_abstract_base::extern_type *, std::size_t) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63437f0[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __state[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343868[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced[0;1;36m __from[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63438e0[0m <[0;33mline:215:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __end[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343958[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63457d8[0m <[0;33mline:216:7[0m, [0;33mcol:64[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x63457c8[0m <[0;33mcol:9[0m, [0;33mcol:61[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6345788[0m <[0;33mcol:16[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x63456c0[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_length
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x63456b0[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345708[0m <[0;33mcol:32[0m> [0;32m'std::std::__codecvt_abstract_base::state_type':'_StateT'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63437f0[0m[0;1;36m '__state'[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345728[0m <[0;33mcol:41[0m> [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6343868[0m[0;1;36m '__from'[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345748[0m <[0;33mcol:49[0m> [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63438e0[0m[0;1;36m '__end'[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345768[0m <[0;33mcol:56[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6343958[0m[0;1;36m '__max'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6343b90[0m <[0;33mline:218:7[0m, [0;33mline:220:39[0m> [0;33mline:219:7[0m[0;1;36m max_length[0m [0;32m'int () const throw()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6345878[0m <[0;33mline:220:7[0m, [0;33mcol:39[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6345868[0m <[0;33mcol:9[0m, [0;33mcol:36[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6345848[0m <[0;33mcol:16[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6345800[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_max_length
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x63457f0[0m <[0;33mcol:16[0m> [0;32m'const __codecvt_abstract_base<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6343c30[0m <[0;33mline:222:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6343d38[0m <[0;33mline:223:7[0m, [0;33mline:224:76[0m> [0;33mcol:7[0m[0;1;36m __codecvt_abstract_base<_InternT, _ExternT, _StateT>[0m [0;32m'void (std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343c68[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:38[0m referenced[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63450a8[0m <[0;33mcol:47[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6345088[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'locale::facet':'std::locale::facet'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x63458b8[0m <[0;33mcol:65[0m, [0;33mcol:72[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6345898[0m <[0;33mcol:66[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6343c68[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6345980[0m <[0;33mcol:74[0m, [0;33mcol:76[0m>
[0;34m| |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6343e30[0m <[0;33mline:226:7[0m, [0;33mline:227:36[0m> [0;33mcol:7[0m[0;1;36m ~__codecvt_abstract_base<_InternT, _ExternT, _StateT>[0m [0;32m'void ()'[0m virtual
[0;34m| | |-[0mOverrides: [ 0x5f78898 facet::~facet 'void () noexcept' ]
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6345990[0m <[0;33mcol:34[0m, [0;33mcol:36[0m>
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6344290[0m <[0;33mline:236:7[0m, [0;33mline:240:40[0m> [0;33mline:237:7[0m[0;1;36m do_out[0m [0;32m'std::std::__codecvt_abstract_base::result (std::std::__codecvt_abstract_base::state_type &, const std::std::__codecvt_abstract_base::intern_type *, const std::std::__codecvt_abstract_base::intern_type *, const std::std::__codecvt_abstract_base::intern_type *&, std::std::__codecvt_abstract_base::extern_type *, std::std::__codecvt_abstract_base::extern_type *, std::std::__codecvt_abstract_base::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343ef0[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343f68[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6343fe0[0m <[0;33mline:238:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344060[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63440d8[0m <[0;33mline:239:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344150[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63441d0[0m <[0;33mline:240:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6344590[0m <[0;33mline:242:7[0m, [0;33mline:244:60[0m> [0;33mline:243:7[0m[0;1;36m do_unshift[0m [0;32m'std::std::__codecvt_abstract_base::result (std::std::__codecvt_abstract_base::state_type &, std::std::__codecvt_abstract_base::extern_type *, std::std::__codecvt_abstract_base::extern_type *, std::std::__codecvt_abstract_base::extern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344378[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63443f0[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344468[0m <[0;33mline:244:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63444e8[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6344a00[0m <[0;33mline:246:7[0m, [0;33mline:250:39[0m> [0;33mline:247:7[0m[0;1;36m do_in[0m [0;32m'std::std::__codecvt_abstract_base::result (std::std::__codecvt_abstract_base::state_type &, const std::std::__codecvt_abstract_base::extern_type *, const std::std::__codecvt_abstract_base::extern_type *, const std::std::__codecvt_abstract_base::extern_type *&, std::std::__codecvt_abstract_base::intern_type *, std::std::__codecvt_abstract_base::intern_type *, std::std::__codecvt_abstract_base::intern_type *&) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344660[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63446d8[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344750[0m <[0;33mline:248:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63447d0[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344848[0m <[0;33mline:249:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63448c0[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344940[0m <[0;33mline:250:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::std::__codecvt_abstract_base::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6344b08[0m <[0;33mline:252:7[0m, [0;33mline:253:37[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6344bd0[0m <[0;33mline:255:7[0m, [0;33mline:256:42[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual pure
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6344e98[0m <[0;33mline:258:7[0m, [0;33mline:260:51[0m> [0;33mline:259:7[0m[0;1;36m do_length[0m [0;32m'int (std::std::__codecvt_abstract_base::state_type &, const std::std::__codecvt_abstract_base::extern_type *, const std::std::__codecvt_abstract_base::extern_type *, std::size_t) const'[0m virtual pure
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344c80[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::std::__codecvt_abstract_base::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344cf8[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344d70[0m <[0;33mline:260:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::std::__codecvt_abstract_base::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6344de8[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6344f88[0m <[0;33mline:262:7[0m, [0;33mline:263:39[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual pure
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x63516c8[0m <[0;33mline:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| `-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6353e48[0m <[0;33mline:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| `-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6356558[0m <[0;33mline:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| `-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6359218[0m <[0;33mline:67:3[0m, [0;33mline:264:5[0m> [0;33mline:68:11[0m class[0;1;36m __codecvt_abstract_base[0m
[0;34m  |-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m  `-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::std::codecvt:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6345bb0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:273:4[0m, [0;33mline:331:5[0m> [0;33mline:274:11[0m[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63459a0[0m <[0;33mline:273:13[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6345a18[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6345a88[0m <[0;33mcol:51[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6345b20[0m <[0;33mline:274:5[0m, [0;33mline:331:5[0m> [0;33mline:274:11[0m class[0;1;36m codecvt[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared
[0;34m| |-[0mpublic [0;32m'__codecvt_abstract_base<_InternT, _ExternT, _StateT>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x634ee80[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x634ef10[0m <[0;33mline:277:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x634ef98[0m <[0;33mline:279:7[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m result[0m [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x63422c0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m| |   `-[0m[0;32mEnumType[0m[0;33m 0x6341ad0[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m| |     `-[0m[0;1;32mEnum[0m[0;33m 0x6341a30[0m[0;1;36m 'result'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x634f000[0m <[0;33mline:280:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m intern_type[0m [0;32m'_InternT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x63459f0[0m [0;32m'_InternT'[0m dependent depth 0 index 0
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x63459a0[0m[0;1;36m '_InternT'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x634f068[0m <[0;33mline:281:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m extern_type[0m [0;32m'_ExternT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6345a60[0m [0;32m'_ExternT'[0m dependent depth 0 index 1
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6345a18[0m[0;1;36m '_ExternT'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x634f0d0[0m <[0;33mline:282:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m state_type[0m [0;32m'_StateT'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6345ad0[0m [0;32m'_StateT'[0m dependent depth 0 index 2
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6345a88[0m[0;1;36m '_StateT'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x634f128[0m <[0;33mline:284:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x634f160[0m <[0;33mline:285:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m _M_c_locale_codecvt[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x634f1b0[0m <[0;33mline:287:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mVarDecl[0m[0;33m 0x634f238[0m <[0;33mline:288:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x634f388[0m <[0;33mline:290:7[0m, [0;33mline:294:9[0m> [0;33mline:291:7[0m[0;1;36m codecvt<_InternT, _ExternT, _StateT>[0m [0;32m'void (std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634f2b0[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m referenced[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6350c50[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6350c30[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'__codecvt_abstract_base<_InternT, _ExternT, _StateT>'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6350dc0[0m <[0;33mline:292:62[0m, [0;33mcol:69[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6350da0[0m <[0;33mcol:63[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x634f2b0[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x634f160[0m[0;1;36m '_M_c_locale_codecvt'[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6350e48[0m <[0;33mline:293:22[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m <[0;31mNullToPointer[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6350e08[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6350e98[0m <[0;33mline:294:7[0m, [0;33mcol:9[0m>
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x634f558[0m <[0;33mline:296:7[0m, [0;33mline:297:51[0m> [0;33mcol:7[0m[0;1;36m codecvt<_InternT, _ExternT, _StateT>[0m [0;32m'void (std::__c_locale, std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634f448[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __cloc[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634f4c0[0m <[0;33mcol:34[0m, [0;33mcol:50[0m> [0;33mcol:41[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6350c88[0m <[0;33mcol:50[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6350c68[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x634f610[0m <[0;33mline:299:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x634f680[0m <[0;33mline:300:7[0m, [0;33mline:301:20[0m> [0;33mcol:7[0m[0;1;36m ~codecvt<_InternT, _ExternT, _StateT>[0m [0;32m'void ()'[0m virtual
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6350ea8[0m <[0;33mcol:18[0m, [0;33mcol:20[0m>
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x634fcd8[0m <[0;33mline:303:7[0m, [0;33mline:307:32[0m> [0;33mline:304:7[0m[0;1;36m do_out[0m [0;32m'std::std::codecvt::result (std::std::codecvt::state_type &, const std::std::codecvt::intern_type *, const std::std::codecvt::intern_type *, const std::std::codecvt::intern_type *&, std::std::codecvt::extern_type *, std::std::codecvt::extern_type *, std::std::codecvt::extern_type *&) const'[0m virtual
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634f7a8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::std::codecvt::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634f868[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634f8e0[0m <[0;33mline:305:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634f990[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt::intern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634fa58[0m <[0;33mline:306:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634fad0[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634fb80[0m <[0;33mline:307:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6350028[0m <[0;33mline:309:7[0m, [0;33mline:311:52[0m> [0;33mline:310:7[0m[0;1;36m do_unshift[0m [0;32m'std::std::codecvt::result (std::std::codecvt::state_type &, std::std::codecvt::extern_type *, std::std::codecvt::extern_type *, std::std::codecvt::extern_type *&) const'[0m virtual
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634fdc0[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::std::codecvt::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634fe38[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634feb0[0m <[0;33mline:311:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x634ff30[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x63505b8[0m <[0;33mline:313:7[0m, [0;33mline:317:31[0m> [0;33mline:314:7[0m[0;1;36m do_in[0m [0;32m'std::std::codecvt::result (std::std::codecvt::state_type &, const std::std::codecvt::extern_type *, const std::std::codecvt::extern_type *, const std::std::codecvt::extern_type *&, std::std::codecvt::intern_type *, std::std::codecvt::intern_type *, std::std::codecvt::intern_type *&) const'[0m virtual
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63500f8[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::std::codecvt::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6350198[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6350210[0m <[0;33mline:315:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63502c0[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt::extern_type *&'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6350368[0m <[0;33mline:316:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::std::codecvt::intern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63503e0[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt::intern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6350490[0m <[0;33mline:317:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x63506c0[0m <[0;33mline:319:7[0m, [0;33mline:320:33[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6350788[0m <[0;33mline:322:7[0m, [0;33mline:323:38[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6350aa0[0m <[0;33mline:325:7[0m, [0;33mline:327:43[0m> [0;33mline:326:7[0m[0;1;36m do_length[0m [0;32m'int (std::std::codecvt::state_type &, const std::std::codecvt::extern_type *, const std::std::codecvt::extern_type *, std::size_t) const'[0m virtual
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6350838[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::std::codecvt::state_type &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63508b0[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt::extern_type *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6350928[0m <[0;33mline:327:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::std::codecvt::extern_type *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63509a0[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6350b90[0m <[0;33mline:329:7[0m, [0;33mline:330:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x63513e8[0m[0;1;36m 'codecvt'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6353b68[0m[0;1;36m 'codecvt'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6356278[0m[0;1;36m 'codecvt'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6358f40[0m[0;1;36m 'codecvt'[0m

Dumping std::std::codecvt::id:
[0;1;32mVarDecl[0m[0;33m 0x63512d8[0m parent 0x6345b20 prev 0x634f238 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:333:3[0m, [0;33mline:334:54[0m> [0;33mcol:54[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m callinit
[0;34m`-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6351380[0m <[0;33mcol:54[0m> [0;32m'locale::id':'std::locale::id'[0m[0;36m[0m[0;36m[0m [0;32m'void ()'[0m

Dumping std::std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x63513e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:337:3[0m, [0;33mline:393:3[0m> [0;33mline:338:11[0m invalid class[0;1;36m codecvt[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m parsing_base_specifiers polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63518d0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mFriendDecl[0m[0;33m 0x6351a60[0m <[0;33mline:341:7[0m, [0;33mcol:33[0m> [0;33mcol:14[0m [0;32m'class messages<char>':'std::__cxx11::messages<char>'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6351aa0[0m <[0;33mline:343:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6351ad8[0m <[0;33mline:345:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m intern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6351b40[0m <[0;33mline:346:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m extern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6351ba8[0m <[0;33mline:347:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m state_type[0m [0;32m'mbstate_t':'__mbstate_t'[0m
[0;34m| `-[0m[0;32mTypedefType[0m[0;33m 0x59e2ac0[0m [0;32m'mbstate_t'[0m sugar
[0;34m|   |-[0m[0;1;32mTypedef[0m[0;33m 0x59bc470[0m[0;1;36m 'mbstate_t'[0m
[0;34m|   `-[0m[0;32mTypedefType[0m[0;33m 0x59bc440[0m [0;32m'__mbstate_t'[0m sugar
[0;34m|     |-[0m[0;1;32mTypedef[0m[0;33m 0x59bc3c8[0m[0;1;36m '__mbstate_t'[0m
[0;34m|     `-[0m[0;32mElaboratedType[0m[0;33m 0x59bc370[0m [0;32m'struct __mbstate_t'[0m sugar
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x59bbf20[0m [0;32m'__mbstate_t'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x59bbe90[0m[0;1;36m ''[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6351c00[0m <[0;33mline:349:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x6351c38[0m <[0;33mline:350:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m _M_c_locale_codecvt[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6351c88[0m <[0;33mline:352:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mVarDecl[0m[0;33m 0x6351d10[0m <[0;33mline:353:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6351e58[0m <[0;33mline:355:7[0m, [0;33mline:356:32[0m> [0;33mcol:7[0m[0;1;36m codecvt[0m [0;32m'void (std::size_t)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6351d88[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6353ad8[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6353ab8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6352028[0m <[0;33mline:358:7[0m, [0;33mline:359:51[0m> [0;33mcol:7[0m[0;1;36m codecvt[0m [0;32m'void (std::__c_locale, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6351f18[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __cloc[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6351f90[0m <[0;33mcol:34[0m, [0;33mcol:50[0m> [0;33mcol:41[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6353b10[0m <[0;33mcol:50[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6353af0[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x63520e0[0m <[0;33mline:361:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6352150[0m <[0;33mline:362:7[0m, [0;33mline:363:16[0m> [0;33mcol:7[0m[0;1;36m ~codecvt[0m [0;32m'void ()'[0m virtual noexcept-unevaluated 0x6352150
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x63528c0[0m <[0;33mline:365:7[0m, [0;33mline:369:32[0m> [0;33mline:366:7[0m invalid[0;1;36m do_out[0m [0;32m'int (std::std::codecvt<char, char, __mbstate_t>::state_type &, const std::std::codecvt<char, char, __mbstate_t>::intern_type *, const std::std::codecvt<char, char, __mbstate_t>::intern_type *, const std::std::codecvt<char, char, __mbstate_t>::intern_type *&, std::std::codecvt<char, char, __mbstate_t>::extern_type *, std::std::codecvt<char, char, __mbstate_t>::extern_type *, std::std::codecvt<char, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63522c8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352388[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352400[0m <[0;33mline:367:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63524e0[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt<char, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63525a8[0m <[0;33mline:368:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352620[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352700[0m <[0;33mline:369:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6352c70[0m <[0;33mline:371:7[0m, [0;33mline:373:52[0m> [0;33mline:372:7[0m invalid[0;1;36m do_unshift[0m [0;32m'int (std::std::codecvt<char, char, __mbstate_t>::state_type &, std::std::codecvt<char, char, __mbstate_t>::extern_type *, std::std::codecvt<char, char, __mbstate_t>::extern_type *, std::std::codecvt<char, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63529b8[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352a30[0m <[0;33mcol:39[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352aa8[0m <[0;33mline:373:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352b28[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6353220[0m <[0;33mline:375:7[0m, [0;33mline:379:31[0m> [0;33mline:376:7[0m invalid[0;1;36m do_in[0m [0;32m'int (std::std::codecvt<char, char, __mbstate_t>::state_type &, const std::std::codecvt<char, char, __mbstate_t>::extern_type *, const std::std::codecvt<char, char, __mbstate_t>::extern_type *, const std::std::codecvt<char, char, __mbstate_t>::extern_type *&, std::std::codecvt<char, char, __mbstate_t>::intern_type *, std::std::codecvt<char, char, __mbstate_t>::intern_type *, std::std::codecvt<char, char, __mbstate_t>::intern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352d50[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352df8[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352e70[0m <[0;33mline:377:6[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352f20[0m <[0;33mcol:37[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt<char, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352fc8[0m <[0;33mline:378:6[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6353040[0m <[0;33mcol:25[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::intern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63530f0[0m <[0;33mline:379:6[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::intern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6353328[0m <[0;33mline:381:7[0m, [0;33mline:382:33[0m> [0;33mcol:7[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x63533f0[0m <[0;33mline:384:7[0m, [0;33mline:385:38[0m> [0;33mcol:7[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6353750[0m <[0;33mline:387:7[0m, [0;33mline:389:43[0m> [0;33mline:388:7[0m[0;1;36m do_length[0m [0;32m'int (std::std::codecvt<char, char, __mbstate_t>::state_type &, const std::std::codecvt<char, char, __mbstate_t>::extern_type *, const std::std::codecvt<char, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63534a0[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'std::std::codecvt<char, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6353518[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6353590[0m <[0;33mline:389:3[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __end[0m [0;32m'const std::std::codecvt<char, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6353608[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6353840[0m <[0;33mline:391:7[0m, [0;33mline:392:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6353938[0m <[0;33mline:338:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::std::codecvt<char, char, mbstate_t> &(const std::std::codecvt<char, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x6353938
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6353a48[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt<char, char, mbstate_t> &'[0m

Dumping std::std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6353b68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:400:3[0m, [0;33mline:458:5[0m> [0;33mline:401:11[0m invalid class[0;1;36m codecvt[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m parsing_base_specifiers polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared
[0;34m|-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6354050[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mFriendDecl[0m[0;33m 0x63541e0[0m <[0;33mline:404:7[0m, [0;33mcol:36[0m> [0;33mcol:14[0m [0;32m'class messages<wchar_t>':'std::__cxx11::messages<wchar_t>'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6354220[0m <[0;33mline:406:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6354258[0m <[0;33mline:408:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m intern_type[0m [0;32m'wchar_t'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5909ea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x63542c0[0m <[0;33mline:409:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m extern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6354328[0m <[0;33mline:410:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m state_type[0m [0;32m'mbstate_t':'__mbstate_t'[0m
[0;34m| `-[0m[0;32mTypedefType[0m[0;33m 0x59e2ac0[0m [0;32m'mbstate_t'[0m sugar
[0;34m|   |-[0m[0;1;32mTypedef[0m[0;33m 0x59bc470[0m[0;1;36m 'mbstate_t'[0m
[0;34m|   `-[0m[0;32mTypedefType[0m[0;33m 0x59bc440[0m [0;32m'__mbstate_t'[0m sugar
[0;34m|     |-[0m[0;1;32mTypedef[0m[0;33m 0x59bc3c8[0m[0;1;36m '__mbstate_t'[0m
[0;34m|     `-[0m[0;32mElaboratedType[0m[0;33m 0x59bc370[0m [0;32m'struct __mbstate_t'[0m sugar
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x59bbf20[0m [0;32m'__mbstate_t'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x59bbe90[0m[0;1;36m ''[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6354380[0m <[0;33mline:412:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x63543b8[0m <[0;33mline:413:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m _M_c_locale_codecvt[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6354408[0m <[0;33mline:415:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mVarDecl[0m[0;33m 0x6354490[0m <[0;33mline:416:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x63545d8[0m <[0;33mline:418:7[0m, [0;33mline:419:32[0m> [0;33mcol:7[0m[0;1;36m codecvt[0m [0;32m'void (std::size_t)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354508[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63561e8[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x63561c8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x63547a8[0m <[0;33mline:421:7[0m, [0;33mline:422:51[0m> [0;33mcol:7[0m[0;1;36m codecvt[0m [0;32m'void (std::__c_locale, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354698[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __cloc[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354710[0m <[0;33mcol:34[0m, [0;33mcol:50[0m> [0;33mcol:41[0m[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6356220[0m <[0;33mcol:50[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6356200[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6354860[0m <[0;33mline:424:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x63548d0[0m <[0;33mline:425:7[0m, [0;33mline:426:16[0m> [0;33mcol:7[0m[0;1;36m ~codecvt[0m [0;32m'void ()'[0m virtual noexcept-unevaluated 0x63548d0
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6354fe0[0m <[0;33mline:428:7[0m, [0;33mline:432:32[0m> [0;33mline:429:7[0m invalid[0;1;36m do_out[0m [0;32m'int (std::std::codecvt<wchar_t, char, __mbstate_t>::state_type &, const std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *, const std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *, const std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *&, std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354a18[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354ad8[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354b50[0m <[0;33mline:430:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354c30[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354cf8[0m <[0;33mline:431:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354d70[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6354e20[0m <[0;33mline:432:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6355340[0m <[0;33mline:434:7[0m, [0;33mline:437:29[0m> [0;33mline:435:7[0m invalid[0;1;36m do_unshift[0m [0;32m'int (std::std::codecvt<wchar_t, char, __mbstate_t>::state_type &, std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63550d8[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355150[0m <[0;33mline:436:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63551c8[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355248[0m <[0;33mline:437:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6355980[0m <[0;33mline:439:7[0m, [0;33mline:444:32[0m> [0;33mline:440:7[0m invalid[0;1;36m do_in[0m [0;32m'int (std::std::codecvt<wchar_t, char, __mbstate_t>::state_type &, const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&, std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *, std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *, std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355420[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63554c8[0m <[0;33mline:441:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355540[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63555f0[0m <[0;33mline:442:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355698[0m <[0;33mline:443:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355710[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63557f0[0m <[0;33mline:444:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6355a88[0m <[0;33mline:446:7[0m, [0;33mline:447:37[0m> [0;33mcol:11[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6355b50[0m <[0;33mline:449:7[0m, [0;33mline:450:43[0m> [0;33mcol:12[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6355e60[0m <[0;33mline:452:7[0m, [0;33mline:454:47[0m> [0;33mline:453:11[0m[0;1;36m do_length[0m [0;32m'int (std::std::codecvt<wchar_t, char, __mbstate_t>::state_type &, const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355c00[0m <[0;33mcol:21[0m, [0;33mcol:31[0m> [0;33mcol:32[0m [0;32m'std::std::codecvt<wchar_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355c78[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355cf0[0m <[0;33mline:454:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::std::codecvt<wchar_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6355d68[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6355f50[0m <[0;33mline:456:7[0m, [0;33mline:457:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6356048[0m <[0;33mline:401:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::std::codecvt<wchar_t, char, mbstate_t> &(const std::std::codecvt<wchar_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x6356048
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6356158[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt<wchar_t, char, mbstate_t> &'[0m

Dumping std::std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6356278[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:467:3[0m, [0;33mline:518:5[0m> [0;33mline:468:11[0m invalid class[0;1;36m codecvt[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m parsing_base_specifiers polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared
[0;34m|-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6356760[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x63567f0[0m <[0;33mline:471:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6356828[0m <[0;33mline:473:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m intern_type[0m [0;32m'char16_t'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5909ee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6356890[0m <[0;33mline:474:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m extern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x63568f8[0m <[0;33mline:475:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m state_type[0m [0;32m'mbstate_t':'__mbstate_t'[0m
[0;34m| `-[0m[0;32mTypedefType[0m[0;33m 0x59e2ac0[0m [0;32m'mbstate_t'[0m sugar
[0;34m|   |-[0m[0;1;32mTypedef[0m[0;33m 0x59bc470[0m[0;1;36m 'mbstate_t'[0m
[0;34m|   `-[0m[0;32mTypedefType[0m[0;33m 0x59bc440[0m [0;32m'__mbstate_t'[0m sugar
[0;34m|     |-[0m[0;1;32mTypedef[0m[0;33m 0x59bc3c8[0m[0;1;36m '__mbstate_t'[0m
[0;34m|     `-[0m[0;32mElaboratedType[0m[0;33m 0x59bc370[0m [0;32m'struct __mbstate_t'[0m sugar
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x59bbf20[0m [0;32m'__mbstate_t'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x59bbe90[0m[0;1;36m ''[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6356950[0m <[0;33mline:477:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mVarDecl[0m[0;33m 0x63569d8[0m <[0;33mline:478:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6357360[0m <[0;33mline:480:7[0m, [0;33mline:482:70[0m> [0;33mline:481:7[0m used[0;1;36m codecvt[0m [0;32m'void (std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6356a50[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6358d98[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6358d78[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6358ef0[0m <[0;33mline:482:68[0m, [0;33mcol:70[0m>
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6357410[0m <[0;33mline:484:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6357480[0m <[0;33mline:485:7[0m, [0;33mline:486:16[0m> [0;33mcol:7[0m[0;1;36m ~codecvt[0m [0;32m'void () noexcept'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6357b90[0m <[0;33mline:488:7[0m, [0;33mline:492:32[0m> [0;33mline:489:7[0m invalid[0;1;36m do_out[0m [0;32m'int (std::std::codecvt<char16_t, char, __mbstate_t>::state_type &, const std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *, const std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *, const std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *&, std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63575c8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357688[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357700[0m <[0;33mline:490:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63577e0[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63578a8[0m <[0;33mline:491:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357920[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63579d0[0m <[0;33mline:492:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6357ef0[0m <[0;33mline:494:7[0m, [0;33mline:497:29[0m> [0;33mline:495:7[0m invalid[0;1;36m do_unshift[0m [0;32m'int (std::std::codecvt<char16_t, char, __mbstate_t>::state_type &, std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357c88[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357d00[0m <[0;33mline:496:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357d78[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357df8[0m <[0;33mline:497:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6358530[0m <[0;33mline:499:7[0m, [0;33mline:504:32[0m> [0;33mline:500:7[0m invalid[0;1;36m do_in[0m [0;32m'int (std::std::codecvt<char16_t, char, __mbstate_t>::state_type &, const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *&, std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *, std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *, std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357fd0[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358078[0m <[0;33mline:501:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63580f0[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63581a0[0m <[0;33mline:502:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358248[0m <[0;33mline:503:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63582c0[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63583a0[0m <[0;33mline:504:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6358638[0m <[0;33mline:506:7[0m, [0;33mline:507:37[0m> [0;33mcol:11[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6358700[0m <[0;33mline:509:7[0m, [0;33mline:510:43[0m> [0;33mcol:12[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6358a10[0m <[0;33mline:512:7[0m, [0;33mline:514:47[0m> [0;33mline:513:11[0m[0;1;36m do_length[0m [0;32m'int (std::std::codecvt<char16_t, char, __mbstate_t>::state_type &, const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63587b0[0m <[0;33mcol:21[0m, [0;33mcol:31[0m> [0;33mcol:32[0m [0;32m'std::std::codecvt<char16_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358828[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63588a0[0m <[0;33mline:514:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::std::codecvt<char16_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358918[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6358b00[0m <[0;33mline:516:7[0m, [0;33mline:517:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6358bf8[0m <[0;33mline:468:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::std::codecvt<char16_t, char, mbstate_t> &(const std::std::codecvt<char16_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x6358bf8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358d08[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt<char16_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635d0b8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m codecvt[0m [0;32m'void (const std::std::codecvt<char16_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x635d0b8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d1c8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt<char16_t, char, mbstate_t> &'[0m

Dumping std::std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6358f40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:524:3[0m, [0;33mline:575:5[0m> [0;33mline:525:11[0m invalid class[0;1;36m codecvt[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m parsing_base_specifiers polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared
[0;34m|-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6359420[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x63594b0[0m <[0;33mline:528:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x63594e8[0m <[0;33mline:530:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m intern_type[0m [0;32m'char32_t'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5909f00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6359550[0m <[0;33mline:531:7[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m extern_type[0m [0;32m'char'[0m
[0;34m| `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mTypedefDecl[0m[0;33m 0x63595b8[0m <[0;33mline:532:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m state_type[0m [0;32m'mbstate_t':'__mbstate_t'[0m
[0;34m| `-[0m[0;32mTypedefType[0m[0;33m 0x59e2ac0[0m [0;32m'mbstate_t'[0m sugar
[0;34m|   |-[0m[0;1;32mTypedef[0m[0;33m 0x59bc470[0m[0;1;36m 'mbstate_t'[0m
[0;34m|   `-[0m[0;32mTypedefType[0m[0;33m 0x59bc440[0m [0;32m'__mbstate_t'[0m sugar
[0;34m|     |-[0m[0;1;32mTypedef[0m[0;33m 0x59bc3c8[0m[0;1;36m '__mbstate_t'[0m
[0;34m|     `-[0m[0;32mElaboratedType[0m[0;33m 0x59bc370[0m [0;32m'struct __mbstate_t'[0m sugar
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x59bbf20[0m [0;32m'__mbstate_t'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x59bbe90[0m[0;1;36m ''[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6359610[0m <[0;33mline:534:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mVarDecl[0m[0;33m 0x6359698[0m <[0;33mline:535:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m id[0m [0;32m'locale::id':'std::locale::id'[0m static
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x63597e8[0m <[0;33mline:537:7[0m, [0;33mline:539:70[0m> [0;33mline:538:7[0m used[0;1;36m codecvt[0m [0;32m'void (std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6359710[0m <[0;33mcol:15[0m, [0;33mcol:31[0m> [0;33mcol:22[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b228[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635b208[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635b380[0m <[0;33mline:539:68[0m, [0;33mcol:70[0m>
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6359898[0m <[0;33mline:541:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6359908[0m <[0;33mline:542:7[0m, [0;33mline:543:16[0m> [0;33mcol:7[0m[0;1;36m ~codecvt[0m [0;32m'void () noexcept'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635a020[0m <[0;33mline:545:7[0m, [0;33mline:549:32[0m> [0;33mline:546:7[0m invalid[0;1;36m do_out[0m [0;32m'int (std::std::codecvt<char32_t, char, __mbstate_t>::state_type &, const std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *, const std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *, const std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *&, std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6359a58[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6359b18[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6359b90[0m <[0;33mline:547:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6359c70[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6359d38[0m <[0;33mline:548:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6359db0[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6359e60[0m <[0;33mline:549:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635a380[0m <[0;33mline:551:7[0m, [0;33mline:554:29[0m> [0;33mline:552:7[0m invalid[0;1;36m do_unshift[0m [0;32m'int (std::std::codecvt<char32_t, char, __mbstate_t>::state_type &, std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a118[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a190[0m <[0;33mline:553:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a208[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a288[0m <[0;33mline:554:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635a9c0[0m <[0;33mline:556:7[0m, [0;33mline:561:32[0m> [0;33mline:557:7[0m invalid[0;1;36m do_in[0m [0;32m'int (std::std::codecvt<char32_t, char, __mbstate_t>::state_type &, const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *&, std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *, std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *, std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *&) const'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a460[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __state[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a508[0m <[0;33mline:558:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a580[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from_end[0m [0;32m'const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a630[0m <[0;33mline:559:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __from_next[0m [0;32m'const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *&'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a6d8[0m <[0;33mline:560:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __to[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a750[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __to_end[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635a830[0m <[0;33mline:561:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __to_next[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::intern_type *&'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635aac8[0m <[0;33mline:563:7[0m, [0;33mline:564:37[0m> [0;33mcol:11[0m[0;1;36m do_encoding[0m [0;32m'int () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635ab90[0m <[0;33mline:566:7[0m, [0;33mline:567:43[0m> [0;33mcol:12[0m[0;1;36m do_always_noconv[0m [0;32m'bool () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635aea0[0m <[0;33mline:569:7[0m, [0;33mline:571:47[0m> [0;33mline:570:11[0m[0;1;36m do_length[0m [0;32m'int (std::std::codecvt<char32_t, char, __mbstate_t>::state_type &, const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *, const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *, std::size_t) const'[0m virtual
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ac40[0m <[0;33mcol:21[0m, [0;33mcol:31[0m> [0;33mcol:32[0m [0;32m'std::std::codecvt<char32_t, char, __mbstate_t>::state_type &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635acb8[0m <[0;33mcol:34[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __from[0m [0;32m'const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ad30[0m <[0;33mline:571:7[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __end[0m [0;32m'const std::std::codecvt<char32_t, char, __mbstate_t>::extern_type *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ada8[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __max[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635af90[0m <[0;33mline:573:7[0m, [0;33mline:574:35[0m> [0;33mcol:7[0m[0;1;36m do_max_length[0m [0;32m'int () const throw()'[0m virtual
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635b088[0m <[0;33mline:525:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::std::codecvt<char32_t, char, mbstate_t> &(const std::std::codecvt<char32_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x635b088
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635b198[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt<char32_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635e258[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m codecvt[0m [0;32m'void (const std::std::codecvt<char32_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x635e258
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e368[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt<char32_t, char, mbstate_t> &'[0m

Dumping std::std::codecvt_byname:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635b5a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:581:3[0m, [0;33mline:606:5[0m> [0;33mline:582:11[0m[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635b390[0m <[0;33mline:581:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635b408[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635b478[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635b510[0m <[0;33mline:582:5[0m, [0;33mline:606:5[0m> [0;33mline:582:11[0m class[0;1;36m codecvt_byname[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m
[0;34m| | `-[0m[0;1;32mDestructor[0m non_trivial user_declared
[0;34m| |-[0mpublic [0;32m'codecvt<_InternT, _ExternT, _StateT>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635b980[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt_byname[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x635ba10[0m <[0;33mline:584:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635bba0[0m <[0;33mline:585:7[0m, [0;33mline:595:7[0m> [0;33mline:586:7[0m[0;1;36m codecvt_byname<_InternT, _ExternT, _StateT>[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ba50[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __s[0m [0;32m'const char *'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635bac8[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;33mcol:46[0m referenced[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635bf70[0m <[0;33mcol:55[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635bf50[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0mCXXCtorInitializer [0;32m'codecvt<_InternT, _ExternT, _StateT>'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x635c0e0[0m <[0;33mline:587:45[0m, [0;33mcol:52[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c0c0[0m <[0;33mcol:46[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635bac8[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635c5f0[0m <[0;33mline:588:7[0m, [0;33mline:595:7[0m>
[0;34m| |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x635c5d8[0m <[0;33mline:589:2[0m, [0;33mline:594:4[0m>
[0;34m| |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635c3c0[0m <[0;33mline:589:6[0m, [0;33mline:590:43[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635c258[0m <[0;33mline:589:6[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m| |     | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x635c1d8[0m <[0;33mcol:6[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635c1c0[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *, const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m| |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c130[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5a223c8[0m[0;1;36m '__builtin_strcmp'[0m [0;32m'int (const char *, const char *) noexcept'[0m
[0;34m| |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635c208[0m <[0;33mcol:23[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c150[0m <[0;33mcol:23[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ba50[0m[0;1;36m '__s'[0m [0;32m'const char *'[0m
[0;34m| |     | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635c220[0m <[0;33mcol:28[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |     | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x635c170[0m <[0;33mcol:28[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "C"[0m
[0;34m| |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635c238[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635c3a0[0m <[0;33mline:590:9[0m, [0;33mcol:43[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m| |     |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x635c320[0m <[0;33mcol:9[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635c308[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *, const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m| |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c278[0m <[0;33mcol:9[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5a223c8[0m[0;1;36m '__builtin_strcmp'[0m [0;32m'int (const char *, const char *) noexcept'[0m
[0;34m| |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635c350[0m <[0;33mcol:26[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c298[0m <[0;33mcol:26[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ba50[0m[0;1;36m '__s'[0m [0;32m'const char *'[0m
[0;34m| |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635c368[0m <[0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |     |   |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x635c2b8[0m <[0;33mcol:31[0m> [0;32m'const char [6]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "POSIX"[0m
[0;34m| |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635c380[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635c5b8[0m <[0;33mline:591:4[0m, [0;33mline:594:4[0m>
[0;34m| |       |-[0m[0;1;35mCallExpr[0m[0;33m 0x635c490[0m <[0;33mline:592:6[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x635c3f0[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_S_destroy_c_locale
[0;34m| |       | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x635c3e0[0m <[0;33mcol:6[0m> [0;32m'codecvt_byname<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x635c448[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_c_locale_codecvt
[0;34m| |       |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x635c438[0m <[0;33mcol:32[0m> [0;32m'codecvt_byname<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x635c588[0m <[0;33mline:593:6[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |         |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x635c4c8[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_S_create_c_locale
[0;34m| |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x635c4b8[0m <[0;33mcol:6[0m> [0;32m'codecvt_byname<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |         |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x635c520[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_c_locale_codecvt
[0;34m| |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x635c510[0m <[0;33mcol:31[0m> [0;32m'codecvt_byname<_InternT, _ExternT, _StateT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c568[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ba50[0m[0;1;36m '__s'[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635bd78[0m <[0;33mline:598:7[0m, [0;33mline:600:47[0m> [0;33mline:599:7[0m invalid[0;1;36m codecvt_byname<_InternT, _ExternT, _StateT>[0m [0;32m'void (const std::__cxx11::string &, std::size_t)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635bc68[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m __s[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635bce0[0m <[0;33mcol:41[0m, [0;33mcol:57[0m> [0;33mcol:48[0m referenced[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635bfa8[0m <[0;33mcol:57[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635bf88[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635c648[0m <[0;33mline:600:45[0m, [0;33mcol:47[0m>
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x635be30[0m <[0;33mline:603:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| `-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x635bea0[0m <[0;33mline:604:7[0m, [0;33mline:605:27[0m> [0;33mcol:7[0m[0;1;36m ~codecvt_byname<_InternT, _ExternT, _StateT>[0m [0;32m'void ()'[0m virtual
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635c658[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6362620[0m[0;1;36m 'codecvt_byname'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6362840[0m[0;1;36m 'codecvt_byname'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x635e9d8[0m[0;1;36m 'codecvt_byname'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x635f210[0m[0;1;36m 'codecvt_byname'[0m

Dumping std::std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x635c6a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:609:3[0m, [0;33mline:625:5[0m> [0;33mline:610:11[0m invalid class[0;1;36m codecvt_byname[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'codecvt<char16_t, char, mbstate_t>':'std::std::codecvt<char16_t, char, mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635ca90[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x635cb20[0m <[0;33mline:613:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635ccb0[0m <[0;33mline:614:7[0m, [0;33mline:616:54[0m> [0;33mline:615:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cb60[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __s[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cbd8[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;33mcol:46[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635d588[0m <[0;33mcol:55[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635d568[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'codecvt<char16_t, char, mbstate_t>':'std::std::codecvt<char16_t, char, mbstate_t>'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x635d738[0m <[0;33mline:616:9[0m, [0;33mcol:50[0m> [0;32m'codecvt<char16_t, char, mbstate_t>':'std::std::codecvt<char16_t, char, mbstate_t>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::size_t)'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635d720[0m <[0;33mcol:44[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635d6e0[0m <[0;33mcol:44[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635cbd8[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635d798[0m <[0;33mcol:52[0m, [0;33mcol:54[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635ce88[0m <[0;33mline:618:7[0m, [0;33mline:620:47[0m> [0;33mline:619:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const std::__cxx11::string &, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cd78[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __s[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cdf0[0m <[0;33mcol:41[0m, [0;33mcol:57[0m> [0;33mcol:48[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635d5c0[0m <[0;33mcol:57[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635d5a0[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635d7e8[0m <[0;33mline:620:45[0m, [0;33mcol:47[0m>
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x635cf40[0m <[0;33mline:622:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x635cfb0[0m <[0;33mline:623:7[0m, [0;33mline:624:27[0m> [0;33mcol:7[0m[0;1;36m ~codecvt_byname[0m [0;32m'void () noexcept'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6357480 codecvt::~codecvt 'void () noexcept' ]
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635d7f8[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635d238[0m <[0;33mline:610:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m codecvt_byname[0m [0;32m'void (const std::std::codecvt_byname<char16_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x635d238
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d348[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt_byname<char16_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635d3e8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::std::codecvt_byname<char16_t, char, mbstate_t> &(const std::std::codecvt_byname<char16_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x635d3e8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d4f8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt_byname<char16_t, char, mbstate_t> &'[0m

Dumping std::std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x635d848[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:627:3[0m, [0;33mline:643:5[0m> [0;33mline:628:11[0m invalid class[0;1;36m codecvt_byname[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'codecvt<char32_t, char, mbstate_t>':'std::std::codecvt<char32_t, char, mbstate_t>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'__mbstate_t'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635dc30[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x635dcc0[0m <[0;33mline:631:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635de50[0m <[0;33mline:632:7[0m, [0;33mline:634:54[0m> [0;33mline:633:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const char *, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635dd00[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __s[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635dd78[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;33mcol:46[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635e728[0m <[0;33mcol:55[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635e708[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'codecvt<char32_t, char, mbstate_t>':'std::std::codecvt<char32_t, char, mbstate_t>'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x635e8d8[0m <[0;33mline:634:9[0m, [0;33mcol:50[0m> [0;32m'codecvt<char32_t, char, mbstate_t>':'std::std::codecvt<char32_t, char, mbstate_t>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::size_t)'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635e8c0[0m <[0;33mcol:44[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635e880[0m <[0;33mcol:44[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635dd78[0m[0;1;36m '__refs'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635e938[0m <[0;33mcol:52[0m, [0;33mcol:54[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635e028[0m <[0;33mline:636:7[0m, [0;33mline:638:47[0m> [0;33mline:637:7[0m[0;1;36m codecvt_byname[0m [0;32m'void (const std::__cxx11::string &, std::size_t)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635df18[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __s[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635df90[0m <[0;33mcol:41[0m, [0;33mcol:57[0m> [0;33mcol:48[0m used[0;1;36m __refs[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635e760[0m <[0;33mcol:57[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x635e740[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635e988[0m <[0;33mline:638:45[0m, [0;33mcol:47[0m>
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x635e0e0[0m <[0;33mline:640:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x635e150[0m <[0;33mline:641:7[0m, [0;33mline:642:27[0m> [0;33mcol:7[0m[0;1;36m ~codecvt_byname[0m [0;32m'void () noexcept'[0m virtual
[0;34m| |-[0mOverrides: [ 0x6359908 codecvt::~codecvt 'void () noexcept' ]
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635e998[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x635e3d8[0m <[0;33mline:628:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m codecvt_byname[0m [0;32m'void (const std::std::codecvt_byname<char32_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x635e3d8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e4e8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt_byname<char32_t, char, mbstate_t> &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635e588[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit[0;1;36m operator=[0m [0;32m'std::std::codecvt_byname<char32_t, char, mbstate_t> &(const std::std::codecvt_byname<char32_t, char, mbstate_t> &)'[0m inline default noexcept-unevaluated 0x635e588
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e698[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const std::std::codecvt_byname<char32_t, char, mbstate_t> &'[0m

Dumping std::std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x635e9d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:649:3[0m, [0;33mcol:61[0m> [0;33mcol:25[0m class[0;1;36m codecvt_byname[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x635f210[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:660:3[0m, [0;33mcol:64[0m> [0;33mcol:25[0m class[0;1;36m codecvt_byname[0m
[0;34m|-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6362620[0m prev 0x635c6a8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:672:3[0m, [0;33mcol:65[0m> [0;33mcol:25[0m class[0;1;36m codecvt_byname[0m
[0;34m|-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::std::codecvt_byname:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6362840[0m prev 0x635d848 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:673:3[0m, [0;33mcol:65[0m> [0;33mcol:25[0m class[0;1;36m codecvt_byname[0m
[0;34m|-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::std::__do_str_codecvt:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6447128[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:52:3[0m, [0;33mline:101:5[0m> [0;33mline:55:5[0m[0;1;36m __do_str_codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x64468e8[0m <[0;33mline:52:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _OutStr[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6446958[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _InChar[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x64469c8[0m <[0;33mcol:48[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced typename depth 0 index 2[0;1;36m _Codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6446a38[0m <[0;33mline:53:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6446aa8[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced typename depth 0 index 4[0;1;36m _Fn[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6447088[0m <[0;33mline:54:5[0m, [0;33mline:101:5[0m> [0;33mline:55:5[0m[0;1;36m __do_str_codecvt[0m [0;32m'bool (const _InChar *, const _InChar *, _OutStr &, const _Codecvt &, _State &, std::size_t &, _Fn)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6446b88[0m <[0;33mcol:22[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __first[0m [0;32m'const _InChar *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6446c00[0m <[0;33mcol:46[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __last[0m [0;32m'const _InChar *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6446ca8[0m <[0;33mline:56:8[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __outstr[0m [0;32m'_OutStr &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6446d48[0m <[0;33mcol:27[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __cvt[0m [0;32m'const _Codecvt &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6446de8[0m <[0;33mcol:50[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m __state[0m [0;32m'_State &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6446e88[0m <[0;33mline:57:8[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __count[0m [0;32m'std::size_t &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6446f00[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __fn[0m [0;32m'_Fn'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64493e8[0m <[0;33mline:58:5[0m, [0;33mline:101:5[0m>
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x64473e8[0m <[0;33mline:59:7[0m, [0;33mline:64:2[0m>
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6447268[0m <[0;33mline:59:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x64471f8[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x63066c8[0m[0;33m 0x63aaa28[0m[0;33m 0x641d8c8[0m[0;33m 0x643c8a8[0m[0;33m 0x643cf60[0m[0;33m 0x643d490[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64471b8[0m <[0;33mcol:11[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446b88[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64471d8[0m <[0;33mcol:22[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446c00[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64473c0[0m <[0;33mline:60:2[0m, [0;33mline:64:2[0m>
[0;34m    |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6447308[0m <[0;33mline:61:4[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x64472c0[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .clear
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64472a0[0m <[0;33mcol:4[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6447380[0m <[0;33mline:62:4[0m, [0;33mcol:14[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m    |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447328[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446e88[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m    |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6447368[0m <[0;33mcol:14[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6447348[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x64473b0[0m <[0;33mline:63:4[0m, [0;33mcol:11[0m>
[0;34m    |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x64473a0[0m <[0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64474b0[0m <[0;33mline:66:7[0m, [0;33mcol:28[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6447410[0m <[0;33mcol:7[0m, [0;33mcol:27[0m> [0;33mcol:14[0m referenced[0;1;36m __outchars[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6447498[0m <[0;33mcol:27[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6447478[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6447560[0m <[0;33mline:67:7[0m, [0;33mcol:28[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64474d8[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;33mcol:12[0m referenced[0;1;36m __next[0m [0;32m'auto'[0m cinit
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447540[0m <[0;33mcol:21[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446b88[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6447780[0m <[0;33mline:68:7[0m, [0;33mcol:51[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6447588[0m <[0;33mcol:7[0m, [0;33mcol:50[0m> [0;33mcol:18[0m referenced[0;1;36m __maxlen[0m [0;32m'const auto'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6447748[0m <[0;33mcol:29[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6447698[0m <[0;33mcol:48[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5bde1b8[0m[0;33m 0x5bffea8[0m[0;33m 0x5e7d128[0m[0;33m 0x5f57548[0m[0;33m 0x5f58558[0m[0;33m 0x5e7fe00[0m[0;33m 0x5e80848[0m[0;33m 0x5e816d8[0m[0;33m 0x5e820c8[0m[0;33m 0x5e82ad8[0m[0;33m 0x5e83b18[0m[0;33m 0x5e843b8[0m[0;33m 0x5e84c98[0m[0;33m 0x5e854f8[0m
[0;34m    |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6447658[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6447610[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .max_length
[0;34m    |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64475f0[0m <[0;33mcol:29[0m> [0;32m'const _Codecvt'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446d48[0m[0;1;36m '__cvt'[0m [0;32m'const _Codecvt &'[0m
[0;34m    |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6447678[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6447858[0m <[0;33mline:70:7[0m, [0;33mcol:36[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64477f0[0m <[0;33mcol:7[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __result[0m [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m
[0;34m    |-[0m[0;1;35mDoStmt[0m[0;33m 0x6448a28[0m <[0;33mline:71:7[0m, [0;33mline:81:51[0m>
[0;34m    | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64484a8[0m <[0;33mline:72:2[0m, [0;33mline:79:2[0m>
[0;34m    | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6447b70[0m <[0;33mline:73:4[0m, [0;33mcol:66[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6447890[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .resize
[0;34m    | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447870[0m <[0;33mcol:4[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6447b38[0m <[0;33mcol:20[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6447a88[0m <[0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5bde1b8[0m[0;33m 0x5bffea8[0m[0;33m 0x5e7d128[0m[0;33m 0x5f57548[0m[0;33m 0x5f58558[0m[0;33m 0x5e7fe00[0m[0;33m 0x5e80848[0m[0;33m 0x5e816d8[0m[0;33m 0x5e820c8[0m[0;33m 0x5e82ad8[0m[0;33m 0x5e83b18[0m[0;33m 0x5e843b8[0m[0;33m 0x5e84c98[0m[0;33m 0x5e854f8[0m
[0;34m    | | |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6447940[0m <[0;33mcol:20[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x64478f8[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m    | | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64478d8[0m <[0;33mcol:20[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6447a68[0m <[0;33mcol:38[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '*'
[0;34m    | | |     |-[0m[0;1;35mParenExpr[0m[0;33m 0x6447a28[0m <[0;33mcol:38[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64479f0[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x64479a0[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5bdda08[0m[0;33m 0x5bff6e8[0m
[0;34m    | | |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447960[0m <[0;33mcol:39[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446c00[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | | |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447980[0m <[0;33mcol:48[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64474d8[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447a48[0m <[0;33mcol:58[0m> [0;32m'const auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447588[0m[0;1;36m '__maxlen'[0m [0;32m'const auto'[0m
[0;34m    | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6447e18[0m <[0;33mline:74:4[0m, [0;33mcol:51[0m>
[0;34m    | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6447ba8[0m <[0;33mcol:4[0m, [0;33mcol:41[0m> [0;33mcol:9[0m referenced[0;1;36m __outnext[0m [0;32m'auto'[0m cinit
[0;34m    | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6447de0[0m <[0;33mcol:21[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6447d30[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5bde1b8[0m[0;33m 0x5bffea8[0m[0;33m 0x5e7d128[0m[0;33m 0x5f57548[0m[0;33m 0x5f58558[0m[0;33m 0x5e7fe00[0m[0;33m 0x5e80848[0m[0;33m 0x5e816d8[0m[0;33m 0x5e820c8[0m[0;33m 0x5e82ad8[0m[0;33m 0x5e83b18[0m[0;33m 0x5e843b8[0m[0;33m 0x5e84c98[0m[0;33m 0x5e854f8[0m
[0;34m    | | |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6447ce0[0m <[0;33mcol:21[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6447c98[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x62fcc90[0m
[0;34m    | | |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6447c78[0m <[0;33mcol:22[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6447c30[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .front
[0;34m    | | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447c10[0m <[0;33mcol:22[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447d10[0m <[0;33mcol:41[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447410[0m[0;1;36m '__outchars'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64480b0[0m <[0;33mline:75:4[0m, [0;33mcol:47[0m>
[0;34m    | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6447e40[0m <[0;33mcol:4[0m, [0;33mcol:46[0m> [0;33mcol:15[0m referenced[0;1;36m __outlast[0m [0;32m'const auto'[0m cinit
[0;34m    | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6448078[0m <[0;33mcol:27[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6447fc8[0m <[0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5bde1b8[0m[0;33m 0x5bffea8[0m[0;33m 0x5e7d128[0m[0;33m 0x5f57548[0m[0;33m 0x5f58558[0m[0;33m 0x5e7fe00[0m[0;33m 0x5e80848[0m[0;33m 0x5e816d8[0m[0;33m 0x5e820c8[0m[0;33m 0x5e82ad8[0m[0;33m 0x5e83b18[0m[0;33m 0x5e843b8[0m[0;33m 0x5e84c98[0m[0;33m 0x5e854f8[0m
[0;34m    | | |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6447f78[0m <[0;33mcol:27[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6447f30[0m <[0;33mcol:27[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x62fcc90[0m
[0;34m    | | |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6447f10[0m <[0;33mcol:28[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6447ec8[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .back
[0;34m    | | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447ea8[0m <[0;33mcol:28[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6447fa8[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64482a0[0m <[0;33mline:76:4[0m, [0;33mline:77:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64480c8[0m <[0;33mline:76:4[0m> [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64477f0[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m
[0;34m    | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6448248[0m <[0;33mcol:15[0m, [0;33mline:77:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   |-[0m[0;1;35mParenExpr[0m[0;33m 0x6448148[0m <[0;33mline:76:15[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6448128[0m <[0;33mcol:16[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '.*'
[0;34m    | | |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64480e8[0m <[0;33mcol:16[0m> [0;32m'const _Codecvt'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446d48[0m[0;1;36m '__cvt'[0m [0;32m'const _Codecvt &'[0m
[0;34m    | | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448108[0m <[0;33mcol:23[0m> [0;32m'_Fn'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446f00[0m[0;1;36m '__fn'[0m [0;32m'_Fn'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448168[0m <[0;33mcol:29[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446de8[0m[0;1;36m '__state'[0m [0;32m'_State &'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448188[0m <[0;33mcol:38[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64474d8[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64481a8[0m <[0;33mcol:46[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446c00[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64481c8[0m <[0;33mcol:54[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64474d8[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64481e8[0m <[0;33mline:77:6[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447ba8[0m[0;1;36m '__outnext'[0m [0;32m'auto'[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448208[0m <[0;33mcol:17[0m> [0;32m'const auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447e40[0m[0;1;36m '__outlast'[0m [0;32m'const auto'[0m
[0;34m    | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448228[0m <[0;33mcol:28[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447ba8[0m[0;1;36m '__outnext'[0m [0;32m'auto'[0m
[0;34m    | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6448488[0m <[0;33mline:78:4[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64482c0[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447410[0m[0;1;36m '__outchars'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6448450[0m <[0;33mcol:17[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6448400[0m <[0;33mcol:27[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5bdda08[0m[0;33m 0x5bff6e8[0m
[0;34m    | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64482e0[0m <[0;33mcol:17[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447ba8[0m[0;1;36m '__outnext'[0m [0;32m'auto'[0m
[0;34m    | |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64483d0[0m <[0;33mcol:29[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6448388[0m <[0;33mcol:29[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x62fcc90[0m
[0;34m    | |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6448368[0m <[0;33mcol:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |         `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6448320[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .front
[0;34m    | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448300[0m <[0;33mcol:30[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6448a08[0m <[0;33mline:80:14[0m, [0;33mline:81:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64487d8[0m <[0;33mline:80:14[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64486d0[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64486a0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6448688[0m <[0;33mcol:14[0m> [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64484e0[0m <[0;33mcol:14[0m> [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64477f0[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m
[0;34m    |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64486b8[0m <[0;33mcol:26[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448538[0m <[0;33mcol:26[0m, [0;33mcol:40[0m> [0;32m'std::std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6341b40[0m[0;1;36m 'partial'[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m    |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64487a0[0m <[0;33mcol:51[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6448730[0m <[0;33mcol:58[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x6306fa8[0m[0;33m 0x63ab278[0m[0;33m 0x641f398[0m[0;33m 0x643db98[0m[0;33m 0x643e230[0m[0;33m 0x643e740[0m
[0;34m    |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64486f0[0m <[0;33mcol:51[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64474d8[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448710[0m <[0;33mcol:61[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446c00[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64489d0[0m <[0;33mline:81:10[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6448968[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x63aef18[0m[0;33m 0x641e6d8[0m[0;33m 0x643ee68[0m[0;33m 0x643f448[0m[0;33m 0x643fb18[0m
[0;34m    |     |-[0m[0;1;35mParenExpr[0m[0;33m 0x6448928[0m <[0;33mcol:10[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x64488f0[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x64488a0[0m <[0;33mcol:27[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5bdda08[0m[0;33m 0x5bff6e8[0m
[0;34m    |     |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6448860[0m <[0;33mcol:11[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6448818[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m    |     |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64487f8[0m <[0;33mcol:11[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448880[0m <[0;33mcol:29[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447410[0m[0;1;36m '__outchars'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448948[0m <[0;33mcol:43[0m> [0;32m'const auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447588[0m[0;1;36m '__maxlen'[0m [0;32m'const auto'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x6448da0[0m <[0;33mline:83:7[0m, [0;33mline:87:2[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6448c38[0m <[0;33mline:83:11[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6448c08[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6448bf0[0m <[0;33mcol:11[0m> [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448a48[0m <[0;33mcol:11[0m> [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64477f0[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6448c20[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448aa0[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'std::std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6341b90[0m[0;1;36m 'error'[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6448d80[0m <[0;33mline:84:2[0m, [0;33mline:87:2[0m>
[0;34m    |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6448d40[0m <[0;33mline:85:4[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448c58[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446e88[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m    |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6448d08[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6448cb8[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5bdda08[0m[0;33m 0x5bff6e8[0m
[0;34m    |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448c78[0m <[0;33mcol:14[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64474d8[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448c98[0m <[0;33mcol:23[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446b88[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6448d70[0m <[0;33mline:86:4[0m, [0;33mcol:11[0m>
[0;34m    |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6448d60[0m <[0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x64493a0[0m <[0;33mline:89:7[0m, [0;33mline:98:2[0m> has_else
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6448fa8[0m <[0;33mline:89:11[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6448f78[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6448f60[0m <[0;33mcol:11[0m> [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448db8[0m <[0;33mcol:11[0m> [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64477f0[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::std::codecvt_base::result'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6448f90[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448e10[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'std::std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6341be0[0m[0;1;36m 'noconv'[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m    | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64491a8[0m <[0;33mline:90:2[0m, [0;33mline:93:2[0m>
[0;34m    | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6449070[0m <[0;33mline:91:4[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6448fe8[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .assign
[0;34m    | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6448fc8[0m <[0;33mcol:4[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6449030[0m <[0;33mcol:20[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446b88[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6449050[0m <[0;33mcol:29[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446c00[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6449188[0m <[0;33mline:92:4[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64490a0[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446e88[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m    | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6449150[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6449100[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5bdda08[0m[0;33m 0x5bff6e8[0m
[0;34m    | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64490c0[0m <[0;33mcol:14[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446c00[0m[0;1;36m '__last'[0m [0;32m'const _InChar *'[0m
[0;34m    | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64490e0[0m <[0;33mcol:23[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446b88[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6449380[0m <[0;33mline:95:2[0m, [0;33mline:98:2[0m>
[0;34m    |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6449250[0m <[0;33mline:96:4[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x64491e8[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .resize
[0;34m    |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64491c8[0m <[0;33mcol:4[0m> [0;32m'_OutStr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446ca8[0m[0;1;36m '__outstr'[0m [0;32m'_OutStr &'[0m
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6449230[0m <[0;33mcol:20[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6447410[0m[0;1;36m '__outchars'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6449360[0m <[0;33mline:97:4[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6449278[0m <[0;33mcol:4[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446e88[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m    |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6449328[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x64492d8[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5bdda08[0m[0;33m 0x5bff6e8[0m
[0;34m    |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6449298[0m <[0;33mcol:14[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64474d8[0m[0;1;36m '__next'[0m [0;32m'auto'[0m
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64492b8[0m <[0;33mcol:23[0m> [0;32m'const _InChar *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6446b88[0m[0;1;36m '__first'[0m [0;32m'const _InChar *'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x64493d8[0m <[0;33mline:100:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x64493c8[0m <[0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true

Dumping std::std::__str_codecvt_in:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6449ea8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:104:3[0m, [0;33mline:119:5[0m> [0;33mline:106:5[0m[0;1;36m __str_codecvt_in[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6449440[0m <[0;33mline:104:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _CharT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x64494b8[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Traits[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6449528[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced typename depth 0 index 2[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6449598[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6449e08[0m <[0;33mline:105:5[0m, [0;33mline:119:5[0m> [0;33mline:106:5[0m[0;1;36m __str_codecvt_in[0m [0;32m'bool (const char *, const char *, basic_string<_CharT, _Traits, _Alloc> &, const codecvt<_CharT, char, _State> &, _State &, std::size_t &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6449650[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64496d0[0m <[0;33mcol:43[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64498d0[0m <[0;33mline:107:8[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __outstr[0m [0;32m'basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6449b70[0m <[0;33mline:108:8[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __cvt[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6449c18[0m <[0;33mline:109:8[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __state[0m [0;32m'_State &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6449c90[0m <[0;33mcol:25[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __count[0m [0;32m'std::size_t &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x644ac08[0m <[0;33mline:110:5[0m, [0;33mline:119:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644a0f0[0m <[0;33mline:111:7[0m, [0;33mcol:53[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x644a090[0m <[0;33mcol:7[0m, [0;33mcol:52[0m> [0;33mcol:13[0m referenced[0;1;36m _Codecvt[0m [0;32m'codecvt<_CharT, char, _State>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6449f60[0m [0;32m'codecvt<_CharT, char, _State>'[0m dependent codecvt
[0;34m    |     |-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |     |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m    |     `-[0mTemplateArgument type [0;32m'_State'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644a7b0[0m <[0;33mline:112:7[0m, [0;33mline:115:37[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x644a750[0m <[0;33mline:112:7[0m, [0;33mline:115:32[0m> [0;33mline:112:13[0m referenced[0;1;36m _ConvFn[0m [0;32m'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m
[0;34m    |   `-[0m[0;32mMemberPointerType[0m[0;33m 0x644a690[0m [0;32m'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m dependent
[0;34m    |     |-[0m[0;32mTypedefType[0m[0;33m 0x644a150[0m [0;32m'_Codecvt'[0m sugar dependent
[0;34m    |     | |-[0m[0;1;32mTypeAlias[0m[0;33m 0x644a090[0m[0;1;36m '_Codecvt'[0m
[0;34m    |     | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6449f60[0m [0;32m'codecvt<_CharT, char, _State>'[0m dependent codecvt
[0;34m    |     |   |-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |     |   |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m    |     |   `-[0mTemplateArgument type [0;32m'_State'[0m
[0;34m    |     `-[0m[0;32mParenType[0m[0;33m 0x644a630[0m [0;32m'codecvt_base::result (_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m sugar dependent
[0;34m    |       `-[0m[0;32mFunctionProtoType[0m[0;33m 0x644a5d0[0m [0;32m'codecvt_base::result (_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m dependent const cdecl
[0;34m    |         |-[0m[0;32mElaboratedType[0m[0;33m 0x63422c0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m    |         | `-[0m[0;32mEnumType[0m[0;33m 0x6341ad0[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m    |         |   `-[0m[0;1;32mEnum[0m[0;33m 0x6341a30[0m[0;1;36m 'result'[0m
[0;34m    |         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x6449be0[0m [0;32m'_State &'[0m dependent
[0;34m    |         | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x64495e0[0m [0;32m'_State'[0m dependent depth 0 index 3
[0;34m    |         |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6449598[0m[0;1;36m '_State'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x590a400[0m [0;32m'const char *'[0m
[0;34m    |         | `-[0mQualType[0;33m 0x5909961[0m [0;32m'const char'[0m const
[0;34m    |         |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x590a400[0m [0;32m'const char *'[0m
[0;34m    |         | `-[0mQualType[0;33m 0x5909961[0m [0;32m'const char'[0m const
[0;34m    |         |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m    |         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x6352470[0m [0;32m'const char *&'[0m
[0;34m    |         | `-[0m[0;32mPointerType[0m[0;33m 0x590a400[0m [0;32m'const char *'[0m
[0;34m    |         |   `-[0mQualType[0;33m 0x5909961[0m [0;32m'const char'[0m const
[0;34m    |         |     `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x644a3a0[0m [0;32m'_CharT *'[0m dependent
[0;34m    |         | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6449490[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6449440[0m[0;1;36m '_CharT'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x644a3a0[0m [0;32m'_CharT *'[0m dependent
[0;34m    |         | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6449490[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6449440[0m[0;1;36m '_CharT'[0m
[0;34m    |         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x644a4c0[0m [0;32m'_CharT *&'[0m dependent
[0;34m    |           `-[0m[0;32mPointerType[0m[0;33m 0x644a3a0[0m [0;32m'_CharT *'[0m dependent
[0;34m    |             `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6449490[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |               `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6449440[0m[0;1;36m '_CharT'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644aa60[0m <[0;33mline:116:7[0m, [0;33mcol:56[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x644a800[0m <[0;33mcol:7[0m, [0;33mcol:54[0m> [0;33mcol:15[0m referenced[0;1;36m __fn[0m [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x644aa30[0m <[0;33mcol:22[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x644a9e8[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x62fcc90[0m
[0;34m    |     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x644a9b0[0m <[0;33mcol:23[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x644abf8[0m <[0;33mline:117:7[0m, [0;33mline:118:23[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x644aba0[0m <[0;33mline:117:14[0m, [0;33mline:118:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x644aa78[0m <[0;33mline:117:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__do_str_codecvt'[0;33m 0x6447128[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644aac0[0m <[0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6449650[0m[0;1;36m '__first'[0m [0;32m'const char *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644aae0[0m <[0;33mcol:40[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64496d0[0m[0;1;36m '__last'[0m [0;32m'const char *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644ab00[0m <[0;33mcol:48[0m> [0;32m'basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64498d0[0m[0;1;36m '__outstr'[0m [0;32m'basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644ab20[0m <[0;33mcol:58[0m> [0;32m'const codecvt<_CharT, char, _State>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6449b70[0m[0;1;36m '__cvt'[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644ab40[0m <[0;33mcol:65[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6449c18[0m[0;1;36m '__state'[0m [0;32m'_State &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644ab60[0m <[0;33mline:118:10[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6449c90[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644ab80[0m <[0;33mcol:19[0m> [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x644a800[0m[0;1;36m '__fn'[0m [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const char *, const char *, const char *&, _CharT *, _CharT *, _CharT *&) const'[0m

Dumping std::std::__str_codecvt_in:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x644b4a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:121:3[0m, [0;33mline:130:5[0m> [0;33mline:123:5[0m[0;1;36m __str_codecvt_in[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644ac38[0m <[0;33mline:121:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _CharT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644aca8[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Traits[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644ad18[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced typename depth 0 index 2[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644ad88[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x644b408[0m <[0;33mline:122:5[0m, [0;33mline:130:5[0m> [0;33mline:123:5[0m[0;1;36m __str_codecvt_in[0m [0;32m'bool (const char *, const char *, basic_string<_CharT, _Traits, _Alloc> &, const codecvt<_CharT, char, _State> &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644ae40[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644aec0[0m <[0;33mcol:43[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644b0c0[0m <[0;33mline:124:8[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __outstr[0m [0;32m'basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644b2c0[0m <[0;33mline:125:8[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __cvt[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x644b7f0[0m <[0;33mline:126:5[0m, [0;33mline:130:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644b5d8[0m <[0;33mline:127:7[0m, [0;33mcol:26[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x644b530[0m <[0;33mcol:7[0m, [0;33mcol:25[0m> [0;33mcol:14[0m referenced[0;1;36m __state[0m [0;32m'_State'[0m cinit
[0;34m    |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x644b598[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644b668[0m <[0;33mline:128:7[0m, [0;33mcol:17[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x644b600[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x644b7e0[0m <[0;33mline:129:7[0m, [0;33mcol:77[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x644b790[0m <[0;33mcol:14[0m, [0;33mcol:77[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x644b680[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__str_codecvt_in'[0;33m 0x644b4a8[0m[0;33m 0x6449ea8[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b6d0[0m <[0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644ae40[0m[0;1;36m '__first'[0m [0;32m'const char *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b6f0[0m <[0;33mcol:40[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644aec0[0m[0;1;36m '__last'[0m [0;32m'const char *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b710[0m <[0;33mcol:48[0m> [0;32m'basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644b0c0[0m[0;1;36m '__outstr'[0m [0;32m'basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b730[0m <[0;33mcol:58[0m> [0;32m'const codecvt<_CharT, char, _State>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644b2c0[0m[0;1;36m '__cvt'[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b750[0m <[0;33mcol:65[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x644b530[0m[0;1;36m '__state'[0m [0;32m'_State'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b770[0m <[0;33mcol:74[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x644b600[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::std::__str_codecvt_out:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x644c298[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:133:3[0m, [0;33mline:148:5[0m> [0;33mline:135:5[0m[0;1;36m __str_codecvt_out[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644b818[0m <[0;33mline:133:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _CharT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644b888[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Traits[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644b8f8[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced typename depth 0 index 2[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644b968[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x644c1f8[0m <[0;33mline:134:5[0m, [0;33mline:148:5[0m> [0;33mline:135:5[0m[0;1;36m __str_codecvt_out[0m [0;32m'bool (const _CharT *, const _CharT *, basic_string<char, _Traits, _Alloc> &, const codecvt<_CharT, char, _State> &, _State &, std::size_t &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644ba48[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __first[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644bac0[0m <[0;33mcol:46[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __last[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644bd60[0m <[0;33mline:136:9[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __outstr[0m [0;32m'basic_string<char, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644bf60[0m <[0;33mline:137:9[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __cvt[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644c008[0m <[0;33mline:138:9[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __state[0m [0;32m'_State &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644c080[0m <[0;33mcol:26[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __count[0m [0;32m'std::size_t &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x644cfc8[0m <[0;33mline:139:5[0m, [0;33mline:148:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644c4e0[0m <[0;33mline:140:7[0m, [0;33mcol:53[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x644c480[0m <[0;33mcol:7[0m, [0;33mcol:52[0m> [0;33mcol:13[0m referenced[0;1;36m _Codecvt[0m [0;32m'codecvt<_CharT, char, _State>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x644c350[0m [0;32m'codecvt<_CharT, char, _State>'[0m dependent codecvt
[0;34m    |     |-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |     |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m    |     `-[0mTemplateArgument type [0;32m'_State'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644cb70[0m <[0;33mline:141:7[0m, [0;33mline:144:31[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x644cb10[0m <[0;33mline:141:7[0m, [0;33mline:144:26[0m> [0;33mline:141:13[0m referenced[0;1;36m _ConvFn[0m [0;32m'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m
[0;34m    |   `-[0m[0;32mMemberPointerType[0m[0;33m 0x644ca50[0m [0;32m'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m dependent
[0;34m    |     |-[0m[0;32mTypedefType[0m[0;33m 0x644c540[0m [0;32m'_Codecvt'[0m sugar dependent
[0;34m    |     | |-[0m[0;1;32mTypeAlias[0m[0;33m 0x644c480[0m[0;1;36m '_Codecvt'[0m
[0;34m    |     | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x644c350[0m [0;32m'codecvt<_CharT, char, _State>'[0m dependent codecvt
[0;34m    |     |   |-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |     |   |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m    |     |   `-[0mTemplateArgument type [0;32m'_State'[0m
[0;34m    |     `-[0m[0;32mParenType[0m[0;33m 0x644c9f0[0m [0;32m'codecvt_base::result (_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m sugar dependent
[0;34m    |       `-[0m[0;32mFunctionProtoType[0m[0;33m 0x644c990[0m [0;32m'codecvt_base::result (_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m dependent const cdecl
[0;34m    |         |-[0m[0;32mElaboratedType[0m[0;33m 0x63422c0[0m [0;32m'codecvt_base::result'[0m sugar
[0;34m    |         | `-[0m[0;32mEnumType[0m[0;33m 0x6341ad0[0m [0;32m'std::std::codecvt_base::result'[0m
[0;34m    |         |   `-[0m[0;1;32mEnum[0m[0;33m 0x6341a30[0m[0;1;36m 'result'[0m
[0;34m    |         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x644bfd0[0m [0;32m'_State &'[0m dependent
[0;34m    |         | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x644b9b0[0m [0;32m'_State'[0m dependent depth 0 index 3
[0;34m    |         |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x644b968[0m[0;1;36m '_State'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x644ba10[0m [0;32m'const _CharT *'[0m dependent
[0;34m    |         | `-[0mQualType[0;33m 0x644b861[0m [0;32m'const _CharT'[0m const
[0;34m    |         |   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x644b860[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x644b818[0m[0;1;36m '_CharT'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x644ba10[0m [0;32m'const _CharT *'[0m dependent
[0;34m    |         | `-[0mQualType[0;33m 0x644b861[0m [0;32m'const _CharT'[0m const
[0;34m    |         |   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x644b860[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x644b818[0m[0;1;36m '_CharT'[0m
[0;34m    |         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x644c700[0m [0;32m'const _CharT *&'[0m dependent
[0;34m    |         | `-[0m[0;32mPointerType[0m[0;33m 0x644ba10[0m [0;32m'const _CharT *'[0m dependent
[0;34m    |         |   `-[0mQualType[0;33m 0x644b861[0m [0;32m'const _CharT'[0m const
[0;34m    |         |     `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x644b860[0m [0;32m'_CharT'[0m dependent depth 0 index 0
[0;34m    |         |       `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x644b818[0m[0;1;36m '_CharT'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x590a5d0[0m [0;32m'char *'[0m
[0;34m    |         | `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m    |         |-[0m[0;32mPointerType[0m[0;33m 0x590a5d0[0m [0;32m'char *'[0m
[0;34m    |         | `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m    |         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6352690[0m [0;32m'char *&'[0m
[0;34m    |           `-[0m[0;32mPointerType[0m[0;33m 0x590a5d0[0m [0;32m'char *'[0m
[0;34m    |             `-[0m[0;32mBuiltinType[0m[0;33m 0x5909960[0m [0;32m'char'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644ce20[0m <[0;33mline:145:7[0m, [0;33mcol:57[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x644cbc0[0m <[0;33mcol:7[0m, [0;33mcol:54[0m> [0;33mcol:15[0m referenced[0;1;36m __fn[0m [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x644cdf0[0m <[0;33mcol:22[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x644cda8[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x62fcc90[0m
[0;34m    |     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x644cd70[0m <[0;33mcol:23[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x644cfb8[0m <[0;33mline:146:7[0m, [0;33mline:147:23[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x644cf60[0m <[0;33mline:146:14[0m, [0;33mline:147:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x644ce38[0m <[0;33mline:146:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__do_str_codecvt'[0;33m 0x6447128[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644ce80[0m <[0;33mcol:31[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644ba48[0m[0;1;36m '__first'[0m [0;32m'const _CharT *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644cea0[0m <[0;33mcol:40[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644bac0[0m[0;1;36m '__last'[0m [0;32m'const _CharT *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644cec0[0m <[0;33mcol:48[0m> [0;32m'basic_string<char, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644bd60[0m[0;1;36m '__outstr'[0m [0;32m'basic_string<char, _Traits, _Alloc> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644cee0[0m <[0;33mcol:58[0m> [0;32m'const codecvt<_CharT, char, _State>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644bf60[0m[0;1;36m '__cvt'[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644cf00[0m <[0;33mcol:65[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644c008[0m[0;1;36m '__state'[0m [0;32m'_State &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644cf20[0m <[0;33mline:147:10[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644c080[0m[0;1;36m '__count'[0m [0;32m'std::size_t &'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644cf40[0m <[0;33mcol:19[0m> [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x644cbc0[0m[0;1;36m '__fn'[0m [0;32m'_ConvFn':'codecvt_base::result (_Codecvt::*)(_State &, const _CharT *, const _CharT *, const _CharT *&, char *, char *, char *&) const'[0m

Dumping std::std::__str_codecvt_out:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x644d888[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:150:3[0m, [0;33mline:159:5[0m> [0;33mline:152:5[0m[0;1;36m __str_codecvt_out[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644cff8[0m <[0;33mline:150:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _CharT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644d068[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Traits[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644d0d8[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced typename depth 0 index 2[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x644d148[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 3[0;1;36m _State[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x644d7e8[0m <[0;33mline:151:5[0m, [0;33mline:159:5[0m> [0;33mline:152:5[0m[0;1;36m __str_codecvt_out[0m [0;32m'bool (const _CharT *, const _CharT *, basic_string<char, _Traits, _Alloc> &, const codecvt<_CharT, char, _State> &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644d228[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __first[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644d2a0[0m <[0;33mcol:46[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __last[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644d4a0[0m <[0;33mline:153:9[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __outstr[0m [0;32m'basic_string<char, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x644d6a0[0m <[0;33mline:154:9[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __cvt[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x644dbd0[0m <[0;33mline:155:5[0m, [0;33mline:159:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644d9b8[0m <[0;33mline:156:7[0m, [0;33mcol:26[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x644d910[0m <[0;33mcol:7[0m, [0;33mcol:25[0m> [0;33mcol:14[0m referenced[0;1;36m __state[0m [0;32m'_State'[0m cinit
[0;34m    |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x644d978[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x644da48[0m <[0;33mline:157:7[0m, [0;33mcol:17[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x644d9e0[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x644dbc0[0m <[0;33mline:158:7[0m, [0;33mcol:78[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x644db70[0m <[0;33mcol:14[0m, [0;33mcol:78[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x644da60[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__str_codecvt_out'[0;33m 0x644d888[0m[0;33m 0x644c298[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644dab0[0m <[0;33mcol:32[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644d228[0m[0;1;36m '__first'[0m [0;32m'const _CharT *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644dad0[0m <[0;33mcol:41[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644d2a0[0m[0;1;36m '__last'[0m [0;32m'const _CharT *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644daf0[0m <[0;33mcol:49[0m> [0;32m'basic_string<char, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644d4a0[0m[0;1;36m '__outstr'[0m [0;32m'basic_string<char, _Traits, _Alloc> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644db10[0m <[0;33mcol:59[0m> [0;32m'const codecvt<_CharT, char, _State>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x644d6a0[0m[0;1;36m '__cvt'[0m [0;32m'const codecvt<_CharT, char, _State> &'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644db30[0m <[0;33mcol:66[0m> [0;32m'_State'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x644d910[0m[0;1;36m '__state'[0m [0;32m'_State'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644db50[0m <[0;33mcol:75[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x644d9e0[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::std::regex_error::_M_code:
[0;1;32mFieldDecl[0m[0;33m 0x66d9ba0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_error.h:137:5[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m _M_code[0m [0;32m'regex_constants::error_type':'std::std::regex_constants::error_type'[0m

Dumping __ecode:
[0;1;32mParmVarDecl[0m[0;33m 0x66d9c60[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_error.h:146:17[0m, [0;33mcol:45[0m> [0;33mcol:45[0m[0;1;36m __ecode[0m [0;32m'regex_constants::error_type':'std::std::regex_constants::error_type'[0m

Dumping std::std::regex_error::code:
[0;1;32mCXXMethodDecl[0m[0;33m 0x66da038[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_error.h:155:5[0m, [0;33mline:157:23[0m> [0;33mline:156:5[0m[0;1;36m code[0m [0;32m'regex_constants::error_type () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66da840[0m <[0;33mline:157:5[0m, [0;33mcol:23[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x66da830[0m <[0;33mcol:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x66da818[0m <[0;33mcol:14[0m> [0;32m'regex_constants::error_type':'std::std::regex_constants::error_type'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mMemberExpr[0m[0;33m 0x66da7e8[0m <[0;33mcol:14[0m> [0;32m'const regex_constants::error_type':'const std::std::regex_constants::error_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_code[0;33m 0x66d9ba0[0m
[0;34m        `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x66da7d8[0m <[0;33mcol:14[0m> [0;32m'const std::std::regex_error *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping __ecode:
[0;1;32mParmVarDecl[0m[0;33m 0x66da148[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_error.h:160:17[0m, [0;33mcol:45[0m> [0;33mcol:45[0m used[0;1;36m __ecode[0m [0;32m'regex_constants::error_type':'std::std::regex_constants::error_type'[0m

Dumping __ecode:
[0;1;32mParmVarDecl[0m[0;33m 0x66da978[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_error.h:170:23[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __ecode[0m [0;32m'regex_constants::error_type':'std::std::regex_constants::error_type'[0m

Dumping __ecode:
[0;1;32mParmVarDecl[0m[0;33m 0x66daaf8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_error.h:173:23[0m, [0;33mcol:51[0m> [0;33mcol:51[0m used[0;1;36m __ecode[0m [0;32m'regex_constants::error_type':'std::std::regex_constants::error_type'[0m

Dumping std::std::__detail::_Opcode:
[0;1;32mEnumDecl[0m[0;33m 0x66db878[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_automaton.h:56:3[0m, [0;33mline:71:3[0m> [0;33mline:56:8[0m referenced[0;1;36m _Opcode[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66db940[0m <[0;33mline:58:7[0m> [0;33mcol:7[0m[0;1;36m _S_opcode_unknown[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66db990[0m <[0;33mline:59:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_alternative[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66db9e0[0m <[0;33mline:60:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_repeat[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dba30[0m <[0;33mline:61:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_backref[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dba80[0m <[0;33mline:62:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_line_begin_assertion[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dbad0[0m <[0;33mline:63:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_line_end_assertion[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dbb20[0m <[0;33mline:64:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_word_boundary[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dbb70[0m <[0;33mline:65:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_subexpr_lookahead[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dbbc0[0m <[0;33mline:66:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_subexpr_begin[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dbc10[0m <[0;33mline:67:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_subexpr_end[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dbc60[0m <[0;33mline:68:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_dummy[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dbcb0[0m <[0;33mline:69:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_match[0m [0;32m'std::std::__detail::_Opcode'[0m
[0;34m`-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x66dbd00[0m <[0;33mline:70:7[0m> [0;33mcol:7[0m referenced[0;1;36m _S_opcode_accept[0m [0;32m'std::std::__detail::_Opcode'[0m

Dumping std::std::__detail::_State_base::_M_opcode:
[0;1;32mFieldDecl[0m[0;33m 0x66dbf30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_automaton.h:76:5[0m, [0;33mcol:18[0m> [0;33mcol:18[0m referenced[0;1;36m _M_opcode[0m [0;32m'std::std::__detail::_Opcode'[0m

Dumping __opcode:
[0;1;32mParmVarDecl[0m[0;33m 0x66dc600[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_automaton.h:98:26[0m, [0;33mcol:34[0m> [0;33mcol:34[0m used[0;1;36m __opcode[0m [0;32m'std::std::__detail::_Opcode'[0m

Dumping __opcode:
[0;1;32mParmVarDecl[0m[0;33m 0x66dddf0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_automaton.h:133:14[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __opcode[0m [0;32m'std::std::__detail::_Opcode'[0m

Dumping std::std::__detail::_State::_M_opcode:
[0;1;32mCXXMethodDecl[0m[0;33m 0x66de5f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/regex_automaton.h:164:7[0m, [0;33mline:166:40[0m> [0;33mline:165:7[0m referenced[0;1;36m _M_opcode[0m [0;32m'std::std::__detail::_Opcode () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66dfe80[0m <[0;33mline:166:7[0m, [0;33mcol:40[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x66dfe70[0m <[0;33mcol:9[0m, [0;33mcol:29[0m>
[0;34m    `-[0m[0;1;35mMemberExpr[0m[0;33m 0x66dfe28[0m <[0;33mcol:16[0m, [0;33mcol:29[0m> [0;32m'const std::std::__detail::_Opcode'[0m[0;36m lvalue[0m[0;36m[0m ->_M_opcode[0;33m 0x66dbf30[0m
[0;34m      `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x66dfe18[0m <[0;33mcol:29[0m> [0;32m'const _State<_Char_type> *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping std::code:
[0;1;32mFunctionDecl[0m[0;33m 0x67dbc30[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:108:1[0m, [0;33mline:127:1[0m> [0;33mline:108:8[0m[0;1;36m code[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67dbba0[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;33mcol:20[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67dc598[0m <[0;33mline:109:1[0m, [0;33mline:127:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x67dc588[0m <[0;33mline:126:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67dc570[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67dc550[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67dbba0[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'int'[0m

Dumping std::decode:
[0;1;32mFunctionDecl[0m[0;33m 0x67dc650[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:129:1[0m, [0;33mline:149:1[0m> [0;33mline:129:8[0m[0;1;36m decode[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67dc5c0[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67dcfb8[0m <[0;33mline:130:1[0m, [0;33mline:149:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x67dcfa8[0m <[0;33mline:148:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67dcf90[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67dcf70[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67dc5c0[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'int'[0m

Dumping std::decode:
[0;1;32mFunctionDecl[0m[0;33m 0x6d6f650[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:129:1[0m, [0;33mline:149:1[0m> [0;33mline:129:8[0m[0;1;36m decode[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d6f5c0[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d6ffb8[0m <[0;33mline:130:1[0m, [0;33mline:149:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6d6ffa8[0m <[0;33mline:148:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6ff90[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d6ff70[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d6f5c0[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'int'[0m

Dumping std::splitText:
[0;1;32mFunctionDecl[0m[0;33m 0x6bb6770[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:151:1[0m, [0;33mline:171:1[0m> [0;33mline:151:5[0m[0;1;36m splitText[0m [0;32m'int (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bb66a0[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6bb73e8[0m <[0;33mline:152:1[0m, [0;33mline:171:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6bb68b8[0m <[0;33mline:153:2[0m, [0;33mcol:12[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6bb6830[0m <[0;33mcol:2[0m, [0;33mcol:11[0m> [0;33mcol:6[0m used[0;1;36m db[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6bb6898[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6bb6960[0m <[0;33mline:154:2[0m, [0;33mcol:18[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6bb68e0[0m <[0;33mcol:2[0m, [0;33mcol:9[0m> [0;33mcol:9[0m invalid[0;1;36m temp[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6bb7388[0m <[0;33mline:167:2[0m, [0;33mline:169:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6bb7320[0m <[0;33mline:167:6[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bb7308[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bb72c8[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6bb6830[0m[0;1;36m 'db'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6bb72e8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6bb7378[0m <[0;33mcol:15[0m, [0;33mline:169:2[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6bb73d8[0m <[0;33mline:170:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bb73c0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bb73a0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6bb6830[0m[0;1;36m 'db'[0m [0;32m'int'[0m

Dumping std::splitCSVLine:
[0;1;32mFunctionDecl[0m[0;33m 0x5f0b4e0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user2/labor1/feladat1/Hazi.cpp:173:1[0m, [0;33mline:191:1[0m> [0;33mline:173:16[0m invalid[0;1;36m splitCSVLine[0m [0;32m'int (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f0b448[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5f0bd88[0m <[0;33mcol:42[0m, [0;33mline:191:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5f0b628[0m <[0;33mline:174:2[0m, [0;33mcol:22[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5f0b5c0[0m <[0;33mcol:2[0m, [0;33mcol:17[0m> [0;33mcol:17[0m invalid[0;1;36m words[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5f0b7e0[0m <[0;33mline:176:2[0m, [0;33mcol:14[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5f0b758[0m <[0;33mcol:2[0m, [0;33mcol:13[0m> [0;33mcol:6[0m used[0;1;36m prev[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5f0b7c0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5f0b898[0m <[0;33mline:177:2[0m, [0;33mcol:20[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5f0b810[0m <[0;33mcol:2[0m, [0;33mcol:19[0m> [0;33mcol:6[0m used[0;1;36m currentPos[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5f0b878[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5f0b948[0m <[0;33mline:178:2[0m, [0;33mcol:25[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5f0b8c0[0m <[0;33mcol:2[0m, [0;33mcol:9[0m> [0;33mcol:9[0m invalid[0;1;36m delimiters[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5f0b9f0[0m <[0;33mline:179:2[0m, [0;33mcol:18[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5f0b970[0m <[0;33mcol:2[0m, [0;33mcol:9[0m> [0;33mcol:9[0m invalid[0;1;36m word[0m [0;32m'std::__cxx11::string':'int'[0m
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5f0bd70[0m <[0;33mline:187:2[0m, [0;33mline:189:2[0m>
[0;34m    |-[0m[0;1;35mOpaqueValueExpr[0m[0;33m 0x5f0bd58[0m <[0;33m<invalid sloc>[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5f0bd48[0m <[0;33mline:187:28[0m, [0;33mline:189:2[0m>

