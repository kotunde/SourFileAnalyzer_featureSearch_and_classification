Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x557bcd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:77:3[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x557b858[0m <[0;33mline:77:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x557bc38[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator, std::input_iterator_tag)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557ba10[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557ba88[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557bb00[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x557c0a0[0m <[0;33mline:82:5[0m, [0;33mline:93:5[0m>
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x557bee8[0m <[0;33mline:86:7[0m, [0;33mcol:72[0m>
[0;34m|   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x557be60[0m <[0;33mcol:7[0m, [0;33mcol:71[0m> [0;33mcol:65[0m referenced[0;1;36m __n[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m nrvo cinit
[0;34m|   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x557bec8[0m <[0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|   |-[0m[0;1;35mWhileStmt[0m[0;33m 0x557c050[0m <[0;33mline:87:7[0m, [0;33mline:91:2[0m>
[0;34m|   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x557bf88[0m <[0;33mline:87:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x557bf40[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x556fc18[0m
[0;34m|   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x557bf00[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x557ba10[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x557bf20[0m <[0;33mcol:25[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x557ba88[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x557c030[0m <[0;33mline:88:2[0m, [0;33mline:91:2[0m>
[0;34m|   |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x557bfe0[0m <[0;33mline:89:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x557bfc0[0m <[0;33mcol:6[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x557ba10[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x557c018[0m <[0;33mline:90:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x557bff8[0m <[0;33mcol:6[0m> [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x557be60[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x557c088[0m <[0;33mline:92:7[0m, [0;33mcol:14[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x557c068[0m <[0;33mcol:14[0m> [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x557be60[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63ccf68[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63ccd50[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63ccdc8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63cce30[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63fd1b8[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63fcfa0[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63fd018[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63fd080[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6408518[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6408300[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6408378[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64083e0[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6411998[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6411780[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64117f8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6411860[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x641f998[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641f780[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641f7f8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641f860[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6439798[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::input_iterator_tag)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6439580[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64395f8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6439660[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x557c518[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:95:3[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x557c0c8[0m <[0;33mline:95:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _RandomAccessIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x557c478[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<_RandomAccessIterator>::difference_type (_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557c250[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced[0;1;36m __first[0m [0;32m'_RandomAccessIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557c2c8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m referenced[0;1;36m __last[0m [0;32m'_RandomAccessIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557c340[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x557c5f8[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x557c5e8[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x557c5c8[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x557c588[0m <[0;33mcol:14[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x557c2c8[0m[0;1;36m '__last'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x557c5a8[0m <[0;33mcol:23[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x557c250[0m[0;1;36m '__first'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63cd478[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63cd260[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63cd2d8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63cd340[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63cd6c0[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x63cd6b0[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x63cd690[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63cd660[0m <[0;33mcol:14[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63cd620[0m <[0;33mcol:14[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63cd2d8[0m[0;1;36m '__last'[0m [0;32m'char *':'char *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63cd678[0m <[0;33mcol:23[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63cd640[0m <[0;33mcol:23[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63cd260[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63fd648[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63fd430[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63fd4a8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63fd510[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63fd890[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x63fd880[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x63fd860[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63fd830[0m <[0;33mcol:14[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63fd7f0[0m <[0;33mcol:14[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63fd4a8[0m[0;1;36m '__last'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63fd848[0m <[0;33mcol:23[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63fd810[0m <[0;33mcol:23[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63fd430[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x64089a8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6408790[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6408808[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6408870[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6408bf0[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6408be0[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6408bc0[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6408b90[0m <[0;33mcol:14[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6408b50[0m <[0;33mcol:14[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6408808[0m[0;1;36m '__last'[0m [0;32m'const char *':'const char *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6408ba8[0m <[0;33mcol:23[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6408b70[0m <[0;33mcol:23[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6408790[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6411e28[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6411c10[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6411c88[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6411cf0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6412070[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6412060[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6412040[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6412010[0m <[0;33mcol:14[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6411fd0[0m <[0;33mcol:14[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6411c88[0m[0;1;36m '__last'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6412028[0m <[0;33mcol:23[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6411ff0[0m <[0;33mcol:23[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6411c10[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x641fe28[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641fc10[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641fc88[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641fcf0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6420070[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6420060[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6420040[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6420010[0m <[0;33mcol:14[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ffd0[0m <[0;33mcol:14[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641fc88[0m[0;1;36m '__last'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6420028[0m <[0;33mcol:23[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641fff0[0m <[0;33mcol:23[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641fc10[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6439c28[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6439a10[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6439a88[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6439af0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6439e70[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6439e60[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6439e40[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6439e10[0m <[0;33mcol:14[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6439dd0[0m <[0;33mcol:14[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6439a88[0m[0;1;36m '__last'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6439e28[0m <[0;33mcol:23[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6439df0[0m <[0;33mcol:23[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6439a10[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x557cb98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:109:3[0m, [0;33mline:113:27[0m> [0;33mline:111:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x557c610[0m <[0;33mline:109:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x557caf8[0m <[0;33mline:110:5[0m, [0;33mline:113:27[0m> [0;33mline:111:5[0m[0;1;36m __distance[0m [0;32m'std::ptrdiff_t (std::_List_iterator<_Tp>, std::_List_iterator<_Tp>, std::input_iterator_tag)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557c7d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:111:50[0m> [0;33mcol:51[0m [0;32m'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557c958[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:112:43[0m> [0;33mcol:44[0m [0;32m'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x557c9d0[0m <[0;33mline:113:9[0m> [0;33mcol:27[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5581bd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:115:3[0m, [0;33mline:119:27[0m> [0;33mline:117:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x557cc08[0m <[0;33mline:115:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5581b38[0m <[0;33mline:116:5[0m, [0;33mline:119:27[0m> [0;33mline:117:5[0m[0;1;36m __distance[0m [0;32m'std::ptrdiff_t (std::_List_const_iterator<_Tp>, std::_List_const_iterator<_Tp>, std::input_iterator_tag)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5581810[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:117:56[0m> [0;33mcol:57[0m [0;32m'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5581998[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:118:49[0m> [0;33mcol:50[0m [0;32m'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5581a10[0m <[0;33mline:119:9[0m> [0;33mcol:27[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5582008[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:135:3[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m[0;1;36m distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5581c48[0m <[0;33mline:135:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5581f68[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m[0;1;36m distance[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5581dd0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5581e48[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5582228[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5582218[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x55821e0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5582090[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__distance'[0;33m 0x557bcd8[0m[0;33m 0x557c518[0m[0;33m 0x557cb98[0m[0;33m 0x5581bd8[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x55820f0[0m <[0;33mcol:30[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5581dd0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5582110[0m <[0;33mcol:39[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5581e48[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x55821b8[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5582150[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iterator_category'[0;33m 0x557a9d8[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5582198[0m <[0;33mcol:34[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5581dd0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63c5d38[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63c5ba0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63c5c18[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63cd828[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x63cd818[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x63cd800[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x63cd750[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63cd738[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<char *>::difference_type (*)(char *, char *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63cd5e8[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63cd478[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557c518[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63cd788[0m <[0;33mcol:30[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63cc1b0[0m <[0;33mcol:30[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63c5ba0[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63cd7a0[0m <[0;33mcol:39[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63cc1d0[0m <[0;33mcol:39[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63c5c18[0m[0;1;36m '__last'[0m [0;32m'char *':'char *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63cd7d0[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x63cd7b8[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x63ccb30[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63ccb18[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<char *>::iterator_category (*)(char *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63cc668[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<char *>::iterator_category (char *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63cc568[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<char *>::iterator_category (char *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557a9d8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63ccb58[0m <[0;33mcol:34[0m> [0;32m'char *const':'char *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63cc238[0m <[0;33mcol:34[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63c5ba0[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63f32a8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63f3110[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63f3188[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63fd9f8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x63fd9e8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x63fd9d0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x63fd920[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63fd908[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type (*)(wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63fd7b8[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63fd648[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557c518[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63fd958[0m <[0;33mcol:30[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63fc760[0m <[0;33mcol:30[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63f3110[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63fd970[0m <[0;33mcol:39[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63fc780[0m <[0;33mcol:39[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63f3188[0m[0;1;36m '__last'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63fd9a0[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x63fd988[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x63fce00[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63fcde8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category (*)(wchar_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63fcb98[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63fca98[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557a9d8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63fce28[0m <[0;33mcol:34[0m> [0;32m'wchar_t *const':'wchar_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63fc7e8[0m <[0;33mcol:34[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63f3110[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6406b28[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6406990[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6406a08[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6408d58[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6408d48[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6408d30[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6408c80[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6408c68[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char *>::difference_type (*)(const char *, const char *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6408b18[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64089a8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557c518[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6408cb8[0m <[0;33mcol:30[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6407ac0[0m <[0;33mcol:30[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6406990[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6408cd0[0m <[0;33mcol:39[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6407ae0[0m <[0;33mcol:39[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6406a08[0m[0;1;36m '__last'[0m [0;32m'const char *':'const char *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6408d00[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6408ce8[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x6408160[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6408148[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char *>::iterator_category (*)(const char *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6407ef8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char *>::iterator_category (const char *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6407df8[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char *>::iterator_category (const char *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557a9d8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6408188[0m <[0;33mcol:34[0m> [0;32m'const char *const':'const char *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6407b48[0m <[0;33mcol:34[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6406990[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x640baa8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x640b910[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x640b988[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64121d8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x64121c8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x64121b0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6412100[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64120e8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type (*)(const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6411f98[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6411e28[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557c518[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6412138[0m <[0;33mcol:30[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6410f40[0m <[0;33mcol:30[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x640b910[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6412150[0m <[0;33mcol:39[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6410f60[0m <[0;33mcol:39[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x640b988[0m[0;1;36m '__last'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6412180[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6412168[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x64115e0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64115c8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (*)(const wchar_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6411378[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6411278[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557a9d8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6411608[0m <[0;33mcol:34[0m> [0;32m'const wchar_t *const':'const wchar_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6410fc8[0m <[0;33mcol:34[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x640b910[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6418bb8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6418a20[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6418a98[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64201d8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x64201c8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x64201b0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6420100[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64200e8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type (*)(const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ff98[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x641fe28[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557c518[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6420138[0m <[0;33mcol:30[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ef40[0m <[0;33mcol:30[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6418a20[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6420150[0m <[0;33mcol:39[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ef60[0m <[0;33mcol:39[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6418a98[0m[0;1;36m '__last'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6420180[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6420168[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x641f5e0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641f5c8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category (*)(const char16_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641f378[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x641f278[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557a9d8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641f608[0m <[0;33mcol:34[0m> [0;32m'const char16_t *const':'const char16_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641efc8[0m <[0;33mcol:34[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6418a20[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x642f5c8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x642f430[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x642f4a8[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6439fd8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6439fc8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6439fb0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6439f00[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6439ee8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type (*)(const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6439d98[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6439c28[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557c518[0m[0;1;36m '__distance'[0m)
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6439f38[0m <[0;33mcol:30[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6438d40[0m <[0;33mcol:30[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x642f430[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6439f50[0m <[0;33mcol:39[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6438d60[0m <[0;33mcol:39[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x642f4a8[0m[0;1;36m '__last'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m          `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6439f80[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m            `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6439f68[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mCallExpr[0m[0;33m 0x64393e0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m                |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64393c8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category (*)(const char32_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6439178[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6439078[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x557a9d8[0m[0;1;36m '__iterator_category'[0m)
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6439408[0m <[0;33mcol:34[0m> [0;32m'const char32_t *const':'const char32_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6438dc8[0m <[0;33mcol:34[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x642f430[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m

Dumping distance:
[0;1;32mFunctionDecl[0m[0;33m 0x63510c0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:26:1[0m, [0;33mline:30:1[0m> [0;33mline:26:8[0m used[0;1;36m distance[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6350f68[0m <[0;33mcol:17[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6350fe0[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;33mcol:44[0m used[0;1;36m b[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6351fc8[0m <[0;33mcol:46[0m, [0;33mline:30:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x63512f0[0m <[0;33mline:27:5[0m, [0;33mcol:29[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6351188[0m <[0;33mcol:5[0m, [0;33mcol:28[0m> [0;33mcol:9[0m used[0;1;36m dx[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x63512d0[0m <[0;33mcol:12[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6351240[0m <[0;33mcol:12[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6351210[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x535ad90[0m
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63511f0[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6350f68[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m  |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x63512b0[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6351280[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x535ad90[0m
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6351260[0m <[0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6350fe0[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6351488[0m <[0;33mline:28:5[0m, [0;33mcol:29[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6351320[0m <[0;33mcol:5[0m, [0;33mcol:28[0m> [0;33mcol:9[0m used[0;1;36m dy[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6351468[0m <[0;33mcol:12[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x63513d8[0m <[0;33mcol:12[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x63513a8[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x535ae58[0m
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6351388[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6350f68[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m  |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6351448[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6351418[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x535ae58[0m
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63513f8[0m <[0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6350fe0[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6351fb8[0m <[0;33mline:29:5[0m, [0;33mcol:28[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x6351f90[0m <[0;33mcol:12[0m, [0;33mcol:28[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6351f78[0m <[0;33mcol:12[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6351e38[0m <[0;33mcol:12[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6351d38[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mUsingShadow[0m[0;33m 0x60a50a0[0m[0;1;36m 'sqrt'[0m)
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6351620[0m <[0;33mcol:17[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6351570[0m <[0;33mcol:17[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6351540[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6351500[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6351188[0m[0;1;36m 'dx'[0m [0;32m'int'[0m
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6351558[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6351520[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6351188[0m[0;1;36m 'dx'[0m [0;32m'int'[0m
[0;34m        `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6351600[0m <[0;33mcol:23[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63515d0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6351590[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6351320[0m[0;1;36m 'dy'[0m [0;32m'int'[0m
[0;34m          `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63515e8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63515b0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6351320[0m[0;1;36m 'dy'[0m [0;32m'int'[0m

Dumping PontHalmaz::tavolsagSzamitas:
[0;1;32mCXXMethodDecl[0m[0;33m 0x4ee0468[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:15:5[0m, [0;33mcol:27[0m> [0;33mcol:10[0m used[0;1;36m tavolsagSzamitas[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x5c91220[0m <[0;33mline:12:40[0m, [0;33mcol:64[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x5c911f0[0m <[0;33mcol:40[0m, [0;33mcol:64[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x5c911c0[0m <[0;33mcol:40[0m, [0;33mcol:64[0m> Text="pontok kozotti tavolsagok"

Dumping PontHalmaz::tavolsagSzamitas:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5a3d520[0m parent 0x4e9f150 prev 0x4ee0468 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:31:1[0m, [0;33mline:36:1[0m> [0;33mline:31:18[0m used[0;1;36m tavolsagSzamitas[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5a427b8[0m <[0;33mcol:36[0m, [0;33mline:36:1[0m>
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5a42720[0m <[0;33mline:32:5[0m, [0;33mline:34:63[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5a3d6a8[0m <[0;33mline:32:9[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5a3d620[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5a3d688[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a3d750[0m <[0;33mcol:18[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3d720[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3d6c0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a3d620[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3d738[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a3d6f0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->n[0;33m 0x4ebbeb0[0m
[0;34m  | |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a3d6e0[0m <[0;33mcol:20[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5a3d790[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3d770[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a3d620[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mForStmt[0m[0;33m 0x5a426e8[0m <[0;33mline:33:9[0m, [0;33mline:34:63[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5a3d8a0[0m <[0;33mline:33:13[0m, [0;33mcol:22[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5a3d7c0[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;33mcol:17[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a3d880[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3d868[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3d828[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a3d620[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5a3d848[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a3d948[0m <[0;33mcol:24[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3d918[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3d8b8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a3d7c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3d930[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a3d8e8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->n[0;33m 0x4ebbeb0[0m
[0;34m  |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a3d8d8[0m <[0;33mcol:26[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5a3d988[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3d968[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a3d7c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5a426d0[0m <[0;33mline:34:13[0m, [0;33mcol:63[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5a42690[0m <[0;33mcol:13[0m, [0;33mcol:63[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a42660[0m <[0;33mcol:13[0m, [0;33mcol:24[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x4ed5658[0m
[0;34m  |       | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a3d9b0[0m <[0;33mcol:13[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m ->tavolsagok[0;33m 0x4ee03a0[0m
[0;34m  |       |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a3d9a0[0m <[0;33mcol:13[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5a426b8[0m <[0;33mcol:34[0m, [0;33mcol:62[0m> [0;32m'std::vector<double, std::allocator<double> >::value_type':'double'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5a42600[0m <[0;33mcol:34[0m, [0;33mcol:62[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a425e8[0m <[0;33mcol:34[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a425a0[0m <[0;33mcol:34[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5a3c5a0[0m[0;1;36m 'distance'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a42630[0m <[0;33mcol:43[0m, [0;33mcol:51[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5a3dbb0[0m <[0;33mcol:43[0m, [0;33mcol:51[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3db98[0m <[0;33mcol:49[0m, [0;33mcol:51[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3db20[0m <[0;33mcol:49[0m, [0;33mcol:51[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x4eb2210[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |           |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a3daa0[0m <[0;33mcol:43[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m ->pontok[0;33m 0x4ebbe20[0m
[0;34m  |           |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a3da90[0m <[0;33mcol:43[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |           |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3db08[0m <[0;33mcol:50[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3daf0[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3dad0[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a3d620[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a42648[0m <[0;33mcol:53[0m, [0;33mcol:61[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |             `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5a3dcb0[0m <[0;33mcol:53[0m, [0;33mcol:61[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3dc98[0m <[0;33mcol:59[0m, [0;33mcol:61[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3dc78[0m <[0;33mcol:59[0m, [0;33mcol:61[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x4eb2210[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |               |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a3dbf8[0m <[0;33mcol:53[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m ->pontok[0;33m 0x4ebbe20[0m
[0;34m  |               | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a3dbe8[0m <[0;33mcol:53[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3dc60[0m <[0;33mcol:60[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |                 `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a3dc48[0m <[0;33mcol:60[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |                   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a3dc28[0m <[0;33mcol:60[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a3d7c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5a42798[0m <[0;33mline:35:5[0m, [0;33mcol:28[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a42768[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->rendezTavolsagok[0;33m 0x4ee1e88[0m
[0;34m      `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a42758[0m <[0;33mcol:5[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m this

Dumping PontHalmaz::maxTavolsag:
[0;1;32mCXXMethodDecl[0m[0;33m 0x69248c0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:19:5[0m, [0;33mcol:28[0m> [0;33mcol:12[0m[0;1;36m maxTavolsag[0m [0;32m'double () const'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x76d5a50[0m <[0;33mline:17:40[0m, [0;33mline:18:87[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x76d5a20[0m <[0;33mline:17:40[0m, [0;33mline:18:87[0m>
[0;34m    |-[0m[0;34mTextComment[0m[0;33m 0x76d59d0[0m <[0;33mline:17:40[0m, [0;33mcol:84[0m> Text="konstruktor: előállítja a pontok tömböt,"
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x76d59f0[0m <[0;33mline:18:40[0m, [0;33mcol:87[0m> Text="kiszámítja a távolságokat (tavolsagok tömb)"

Dumping PontHalmaz::maxTavolsag:
[0;1;32mCXXMethodDecl[0m[0;33m 0x7487bd0[0m parent 0x68e3d00 prev 0x69248c0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:37:1[0m, [0;33mcol:68[0m> [0;33mcol:20[0m[0;1;36m maxTavolsag[0m [0;32m'double () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x748dbf0[0m <[0;33mcol:39[0m, [0;33mcol:68[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x748dbe0[0m <[0;33mcol:40[0m, [0;33mcol:66[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x748dbc8[0m <[0;33mcol:47[0m, [0;33mcol:66[0m> [0;32m'double':'double'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x748dbb0[0m <[0;33mcol:47[0m, [0;33mcol:66[0m> [0;32m'double':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x748db80[0m <[0;33mcol:47[0m, [0;33mcol:66[0m> [0;32m'const double':'const double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x748db68[0m <[0;33mcol:47[0m> [0;32m'std::reverse_iterator<__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > >::reference (*)() const'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x748dae8[0m <[0;33mcol:47[0m> [0;32m'std::reverse_iterator<__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > >::reference () const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x748c958[0m[0;1;36m 'operator*'[0m [0;32m'std::reverse_iterator<__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > >::reference () const'[0m
[0;34m          `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x748dad0[0m <[0;33mcol:48[0m, [0;33mcol:66[0m> [0;32m'const std::reverse_iterator<__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x748dab8[0m <[0;33mcol:48[0m, [0;33mcol:66[0m> [0;32m'std::vector<double, std::allocator<double> >::const_reverse_iterator':'std::reverse_iterator<__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7487d88[0m <[0;33mcol:48[0m, [0;33mcol:66[0m> [0;32m'std::vector<double, std::allocator<double> >::const_reverse_iterator':'std::reverse_iterator<__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > >'[0m[0;36m[0m[0;36m[0m
[0;34m                `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7487d58[0m <[0;33mcol:48[0m, [0;33mcol:59[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .rbegin[0;33m 0x6917800[0m
[0;34m                  `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7487cc8[0m <[0;33mcol:48[0m> [0;32m'const vector<double>':'const std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m ->tavolsagok[0;33m 0x6924510[0m
[0;34m                    `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7487cb8[0m <[0;33mcol:48[0m> [0;32m'const PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping PontHalmaz::minTavolsag:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6b46710[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:20:5[0m, [0;33mcol:28[0m> [0;33mcol:12[0m[0;1;36m minTavolsag[0m [0;32m'double () const'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x78f7520[0m <[0;33mline:19:40[0m, [0;33mcol:81[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x78f74f0[0m <[0;33mcol:40[0m, [0;33mcol:81[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x78f74c0[0m <[0;33mcol:40[0m, [0;33mcol:81[0m> Text="maximum kiválasztás a tavolsag tömbből"

Dumping PontHalmaz::minTavolsag:
[0;1;32mCXXMethodDecl[0m[0;33m 0x76aeeb0[0m parent 0x6b04e00 prev 0x6b46710 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:38:1[0m, [0;33mcol:67[0m> [0;33mcol:20[0m[0;1;36m minTavolsag[0m [0;32m'double () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x76af1c0[0m <[0;33mcol:39[0m, [0;33mcol:67[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x76af1b0[0m <[0;33mcol:40[0m, [0;33mcol:65[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x76af198[0m <[0;33mcol:47[0m, [0;33mcol:65[0m> [0;32m'double':'double'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x76af180[0m <[0;33mcol:47[0m, [0;33mcol:65[0m> [0;32m'double':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x76af150[0m <[0;33mcol:47[0m, [0;33mcol:65[0m> [0;32m'const double':'const double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x76af138[0m <[0;33mcol:47[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x76af0e8[0m <[0;33mcol:47[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x76aa7b0[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >::reference () const noexcept'[0m
[0;34m          `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x76af0d0[0m <[0;33mcol:48[0m, [0;33mcol:65[0m> [0;32m'const __gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x76af0b8[0m <[0;33mcol:48[0m, [0;33mcol:65[0m> [0;32m'std::vector<double, std::allocator<double> >::const_iterator':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x76af068[0m <[0;33mcol:48[0m, [0;33mcol:65[0m> [0;32m'std::vector<double, std::allocator<double> >::const_iterator':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m                `-[0m[0;1;35mMemberExpr[0m[0;33m 0x76af038[0m <[0;33mcol:48[0m, [0;33mcol:59[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x6b39110[0m
[0;34m                  `-[0m[0;1;35mMemberExpr[0m[0;33m 0x76aefa8[0m <[0;33mcol:48[0m> [0;32m'const vector<double>':'const std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m ->tavolsagok[0;33m 0x6b46270[0m
[0;34m                    `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x76aef98[0m <[0;33mcol:48[0m> [0;32m'const PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping PontHalmaz::tavolsagokSzama:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6432880[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:22:5[0m, [0;33mcol:28[0m> [0;33mcol:9[0m[0;1;36m tavolsagokSzama[0m [0;32m'int () const'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x71e3b30[0m <[0;33mline:20:40[0m, [0;33mcol:81[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x71e3b00[0m <[0;33mcol:40[0m, [0;33mcol:81[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x71e3ad0[0m <[0;33mcol:40[0m, [0;33mcol:81[0m> Text="minimum kiválasztás a tavolsag tömbből"

Dumping PontHalmaz::tavolsagokSzama:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6f9ba10[0m parent 0x63f2f60 prev 0x6432880 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:39:1[0m, [0;33mcol:66[0m> [0;33mcol:17[0m[0;1;36m tavolsagokSzama[0m [0;32m'int () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f9bbb0[0m <[0;33mcol:40[0m, [0;33mcol:66[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6f9bba0[0m <[0;33mcol:41[0m, [0;33mcol:64[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f9bb88[0m <[0;33mcol:48[0m, [0;33mcol:64[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6f9bb68[0m <[0;33mcol:48[0m, [0;33mcol:64[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6f9bb38[0m <[0;33mcol:48[0m, [0;33mcol:59[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6425ba0[0m
[0;34m          `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6f9bb08[0m <[0;33mcol:48[0m> [0;32m'const vector<double>':'const std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m ->tavolsagok[0;33m 0x64322f0[0m
[0;34m            `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6f9baf8[0m <[0;33mcol:48[0m> [0;32m'const PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping PontHalmaz::printPontok:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6251968[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:25:5[0m, [0;33mcol:28[0m> [0;33mcol:10[0m[0;1;36m printPontok[0m [0;32m'void () const'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x7001930[0m <[0;33mline:22:40[0m, [0;33mline:23:66[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x7001900[0m <[0;33mline:22:40[0m, [0;33mline:23:66[0m>
[0;34m    |-[0m[0;34mTextComment[0m[0;33m 0x70018b0[0m <[0;33mline:22:40[0m, [0;33mcol:82[0m> Text="összesen hány távolság értelmezhető n"
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x70018d0[0m <[0;33mline:23:40[0m, [0;33mcol:66[0m> Text="különböző pont között"

Dumping PontHalmaz::printPontok:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6db9898[0m parent 0x6211f60 prev 0x6251968 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:40:1[0m, [0;33mline:43:1[0m> [0;33mline:40:18[0m[0;1;36m printPontok[0m [0;32m'void () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6de5720[0m <[0;33mcol:37[0m, [0;33mline:43:1[0m>
[0;34m  `-[0m[0;1;35mCXXForRangeStmt[0m[0;33m 0x6dc0190[0m <[0;33mline:41:5[0m, [0;33mline:42:72[0m>
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6db9c50[0m <[0;33mline:41:21[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6db9a60[0m <[0;33mcol:21[0m> [0;33mcol:21[0m implicit used[0;1;36m __range1[0m [0;32m'const std::vector<Pont, std::allocator<Pont> > &'[0m cinit
[0;34m    |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6db9990[0m <[0;33mcol:21[0m> [0;32m'const vector<Pont>':'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m ->pontok[0;33m 0x622ec30[0m
[0;34m    |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6db9980[0m <[0;33mcol:21[0m> [0;32m'const PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6dbdd48[0m <[0;33mcol:19[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6db9cb8[0m <[0;33mcol:19[0m> [0;33mcol:19[0m implicit used[0;1;36m __begin1[0m [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m cinit
[0;34m    |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6dbd920[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6dbd8f0[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m    |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6dbd7a8[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::const_iterator':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6db9e28[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::const_iterator':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6db9df8[0m <[0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x6223d18[0m
[0;34m    |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6db9c68[0m <[0;33mcol:19[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6db9a60[0m[0;1;36m '__range1'[0m [0;32m'const std::vector<Pont, std::allocator<Pont> > &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6dbdd60[0m <[0;33mcol:19[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6db9d30[0m <[0;33mcol:19[0m> [0;33mcol:19[0m implicit used[0;1;36m __end1[0m [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m cinit
[0;34m    |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6dbdd30[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6dbdd00[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m    |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6dbdce8[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::const_iterator':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dbd9c8[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::const_iterator':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dbd998[0m <[0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x6223ec8[0m
[0;34m    |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6db9c88[0m <[0;33mcol:19[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6db9a60[0m[0;1;36m '__range1'[0m [0;32m'const std::vector<Pont, std::allocator<Pont> > &'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6dbfdd0[0m <[0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dbfdb8[0m <[0;33mcol:19[0m> [0;32m'bool (*)(const __normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &, const __normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dbfd40[0m <[0;33mcol:19[0m> [0;32m'bool (const __normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &, const __normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6dbfbc0[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &, const __normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dbfd10[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dbdd78[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6db9cb8[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dbfd28[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dbdd98[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6db9d30[0m[0;1;36m '__end1'[0m [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6dbfef0[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dbfed8[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dbfe58[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6dbbb80[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > > &() noexcept'[0m
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dbfe08[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6db9cb8[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6db9a38[0m <[0;33mcol:9[0m, [0;33mcol:27[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6db99d0[0m <[0;33mcol:9[0m, [0;33mcol:19[0m> [0;33mcol:15[0m used[0;1;36m elem[0m [0;32m'const Pont &'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6dc0010[0m <[0;33mcol:19[0m> [0;32m'const Pont':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dbfff8[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dbff80[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6dbb900[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >::reference () const noexcept'[0m
[0;34m    |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dbff68[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dbff20[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6db9cb8[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<const Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m    `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6de56e8[0m <[0;33mline:42:9[0m, [0;33mcol:72[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6de56d0[0m <[0;33mcol:69[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6de56b0[0m <[0;33mcol:69[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d080d8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m      |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6de3570[0m <[0;33mcol:9[0m, [0;33mcol:67[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6de3558[0m <[0;33mcol:54[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6de3538[0m <[0;33mcol:54[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6cff198[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6de2258[0m <[0;33mcol:9[0m, [0;33mcol:50[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6de2240[0m <[0;33mcol:47[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6de2220[0m <[0;33mcol:47[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d080d8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m      | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6de0100[0m <[0;33mcol:9[0m, [0;33mcol:45[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6de00e8[0m <[0;33mcol:32[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6de0068[0m <[0;33mcol:32[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6cff198[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m      | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6dddf20[0m <[0;33mcol:9[0m, [0;33mcol:22[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dddf08[0m <[0;33mcol:19[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ddde88[0m <[0;33mcol:19[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d080d8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m      | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dc0228[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6da0f00[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m      | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ddde70[0m <[0;33mcol:22[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6dc0258[0m <[0;33mcol:22[0m> [0;32m'const char [8]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Pont: ("[0m
[0;34m      | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6dddfa8[0m <[0;33mcol:35[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6dddf78[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5db7d90[0m
[0;34m      | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dddf58[0m <[0;33mcol:35[0m> [0;32m'const Pont':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6db99d0[0m[0;1;36m 'elem'[0m [0;32m'const Pont &'[0m
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6de2208[0m <[0;33mcol:50[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6de0138[0m <[0;33mcol:50[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "|"[0m
[0;34m      | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6de22e0[0m <[0;33mcol:57[0m, [0;33mcol:67[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6de22b0[0m <[0;33mcol:57[0m, [0;33mcol:62[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5db7e58[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6de2290[0m <[0;33mcol:57[0m> [0;32m'const Pont':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6db99d0[0m[0;1;36m 'elem'[0m [0;32m'const Pont &'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6de5698[0m <[0;33mcol:72[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6de35a8[0m <[0;33mcol:72[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ")\n"[0m

Dumping PontHalmaz::printTavolsagok:
[0;1;32mCXXMethodDecl[0m[0;33m 0x67f7c78[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:26:5[0m, [0;33mcol:28[0m> [0;33mcol:10[0m[0;1;36m printTavolsagok[0m [0;32m'void () const'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x75a9020[0m <[0;33mline:25:40[0m, [0;33mcol:68[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x75a8ff0[0m <[0;33mcol:40[0m, [0;33mcol:68[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x75a8fc0[0m <[0;33mcol:40[0m, [0;33mcol:68[0m> Text="a pontok tároló kiíratása"

Dumping PontHalmaz::printTavolsagok:
[0;1;32mCXXMethodDecl[0m[0;33m 0x738cea8[0m parent 0x67b6d00 prev 0x67f7c78 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:44:1[0m, [0;33mline:47:1[0m> [0;33mline:44:18[0m[0;1;36m printTavolsagok[0m [0;32m'void () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7395df8[0m <[0;33mcol:41[0m, [0;33mline:47:1[0m>
[0;34m  `-[0m[0;1;35mCXXForRangeStmt[0m[0;33m 0x7390aa0[0m <[0;33mline:45:5[0m, [0;33mline:46:51[0m>
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x738d260[0m <[0;33mline:45:21[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x738d070[0m <[0;33mcol:21[0m> [0;33mcol:21[0m implicit used[0;1;36m __range1[0m [0;32m'const std::vector<double, std::allocator<double> > &'[0m cinit
[0;34m    |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x738cfa0[0m <[0;33mcol:21[0m> [0;32m'const vector<double>':'const std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m ->tavolsagok[0;33m 0x67f7510[0m
[0;34m    |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x738cf90[0m <[0;33mcol:21[0m> [0;32m'const PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x738e728[0m <[0;33mcol:19[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x738d2c8[0m <[0;33mcol:19[0m> [0;33mcol:19[0m implicit used[0;1;36m __begin1[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m cinit
[0;34m    |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x738e2f0[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x738e2c0[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m    |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x738e178[0m <[0;33mcol:19[0m> [0;32m'std::vector<double, std::allocator<double> >::const_iterator':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x738d438[0m <[0;33mcol:19[0m> [0;32m'std::vector<double, std::allocator<double> >::const_iterator':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x738d408[0m <[0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x67ea3b0[0m
[0;34m    |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x738d278[0m <[0;33mcol:19[0m> [0;32m'const std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x738d070[0m[0;1;36m '__range1'[0m [0;32m'const std::vector<double, std::allocator<double> > &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x738e740[0m <[0;33mcol:19[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x738d340[0m <[0;33mcol:19[0m> [0;33mcol:19[0m implicit used[0;1;36m __end1[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m cinit
[0;34m    |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x738e710[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x738e6e0[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m    |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x738e6c8[0m <[0;33mcol:19[0m> [0;32m'std::vector<double, std::allocator<double> >::const_iterator':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x738e398[0m <[0;33mcol:19[0m> [0;32m'std::vector<double, std::allocator<double> >::const_iterator':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x738e368[0m <[0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x67ea560[0m
[0;34m    |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x738d298[0m <[0;33mcol:19[0m> [0;32m'const std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x738d070[0m[0;1;36m '__range1'[0m [0;32m'const std::vector<double, std::allocator<double> > &'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7390760[0m <[0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7390748[0m <[0;33mcol:19[0m> [0;32m'bool (*)(const __normal_iterator<const double *, std::vector<double, std::allocator<double> > > &, const __normal_iterator<const double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73906d0[0m <[0;33mcol:19[0m> [0;32m'bool (const __normal_iterator<const double *, std::vector<double, std::allocator<double> > > &, const __normal_iterator<const double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7390550[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<const double *, std::vector<double, std::allocator<double> > > &, const __normal_iterator<const double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73906a0[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x738e758[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x738d2c8[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73906b8[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x738e778[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x738d340[0m[0;1;36m '__end1'[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7390880[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7390868[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73907e8[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x735c610[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > > &() noexcept'[0m
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7390798[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x738d2c8[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x738d048[0m <[0;33mcol:9[0m, [0;33mcol:31[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x738cfe0[0m <[0;33mcol:9[0m, [0;33mcol:19[0m> [0;33mcol:15[0m used[0;1;36m elem[0m [0;32m'const double &'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7390920[0m <[0;33mcol:19[0m> [0;32m'const double':'const double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7390908[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73908e8[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x735c390[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >::reference () const noexcept'[0m
[0;34m    |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73908d0[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73908b0[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x738d2c8[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<const double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m    `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7395dc0[0m <[0;33mline:46:9[0m, [0;33mcol:51[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7395da8[0m <[0;33mcol:43[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7395d28[0m <[0;33mcol:43[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x72a5508[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m      |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7395110[0m <[0;33mcol:9[0m, [0;33mcol:38[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73950f8[0m <[0;33mcol:35[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(double)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7395080[0m <[0;33mcol:35[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x72a6b28[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7392cf8[0m <[0;33mcol:9[0m, [0;33mcol:22[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7392ce0[0m <[0;33mcol:19[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7392cc0[0m <[0;33mcol:19[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72af3a8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7390b20[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7348600[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7392ca8[0m <[0;33mcol:22[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7390bc8[0m <[0;33mcol:22[0m> [0;32m'const char [11]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Tavolsag: "[0m
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7395068[0m <[0;33mcol:38[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7392d30[0m <[0;33mcol:38[0m> [0;32m'const double':'const double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x738cfe0[0m[0;1;36m 'elem'[0m [0;32m'const double &'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7395d10[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7395cd8[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72a9be8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7288388[0m[0;1;36m 'endl'[0m)

Dumping PontHalmaz::rendezPontokX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x4d39000[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:28:5[0m, [0;33mcol:24[0m> [0;33mcol:10[0m[0;1;36m rendezPontokX[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x5ae8d70[0m <[0;33mline:26:40[0m, [0;33mcol:72[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x5ae8d40[0m <[0;33mcol:40[0m, [0;33mcol:72[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x5ae8d10[0m <[0;33mcol:40[0m, [0;33mcol:72[0m> Text="a tavolsagok tároló kiíratása"

Dumping PontHalmaz::rendezPontokX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58d5f80[0m parent 0x4cf66a0 prev 0x4d39000 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:1[0m, [0;33mcol:129[0m> [0;33mcol:18[0m[0;1;36m rendezPontokX[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58db2a8[0m <[0;33mcol:33[0m, [0;33mcol:129[0m>
[0;34m  `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x58db290[0m <[0;33mcol:35[0m, [0;33mcol:126[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d9ba0[0m <[0;33mcol:35[0m, [0;33mcol:126[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d9b88[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d9af0[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x58d99c8[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74))'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x55d3348[0m[0;1;36m 'sort'[0m)
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x58dade0[0m <[0;33mcol:45[0m, [0;33mcol:58[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x58dac98[0m <[0;33mcol:45[0m, [0;33mcol:58[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x58d61a8[0m <[0;33mcol:45[0m, [0;33mcol:58[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d6178[0m <[0;33mcol:45[0m, [0;33mcol:52[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x4d08310[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d60e8[0m <[0;33mcol:45[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m ->pontok[0;33m 0x4d13370[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d60d8[0m <[0;33mcol:45[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x58dae60[0m <[0;33mcol:60[0m, [0;33mcol:71[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x58dae48[0m <[0;33mcol:60[0m, [0;33mcol:71[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x58d8be0[0m <[0;33mcol:60[0m, [0;33mcol:71[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d8bb0[0m <[0;33mcol:60[0m, [0;33mcol:67[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x4d08530[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d8b20[0m <[0;33mcol:60[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m ->pontok[0;33m 0x4d13370[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d8b10[0m <[0;33mcol:60[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x58db260[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74)':'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74)'[0m[0;36m[0m[0;36m[0m [0;32m'void ((lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74) &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x58db208[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74)'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mLambdaExpr[0m[0;33m 0x58d9560[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74)'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x58d8dc0[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit class definition
[0;34m            | |-[0m[0;1;32mDefinitionData[0m lambda pass_in_registers empty standard_layout trivially_copyable can_const_default_init
[0;34m            | | |-[0m[0;1;32mDefaultConstructor[0m defaulted_is_constexpr
[0;34m            | | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m            | | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m            | | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param implicit_has_const_param
[0;34m            | | |-[0m[0;1;32mMoveAssignment[0m
[0;34m            | | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m            | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x58d8f00[0m <[0;33mcol:94[0m, [0;33mcol:125[0m> [0;33mcol:74[0m used[0;1;36m operator()[0m [0;32m'auto (Pont, Pont) const -> int'[0m inline
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8c10[0m <[0;33mcol:77[0m, [0;33mcol:82[0m> [0;33mcol:82[0m used[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8c88[0m <[0;33mcol:85[0m, [0;33mcol:90[0m> [0;33mcol:90[0m used[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d9118[0m <[0;33mcol:97[0m, [0;33mcol:125[0m>
[0;34m            | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58d9108[0m <[0;33mcol:99[0m, [0;33mcol:122[0m>
[0;34m            | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d90f0[0m <[0;33mcol:106[0m, [0;33mcol:122[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m            | |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d90d0[0m <[0;33mcol:106[0m, [0;33mcol:122[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m            | |         |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x58d9010[0m <[0;33mcol:106[0m, [0;33mcol:113[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            | |         | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d8fe0[0m <[0;33mcol:106[0m, [0;33mcol:108[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x489ed90[0m
[0;34m            | |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d9030[0m <[0;33mcol:106[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            | |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8fc0[0m <[0;33mcol:106[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8c10[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m            | |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x58d9098[0m <[0;33mcol:115[0m, [0;33mcol:122[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            | |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d9068[0m <[0;33mcol:115[0m, [0;33mcol:117[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x489ed90[0m
[0;34m            | |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d90b8[0m <[0;33mcol:115[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            | |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d9048[0m <[0;33mcol:115[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8c88[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m            | |-[0m[0;1;32mCXXConversionDecl[0m[0;33m 0x58d93e8[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;33mcol:74[0m implicit[0;1;36m operator int (*)(Pont, Pont)[0m [0;32m'auto (*() const noexcept)(Pont, Pont) -> int'[0m inline
[0;34m            | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x58d9498[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;33mcol:74[0m implicit[0;1;36m __invoke[0m [0;32m'auto (Pont, Pont) -> int'[0m static inline
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d9318[0m <[0;33mcol:77[0m, [0;33mcol:82[0m> [0;33mcol:82[0m[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m            | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d9380[0m <[0;33mcol:85[0m, [0;33mcol:90[0m> [0;33mcol:90[0m[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m            | |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x58d9590[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit referenced[0;1;36m ~[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m            | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x58daed0[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit used constexpr[0;1;36m [0m [0;32m'void (const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74) &) noexcept'[0m inline default trivial
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58dafe8[0m <[0;33mcol:74[0m> [0;33mcol:74[0m [0;32m'const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74) &'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5a3c670[0m <[0;33mcol:74[0m>
[0;34m            | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x58db088[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit used constexpr[0;1;36m [0m [0;32m'void ((lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74) &&) noexcept'[0m inline default trivial
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58db198[0m <[0;33mcol:74[0m> [0;33mcol:74[0m [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74) &&'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58db250[0m <[0;33mcol:74[0m>
[0;34m            | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5a3b0a8[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit[0;1;36m operator=[0m [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74) &(const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74) &)'[0m inline default_delete trivial noexcept-unevaluated 0x5a3b0a8
[0;34m            |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5a3b1b8[0m <[0;33mcol:74[0m> [0;33mcol:74[0m [0;32m'const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:48:74) &'[0m
[0;34m            `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d9118[0m <[0;33mcol:97[0m, [0;33mcol:125[0m>
[0;34m              `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58d9108[0m <[0;33mcol:99[0m, [0;33mcol:122[0m>
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d90f0[0m <[0;33mcol:106[0m, [0;33mcol:122[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d90d0[0m <[0;33mcol:106[0m, [0;33mcol:122[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                    |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x58d9010[0m <[0;33mcol:106[0m, [0;33mcol:113[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                    | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d8fe0[0m <[0;33mcol:106[0m, [0;33mcol:108[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x489ed90[0m
[0;34m                    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d9030[0m <[0;33mcol:106[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8fc0[0m <[0;33mcol:106[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8c10[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m                    `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x58d9098[0m <[0;33mcol:115[0m, [0;33mcol:122[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                      `-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d9068[0m <[0;33mcol:115[0m, [0;33mcol:117[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x489ed90[0m
[0;34m                        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d90b8[0m <[0;33mcol:115[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d9048[0m <[0;33mcol:115[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8c88[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m

Dumping PontHalmaz::rendezPontokY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x69d0848[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:30:5[0m, [0;33mcol:24[0m> [0;33mcol:10[0m[0;1;36m rendezPontokY[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x77815b0[0m <[0;33mline:28:40[0m, [0;33mline:29:58[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x7781580[0m <[0;33mline:28:40[0m, [0;33mline:29:58[0m>
[0;34m    |-[0m[0;34mTextComment[0m[0;33m 0x7781530[0m <[0;33mline:28:40[0m, [0;33mcol:79[0m> Text="növekvő sorrendbe rendezi a pontokat x"
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x7781550[0m <[0;33mline:29:40[0m, [0;33mcol:58[0m> Text="koordináta szerint"

Dumping PontHalmaz::rendezPontokY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x75731c0[0m parent 0x698e430 prev 0x69d0848 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:1[0m, [0;33mcol:129[0m> [0;33mcol:18[0m[0;1;36m rendezPontokY[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7574798[0m <[0;33mcol:33[0m, [0;33mcol:129[0m>
[0;34m  `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7574780[0m <[0;33mcol:35[0m, [0;33mcol:126[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x7574240[0m <[0;33mcol:35[0m, [0;33mcol:126[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7574228[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7574190[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7574068[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74))'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x726af28[0m[0;1;36m 'sort'[0m)
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x75742c8[0m <[0;33mcol:45[0m, [0;33mcol:58[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x75742b0[0m <[0;33mcol:45[0m, [0;33mcol:58[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7573410[0m <[0;33mcol:45[0m, [0;33mcol:58[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x75733e0[0m <[0;33mcol:45[0m, [0;33mcol:52[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x69a00a0[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7573350[0m <[0;33mcol:45[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m ->pontok[0;33m 0x69ab100[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7573340[0m <[0;33mcol:45[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7574348[0m <[0;33mcol:60[0m, [0;33mcol:71[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7574330[0m <[0;33mcol:60[0m, [0;33mcol:71[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7573500[0m <[0;33mcol:60[0m, [0;33mcol:71[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x75734d0[0m <[0;33mcol:60[0m, [0;33mcol:67[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x69a02c0[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7573440[0m <[0;33mcol:60[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m ->pontok[0;33m 0x69ab100[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7573430[0m <[0;33mcol:60[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7574750[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74)':'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74)'[0m[0;36m[0m[0;36m[0m [0;32m'void ((lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74) &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x75746f8[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74)'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mLambdaExpr[0m[0;33m 0x7573cb0[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74)'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7573660[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit class definition
[0;34m            | |-[0m[0;1;32mDefinitionData[0m lambda pass_in_registers empty standard_layout trivially_copyable can_const_default_init
[0;34m            | | |-[0m[0;1;32mDefaultConstructor[0m defaulted_is_constexpr
[0;34m            | | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m            | | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m            | | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param implicit_has_const_param
[0;34m            | | |-[0m[0;1;32mMoveAssignment[0m
[0;34m            | | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m            | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x75737a0[0m <[0;33mcol:94[0m, [0;33mcol:125[0m> [0;33mcol:74[0m used[0;1;36m operator()[0m [0;32m'auto (Pont, Pont) const -> int'[0m inline
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7573530[0m <[0;33mcol:77[0m, [0;33mcol:82[0m> [0;33mcol:82[0m used[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75735a8[0m <[0;33mcol:85[0m, [0;33mcol:90[0m> [0;33mcol:90[0m used[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75739b8[0m <[0;33mcol:97[0m, [0;33mcol:125[0m>
[0;34m            | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75739a8[0m <[0;33mcol:99[0m, [0;33mcol:122[0m>
[0;34m            | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7573990[0m <[0;33mcol:106[0m, [0;33mcol:122[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m            | |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7573970[0m <[0;33mcol:106[0m, [0;33mcol:122[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m            | |         |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x75738b0[0m <[0;33mcol:106[0m, [0;33mcol:113[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            | |         | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7573880[0m <[0;33mcol:106[0m, [0;33mcol:108[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x6536e58[0m
[0;34m            | |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75738d0[0m <[0;33mcol:106[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            | |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7573860[0m <[0;33mcol:106[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7573530[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m            | |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7573938[0m <[0;33mcol:115[0m, [0;33mcol:122[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            | |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7573908[0m <[0;33mcol:115[0m, [0;33mcol:117[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x6536e58[0m
[0;34m            | |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7573958[0m <[0;33mcol:115[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            | |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75738e8[0m <[0;33mcol:115[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75735a8[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m            | |-[0m[0;1;32mCXXConversionDecl[0m[0;33m 0x7573b38[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;33mcol:74[0m implicit[0;1;36m operator int (*)(Pont, Pont)[0m [0;32m'auto (*() const noexcept)(Pont, Pont) -> int'[0m inline
[0;34m            | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7573be8[0m <[0;33mcol:74[0m, [0;33mcol:125[0m> [0;33mcol:74[0m implicit[0;1;36m __invoke[0m [0;32m'auto (Pont, Pont) -> int'[0m static inline
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7573a68[0m <[0;33mcol:77[0m, [0;33mcol:82[0m> [0;33mcol:82[0m[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m            | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7573ad0[0m <[0;33mcol:85[0m, [0;33mcol:90[0m> [0;33mcol:90[0m[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m            | |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x7573ce0[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit referenced[0;1;36m ~[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m            | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x75743c0[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit used constexpr[0;1;36m [0m [0;32m'void (const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74) &) noexcept'[0m inline default trivial
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75744d8[0m <[0;33mcol:74[0m> [0;33mcol:74[0m [0;32m'const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74) &'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x772a110[0m <[0;33mcol:74[0m>
[0;34m            | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x7574578[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit used constexpr[0;1;36m [0m [0;32m'void ((lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74) &&) noexcept'[0m inline default trivial
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7574688[0m <[0;33mcol:74[0m> [0;33mcol:74[0m [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74) &&'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7574740[0m <[0;33mcol:74[0m>
[0;34m            | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7728ba8[0m <[0;33mcol:74[0m> [0;33mcol:74[0m implicit[0;1;36m operator=[0m [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74) &(const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74) &)'[0m inline default_delete trivial noexcept-unevaluated 0x7728ba8
[0;34m            |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7728cb8[0m <[0;33mcol:74[0m> [0;33mcol:74[0m [0;32m'const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:49:74) &'[0m
[0;34m            `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75739b8[0m <[0;33mcol:97[0m, [0;33mcol:125[0m>
[0;34m              `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75739a8[0m <[0;33mcol:99[0m, [0;33mcol:122[0m>
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7573990[0m <[0;33mcol:106[0m, [0;33mcol:122[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7573970[0m <[0;33mcol:106[0m, [0;33mcol:122[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                    |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x75738b0[0m <[0;33mcol:106[0m, [0;33mcol:113[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                    | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7573880[0m <[0;33mcol:106[0m, [0;33mcol:108[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x6536e58[0m
[0;34m                    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75738d0[0m <[0;33mcol:106[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7573860[0m <[0;33mcol:106[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7573530[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m                    `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7573938[0m <[0;33mcol:115[0m, [0;33mcol:122[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                      `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7573908[0m <[0;33mcol:115[0m, [0;33mcol:117[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x6536e58[0m
[0;34m                        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7573958[0m <[0;33mcol:115[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75738e8[0m <[0;33mcol:115[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75735a8[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m

Dumping PontHalmaz::rendezTavolsagok:
[0;1;32mCXXMethodDecl[0m[0;33m 0x682e4c8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:31:5[0m, [0;33mcol:27[0m> [0;33mcol:10[0m used[0;1;36m rendezTavolsagok[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x75de310[0m <[0;33mline:30:40[0m, [0;33mcol:66[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x75de2e0[0m <[0;33mcol:40[0m, [0;33mcol:66[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x75de2b0[0m <[0;33mcol:40[0m, [0;33mcol:66[0m> Text="u. a. y koordináta szerint"

Dumping PontHalmaz::rendezTavolsagok:
[0;1;32mCXXMethodDecl[0m[0;33m 0x73d21b0[0m parent 0x67ebfc0 prev 0x682e4c8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:1[0m, [0;33mcol:130[0m> [0;33mcol:18[0m used[0;1;36m rendezTavolsagok[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73d3868[0m <[0;33mcol:36[0m, [0;33mcol:130[0m>
[0;34m  `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x73d3850[0m <[0;33mcol:38[0m, [0;33mcol:127[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x73d3300[0m <[0;33mcol:38[0m, [0;33mcol:127[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73d32e8[0m <[0;33mcol:38[0m, [0;33mcol:43[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d3250[0m <[0;33mcol:38[0m, [0;33mcol:43[0m> [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x73d3128[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85))'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x70c8838[0m[0;1;36m 'sort'[0m)
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x73d3390[0m <[0;33mcol:48[0m, [0;33mcol:65[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x73d3378[0m <[0;33mcol:48[0m, [0;33mcol:65[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73d23d8[0m <[0;33mcol:48[0m, [0;33mcol:65[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73d23a8[0m <[0;33mcol:48[0m, [0;33mcol:59[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x681f750[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73d2318[0m <[0;33mcol:48[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m ->tavolsagok[0;33m 0x682c9e0[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x73d2308[0m <[0;33mcol:48[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x73d3418[0m <[0;33mcol:67[0m, [0;33mcol:82[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x73d3400[0m <[0;33mcol:67[0m, [0;33mcol:82[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73d24c8[0m <[0;33mcol:67[0m, [0;33mcol:82[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73d2498[0m <[0;33mcol:67[0m, [0;33mcol:78[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x681f958[0m
[0;34m      |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73d2408[0m <[0;33mcol:67[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m ->tavolsagok[0;33m 0x682c9e0[0m
[0;34m      |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x73d23f8[0m <[0;33mcol:67[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x73d3820[0m <[0;33mcol:85[0m, [0;33mcol:126[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85)':'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85)'[0m[0;36m[0m[0;36m[0m [0;32m'void ((lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85) &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x73d37c8[0m <[0;33mcol:85[0m, [0;33mcol:126[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85)'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mLambdaExpr[0m[0;33m 0x73d2d40[0m <[0;33mcol:85[0m, [0;33mcol:126[0m> [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85)'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x73d26b0[0m <[0;33mcol:85[0m> [0;33mcol:85[0m implicit class definition
[0;34m            | |-[0m[0;1;32mDefinitionData[0m lambda pass_in_registers empty standard_layout trivially_copyable can_const_default_init
[0;34m            | | |-[0m[0;1;32mDefaultConstructor[0m defaulted_is_constexpr
[0;34m            | | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m            | | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m            | | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param implicit_has_const_param
[0;34m            | | |-[0m[0;1;32mMoveAssignment[0m
[0;34m            | | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m            | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x73d27f0[0m <[0;33mcol:109[0m, [0;33mcol:126[0m> [0;33mcol:85[0m used[0;1;36m operator()[0m [0;32m'auto (double, double) const -> int'[0m inline
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d2500[0m <[0;33mcol:88[0m, [0;33mcol:95[0m> [0;33mcol:95[0m used[0;1;36m a[0m [0;32m'double'[0m
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d2580[0m <[0;33mcol:98[0m, [0;33mcol:105[0m> [0;33mcol:105[0m used[0;1;36m b[0m [0;32m'double'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73d2968[0m <[0;33mcol:112[0m, [0;33mcol:126[0m>
[0;34m            | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x73d2958[0m <[0;33mcol:114[0m, [0;33mcol:123[0m>
[0;34m            | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73d2940[0m <[0;33mcol:121[0m, [0;33mcol:123[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m            | |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73d2920[0m <[0;33mcol:121[0m, [0;33mcol:123[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m            | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73d28f0[0m <[0;33mcol:121[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d28b0[0m <[0;33mcol:121[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73d2500[0m[0;1;36m 'a'[0m [0;32m'double'[0m
[0;34m            | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73d2908[0m <[0;33mcol:123[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d28d0[0m <[0;33mcol:123[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73d2580[0m[0;1;36m 'b'[0m [0;32m'double'[0m
[0;34m            | |-[0m[0;1;32mCXXConversionDecl[0m[0;33m 0x73d2bc8[0m <[0;33mcol:85[0m, [0;33mcol:126[0m> [0;33mcol:85[0m implicit[0;1;36m operator int (*)(double, double)[0m [0;32m'auto (*() const noexcept)(double, double) -> int'[0m inline
[0;34m            | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x73d2c78[0m <[0;33mcol:85[0m, [0;33mcol:126[0m> [0;33mcol:85[0m implicit[0;1;36m __invoke[0m [0;32m'auto (double, double) -> int'[0m static inline
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d2af8[0m <[0;33mcol:88[0m, [0;33mcol:95[0m> [0;33mcol:95[0m[0;1;36m a[0m [0;32m'double'[0m
[0;34m            | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d2b60[0m <[0;33mcol:98[0m, [0;33mcol:105[0m> [0;33mcol:105[0m[0;1;36m b[0m [0;32m'double'[0m
[0;34m            | |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x73d2d70[0m <[0;33mcol:85[0m> [0;33mcol:85[0m implicit referenced[0;1;36m ~[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m            | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x73d3490[0m <[0;33mcol:85[0m> [0;33mcol:85[0m implicit used constexpr[0;1;36m [0m [0;32m'void (const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85) &) noexcept'[0m inline default trivial
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d35a8[0m <[0;33mcol:85[0m> [0;33mcol:85[0m [0;32m'const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85) &'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75ac2c0[0m <[0;33mcol:85[0m>
[0;34m            | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x73d3648[0m <[0;33mcol:85[0m> [0;33mcol:85[0m implicit used constexpr[0;1;36m [0m [0;32m'void ((lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85) &&) noexcept'[0m inline default trivial
[0;34m            | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d3758[0m <[0;33mcol:85[0m> [0;33mcol:85[0m [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85) &&'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73d3810[0m <[0;33mcol:85[0m>
[0;34m            | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x75aacf8[0m <[0;33mcol:85[0m> [0;33mcol:85[0m implicit[0;1;36m operator=[0m [0;32m'(lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85) &(const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85) &)'[0m inline default_delete trivial noexcept-unevaluated 0x75aacf8
[0;34m            |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75aae08[0m <[0;33mcol:85[0m> [0;33mcol:85[0m [0;32m'const (lambda at /home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:50:85) &'[0m
[0;34m            `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73d2968[0m <[0;33mcol:112[0m, [0;33mcol:126[0m>
[0;34m              `-[0m[0;1;35mReturnStmt[0m[0;33m 0x73d2958[0m <[0;33mcol:114[0m, [0;33mcol:123[0m>
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73d2940[0m <[0;33mcol:121[0m, [0;33mcol:123[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73d2920[0m <[0;33mcol:121[0m, [0;33mcol:123[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73d28f0[0m <[0;33mcol:121[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d28b0[0m <[0;33mcol:121[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73d2500[0m[0;1;36m 'a'[0m [0;32m'double'[0m
[0;34m                    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73d2908[0m <[0;33mcol:123[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d28d0[0m <[0;33mcol:123[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73d2580[0m[0;1;36m 'b'[0m [0;32m'double'[0m

Dumping PontHalmaz::kulonbozoTavolsagokSzama:
[0;1;32mCXXMethodDecl[0m[0;33m 0x649a6f0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.h:33:5[0m, [0;33mcol:34[0m> [0;33mcol:9[0m[0;1;36m kulonbozoTavolsagokSzama[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x7248f80[0m <[0;33mline:31:40[0m, [0;33mcol:71[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x7248f50[0m <[0;33mcol:40[0m, [0;33mcol:71[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x7248f20[0m <[0;33mcol:40[0m, [0;33mcol:71[0m> Text="a tavolsagok tároló rendezése"

Dumping PontHalmaz::kulonbozoTavolsagokSzama:
[0;1;32mCXXMethodDecl[0m[0;33m 0x703ee88[0m parent 0x6457ca0 prev 0x649a6f0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user10/labor3/feladat3/PontHalmaz.cpp:51:1[0m, [0;33mline:60:1[0m> [0;33mline:51:17[0m[0;1;36m kulonbozoTavolsagokSzama[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x70413d0[0m <[0;33mcol:43[0m, [0;33mline:60:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x703f010[0m <[0;33mline:52:5[0m, [0;33mcol:20[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x703ef88[0m <[0;33mcol:5[0m, [0;33mcol:19[0m> [0;33mcol:9[0m used[0;1;36m counter[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x703eff0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x703f0e0[0m <[0;33mline:53:5[0m, [0;33mcol:21[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x703f040[0m <[0;33mcol:5[0m, [0;33mcol:20[0m> [0;33mcol:12[0m used[0;1;36m elozo[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x703f0c8[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x703f0a8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mCXXForRangeStmt[0m[0;33m 0x70411b0[0m <[0;33mline:54:5[0m, [0;33mline:58:9[0m>
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x703f3c0[0m <[0;33mline:54:20[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x703f1d8[0m <[0;33mcol:20[0m> [0;33mcol:20[0m implicit used[0;1;36m __range1[0m [0;32m'std::vector<double, std::allocator<double> > &'[0m cinit
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x703f108[0m <[0;33mcol:20[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m ->tavolsagok[0;33m 0x6498ae0[0m
[0;34m  | |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x703f0f8[0m <[0;33mcol:20[0m> [0;32m'PontHalmaz *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x703f8a8[0m <[0;33mcol:18[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x703f428[0m <[0;33mcol:18[0m> [0;33mcol:18[0m implicit used[0;1;36m __begin1[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m cinit
[0;34m  | |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x703f6c0[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x703f690[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m  | |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x703f678[0m <[0;33mcol:18[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  | |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x703f598[0m <[0;33mcol:18[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x703f568[0m <[0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x648b850[0m
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x703f3d8[0m <[0;33mcol:18[0m> [0;32m'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f1d8[0m[0;1;36m '__range1'[0m [0;32m'std::vector<double, std::allocator<double> > &'[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x703f8c0[0m <[0;33mcol:18[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x703f4a0[0m <[0;33mcol:18[0m> [0;33mcol:18[0m implicit used[0;1;36m __end1[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m cinit
[0;34m  | |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x703f890[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x703f860[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m  | |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x703f848[0m <[0;33mcol:18[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  | |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x703f768[0m <[0;33mcol:18[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x703f738[0m <[0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x648ba58[0m
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x703f3f8[0m <[0;33mcol:18[0m> [0;32m'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f1d8[0m[0;1;36m '__range1'[0m [0;32m'std::vector<double, std::allocator<double> > &'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7040ef8[0m <[0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7040ee0[0m <[0;33mcol:18[0m> [0;32m'bool (*)(const __normal_iterator<double *, std::vector<double, std::allocator<double> > > &, const __normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7040ec0[0m <[0;33mcol:18[0m> [0;32m'bool (const __normal_iterator<double *, std::vector<double, std::allocator<double> > > &, const __normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6c26dc0[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<double *, std::vector<double, std::allocator<double> > > &, const __normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7040e90[0m <[0;33mcol:18[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x703f8d8[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f428[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7040ea8[0m <[0;33mcol:18[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x703f8f8[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f4a0[0m[0;1;36m '__end1'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7040f88[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7040f70[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7040f50[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6c238e0[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &() noexcept'[0m
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7040f30[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f428[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x703f1b0[0m <[0;33mcol:9[0m, [0;33mcol:30[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x703f148[0m <[0;33mcol:9[0m, [0;33mcol:18[0m> [0;33mcol:15[0m used[0;1;36m tav[0m [0;32m'double &'[0m cinit
[0;34m  | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7041028[0m <[0;33mcol:18[0m> [0;32m'double':'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7041010[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7040ff0[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6c23630[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >::reference () const noexcept'[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7040fd8[0m <[0;33mcol:18[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7040fb8[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f428[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  | `-[0m[0;1;35mIfStmt[0m[0;33m 0x7041370[0m <[0;33mline:55:9[0m, [0;33mline:58:9[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7041280[0m <[0;33mline:55:12[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7041250[0m <[0;33mcol:12[0m> [0;32m'double':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7041210[0m <[0;33mcol:12[0m> [0;32m'double':'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f148[0m[0;1;36m 'tav'[0m [0;32m'double &'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7041268[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7041230[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f040[0m[0;1;36m 'elozo'[0m [0;32m'double'[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7041350[0m <[0;33mcol:25[0m, [0;33mline:58:9[0m>
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x70412c0[0m <[0;33mline:56:13[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70412a0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703ef88[0m[0;1;36m 'counter'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7041330[0m <[0;33mline:57:13[0m, [0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70412d8[0m <[0;33mcol:13[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f040[0m[0;1;36m 'elozo'[0m [0;32m'double'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7041318[0m <[0;33mcol:21[0m> [0;32m'double':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70412f8[0m <[0;33mcol:21[0m> [0;32m'double':'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703f148[0m[0;1;36m 'tav'[0m [0;32m'double &'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x70413c0[0m <[0;33mline:59:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70413a8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7041388[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x703ef88[0m[0;1;36m 'counter'[0m [0;32m'int'[0m

