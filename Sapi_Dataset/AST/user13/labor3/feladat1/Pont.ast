Dumping Pont::getX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5e1af60[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.h:9:2[0m, [0;33mcol:13[0m> [0;33mcol:6[0m used[0;1;36m getX[0m [0;32m'int () const'[0m

Dumping Pont::getX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6b1ccb8[0m parent 0x5e1a9a0 prev 0x5e1af60 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:19:1[0m, [0;33mline:21:1[0m> [0;33mline:19:11[0m used[0;1;36m getX[0m [0;32m'int () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b1ce08[0m <[0;33mcol:24[0m, [0;33mline:21:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b1cdf8[0m <[0;33mline:20:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b1cde0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6b1cdb0[0m <[0;33mcol:9[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->x[0;33m 0x5e1ab88[0m
[0;34m        `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6b1cda0[0m <[0;33mcol:9[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping Pont::getY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5930028[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.h:10:2[0m, [0;33mcol:13[0m> [0;33mcol:6[0m used[0;1;36m getY[0m [0;32m'int () const'[0m

Dumping Pont::getY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x66315b0[0m parent 0x592f9a0 prev 0x5930028 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:22:1[0m, [0;33mline:24:1[0m> [0;33mline:22:11[0m used[0;1;36m getY[0m [0;32m'int () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6631700[0m <[0;33mcol:24[0m, [0;33mline:24:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x66316f0[0m <[0;33mline:23:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x66316d8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mMemberExpr[0m[0;33m 0x66316a8[0m <[0;33mcol:9[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->y[0;33m 0x592fbf0[0m
[0;34m        `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6631698[0m <[0;33mcol:9[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping Pont::setX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x4d381a8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.h:11:2[0m, [0;33mcol:17[0m> [0;33mcol:7[0m[0;1;36m setX[0m [0;32m'void (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x4d380e0[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;33mcol:16[0m[0;1;36m x[0m [0;32m'int'[0m

Dumping Pont::setX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5a39cb8[0m parent 0x4d379a0 prev 0x4d381a8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:25:1[0m, [0;33mline:27:1[0m> [0;33mline:25:12[0m[0;1;36m setX[0m [0;32m'void (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5a39c28[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;33mcol:21[0m used[0;1;36m x[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5a39f68[0m <[0;33mcol:24[0m, [0;33mline:27:1[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5a39f50[0m <[0;33mline:26:2[0m, [0;33mcol:37[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a39e98[0m <[0;33mcol:6[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a39e00[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a39de8[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a39da8[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5a39c28[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m    | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5a39dc8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a39e78[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a39e60[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a39e20[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5a39c28[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5a39e40[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2000[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a39f30[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a39ec8[0m <[0;33mcol:27[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->x[0;33m 0x4d37b88[0m
[0;34m      | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5a39eb8[0m <[0;33mcol:27[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m this
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a39f18[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a39ef8[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5a39c28[0m[0;1;36m 'x'[0m [0;32m'int'[0m

Dumping Pont::setY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5ee32f8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.h:12:2[0m, [0;33mcol:17[0m> [0;33mcol:7[0m[0;1;36m setY[0m [0;32m'void (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ee3268[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;33mcol:16[0m[0;1;36m y[0m [0;32m'int'[0m

Dumping Pont::setY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6be4640[0m parent 0x5ee29a0 prev 0x5ee32f8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:28:1[0m, [0;33mline:30:1[0m> [0;33mline:28:12[0m[0;1;36m setY[0m [0;32m'void (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6be45b0[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;33mcol:21[0m used[0;1;36m y[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6be48f0[0m <[0;33mcol:24[0m, [0;33mline:30:1[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x6be48d8[0m <[0;33mline:29:2[0m, [0;33mcol:37[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6be4820[0m <[0;33mcol:6[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6be4788[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6be4770[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6be4730[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6be45b0[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m    | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6be4750[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6be4800[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6be47e8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6be47a8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6be45b0[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6be47c8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2000[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6be48b8[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6be4850[0m <[0;33mcol:27[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->y[0;33m 0x5ee2bf0[0m
[0;34m      | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6be4840[0m <[0;33mcol:27[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m this
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6be48a0[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6be4880[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6be45b0[0m[0;1;36m 'y'[0m [0;32m'int'[0m

Dumping Pont::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5c7d4d0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.h:13:2[0m, [0;33mcol:26[0m> [0;33mcol:7[0m[0;1;36m move[0m [0;32m'void (int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c7d3b8[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;33mcol:16[0m[0;1;36m nx[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c7d438[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;33mcol:24[0m[0;1;36m ny[0m [0;32m'int'[0m

Dumping std::__is_move_iterator:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d125b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:397:3[0m, [0;33mline:402:5[0m> [0;33mline:398:12[0m[0;1;36m __is_move_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d12498[0m <[0;33mline:397:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d12520[0m <[0;33mline:398:5[0m, [0;33mline:402:5[0m> [0;33mline:398:12[0m struct[0;1;36m __is_move_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d12800[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_iterator[0m
[0;34m| |-[0m[0;1;32mEnumDecl[0m[0;33m 0x5d12890[0m <[0;33mline:400:7[0m, [0;33mcol:26[0m> [0;33mcol:7[0m
[0;34m| | `-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x5d12970[0m <[0;33mcol:14[0m, [0;33mcol:24[0m> [0;33mcol:14[0m[0;1;36m __value[0m [0;32m'std::__is_move_iterator::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:400:7)'[0m
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5d12950[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d129d0[0m <[0;33mline:401:7[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m __type[0m [0;32m'std::__false_type'[0m
[0;34m|   `-[0m[0;32mRecordType[0m[0;33m 0x5cf0490[0m [0;32m'std::__false_type'[0m
[0;34m|     `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5cf0400[0m[0;1;36m '__false_type'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ac3918[0m <[0;33mline:397:3[0m, [0;33mline:402:5[0m> [0;33mline:398:12[0m struct[0;1;36m __is_move_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const double *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ac3b80[0m prev 0x6ac3918 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_iterator[0m
[0;34m| |-[0m[0;1;32mEnumDecl[0m[0;33m 0x6ac3c10[0m <[0;33mline:400:7[0m> [0;33mcol:7[0m
[0;34m| | `-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6ac3d00[0m <[0;33mcol:14[0m, [0;33mcol:24[0m> [0;33mcol:14[0m referenced[0;1;36m __value[0m [0;32m'std::__is_move_iterator<const double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:400:7)'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac3d50[0m <[0;33mcol:24[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |     `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6ac3ce0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5d12950[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ac3d68[0m <[0;33mline:401:7[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m __type[0m [0;32m'std::__false_type'[0m
[0;34m|   `-[0m[0;32mRecordType[0m[0;33m 0x5cf0490[0m [0;32m'std::__false_type'[0m
[0;34m|     `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5cf0400[0m[0;1;36m '__false_type'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ba7cf8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1235:3[0m, [0;33mline:1240:5[0m> [0;33mline:1236:12[0m struct[0;1;36m __is_move_iterator[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::move_iterator<double *>'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ba8038[0m prev 0x6ba7cf8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_iterator[0m
[0;34m  |-[0m[0;1;32mEnumDecl[0m[0;33m 0x6ba80c8[0m <[0;33mline:1238:7[0m> [0;33mcol:7[0m
[0;34m  | `-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x6ba81c0[0m <[0;33mcol:14[0m, [0;33mcol:24[0m> [0;33mcol:14[0m referenced[0;1;36m __value[0m [0;32m'std::__is_move_iterator<std::move_iterator<double *> >::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1238:7)'[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba8210[0m <[0;33mcol:24[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6ba81a0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60984a0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba8228[0m <[0;33mline:1239:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __type[0m [0;32m'std::__true_type'[0m
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x5cad570[0m [0;32m'std::__true_type'[0m
[0;34m      `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5cad4d8[0m[0;1;36m '__true_type'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d1dbb0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:107:3[0m, [0;33mline:115:5[0m> [0;33mline:108:12[0m[0;1;36m __remove_unsigned[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d1da90[0m <[0;33mline:107:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d1db20[0m <[0;33mline:108:5[0m, [0;33mline:115:5[0m> [0;33mline:108:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d1e490[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x5d1e520[0m <[0;33mline:110:5[0m, [0;33mcol:12[0m> [0;33mcol:5[0m private
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d1e788[0m <[0;33mline:111:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m __if_type[0m [0;32m'__enable_if<std::__is_integer<_Tp>::__value, _Tp>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5d1e6a0[0m [0;32m'__enable_if<std::__is_integer<_Tp>::__value, _Tp>'[0m dependent __enable_if
[0;34m| |   |-[0mTemplateArgument expr
[0;34m| |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d1e688[0m <[0;33mcol:27[0m, [0;33mcol:51[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m| |   |   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5d1e640[0m <[0;33mcol:27[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'_Tp'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x5d1e7e0[0m <[0;33mline:113:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d1e8d0[0m <[0;33mline:114:7[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __type[0m [0;32m'typename __if_type::__type'[0m
[0;34m|   `-[0m[0;32mDependentNameType[0m[0;33m 0x5d1e860[0m [0;32m'typename __if_type::__type'[0m dependent
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d1e960[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d1ecb8[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d1f018[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d1f378[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d1fc88[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d1ffe8[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d20340[0m[0;1;36m '__remove_unsigned'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d20510[0m[0;1;36m '__remove_unsigned'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d1e960[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:117:3[0m, [0;33mline:119:35[0m> [0;33mline:118:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d1eb78[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d1ec20[0m <[0;33mline:119:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __type[0m [0;32m'signed char'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a980[0m [0;32m'signed char'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d1ecb8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:121:3[0m, [0;33mline:123:35[0m> [0;33mline:122:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned char'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d1eed8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d1ef80[0m <[0;33mline:123:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __type[0m [0;32m'signed char'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a980[0m [0;32m'signed char'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d1f018[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:125:3[0m, [0;33mline:127:29[0m> [0;33mline:126:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned short'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d1f238[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d1f2e0[0m <[0;33mline:127:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __type[0m [0;32m'short'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a9a0[0m [0;32m'short'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d1f378[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:129:3[0m, [0;33mline:131:27[0m> [0;33mline:130:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned int'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d1fb48[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d1fbf0[0m <[0;33mline:131:7[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __type[0m [0;32m'int'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a9c0[0m [0;32m'int'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d1fc88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:133:3[0m, [0;33mline:135:28[0m> [0;33mline:134:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d1fea8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d1ff50[0m <[0;33mline:135:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __type[0m [0;32m'long'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a9e0[0m [0;32m'long'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d1ffe8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:137:3[0m, [0;33mline:139:33[0m> [0;33mline:138:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned long long'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d20208[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d202b0[0m <[0;33mline:139:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __type[0m [0;32m'long long'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aa00[0m [0;32m'long long'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d20340[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:142:3[0m, [0;33mline:143:34[0m> [0;33mcol:12[0m struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0mTemplateArgument type [0;32m'bool'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d20510[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:145:3[0m, [0;33mline:146:37[0m> [0;33mcol:12[0m struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0mTemplateArgument type [0;32m'wchar_t'[0m

Dumping std::remove_cv:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f080f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:201:3[0m, [0;33mline:202:12[0m> [0;33mcol:12[0m[0;1;36m remove_cv[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f07fd0[0m <[0;33mline:201:12[0m> [0;33mcol:12[0m typename depth 0 index 0
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f08060[0m <[0;33mline:202:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m remove_cv[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6839f18[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x683a120[0m prev 0x6839f18 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x683a9d0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<allocator<char> >::type>::type':'std::allocator<char>'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x683a980[0m [0;32m'typename remove_const<typename remove_volatile<allocator<char> >::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x683a960[0m [0;32m'std::remove_const<std::allocator<char> >::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x683a8e8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x683a8b0[0m [0;32m'std::allocator<char>'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x6132b80[0m [0;32m'std::allocator<char>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6132aa0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69543f8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6954600[0m prev 0x69543f8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6954eb0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<char> *>::type>::type':'std::basic_istream<char> *'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6954e60[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<char> *>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6954e40[0m [0;32m'std::remove_const<std::basic_istream<char> *>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6954dc8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6954d90[0m [0;32m'std::basic_istream<char> *'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mPointerType[0m[0;33m 0x6906b30[0m [0;32m'std::basic_istream<char> *'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x6408440[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408340[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69581c8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69583d0[0m prev 0x69581c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6958c80[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<char> &>::type>::type':'std::basic_istream<char> &'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6958c30[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<char> &>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6958c10[0m [0;32m'std::remove_const<std::basic_istream<char> &>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6958b98[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6958b60[0m [0;32m'std::basic_istream<char> &'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x65c1f80[0m [0;32m'std::basic_istream<char> &'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x6408440[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408340[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6970e08[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6972ae0[0m prev 0x6970e08 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6973390[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<wchar_t> *>::type>::type':'std::basic_istream<wchar_t> *'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6973340[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<wchar_t> *>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6973320[0m [0;32m'std::remove_const<std::basic_istream<wchar_t> *>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x69732a8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6973270[0m [0;32m'std::basic_istream<wchar_t> *'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mPointerType[0m[0;33m 0x690dbb0[0m [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x640fa40[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x640f940[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69765a8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69767b0[0m prev 0x69765a8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6977060[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<wchar_t> &>::type>::type':'std::basic_istream<wchar_t> &'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6977010[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<wchar_t> &>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6976ff0[0m [0;32m'std::remove_const<std::basic_istream<wchar_t> &>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6976f78[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6976f40[0m [0;32m'std::basic_istream<wchar_t> &'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x65c6d40[0m [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x640fa40[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x640f940[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69b4478[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69b4680[0m prev 0x69b4478 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69b4f30[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_ostream<char> *>::type>::type':'std::basic_ostream<char> *'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x69b4ee0[0m [0;32m'typename remove_const<typename remove_volatile<basic_ostream<char> *>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x69b4ec0[0m [0;32m'std::remove_const<std::basic_ostream<char> *>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x69b4e48[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69b4e10[0m [0;32m'std::basic_ostream<char> *'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mPointerType[0m[0;33m 0x68aa6c0[0m [0;32m'std::basic_ostream<char> *'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x6408720[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408620[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69b81c8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69b83d0[0m prev 0x69b81c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69b8c80[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_ostream<char> &>::type>::type':'std::basic_ostream<char> &'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x69b8c30[0m [0;32m'typename remove_const<typename remove_volatile<basic_ostream<char> &>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x69b8c10[0m [0;32m'std::remove_const<std::basic_ostream<char> &>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x69b8b98[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69b8b60[0m [0;32m'std::basic_ostream<char> &'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x64de6e0[0m [0;32m'std::basic_ostream<char> &'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x6408720[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408620[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69ebe28[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<double>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69ec030[0m prev 0x69ebe28 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69ec8e0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<allocator<double> >::type>::type':'std::allocator<double>'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x69ec890[0m [0;32m'typename remove_const<typename remove_volatile<allocator<double> >::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x69ec870[0m [0;32m'std::remove_const<std::allocator<double> >::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x69ec7f8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69ec7c0[0m [0;32m'std::allocator<double>'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x69814d0[0m [0;32m'std::allocator<double>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69813e8[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69f1d28[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<Pont>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69f1f30[0m prev 0x69f1d28 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69f27e0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<allocator<Pont> >::type>::type':'std::allocator<Pont>'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x69f2790[0m [0;32m'typename remove_const<typename remove_volatile<allocator<Pont> >::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x69f2770[0m [0;32m'std::remove_const<std::allocator<Pont> >::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x69f26f8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69f26c0[0m [0;32m'std::allocator<Pont>'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x69c0b70[0m [0;32m'std::allocator<Pont>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69c0a88[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a17e28[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a18030[0m prev 0x6a17e28 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a188e0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<random_access_iterator_tag>::type>::type':'std::random_access_iterator_tag'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6a18890[0m [0;32m'typename remove_const<typename remove_volatile<random_access_iterator_tag>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6a18870[0m [0;32m'std::remove_const<std::random_access_iterator_tag>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6a187f8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a187c0[0m [0;32m'std::random_access_iterator_tag'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x604dad0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m|           `-[0m[0;1;32mCXXRecord[0m[0;33m 0x604da40[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a27f98[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a281a0[0m prev 0x6a27f98 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a28a50[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<char>::type>::type':'char'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6a28a00[0m [0;32m'typename remove_const<typename remove_volatile<char>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6a289e0[0m [0;32m'std::remove_const<char>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6a28968[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a28930[0m [0;32m'char'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a3c348[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a3c550[0m prev 0x6a3c348 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a3ce10[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<const char>::type>::type':'char'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6a3cdc0[0m [0;32m'typename remove_const<typename remove_volatile<const char>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6a3cda0[0m [0;32m'std::remove_const<const char>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6a3cd30[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a3cbe0[0m [0;32m'char'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a542e8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a544f0[0m prev 0x6a542e8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a54da0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<wchar_t>::type>::type':'wchar_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6a54d50[0m [0;32m'typename remove_const<typename remove_volatile<wchar_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6a54d30[0m [0;32m'std::remove_const<wchar_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6a54cb8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a54c80[0m [0;32m'wchar_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a65008[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a65210[0m prev 0x6a65008 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a65ad0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<const wchar_t>::type>::type':'wchar_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6a65a80[0m [0;32m'typename remove_const<typename remove_volatile<const wchar_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6a65a60[0m [0;32m'std::remove_const<const wchar_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6a659f0[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a658a0[0m [0;32m'wchar_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a78cf8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a78f00[0m prev 0x6a78cf8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a797b0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<char16_t>::type>::type':'char16_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6a79760[0m [0;32m'typename remove_const<typename remove_volatile<char16_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6a79740[0m [0;32m'std::remove_const<char16_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6a796c8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a79690[0m [0;32m'char16_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a8b7c8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a8b9d0[0m prev 0x6a8b7c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a8c290[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<const char16_t>::type>::type':'char16_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6a8c240[0m [0;32m'typename remove_const<typename remove_volatile<const char16_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6a8c220[0m [0;32m'std::remove_const<const char16_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6a8c1b0[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a8c060[0m [0;32m'char16_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a90fc8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a911d0[0m prev 0x6a90fc8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a91a80[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<char32_t>::type>::type':'char32_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6a91a30[0m [0;32m'typename remove_const<typename remove_volatile<char32_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6a91a10[0m [0;32m'std::remove_const<char32_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6a91998[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a91960[0m [0;32m'char32_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3af00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aa0a78[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aa0c80[0m prev 0x6aa0a78 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6aa1540[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<const char32_t>::type>::type':'char32_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6aa14f0[0m [0;32m'typename remove_const<typename remove_volatile<const char32_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6aa14d0[0m [0;32m'std::remove_const<const char32_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6aa1460[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6aa1310[0m [0;32m'char32_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3af00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ad19f8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ad1c00[0m prev 0x6ad19f8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ad24b0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<double>::type>::type':'double'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6ad2460[0m [0;32m'typename remove_const<typename remove_volatile<double>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6ad2440[0m [0;32m'std::remove_const<double>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6ad23c8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6ad2390[0m [0;32m'double'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b36388[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b36590[0m prev 0x6b36388 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b36e40[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<Pont>::type>::type':'Pont'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6b36df0[0m [0;32m'typename remove_const<typename remove_volatile<Pont>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6b36dd0[0m [0;32m'std::remove_const<Pont>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6b36d58[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b36d20[0m [0;32m'Pont'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|           `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b5f068[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b5f270[0m prev 0x6b5f068 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b5fb20[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<Pont *>::type>::type':'Pont *'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6b5fad0[0m [0;32m'typename remove_const<typename remove_volatile<Pont *>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6b5fab0[0m [0;32m'std::remove_const<Pont *>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6b5fa38[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b5fa00[0m [0;32m'Pont *'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mPointerType[0m[0;33m 0x5c7cd80[0m [0;32m'Pont *'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|             `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b926c8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b928d0[0m prev 0x6b926c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b93180[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<double *>::type>::type':'double *'[0m
[0;34m    `-[0m[0;32mElaboratedType[0m[0;33m 0x6b93130[0m [0;32m'typename remove_const<typename remove_volatile<double *>::type>::type'[0m sugar
[0;34m      `-[0m[0;32mTypedefType[0m[0;33m 0x6b93110[0m [0;32m'std::remove_const<double *>::type'[0m sugar
[0;34m        |-[0m[0;1;32mTypedef[0m[0;33m 0x6b93098[0m[0;1;36m 'type'[0m
[0;34m        `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b93060[0m [0;32m'double *'[0m sugar
[0;34m          |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m          | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m          `-[0m[0;32mPointerType[0m[0;33m 0x5d5b2a0[0m [0;32m'double *'[0m
[0;34m            `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m

Dumping std::remove_all_extents:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f455a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:767:3[0m, [0;33mline:768:12[0m> [0;33mcol:12[0m[0;1;36m remove_all_extents[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f45488[0m <[0;33mline:767:12[0m> [0;33mcol:12[0m typename depth 0 index 0
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f45510[0m <[0;33mline:768:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m remove_all_extents[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b58c60[0m <[0;33mline:767:3[0m, [0;33mline:768:12[0m> [0;33mline:1954:12[0m struct[0;1;36m remove_all_extents[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b58ec0[0m prev 0x6b58c60 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_all_extents[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b58f88[0m <[0;33mline:1955:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m    `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b58f50[0m [0;32m'Pont'[0m sugar
[0;34m      |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fbd000[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fbcfb8[0m[0;1;36m '_Tp'[0m
[0;34m      `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m        `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m

Dumping std::remove_reference:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f5c090[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:999:3[0m, [0;33mline:1000:12[0m> [0;33mcol:12[0m[0;1;36m remove_reference[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f5bf78[0m <[0;33mline:999:12[0m> [0;33mcol:12[0m typename depth 0 index 0
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f5c000[0m <[0;33mline:1000:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m remove_reference[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x694fb18[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x694fe00[0m prev 0x694fb18 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x694fea0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char>':'std::basic_istream<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x694fcf0[0m [0;32m'std::basic_istream<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x6408440[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408340[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x696c528[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x696c810[0m prev 0x696c528 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x696c8b0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t>':'std::basic_istream<wchar_t>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x696c700[0m [0;32m'std::basic_istream<wchar_t>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x640fa40[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x640f940[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69afb98[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69afe80[0m prev 0x69afb98 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69aff20[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char>':'std::basic_ostream<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69afd70[0m [0;32m'std::basic_ostream<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x6408720[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408620[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a3f1c8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a3f4c0[0m prev 0x6a3f1c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a3f560[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char>':'std::allocator<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a3f3b0[0m [0;32m'std::allocator<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x6132b80[0m [0;32m'std::allocator<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6132aa0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a67e08[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a68100[0m prev 0x6a67e08 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a681a0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<wchar_t>':'std::allocator<wchar_t>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a67ff0[0m [0;32m'std::allocator<wchar_t>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x6136160[0m [0;32m'std::allocator<wchar_t>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6136080[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a8e518[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char16_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a8e810[0m prev 0x6a8e518 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a8e8b0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char16_t>':'std::allocator<char16_t>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a8e700[0m [0;32m'std::allocator<char16_t>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x63d5ab0[0m [0;32m'std::allocator<char16_t>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x63d59d0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aa37c8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char32_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aa3ac0[0m prev 0x6aa37c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6aa3b60[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char32_t>':'std::allocator<char32_t>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6aa39b0[0m [0;32m'std::allocator<char32_t>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x63d5f20[0m [0;32m'std::allocator<char32_t>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x63d5e40[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aab838[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aabb30[0m prev 0x6aab838 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6aabbd0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::__cxx11::basic_string<char>':'std::__cxx11::basic_string<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6aaba20[0m [0;32m'std::__cxx11::basic_string<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x63d5470[0m [0;32m'std::__cxx11::basic_string<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x63d5360[0m[0;1;36m 'basic_string'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aeebc8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'double &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aeeec0[0m prev 0x6aeebc8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6aeef60[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'double':'double'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6aeedb0[0m [0;32m'double'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6af5ef8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'__gnu_cxx::__ops::_Iter_less_iter &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6af61f0[0m prev 0x6af5ef8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6af6290[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6af60e0[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x6098eb0[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x6098e20[0m[0;1;36m '_Iter_less_iter'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b00de8[0m <[0;33mline:1627:3[0m, [0;33mline:1629:27[0m> [0;33mline:1628:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b01050[0m prev 0x6b00de8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b01118[0m <[0;33mline:1629:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'double':'double'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b010e0[0m [0;32m'double'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa18f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa18a8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b49858[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const Pont &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b49b50[0m prev 0x6b49858 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b49bf0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'const Pont':'const Pont'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b49a40[0m [0;32m'const Pont'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x5c7ca31[0m [0;32m'const Pont'[0m const
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b5b6a8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b5b9a0[0m prev 0x6b5b6a8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b5ba40[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b5b890[0m [0;32m'Pont'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b5ca88[0m <[0;33mline:1627:3[0m, [0;33mline:1629:27[0m> [0;33mline:1628:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b5ccf8[0m prev 0x6b5ca88 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b5cdc8[0m <[0;33mline:1629:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b5cd90[0m [0;32m'Pont'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa18f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa18a8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bb07d8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::vector<Pont, std::allocator<Pont> > &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bb0ad0[0m prev 0x6bb07d8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6bb0b70[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::vector<Pont, std::allocator<Pont> >':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6bb09c0[0m [0;32m'std::vector<Pont, std::allocator<Pont> >'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x69c0d40[0m [0;32m'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69c0c40[0m[0;1;36m 'vector'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bb13c8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<Pont> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bb16c0[0m prev 0x6bb13c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6bb1760[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<Pont>':'std::allocator<Pont>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6bb15b0[0m [0;32m'std::allocator<Pont>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x69c0b70[0m [0;32m'std::allocator<Pont>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69c0a88[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bb30f8[0m <[0;33mline:1627:3[0m, [0;33mline:1629:27[0m> [0;33mline:1628:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bb3360[0m prev 0x6bb30f8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6bb3428[0m <[0;33mline:1629:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'Pont *':'Pont *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6bb33f0[0m [0;32m'Pont *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa18f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa18a8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5c7cd80[0m [0;32m'Pont *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bddee8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *&'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bde1e0[0m prev 0x6bddee8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6bde280[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'Pont *':'Pont *'[0m
[0;34m    `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6bde0d0[0m [0;32m'Pont *'[0m sugar
[0;34m      |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m
[0;34m      `-[0m[0;32mPointerType[0m[0;33m 0x5c7cd80[0m [0;32m'Pont *'[0m
[0;34m        `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m          `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m

Dumping std::__is_move_constructible_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f6ed30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1151:3[0m, [0;33mline:1152:12[0m> [0;33mcol:12[0m[0;1;36m __is_move_constructible_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f6ea88[0m <[0;33mline:1151:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5f6ec08[0m <[0;33mcol:26[0m, [0;33mcol:58[0m> [0;33mcol:31[0m [0;32m'bool'[0m depth 0 index 1
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f6ec68[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5f6ebc0[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f6eca0[0m <[0;33mline:1152:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m __is_move_constructible_impl[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b026c0[0m <[0;33mline:1158:3[0m, [0;33mline:1161:7[0m> [0;33mline:1159:12[0m struct[0;1;36m __is_move_constructible_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'is_constructible<double, double &&>':'std::is_constructible<double, double &&>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| |-[0mTemplateArgument integral 1
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b0d9c8[0m prev 0x6b026c0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_constructible_impl[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bb9c40[0m <[0;33mline:1158:3[0m, [0;33mline:1161:7[0m> [0;33mline:1159:12[0m struct[0;1;36m __is_move_constructible_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'is_constructible<Pont *, Pont *&&>':'std::is_constructible<Pont *, Pont *&&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bcc308[0m prev 0x6bb9c40 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_constructible_impl[0m

Dumping std::__is_move_constructible_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f6f168[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1154:3[0m, [0;33mline:1156:27[0m> [0;33mline:1155:12[0m struct[0;1;36m __is_move_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f6ef78[0m <[0;33mline:1154:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f70a00[0m <[0;33mline:1155:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_constructible_impl[0m

Dumping std::__is_move_constructible_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f70c98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1158:3[0m, [0;33mline:1161:7[0m> [0;33mline:1159:12[0m struct[0;1;36m __is_move_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'is_constructible<_Tp, _Tp &&>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f70aa8[0m <[0;33mline:1158:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f710f0[0m <[0;33mline:1159:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_constructible_impl[0m

Dumping std::is_move_constructible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f712b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1164:3[0m, [0;33mline:1167:7[0m> [0;33mline:1165:12[0m[0;1;36m is_move_constructible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f71198[0m <[0;33mline:1164:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f71220[0m <[0;33mline:1165:5[0m, [0;33mline:1167:7[0m> [0;33mline:1165:12[0m struct[0;1;36m is_move_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_move_constructible_impl<_Tp>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f71740[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_constructible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b003e0[0m <[0;33mline:1164:3[0m, [0;33mline:1167:7[0m> [0;33mline:1165:12[0m struct[0;1;36m is_move_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_move_constructible_impl<double>':'std::__is_move_constructible_impl<double, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b0daa0[0m prev 0x6b003e0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_constructible[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bb25f0[0m <[0;33mline:1164:3[0m, [0;33mline:1167:7[0m> [0;33mline:1165:12[0m struct[0;1;36m is_move_constructible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_move_constructible_impl<Pont *>':'std::__is_move_constructible_impl<Pont *, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bcc3e0[0m prev 0x6bb25f0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_constructible[0m

Dumping std::__is_nothrow_move_constructible_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f7b620[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1237:3[0m, [0;33mline:1238:12[0m> [0;33mcol:12[0m[0;1;36m __is_nothrow_move_constructible_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f7b378[0m <[0;33mline:1237:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5f7b4f8[0m <[0;33mcol:26[0m, [0;33mcol:58[0m> [0;33mcol:31[0m [0;32m'bool'[0m depth 0 index 1
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f7b558[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5f7b4b0[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f7b590[0m <[0;33mline:1238:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b11480[0m <[0;33mline:1244:3[0m, [0;33mline:1247:7[0m> [0;33mline:1245:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'is_nothrow_constructible<double, double &&>':'std::is_nothrow_constructible<double, double &&>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| |-[0mTemplateArgument integral 1
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b12fd8[0m prev 0x6b11480 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nothrow_move_constructible_impl[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b6fc00[0m <[0;33mline:1244:3[0m, [0;33mline:1247:7[0m> [0;33mline:1245:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'is_nothrow_constructible<Pont, Pont &&>':'std::is_nothrow_constructible<Pont, Pont &&>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m| |-[0mTemplateArgument integral 1
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7c068[0m prev 0x6b6fc00 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nothrow_move_constructible_impl[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bd9470[0m <[0;33mline:1244:3[0m, [0;33mline:1247:7[0m> [0;33mline:1245:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'is_nothrow_constructible<Pont *, Pont *&&>':'std::is_nothrow_constructible<Pont *, Pont *&&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bdafc8[0m prev 0x6bd9470 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nothrow_move_constructible_impl[0m

Dumping std::__is_nothrow_move_constructible_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f7ba58[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1240:3[0m, [0;33mline:1242:27[0m> [0;33mline:1241:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f7b868[0m <[0;33mline:1240:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f7bd38[0m <[0;33mline:1241:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nothrow_move_constructible_impl[0m

Dumping std::__is_nothrow_move_constructible_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f7bfd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1244:3[0m, [0;33mline:1247:7[0m> [0;33mline:1245:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'is_nothrow_constructible<_Tp, _Tp &&>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f7bde0[0m <[0;33mline:1244:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f7c430[0m <[0;33mline:1245:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nothrow_move_constructible_impl[0m

Dumping std::is_nothrow_move_constructible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f7c5f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1250:3[0m, [0;33mline:1253:7[0m> [0;33mline:1251:12[0m[0;1;36m is_nothrow_move_constructible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f7c4d8[0m <[0;33mline:1250:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f7c560[0m <[0;33mline:1251:5[0m, [0;33mline:1253:7[0m> [0;33mline:1251:12[0m struct[0;1;36m is_nothrow_move_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_nothrow_move_constructible_impl<_Tp>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f7ca80[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_constructible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b10ae8[0m <[0;33mline:1250:3[0m, [0;33mline:1253:7[0m> [0;33mline:1251:12[0m struct[0;1;36m is_nothrow_move_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_nothrow_move_constructible_impl<double>':'std::__is_nothrow_move_constructible_impl<double, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b130b0[0m prev 0x6b10ae8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_constructible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b6f028[0m <[0;33mline:1250:3[0m, [0;33mline:1253:7[0m> [0;33mline:1251:12[0m struct[0;1;36m is_nothrow_move_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_nothrow_move_constructible_impl<Pont>':'std::__is_nothrow_move_constructible_impl<Pont, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7c140[0m prev 0x6b6f028 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_constructible[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bd8ad8[0m <[0;33mline:1250:3[0m, [0;33mline:1253:7[0m> [0;33mline:1251:12[0m struct[0;1;36m is_nothrow_move_constructible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_nothrow_move_constructible_impl<Pont *>':'std::__is_nothrow_move_constructible_impl<Pont *, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bdb0a0[0m prev 0x6bd8ad8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_constructible[0m

Dumping std::__is_move_assignable_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f81760[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1295:3[0m, [0;33mline:1296:12[0m> [0;33mcol:12[0m[0;1;36m __is_move_assignable_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f814b8[0m <[0;33mline:1295:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5f81638[0m <[0;33mcol:26[0m, [0;33mcol:58[0m> [0;33mcol:31[0m [0;32m'bool'[0m depth 0 index 1
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f81698[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5f815f0[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f816d0[0m <[0;33mline:1296:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m __is_move_assignable_impl[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b0e290[0m <[0;33mline:1302:3[0m, [0;33mline:1305:7[0m> [0;33mline:1303:12[0m struct[0;1;36m __is_move_assignable_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'is_assignable<double &, double &&>':'std::is_assignable<double &, double &&>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| |-[0mTemplateArgument integral 1
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b102a8[0m prev 0x6b0e290 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_assignable_impl[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bccbd0[0m <[0;33mline:1302:3[0m, [0;33mline:1305:7[0m> [0;33mline:1303:12[0m struct[0;1;36m __is_move_assignable_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'is_assignable<Pont *&, Pont *&&>':'std::is_assignable<Pont *&, Pont *&&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bd8298[0m prev 0x6bccbd0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_assignable_impl[0m

Dumping std::__is_move_assignable_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f81b98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1298:3[0m, [0;33mline:1300:27[0m> [0;33mline:1299:12[0m struct[0;1;36m __is_move_assignable_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f819a8[0m <[0;33mline:1298:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f81e78[0m <[0;33mline:1299:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_assignable_impl[0m

Dumping std::__is_move_assignable_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f82118[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1302:3[0m, [0;33mline:1305:7[0m> [0;33mline:1303:12[0m struct[0;1;36m __is_move_assignable_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'is_assignable<_Tp &, _Tp &&>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f81f20[0m <[0;33mline:1302:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f82570[0m <[0;33mline:1303:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_assignable_impl[0m

Dumping std::is_move_assignable:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f83140[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1308:3[0m, [0;33mline:1311:7[0m> [0;33mline:1309:12[0m[0;1;36m is_move_assignable[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f82618[0m <[0;33mline:1308:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f826a0[0m <[0;33mline:1309:5[0m, [0;33mline:1311:7[0m> [0;33mline:1309:12[0m struct[0;1;36m is_move_assignable[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_move_assignable_impl<_Tp>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f835d0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_assignable[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ac9958[0m <[0;33mline:1308:3[0m, [0;33mline:1311:7[0m> [0;33mline:1309:12[0m struct[0;1;36m is_move_assignable[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_move_assignable_impl<double>':'std::__is_move_assignable_impl<double, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b10380[0m prev 0x6ac9958 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_assignable[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bb2770[0m <[0;33mline:1308:3[0m, [0;33mline:1311:7[0m> [0;33mline:1309:12[0m struct[0;1;36m is_move_assignable[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_move_assignable_impl<Pont *>':'std::__is_move_assignable_impl<Pont *, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bd8370[0m prev 0x6bb2770 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_assignable[0m

Dumping std::__is_nt_move_assignable_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f87e70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1343:3[0m, [0;33mline:1344:12[0m> [0;33mcol:12[0m[0;1;36m __is_nt_move_assignable_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f87bc8[0m <[0;33mline:1343:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5f87d48[0m <[0;33mcol:26[0m, [0;33mcol:58[0m> [0;33mcol:31[0m [0;32m'bool'[0m depth 0 index 1
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f87da8[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5f87d00[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f87de0[0m <[0;33mline:1344:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b138a0[0m <[0;33mline:1350:3[0m, [0;33mline:1353:7[0m> [0;33mline:1351:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'is_nothrow_assignable<double &, double &&>':'std::is_nothrow_assignable<double &, double &&>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| |-[0mTemplateArgument integral 1
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b15558[0m prev 0x6b138a0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nt_move_assignable_impl[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bdb890[0m <[0;33mline:1350:3[0m, [0;33mline:1353:7[0m> [0;33mline:1351:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'is_nothrow_assignable<Pont *&, Pont *&&>':'std::is_nothrow_assignable<Pont *&, Pont *&&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bdd548[0m prev 0x6bdb890 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nt_move_assignable_impl[0m

Dumping std::__is_nt_move_assignable_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f882a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1346:3[0m, [0;33mline:1348:27[0m> [0;33mline:1347:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f880b8[0m <[0;33mline:1346:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f88588[0m <[0;33mline:1347:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nt_move_assignable_impl[0m

Dumping std::__is_nt_move_assignable_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f88828[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1350:3[0m, [0;33mline:1353:7[0m> [0;33mline:1351:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'is_nothrow_assignable<_Tp &, _Tp &&>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f88630[0m <[0;33mline:1350:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f88c80[0m <[0;33mline:1351:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nt_move_assignable_impl[0m

Dumping std::is_nothrow_move_assignable:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f89520[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1356:3[0m, [0;33mline:1359:7[0m> [0;33mline:1357:12[0m[0;1;36m is_nothrow_move_assignable[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f88d28[0m <[0;33mline:1356:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f88db0[0m <[0;33mline:1357:5[0m, [0;33mline:1359:7[0m> [0;33mline:1357:12[0m struct[0;1;36m is_nothrow_move_assignable[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_nt_move_assignable_impl<_Tp>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f899b0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_assignable[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b10c70[0m <[0;33mline:1356:3[0m, [0;33mline:1359:7[0m> [0;33mline:1357:12[0m struct[0;1;36m is_nothrow_move_assignable[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_nt_move_assignable_impl<double>':'std::__is_nt_move_assignable_impl<double, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b15630[0m prev 0x6b10c70 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_assignable[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bd8c60[0m <[0;33mline:1356:3[0m, [0;33mline:1359:7[0m> [0;33mline:1357:12[0m struct[0;1;36m is_nothrow_move_assignable[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_nt_move_assignable_impl<Pont *>':'std::__is_nt_move_assignable_impl<Pont *, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bdd620[0m prev 0x6bd8c60 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_assignable[0m

Dumping std::is_trivially_move_constructible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f8ded0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1413:3[0m, [0;33mline:1418:7[0m> [0;33mline:1414:12[0m[0;1;36m is_trivially_move_constructible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f8ddb8[0m <[0;33mline:1413:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f8de40[0m <[0;33mline:1414:5[0m, [0;33mline:1418:7[0m> [0;33mline:1414:12[0m struct[0;1;36m is_trivially_move_constructible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__and_<is_move_constructible<_Tp>, integral_constant<bool, __is_trivially_constructible(_Tp, _Tp &&)> >'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f90bf0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_trivially_move_constructible[0m

Dumping std::is_trivially_move_assignable:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f91f10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1437:3[0m, [0;33mline:1442:7[0m> [0;33mline:1438:12[0m[0;1;36m is_trivially_move_assignable[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f91df8[0m <[0;33mline:1437:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f91e80[0m <[0;33mline:1438:5[0m, [0;33mline:1442:7[0m> [0;33mline:1438:12[0m struct[0;1;36m is_trivially_move_assignable[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__and_<is_move_assignable<_Tp>, integral_constant<bool, __is_trivially_assignable(_Tp &, _Tp &&)> >'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f925a0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_trivially_move_assignable[0m

Dumping std::remove_const:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f9d950[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m[0;1;36m remove_const[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9d838[0m <[0;33mline:1552:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9d8c0[0m <[0;33mline:1553:5[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9e4f0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5f9e590[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m|   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x683a5e0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x683a818[0m prev 0x683a5e0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x683a8e8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char>':'std::allocator<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x683a8b0[0m [0;32m'std::allocator<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x6132b80[0m [0;32m'std::allocator<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6132aa0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6954ac0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6954cf8[0m prev 0x6954ac0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6954dc8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6954d90[0m [0;32m'std::basic_istream<char> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x6906b30[0m [0;32m'std::basic_istream<char> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x6408440[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408340[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6958890[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6958ac8[0m prev 0x6958890 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6958b98[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char> &':'std::basic_istream<char> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6958b60[0m [0;32m'std::basic_istream<char> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x65c1f80[0m [0;32m'std::basic_istream<char> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x6408440[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408340[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6972fa0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69731d8[0m prev 0x6972fa0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69732a8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6973270[0m [0;32m'std::basic_istream<wchar_t> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x690dbb0[0m [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x640fa40[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x640f940[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6976c70[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6976ea8[0m prev 0x6976c70 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6976f78[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6976f40[0m [0;32m'std::basic_istream<wchar_t> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x65c6d40[0m [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x640fa40[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x640f940[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69b4b40[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69b4d78[0m prev 0x69b4b40 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69b4e48[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69b4e10[0m [0;32m'std::basic_ostream<char> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x68aa6c0[0m [0;32m'std::basic_ostream<char> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x6408720[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408620[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69b8890[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69b8ac8[0m prev 0x69b8890 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69b8b98[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char> &':'std::basic_ostream<char> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69b8b60[0m [0;32m'std::basic_ostream<char> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x64de6e0[0m [0;32m'std::basic_ostream<char> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x6408720[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408620[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69ec4f0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<double>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69ec728[0m prev 0x69ec4f0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69ec7f8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::allocator<double>':'std::allocator<double>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69ec7c0[0m [0;32m'std::allocator<double>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x69814d0[0m [0;32m'std::allocator<double>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69813e8[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69f23f0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<Pont>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69f2628[0m prev 0x69f23f0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69f26f8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::allocator<Pont>':'std::allocator<Pont>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69f26c0[0m [0;32m'std::allocator<Pont>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x69c0b70[0m [0;32m'std::allocator<Pont>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69c0a88[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a184f0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a18728[0m prev 0x6a184f0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a187f8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::random_access_iterator_tag':'std::random_access_iterator_tag'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a187c0[0m [0;32m'std::random_access_iterator_tag'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x604dad0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x604da40[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a28660[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a28898[0m prev 0x6a28660 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a28968[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char':'char'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a28930[0m [0;32m'char'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a3ca10[0m <[0;33mline:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a3cc90[0m prev 0x6a3ca10 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a3cd30[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char':'char'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a3cbe0[0m [0;32m'char'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a549b0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a54be8[0m prev 0x6a549b0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a54cb8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'wchar_t':'wchar_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a54c80[0m [0;32m'wchar_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a656d0[0m <[0;33mline:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a65950[0m prev 0x6a656d0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a659f0[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'wchar_t':'wchar_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a658a0[0m [0;32m'wchar_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a793c0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a795f8[0m prev 0x6a793c0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a796c8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char16_t':'char16_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a79690[0m [0;32m'char16_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a8be90[0m <[0;33mline:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a8c110[0m prev 0x6a8be90 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a8c1b0[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char16_t':'char16_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a8c060[0m [0;32m'char16_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a91690[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a918c8[0m prev 0x6a91690 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a91998[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char32_t':'char32_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a91960[0m [0;32m'char32_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3af00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aa1140[0m <[0;33mline:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aa13c0[0m prev 0x6aa1140 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6aa1460[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char32_t':'char32_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6aa1310[0m [0;32m'char32_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3af00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ad20c0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ad22f8[0m prev 0x6ad20c0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ad23c8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'double':'double'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6ad2390[0m [0;32m'double'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b36a50[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b36c88[0m prev 0x6b36a50 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b36d58[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b36d20[0m [0;32m'Pont'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b5f730[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b5f968[0m prev 0x6b5f730 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b5fa38[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'Pont *':'Pont *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b5fa00[0m [0;32m'Pont *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5c7cd80[0m [0;32m'Pont *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b92d90[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b92fc8[0m prev 0x6b92d90 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b93098[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'double *':'double *'[0m
[0;34m    `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b93060[0m [0;32m'double *'[0m sugar
[0;34m      |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9d880[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9d838[0m[0;1;36m '_Tp'[0m
[0;34m      `-[0m[0;32mPointerType[0m[0;33m 0x5d5b2a0[0m [0;32m'double *'[0m
[0;34m        `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m

Dumping std::remove_const:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f9e760[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'const type-parameter-0-0'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9e600[0m <[0;33mline:1556:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9e988[0m <[0;33mline:1557:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5f9ea28[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9e650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9e600[0m[0;1;36m '_Tp'[0m

Dumping std::remove_volatile:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f9ebb0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m[0;1;36m remove_volatile[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9ea98[0m <[0;33mline:1561:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9eb20[0m <[0;33mline:1562:5[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9ee00[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5f9eea0[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m|   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x683a1e8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x683a428[0m prev 0x683a1e8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x683a4f8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char>':'std::allocator<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x683a4c0[0m [0;32m'std::allocator<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x6132b80[0m [0;32m'std::allocator<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6132aa0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69546c8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6954908[0m prev 0x69546c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69549d8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69549a0[0m [0;32m'std::basic_istream<char> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x6906b30[0m [0;32m'std::basic_istream<char> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x6408440[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408340[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6958498[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69586d8[0m prev 0x6958498 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69587a8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char> &':'std::basic_istream<char> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6958770[0m [0;32m'std::basic_istream<char> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x65c1f80[0m [0;32m'std::basic_istream<char> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x6408440[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408340[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6972ba8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6972de8[0m prev 0x6972ba8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6972eb8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6972e80[0m [0;32m'std::basic_istream<wchar_t> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x690dbb0[0m [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x640fa40[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x640f940[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6976878[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6976ab8[0m prev 0x6976878 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6976b88[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6976b50[0m [0;32m'std::basic_istream<wchar_t> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x65c6d40[0m [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x640fa40[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x640f940[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69b4748[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69b4988[0m prev 0x69b4748 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69b4a58[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69b4a20[0m [0;32m'std::basic_ostream<char> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x68aa6c0[0m [0;32m'std::basic_ostream<char> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x6408720[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408620[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69b8498[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69b86d8[0m prev 0x69b8498 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69b87a8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char> &':'std::basic_ostream<char> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69b8770[0m [0;32m'std::basic_ostream<char> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x64de6e0[0m [0;32m'std::basic_ostream<char> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x6408720[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6408620[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69ec0f8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<double>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69ec338[0m prev 0x69ec0f8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69ec408[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::allocator<double>':'std::allocator<double>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69ec3d0[0m [0;32m'std::allocator<double>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x69814d0[0m [0;32m'std::allocator<double>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69813e8[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x69f1ff8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<Pont>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x69f2238[0m prev 0x69f1ff8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x69f2308[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::allocator<Pont>':'std::allocator<Pont>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69f22d0[0m [0;32m'std::allocator<Pont>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x69c0b70[0m [0;32m'std::allocator<Pont>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69c0a88[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a180f8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a18338[0m prev 0x6a180f8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a18408[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::random_access_iterator_tag':'std::random_access_iterator_tag'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a183d0[0m [0;32m'std::random_access_iterator_tag'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x604dad0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x604da40[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a28268[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a284a8[0m prev 0x6a28268 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a28578[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char':'char'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a28540[0m [0;32m'char'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a3c618[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a3c858[0m prev 0x6a3c618 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a3c928[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'const char':'const char'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a3c8f0[0m [0;32m'const char'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x5c3a961[0m [0;32m'const char'[0m const
[0;34m|       `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a545b8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a547f8[0m prev 0x6a545b8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a548c8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'wchar_t':'wchar_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a54890[0m [0;32m'wchar_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a652d8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a65518[0m prev 0x6a652d8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a655e8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'const wchar_t':'const wchar_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a655b0[0m [0;32m'const wchar_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x5c3aea1[0m [0;32m'const wchar_t'[0m const
[0;34m|       `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a78fc8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a79208[0m prev 0x6a78fc8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a792d8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char16_t':'char16_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a792a0[0m [0;32m'char16_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a8ba98[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a8bcd8[0m prev 0x6a8ba98 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a8bda8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'const char16_t':'const char16_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a8bd70[0m [0;32m'const char16_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x5c3aee1[0m [0;32m'const char16_t'[0m const
[0;34m|       `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6a91298[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6a914d8[0m prev 0x6a91298 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6a915a8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char32_t':'char32_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6a91570[0m [0;32m'char32_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3af00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aa0d48[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aa0f88[0m prev 0x6aa0d48 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6aa1058[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'const char32_t':'const char32_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6aa1020[0m [0;32m'const char32_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x5c3af01[0m [0;32m'const char32_t'[0m const
[0;34m|       `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3af00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ad1cc8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ad1f08[0m prev 0x6ad1cc8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ad1fd8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'double':'double'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6ad1fa0[0m [0;32m'double'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b36658[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b36898[0m prev 0x6b36658 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b36968[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b36930[0m [0;32m'Pont'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b5f338[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b5f578[0m prev 0x6b5f338 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b5f648[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'Pont *':'Pont *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b5f610[0m [0;32m'Pont *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5c7cd80[0m [0;32m'Pont *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m|         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b92998[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b92bd8[0m prev 0x6b92998 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b92ca8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'double *':'double *'[0m
[0;34m    `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b92c70[0m [0;32m'double *'[0m sugar
[0;34m      |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9eae0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ea98[0m[0;1;36m '_Tp'[0m
[0;34m      `-[0m[0;32mPointerType[0m[0;33m 0x5d5b2a0[0m [0;32m'double *'[0m
[0;34m        `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m

Dumping std::remove_volatile:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f9f070[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1565:3[0m, [0;33mline:1567:29[0m> [0;33mline:1566:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'volatile type-parameter-0-0'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9ef10[0m <[0;33mline:1565:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9f298[0m <[0;33mline:1566:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5f9f338[0m <[0;33mline:1567:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5f9ef60[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5f9ef10[0m[0;1;36m '_Tp'[0m

Dumping std::remove_cv:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f9f4c0[0m prev 0x5f080f0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1570:3[0m, [0;33mline:1575:5[0m> [0;33mline:1571:12[0m[0;1;36m remove_cv[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9f3a8[0m <[0;33mline:1570:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9f430[0m prev 0x5f08060 <[0;33mline:1571:5[0m, [0;33mline:1575:5[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9f580[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5f9f900[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<_Tp>::type>::type'[0m
[0;34m|   `-[0m[0;32mDependentNameType[0m[0;33m 0x5f9f890[0m [0;32m'typename remove_const<typename remove_volatile<_Tp>::type>::type'[0m dependent
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6839f18[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69543f8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69581c8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6970e08[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69765a8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69b4478[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69b81c8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69ebe28[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69f1d28[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a17e28[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a27f98[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a3c348[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a542e8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a65008[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a78cf8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a8b7c8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a90fc8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6aa0a78[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6ad19f8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b36388[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b5f068[0m[0;1;36m 'remove_cv'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b926c8[0m[0;1;36m 'remove_cv'[0m

Dumping std::remove_const_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x5fa0c20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1600:3[0m, [0;33mline:1601:56[0m> [0;33mcol:5[0m[0;1;36m remove_const_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fa09d0[0m <[0;33mline:1600:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x5fa0bc0[0m <[0;33mline:1601:5[0m, [0;33mcol:56[0m> [0;33mcol:11[0m[0;1;36m remove_const_t[0m [0;32m'typename remove_const<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fa0b50[0m [0;32m'typename remove_const<_Tp>::type'[0m dependent

Dumping std::remove_volatile_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x5fa0e70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1604:3[0m, [0;33mline:1605:62[0m> [0;33mcol:5[0m[0;1;36m remove_volatile_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fa0c78[0m <[0;33mline:1604:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x5fa0e10[0m <[0;33mline:1605:5[0m, [0;33mcol:62[0m> [0;33mcol:11[0m[0;1;36m remove_volatile_t[0m [0;32m'typename remove_volatile<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fa0da0[0m [0;32m'typename remove_volatile<_Tp>::type'[0m dependent

Dumping std::remove_cv_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x5fa10c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1608:3[0m, [0;33mline:1609:50[0m> [0;33mcol:5[0m[0;1;36m remove_cv_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fa0ec8[0m <[0;33mline:1608:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x5fa1060[0m <[0;33mline:1609:5[0m, [0;33mcol:50[0m> [0;33mcol:11[0m[0;1;36m remove_cv_t[0m [0;32m'typename remove_cv<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fa0ff0[0m [0;32m'typename remove_cv<_Tp>::type'[0m dependent

Dumping std::remove_reference:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5fa19c0[0m prev 0x5f5c090 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1627:3[0m, [0;33mline:1629:27[0m> [0;33mline:1628:12[0m[0;1;36m remove_reference[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fa18a8[0m <[0;33mline:1627:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fa1930[0m prev 0x5f5c000 <[0;33mline:1628:5[0m, [0;33mline:1629:27[0m> [0;33mline:1628:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fa1a80[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fa1b20[0m <[0;33mline:1629:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m|   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa18f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa18a8[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x694fb18[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x696c528[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69afb98[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a3f1c8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a67e08[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6a8e518[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6aa37c8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6aab838[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6aeebc8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6af5ef8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b00de8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b49858[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b5b6a8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b5ca88[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6bb07d8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6bb13c8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6bb30f8[0m[0;1;36m 'remove_reference'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6bddee8[0m[0;1;36m 'remove_reference'[0m

Dumping std::remove_reference:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5fa1d20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 &'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fa1b90[0m <[0;33mline:1631:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fa1f48[0m <[0;33mline:1632:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fa1fe8[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa1be0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa1b90[0m[0;1;36m '_Tp'[0m

Dumping std::remove_reference:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5fa21e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1635:3[0m, [0;33mline:1637:27[0m> [0;33mline:1636:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 &&'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fa2058[0m <[0;33mline:1635:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fa4c98[0m <[0;33mline:1636:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fa4d38[0m <[0;33mline:1637:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fa20a0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fa2058[0m[0;1;36m '_Tp'[0m

Dumping std::remove_reference_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x5fa7330[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1669:3[0m, [0;33mline:1670:64[0m> [0;33mcol:5[0m[0;1;36m remove_reference_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fa7138[0m <[0;33mline:1669:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x5fa72d0[0m <[0;33mline:1670:5[0m, [0;33mcol:64[0m> [0;33mcol:11[0m[0;1;36m remove_reference_t[0m [0;32m'typename remove_reference<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fa7260[0m [0;32m'typename remove_reference<_Tp>::type'[0m dependent

Dumping std::remove_extent:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5fbc1a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1940:3[0m, [0;33mline:1942:29[0m> [0;33mline:1941:12[0m[0;1;36m remove_extent[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbc088[0m <[0;33mline:1940:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbc110[0m <[0;33mline:1941:5[0m, [0;33mline:1942:29[0m> [0;33mline:1941:12[0m struct[0;1;36m remove_extent[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbc3f0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_extent[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fbc490[0m <[0;33mline:1942:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m    `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fbc0d0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fbc088[0m[0;1;36m '_Tp'[0m

Dumping std::remove_extent:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5fbc790[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1944:3[0m, [0;33mline:1946:29[0m> [0;33mline:1945:12[0m struct[0;1;36m remove_extent[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 [_Size]'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbc500[0m <[0;33mline:1944:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5fbc5c8[0m <[0;33mcol:26[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced [0;32m'std::size_t':'unsigned long'[0m depth 0 index 1[0;1;36m _Size[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbc9c8[0m <[0;33mline:1945:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_extent[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fbca68[0m <[0;33mline:1946:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fbc550[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fbc500[0m[0;1;36m '_Tp'[0m

Dumping std::remove_extent:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5fbcc70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1948:3[0m, [0;33mline:1950:29[0m> [0;33mline:1949:12[0m struct[0;1;36m remove_extent[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 []'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbcad8[0m <[0;33mline:1948:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbcea8[0m <[0;33mline:1949:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_extent[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fbcf48[0m <[0;33mline:1950:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fbcb20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fbcad8[0m[0;1;36m '_Tp'[0m

Dumping std::remove_all_extents:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5fbd0d0[0m prev 0x5f455a0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1953:3[0m, [0;33mline:1955:29[0m> [0;33mline:1954:12[0m[0;1;36m remove_all_extents[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbcfb8[0m <[0;33mline:1953:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbd040[0m prev 0x5f45510 <[0;33mline:1954:5[0m, [0;33mline:1955:29[0m> [0;33mline:1954:12[0m struct[0;1;36m remove_all_extents[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbd190[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_all_extents[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fbd230[0m <[0;33mline:1955:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m|   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fbd000[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fbcfb8[0m[0;1;36m '_Tp'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b58c60[0m[0;1;36m 'remove_all_extents'[0m

Dumping std::remove_all_extents:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5fbd530[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1957:3[0m, [0;33mline:1959:64[0m> [0;33mline:1958:12[0m struct[0;1;36m remove_all_extents[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 [_Size]'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbd2a0[0m <[0;33mline:1957:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5fbd368[0m <[0;33mcol:26[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced [0;32m'std::size_t':'unsigned long'[0m depth 0 index 1[0;1;36m _Size[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbd768[0m <[0;33mline:1958:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_all_extents[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fbd910[0m <[0;33mline:1959:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m type[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fbd8a0[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m dependent

Dumping std::remove_all_extents:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5fbdb20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1961:3[0m, [0;33mline:1963:64[0m> [0;33mline:1962:12[0m struct[0;1;36m remove_all_extents[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 []'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbd980[0m <[0;33mline:1961:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbdd58[0m <[0;33mline:1962:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_all_extents[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fbdf00[0m <[0;33mline:1963:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m type[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fbde90[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m dependent

Dumping std::remove_extent_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x5fbe1c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1967:3[0m, [0;33mline:1968:58[0m> [0;33mcol:5[0m[0;1;36m remove_extent_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbdf70[0m <[0;33mline:1967:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x5fbe160[0m <[0;33mline:1968:5[0m, [0;33mcol:58[0m> [0;33mcol:11[0m[0;1;36m remove_extent_t[0m [0;32m'typename remove_extent<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fbe0f0[0m [0;32m'typename remove_extent<_Tp>::type'[0m dependent

Dumping std::remove_all_extents_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x5fbe410[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1971:3[0m, [0;33mline:1972:68[0m> [0;33mcol:5[0m[0;1;36m remove_all_extents_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbe218[0m <[0;33mline:1971:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x5fbe3b0[0m <[0;33mline:1972:5[0m, [0;33mcol:68[0m> [0;33mcol:11[0m[0;1;36m remove_all_extents_t[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fbe340[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m dependent

Dumping std::__remove_pointer_helper:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5fbe5f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1977:3[0m, [0;33mline:1979:29[0m> [0;33mline:1978:12[0m[0;1;36m __remove_pointer_helper[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbe468[0m <[0;33mline:1977:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbe4d8[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbe568[0m <[0;33mline:1978:5[0m, [0;33mline:1979:29[0m> [0;33mline:1978:12[0m struct[0;1;36m __remove_pointer_helper[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbe890[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_pointer_helper[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fbe930[0m <[0;33mline:1979:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m    `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fbe4b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fbe468[0m[0;1;36m '_Tp'[0m

Dumping std::__remove_pointer_helper:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5fbec58[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1981:3[0m, [0;33mline:1983:29[0m> [0;33mline:1982:12[0m struct[0;1;36m __remove_pointer_helper[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-1 *'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbe9a0[0m <[0;33mline:1981:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbea18[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbeed8[0m <[0;33mline:1982:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_pointer_helper[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5fbef78[0m <[0;33mline:1983:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Up'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fbea60[0m [0;32m'_Up'[0m dependent depth 0 index 1
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fbea18[0m[0;1;36m '_Up'[0m

Dumping std::remove_pointer:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5fbf100[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1986:3[0m, [0;33mline:1989:7[0m> [0;33mline:1987:12[0m[0;1;36m remove_pointer[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5fbefe8[0m <[0;33mline:1986:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5fbf070[0m <[0;33mline:1987:5[0m, [0;33mline:1989:7[0m> [0;33mline:1987:12[0m struct[0;1;36m remove_pointer[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__remove_pointer_helper<_Tp, typename remove_cv<_Tp>::type>'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f115c8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_pointer[0m

Dumping std::remove_pointer_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x5f13040[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2008:3[0m, [0;33mline:2009:60[0m> [0;33mcol:5[0m[0;1;36m remove_pointer_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f12df8[0m <[0;33mline:2008:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x5f12fe0[0m <[0;33mline:2009:5[0m, [0;33mcol:60[0m> [0;33mcol:11[0m[0;1;36m remove_pointer_t[0m [0;32m'typename remove_pointer<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5f12f70[0m [0;32m'typename remove_pointer<_Tp>::type'[0m dependent

Dumping std::decay::__remove_type:
[0;1;32mTypedefDecl[0m[0;33m 0x5fd4030[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2118:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __remove_type[0m [0;32m'typename remove_reference<_Tp>::type'[0m
[0;34m`-[0m[0;32mDependentNameType[0m[0;33m 0x5fd3fc0[0m [0;32m'typename remove_reference<_Tp>::type'[0m dependent

Dumping std::move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6013608[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:96:3[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m[0;1;36m move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6013260[0m <[0;33mline:96:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6013568[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<_Tp>::type &&(_Tp &&) noexcept'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6013428[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6013820[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6013810[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x60137e0[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<_Tp>::type'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<_Tp>::type &&> <Dependent>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6013770[0m <[0;33mcol:71[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6013428[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6a3f798[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<char> &>::type &&(std::allocator<char> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a3f688[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<char> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6a3fa60[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6a3fa50[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6a3fa20[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<char> &>::type':'std::allocator<char>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<char> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a3fa00[0m <[0;33mcol:71[0m> [0;32m'std::allocator<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a3f688[0m[0;1;36m '__t'[0m [0;32m'std::allocator<char> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6a683d8[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<wchar_t> &>::type &&(std::allocator<wchar_t> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a682c8[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<wchar_t> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6a686a0[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6a68690[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6a68660[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<wchar_t> &>::type':'std::allocator<wchar_t>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<wchar_t> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a68640[0m <[0;33mcol:71[0m> [0;32m'std::allocator<wchar_t>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a682c8[0m[0;1;36m '__t'[0m [0;32m'std::allocator<wchar_t> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6a8eae8[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<char16_t> &>::type &&(std::allocator<char16_t> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char16_t> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a8e9d8[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<char16_t> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6a8edb0[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6a8eda0[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6a8ed70[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<char16_t> &>::type':'std::allocator<char16_t>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<char16_t> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a8ed50[0m <[0;33mcol:71[0m> [0;32m'std::allocator<char16_t>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a8e9d8[0m[0;1;36m '__t'[0m [0;32m'std::allocator<char16_t> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6aa3d98[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<char32_t> &>::type &&(std::allocator<char32_t> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char32_t> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aa3c88[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<char32_t> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aa4060[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aa4050[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6aa4020[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<char32_t> &>::type':'std::allocator<char32_t>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<char32_t> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aa4000[0m <[0;33mcol:71[0m> [0;32m'std::allocator<char32_t>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aa3c88[0m[0;1;36m '__t'[0m [0;32m'std::allocator<char32_t> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6aabe08[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<basic_string<char> &>::type &&(std::__cxx11::basic_string<char> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aabcf8[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::__cxx11::basic_string<char> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aac0d0[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aac0c0[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6aac090[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<basic_string<char> &>::type':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class basic_string<char> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aac070[0m <[0;33mcol:71[0m> [0;32m'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aabcf8[0m[0;1;36m '__t'[0m [0;32m'std::__cxx11::basic_string<char> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6aef198[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<double &>::type &&(double &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aef088[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'double &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aef460[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aef450[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6aef420[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<double &>::type':'double'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<double &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aef400[0m <[0;33mcol:71[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aef088[0m[0;1;36m '__t'[0m [0;32m'double &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6af64c8[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<_Iter_less_iter &>::type &&(__gnu_cxx::__ops::_Iter_less_iter &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'__gnu_cxx::__ops::_Iter_less_iter &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6af63b8[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6af6f60[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6af6f50[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6af6f20[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<_Iter_less_iter &>::type':'__gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<struct _Iter_less_iter &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af6f00[0m <[0;33mcol:71[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6af63b8[0m[0;1;36m '__t'[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b5bc78[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<Pont &>::type &&(Pont &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'Pont &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b5bb68[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'Pont &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b5bf40[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b5bf30[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6b5bf00[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<Pont &>::type':'Pont'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class Pont &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b5bee0[0m <[0;33mcol:71[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b5bb68[0m[0;1;36m '__t'[0m [0;32m'Pont &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6bb0da8[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<vector<Pont, allocator<Pont> > &>::type &&(std::vector<Pont, std::allocator<Pont> > &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::vector<Pont, std::allocator<Pont> > &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bb0c98[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::vector<Pont, std::allocator<Pont> > &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6bb1070[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6bb1060[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6bb1030[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<vector<Pont, allocator<Pont> > &>::type':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class vector<class Pont, class allocator<class Pont> > &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bb1010[0m <[0;33mcol:71[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6bb0c98[0m[0;1;36m '__t'[0m [0;32m'std::vector<Pont, std::allocator<Pont> > &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6bb1998[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<Pont> &>::type &&(std::allocator<Pont> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<Pont> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bb1888[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<Pont> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6bb1c60[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6bb1c50[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6bb1c20[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<Pont> &>::type':'std::allocator<Pont>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<class Pont> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bb1c00[0m <[0;33mcol:71[0m> [0;32m'std::allocator<Pont>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6bb1888[0m[0;1;36m '__t'[0m [0;32m'std::allocator<Pont> &'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6bde4b8[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<Pont *&>::type &&(Pont *&) noexcept'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bde3a8[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'Pont *&'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6bde780[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6bde770[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6bde740[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<Pont *&>::type':'Pont *'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class Pont *&>::type &&> <NoOp>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bde720[0m <[0;33mcol:71[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6bde3a8[0m[0;1;36m '__t'[0m [0;32m'Pont *&'[0m

Dumping std::__move_if_noexcept_cond:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6013950[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:102:3[0m, [0;33mline:105:57[0m> [0;33mline:103:12[0m[0;1;36m __move_if_noexcept_cond[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6013838[0m <[0;33mline:102:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60138c0[0m <[0;33mline:103:5[0m, [0;33mline:105:57[0m> [0;33mline:103:12[0m struct[0;1;36m __move_if_noexcept_cond[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__and_<__not_<is_nothrow_move_constructible<_Tp> >, is_copy_constructible<_Tp> >::type'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6014030[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __move_if_noexcept_cond[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b6edf0[0m <[0;33mline:102:3[0m, [0;33mline:105:57[0m> [0;33mline:103:12[0m struct[0;1;36m __move_if_noexcept_cond[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__and_<__not_<is_nothrow_move_constructible<Pont> >, is_copy_constructible<Pont> >::type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7ccc0[0m prev 0x6b6edf0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __move_if_noexcept_cond[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b9e050[0m <[0;33mline:102:3[0m, [0;33mline:105:57[0m> [0;33mline:103:12[0m struct[0;1;36m __move_if_noexcept_cond[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__and_<__not_<is_nothrow_move_constructible<double> >, is_copy_constructible<double> >::type':'std::integral_constant<bool, false>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b9f610[0m prev 0x6b9e050 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __move_if_noexcept_cond[0m

Dumping std::move_if_noexcept:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6014700[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:115:3[0m, [0;33mline:119:30[0m> [0;33mline:118:5[0m[0;1;36m move_if_noexcept[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60140d8[0m <[0;33mline:115:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6014660[0m <[0;33mline:116:5[0m, [0;33mline:119:30[0m> [0;33mline:118:5[0m constexpr[0;1;36m move_if_noexcept[0m [0;32m'typename conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp &, _Tp &&>::type (_Tp &) noexcept'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6014558[0m <[0;33mcol:22[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __x[0m [0;32m'_Tp &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6014820[0m <[0;33mline:119:5[0m, [0;33mcol:30[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6014810[0m <[0;33mcol:7[0m, [0;33mcol:27[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x60147e8[0m <[0;33mcol:14[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6014780[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60147c8[0m <[0;33mcol:24[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6014558[0m[0;1;36m '__x'[0m [0;32m'_Tp &'[0m

Dumping std::__is_move_iterator:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x60761b0[0m parent 0x5cad428 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:431:3[0m, [0;33mline:434:7[0m> [0;33mline:432:12[0m struct[0;1;36m __is_move_iterator[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'__is_move_iterator<_Iterator>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'reverse_iterator<type-parameter-0-0>'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6075fb8[0m <[0;33mline:431:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60764d0[0m <[0;33mline:432:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_iterator[0m

Dumping std::move_iterator:
[0;1;32mClassTemplateDecl[0m[0;33m 0x608b210[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1012:3[0m, [0;33mline:1114:5[0m> [0;33mline:1013:11[0m[0;1;36m move_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x608b0f8[0m <[0;33mline:1012:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x608b180[0m <[0;33mline:1013:5[0m, [0;33mline:1114:5[0m> [0;33mline:1013:11[0m class[0;1;36m move_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x608b460[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m move_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x608b4f0[0m <[0;33mline:1015:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x608b528[0m <[0;33mline:1016:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_current[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x608b630[0m <[0;33mline:1018:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __traits_type[0m [0;32m'iterator_traits<_Iterator>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x608b590[0m [0;32m'iterator_traits<_Iterator>'[0m dependent iterator_traits
[0;34m| |   `-[0mTemplateArgument type [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x608b750[0m <[0;33mline:1019:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __base_ref[0m [0;32m'typename __traits_type::reference'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x608b6e0[0m [0;32m'typename __traits_type::reference'[0m dependent
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x608b7a8[0m <[0;33mline:1021:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x608b7e0[0m <[0;33mline:1022:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m iterator_type[0m [0;32m'_Iterator'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x608b140[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x608b0f8[0m[0;1;36m '_Iterator'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x608b8c0[0m <[0;33mline:1023:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x608b850[0m [0;32m'typename __traits_type::iterator_category'[0m dependent
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x608b9a0[0m <[0;33mline:1024:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x608b930[0m [0;32m'typename __traits_type::value_type'[0m dependent
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x608ba80[0m <[0;33mline:1025:7[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x608ba10[0m [0;32m'typename __traits_type::difference_type'[0m dependent
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x608bae8[0m <[0;33mline:1027:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m pointer[0m [0;32m'_Iterator'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x608b140[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x608b0f8[0m[0;1;36m '_Iterator'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x608c110[0m <[0;33mline:1030:7[0m, [0;33mline:1032:24[0m> [0;33mcol:24[0m referenced[0;1;36m reference[0m [0;32m'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x608c0a0[0m [0;32m'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'[0m dependent
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x608c1d0[0m <[0;33mline:1035:7[0m, [0;33mline:1036:24[0m> [0;33mline:1035:7[0m[0;1;36m move_iterator<_Iterator>[0m [0;32m'void ()'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x608b528[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x608d858[0m <[0;33mline:1036:19[0m, [0;33mcol:20[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608d8a0[0m <[0;33mcol:22[0m, [0;33mcol:24[0m>
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x608c378[0m <[0;33mline:1038:7[0m, [0;33mline:1040:27[0m> [0;33mline:1039:7[0m[0;1;36m move_iterator<_Iterator>[0m [0;32m'void (std::move_iterator::iterator_type)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608c2b0[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __i[0m [0;32m'std::move_iterator::iterator_type':'_Iterator'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x608b528[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x608d8d0[0m <[0;33mline:1040:19[0m, [0;33mcol:23[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608d8b0[0m <[0;33mcol:20[0m> [0;32m'std::move_iterator::iterator_type':'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x608c2b0[0m[0;1;36m '__i'[0m [0;32m'std::move_iterator::iterator_type':'_Iterator'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608d920[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x608c7a0[0m <[0;33mline:1042:7[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator<_Iterator>[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x608c428[0m <[0;33mline:1042:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x608c6f8[0m <[0;33mline:1044:2[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator<_Iterator>[0m [0;32m'void (const move_iterator<_Iter> &)'[0m
[0;34m| |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608c600[0m <[0;33mcol:16[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __i[0m [0;32m'const move_iterator<_Iter> &'[0m
[0;34m| |   |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x608b528[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m| |   | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x608d9b8[0m <[0;33mline:1045:14[0m, [0;33mcol:25[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x608d998[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x608d950[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .base
[0;34m| |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608d930[0m <[0;33mcol:15[0m> [0;32m'const move_iterator<_Iter>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x608c600[0m[0;1;36m '__i'[0m [0;32m'const move_iterator<_Iter> &'[0m
[0;34m| |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608da08[0m <[0;33mcol:27[0m, [0;33mcol:29[0m>
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608c878[0m <[0;33mline:1047:28[0m, [0;33mline:1049:28[0m> [0;33mline:1048:7[0m[0;1;36m base[0m [0;32m'std::move_iterator::iterator_type () const'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608da68[0m <[0;33mline:1049:7[0m, [0;33mcol:28[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608da58[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m| |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x608da28[0m <[0;33mcol:16[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608da18[0m <[0;33mcol:16[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608ca20[0m <[0;33mline:1051:28[0m, [0;33mline:1053:53[0m> [0;33mline:1052:7[0m[0;1;36m operator*[0m [0;32m'std::move_iterator::reference () const'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608db28[0m <[0;33mline:1053:7[0m, [0;33mcol:53[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608db18[0m <[0;33mcol:9[0m, [0;33mcol:50[0m>
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x608dae8[0m <[0;33mcol:16[0m, [0;33mcol:50[0m> [0;32m'std::move_iterator::reference':'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'[0m[0;36m[0m[0;36m[0m static_cast<std::move_iterator::reference> <Dependent>
[0;34m| |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608dac0[0m <[0;33mcol:39[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x608da90[0m <[0;33mcol:40[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608da80[0m <[0;33mcol:40[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608cb28[0m <[0;33mline:1055:28[0m, [0;33mline:1057:28[0m> [0;33mline:1056:7[0m[0;1;36m operator->[0m [0;32m'std::move_iterator::pointer () const'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608db90[0m <[0;33mline:1057:7[0m, [0;33mcol:28[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608db80[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m| |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x608db50[0m <[0;33mcol:16[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608db40[0m <[0;33mcol:16[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608cc48[0m <[0;33mline:1059:28[0m, [0;33mline:1064:7[0m> [0;33mline:1060:7[0m[0;1;36m operator++[0m [0;32m'move_iterator<_Iterator> &()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608dc38[0m <[0;33mline:1061:7[0m, [0;33mline:1064:7[0m>
[0;34m| |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608dbe8[0m <[0;33mline:1062:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x608dbb8[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608dba8[0m <[0;33mcol:4[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608dc28[0m <[0;33mline:1063:2[0m, [0;33mcol:10[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608dc10[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608dc00[0m <[0;33mcol:10[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608cdc8[0m <[0;33mline:1066:28[0m, [0;33mline:1072:7[0m> [0;33mline:1067:7[0m[0;1;36m operator++[0m [0;32m'move_iterator<_Iterator> (int)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608cd00[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608dda0[0m <[0;33mline:1068:7[0m, [0;33mline:1072:7[0m>
[0;34m| |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x608dcf8[0m <[0;33mline:1069:2[0m, [0;33mcol:29[0m>
[0;34m| |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x608dc68[0m <[0;33mcol:2[0m, [0;33mcol:25[0m> [0;33mcol:16[0m referenced[0;1;36m __tmp[0m [0;32m'move_iterator<_Iterator>'[0m nrvo cinit
[0;34m| |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608dce0[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608dcd0[0m <[0;33mcol:25[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608dd50[0m <[0;33mline:1070:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x608dd20[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608dd10[0m <[0;33mcol:4[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608dd88[0m <[0;33mline:1071:2[0m, [0;33mcol:9[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608dd68[0m <[0;33mcol:9[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x608dc68[0m[0;1;36m '__tmp'[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608ce90[0m <[0;33mline:1074:28[0m, [0;33mline:1079:7[0m> [0;33mline:1075:7[0m[0;1;36m operator--[0m [0;32m'move_iterator<_Iterator> &()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608de58[0m <[0;33mline:1076:7[0m, [0;33mline:1079:7[0m>
[0;34m| |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608de08[0m <[0;33mline:1077:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x608ddd8[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608ddc8[0m <[0;33mcol:4[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608de48[0m <[0;33mline:1078:2[0m, [0;33mcol:10[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608de30[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608de20[0m <[0;33mcol:10[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608cfd8[0m <[0;33mline:1081:28[0m, [0;33mline:1087:7[0m> [0;33mline:1082:7[0m[0;1;36m operator--[0m [0;32m'move_iterator<_Iterator> (int)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608cf48[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608dfc0[0m <[0;33mline:1083:7[0m, [0;33mline:1087:7[0m>
[0;34m| |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x608df18[0m <[0;33mline:1084:2[0m, [0;33mcol:29[0m>
[0;34m| |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x608de88[0m <[0;33mcol:2[0m, [0;33mcol:25[0m> [0;33mcol:16[0m referenced[0;1;36m __tmp[0m [0;32m'move_iterator<_Iterator>'[0m nrvo cinit
[0;34m| |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608df00[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608def0[0m <[0;33mcol:25[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608df70[0m <[0;33mline:1085:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x608df40[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608df30[0m <[0;33mcol:4[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608dfa8[0m <[0;33mline:1086:2[0m, [0;33mcol:9[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608df88[0m <[0;33mcol:9[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x608de88[0m[0;1;36m '__tmp'[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608d1a8[0m <[0;33mline:1089:28[0m, [0;33mline:1091:49[0m> [0;33mline:1090:7[0m[0;1;36m operator+[0m [0;32m'move_iterator<_Iterator> (std::move_iterator::difference_type) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608d0b0[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608e110[0m <[0;33mline:1091:7[0m, [0;33mcol:49[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608e100[0m <[0;33mcol:9[0m, [0;33mcol:46[0m>
[0;34m| |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x608e0d8[0m <[0;33mcol:16[0m, [0;33mcol:46[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m[0m[0;36m[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m| |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x608e0a0[0m <[0;33mcol:30[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x608e058[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6072db8[0m
[0;34m| |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x608e008[0m <[0;33mcol:30[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608dff8[0m <[0;33mcol:30[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608e038[0m <[0;33mcol:43[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x608d0b0[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608d358[0m <[0;33mline:1093:28[0m, [0;33mline:1098:7[0m> [0;33mline:1094:7[0m[0;1;36m operator+=[0m [0;32m'move_iterator<_Iterator> &(std::move_iterator::difference_type)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608d260[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608e1f0[0m <[0;33mline:1095:7[0m, [0;33mline:1098:7[0m>
[0;34m| |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x608e188[0m <[0;33mline:1096:2[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m| |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x608e138[0m <[0;33mcol:2[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608e128[0m <[0;33mcol:2[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608e168[0m <[0;33mcol:16[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x608d260[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608e1e0[0m <[0;33mline:1097:2[0m, [0;33mcol:10[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608e1c8[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608e1b8[0m <[0;33mcol:10[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608d4a0[0m <[0;33mline:1100:28[0m, [0;33mline:1102:49[0m> [0;33mline:1101:7[0m[0;1;36m operator-[0m [0;32m'move_iterator<_Iterator> (std::move_iterator::difference_type) const'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608d410[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608e338[0m <[0;33mline:1102:7[0m, [0;33mcol:49[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608e328[0m <[0;33mcol:9[0m, [0;33mcol:46[0m>
[0;34m| |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x608e300[0m <[0;33mcol:16[0m, [0;33mcol:46[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m[0m[0;36m[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m| |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x608e2c8[0m <[0;33mcol:30[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x608e280[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m
[0;34m| |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x608e230[0m <[0;33mcol:30[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608e220[0m <[0;33mcol:30[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608e260[0m <[0;33mcol:43[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x608d410[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608d5e8[0m <[0;33mline:1104:28[0m, [0;33mline:1109:7[0m> [0;33mline:1105:7[0m[0;1;36m operator-=[0m [0;32m'move_iterator<_Iterator> &(std::move_iterator::difference_type)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608d558[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608e418[0m <[0;33mline:1106:7[0m, [0;33mline:1109:7[0m>
[0;34m| |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x608e3b0[0m <[0;33mline:1107:2[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '-=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m| |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x608e360[0m <[0;33mcol:2[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m| |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608e350[0m <[0;33mcol:2[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608e390[0m <[0;33mcol:16[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x608d558[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608e408[0m <[0;33mline:1108:2[0m, [0;33mcol:10[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x608e3f0[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608e3e0[0m <[0;33mcol:10[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x608d798[0m <[0;33mline:1111:28[0m, [0;33mline:1113:44[0m> [0;33mline:1112:7[0m[0;1;36m operator[][0m [0;32m'std::move_iterator::reference (std::move_iterator::difference_type) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x608d6a0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608e570[0m <[0;33mline:1113:7[0m, [0;33mcol:44[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x608e560[0m <[0;33mcol:9[0m, [0;33mcol:41[0m>
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x608e538[0m <[0;33mcol:16[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x608e470[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m
[0;34m|         `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x608e518[0m <[0;33mcol:26[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mMemberExpr[0m[0;33m 0x608e4c8[0m <[0;33mcol:26[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x608b528[0m
[0;34m|           | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x608e4b8[0m <[0;33mcol:26[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x608e4f8[0m <[0;33mcol:37[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x608d6a0[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b7cde8[0m <[0;33mline:1012:3[0m, [0;33mline:1114:5[0m> [0;33mline:1013:11[0m class[0;1;36m move_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m| |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7e340[0m prev 0x6b7cde8 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m move_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6b7e3d0[0m <[0;33mline:1015:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6b7e438[0m <[0;33mline:1016:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_current[0m [0;32m'Pont *':'Pont *'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b7e510[0m <[0;33mline:1018:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<Pont *>':'std::iterator_traits<Pont *>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6b7e4a0[0m [0;32m'iterator_traits<Pont *>'[0m sugar iterator_traits
[0;34m| |   |-[0mTemplateArgument type [0;32m'Pont *':'Pont *'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x6b31a50[0m [0;32m'std::iterator_traits<Pont *>'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b31970[0m[0;1;36m 'iterator_traits'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b7e620[0m <[0;33mline:1019:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m __base_ref[0m [0;32m'typename __traits_type::reference':'Pont &'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6b7e5d0[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x6b60ff0[0m [0;32m'std::iterator_traits<Pont *>::reference'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6b31ea8[0m[0;1;36m 'reference'[0m
[0;34m| |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6b31e70[0m [0;32m'Pont &'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b31b40[0m [0;32m'Pont'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m| |           `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6b7e678[0m <[0;33mline:1021:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b7e6b0[0m <[0;33mline:1022:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'Pont *':'Pont *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b7e400[0m [0;32m'Pont *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x608b140[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x608b0f8[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x5c7cd80[0m [0;32m'Pont *'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b7e780[0m <[0;33mline:1023:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6b7e730[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x6b60d40[0m [0;32m'std::iterator_traits<Pont *>::iterator_category'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6b31ce8[0m[0;1;36m 'iterator_category'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x604dad0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x604da40[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b7e850[0m <[0;33mline:1024:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'Pont'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6b7e800[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x6b31f20[0m [0;32m'std::iterator_traits<Pont *>::value_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6b31d50[0m[0;1;36m 'value_type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b31b40[0m [0;32m'Pont'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m| |       `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m| |         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b7e920[0m <[0;33mline:1025:7[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6b7e8d0[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x6b60f00[0m [0;32m'std::iterator_traits<Pont *>::difference_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6b31da8[0m[0;1;36m 'difference_type'[0m
[0;34m| |     `-[0m[0;32mTypedefType[0m[0;33m 0x604dd30[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m| |       |-[0m[0;1;32mTypedef[0m[0;33m 0x5cace68[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a9e0[0m [0;32m'long'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b7e988[0m <[0;33mline:1027:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m pointer[0m [0;32m'Pont *':'Pont *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b7e400[0m [0;32m'Pont *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x608b140[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x608b0f8[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x5c7cd80[0m [0;32m'Pont *'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b7f100[0m <[0;33mline:1030:7[0m, [0;33mline:1032:24[0m> [0;33mcol:24[0m referenced[0;1;36m reference[0m [0;32m'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type':'Pont &&'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6b7f0b0[0m [0;32m'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x6b7f090[0m [0;32m'std::conditional<true, Pont &&, Pont &>::type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6b7f018[0m[0;1;36m 'type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6b7efe0[0m [0;32m'Pont &&'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fd7fd0[0m [0;32m'_Iftrue'[0m dependent depth 0 index 1
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fd7f88[0m[0;1;36m '_Iftrue'[0m
[0;34m| |       `-[0m[0;32mRValueReferenceType[0m[0;33m 0x697e7d0[0m [0;32m'Pont &&'[0m
[0;34m| |         `-[0m[0;32mRecordType[0m[0;33m 0x5c7ca30[0m [0;32m'Pont'[0m
[0;34m| |           `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5c7c9a0[0m[0;1;36m 'Pont'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6b7f190[0m <[0;33mline:1035:7[0m, [0;33mline:1036:24[0m> [0;33mline:1035:7[0m[0;1;36m move_iterator[0m [0;32m'void ()'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6b7f368[0m <[0;33mline:1038:7[0m, [0;33mline:1040:27[0m> [0;33mline:1039:7[0m used[0;1;36m move_iterator[0m [0;32m'void (std::move_iterator<Pont *>::iterator_type)'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7f280[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m __i[0m [0;32m'std::move_iterator<Pont *>::iterator_type':'Pont *'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6b7e438[0m[0;1;36m '_M_current'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b828e8[0m <[0;33mline:1040:20[0m> [0;32m'std::move_iterator<Pont *>::iterator_type':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b828a8[0m <[0;33mcol:20[0m> [0;32m'std::move_iterator<Pont *>::iterator_type':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7f280[0m[0;1;36m '__i'[0m [0;32m'std::move_iterator<Pont *>::iterator_type':'Pont *'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608d920[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b7f720[0m <[0;33mline:1042:7[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7f428[0m <[0;33mline:1042:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m| | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6b7f678[0m <[0;33mline:1044:2[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator[0m [0;32m'void (const move_iterator<_Iter> &)'[0m
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7f560[0m <[0;33mcol:16[0m, [0;33mcol:44[0m> [0;33mcol:44[0m[0;1;36m __i[0m [0;32m'const move_iterator<_Iter> &'[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6b82358[0m <[0;33mcol:2[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator[0m [0;32m'void (const move_iterator<Pont *> &)'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b82290[0m <[0;33mcol:16[0m, [0;33mcol:44[0m> [0;33mcol:44[0m[0;1;36m __i[0m [0;32m'const move_iterator<Pont *> &'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b7f848[0m <[0;33mline:1047:28[0m, [0;33mline:1049:28[0m> [0;33mline:1048:7[0m used[0;1;36m base[0m [0;32m'std::move_iterator<Pont *>::iterator_type () const'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b8e380[0m <[0;33mline:1049:7[0m, [0;33mcol:28[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b8e370[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m| |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b8e358[0m <[0;33mcol:16[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6b8e328[0m <[0;33mcol:16[0m> [0;32m'Pont *const':'Pont *const'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x6b7e438[0m
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6b8e318[0m <[0;33mcol:16[0m> [0;32m'const std::move_iterator<Pont *> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b7f998[0m <[0;33mline:1051:28[0m, [0;33mline:1053:53[0m> [0;33mline:1052:7[0m used[0;1;36m operator*[0m [0;32m'std::move_iterator<Pont *>::reference () const'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b8e508[0m <[0;33mline:1053:7[0m, [0;33mcol:53[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b8e4f8[0m <[0;33mcol:9[0m, [0;33mcol:50[0m>
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6b8e4c8[0m <[0;33mcol:16[0m, [0;33mcol:50[0m> [0;32m'Pont'[0m[0;36m xvalue[0m[0;36m[0m static_cast<std::move_iterator<class Pont *>::reference> <NoOp>
[0;34m| |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6b8e4b0[0m <[0;33mcol:39[0m, [0;33mcol:40[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b8e498[0m <[0;33mcol:40[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6b8e468[0m <[0;33mcol:40[0m> [0;32m'Pont *const':'Pont *const'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x6b7e438[0m
[0;34m| |             `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6b8e458[0m <[0;33mcol:40[0m> [0;32m'const std::move_iterator<Pont *> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b7fab8[0m <[0;33mline:1055:28[0m, [0;33mline:1057:28[0m> [0;33mline:1056:7[0m[0;1;36m operator->[0m [0;32m'std::move_iterator<Pont *>::pointer () const'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b7fbe8[0m <[0;33mline:1059:28[0m, [0;33mline:1064:7[0m> [0;33mline:1060:7[0m used[0;1;36m operator++[0m [0;32m'std::move_iterator<Pont *> &()'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b8e428[0m <[0;33mline:1061:7[0m, [0;33mline:1064:7[0m>
[0;34m| |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6b8e3d8[0m <[0;33mline:1062:2[0m, [0;33mcol:4[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6b8e3a8[0m <[0;33mcol:4[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x6b7e438[0m
[0;34m| |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6b8e398[0m <[0;33mcol:4[0m> [0;32m'std::move_iterator<Pont *> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b8e418[0m <[0;33mline:1063:2[0m, [0;33mcol:10[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6b8e400[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'std::move_iterator<Pont *>'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6b8e3f0[0m <[0;33mcol:10[0m> [0;32m'std::move_iterator<Pont *> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b7fd58[0m <[0;33mline:1066:28[0m, [0;33mline:1072:7[0m> [0;33mline:1067:7[0m[0;1;36m operator++[0m [0;32m'std::move_iterator<Pont *> (int)'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7fc98[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b7fe30[0m <[0;33mline:1074:28[0m, [0;33mline:1079:7[0m> [0;33mline:1075:7[0m[0;1;36m operator--[0m [0;32m'std::move_iterator<Pont *> &()'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b7ff70[0m <[0;33mline:1081:28[0m, [0;33mline:1087:7[0m> [0;33mline:1082:7[0m[0;1;36m operator--[0m [0;32m'std::move_iterator<Pont *> (int)'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7fee0[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b80158[0m <[0;33mline:1089:28[0m, [0;33mline:1091:49[0m> [0;33mline:1090:7[0m[0;1;36m operator+[0m [0;32m'std::move_iterator<Pont *> (std::move_iterator<Pont *>::difference_type) const'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b80060[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'std::move_iterator<Pont *>::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b80318[0m <[0;33mline:1093:28[0m, [0;33mline:1098:7[0m> [0;33mline:1094:7[0m[0;1;36m operator+=[0m [0;32m'std::move_iterator<Pont *> &(std::move_iterator<Pont *>::difference_type)'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b80220[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'std::move_iterator<Pont *>::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b80470[0m <[0;33mline:1100:28[0m, [0;33mline:1102:49[0m> [0;33mline:1101:7[0m[0;1;36m operator-[0m [0;32m'std::move_iterator<Pont *> (std::move_iterator<Pont *>::difference_type) const'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b803e0[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'std::move_iterator<Pont *>::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b805c8[0m <[0;33mline:1104:28[0m, [0;33mline:1109:7[0m> [0;33mline:1105:7[0m[0;1;36m operator-=[0m [0;32m'std::move_iterator<Pont *> &(std::move_iterator<Pont *>::difference_type)'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b80538[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'std::move_iterator<Pont *>::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b80788[0m <[0;33mline:1111:28[0m, [0;33mline:1113:44[0m> [0;33mline:1112:7[0m[0;1;36m operator[][0m [0;32m'std::move_iterator<Pont *>::reference (std::move_iterator<Pont *>::difference_type) const'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b80690[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'std::move_iterator<Pont *>::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6b80870[0m <[0;33mline:1013:11[0m> [0;33mcol:11[0m implicit referenced[0;1;36m ~move_iterator[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6b81e48[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit used constexpr[0;1;36m move_iterator[0m [0;32m'void (const std::move_iterator<Pont *> &) noexcept'[0m inline default trivial
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b81f58[0m <[0;33mcol:11[0m> [0;33mcol:11[0m used [0;32m'const std::move_iterator<Pont *> &'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6b7e438[0m[0;1;36m '_M_current'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b82fb8[0m <[0;33mcol:11[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6b82f70[0m <[0;33mcol:11[0m> [0;32m'Pont *const':'Pont *const'[0m[0;36m lvalue[0m[0;36m[0m ._M_current[0;33m 0x6b7e438[0m
[0;34m| | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b82f50[0m <[0;33mcol:11[0m> [0;32m'const std::move_iterator<Pont *>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b81f58[0m[0;1;36m ''[0m [0;32m'const std::move_iterator<Pont *> &'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b83000[0m <[0;33mcol:11[0m>
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6b81ff8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit used constexpr[0;1;36m move_iterator[0m [0;32m'void (std::move_iterator<Pont *> &&) noexcept'[0m inline default trivial
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b82108[0m <[0;33mcol:11[0m> [0;33mcol:11[0m used [0;32m'std::move_iterator<Pont *> &&'[0m
[0;34m|   |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6b7e438[0m[0;1;36m '_M_current'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m|   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b82558[0m <[0;33mcol:11[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|   |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6b82510[0m <[0;33mcol:11[0m> [0;32m'Pont *':'Pont *'[0m[0;36m xvalue[0m[0;36m[0m ._M_current[0;33m 0x6b7e438[0m
[0;34m|   |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6b824e0[0m <[0;33mcol:11[0m> [0;32m'std::move_iterator<Pont *>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<class std::move_iterator<class Pont *> &&> <NoOp>
[0;34m|   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b824b0[0m <[0;33mcol:11[0m> [0;32m'std::move_iterator<Pont *>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b82108[0m[0;1;36m ''[0m [0;32m'std::move_iterator<Pont *> &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b825a0[0m <[0;33mcol:11[0m>
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b9f738[0m <[0;33mline:1012:3[0m, [0;33mline:1114:5[0m> [0;33mline:1013:11[0m class[0;1;36m move_iterator[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ba0ba0[0m prev 0x6b9f738 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m move_iterator[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ba0c30[0m <[0;33mline:1015:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6ba0c98[0m <[0;33mline:1016:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_current[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba0d70[0m <[0;33mline:1018:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<double *>':'std::iterator_traits<double *>'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6ba0d00[0m [0;32m'iterator_traits<double *>'[0m sugar iterator_traits
[0;34m  |   |-[0mTemplateArgument type [0;32m'double *':'double *'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x69a59a0[0m [0;32m'std::iterator_traits<double *>'[0m
[0;34m  |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x69a58b8[0m[0;1;36m 'iterator_traits'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba0e80[0m <[0;33mline:1019:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m __base_ref[0m [0;32m'typename __traits_type::reference':'double &'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ba0e30[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x69a6270[0m [0;32m'std::iterator_traits<double *>::reference'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5f28[0m[0;1;36m 'reference'[0m
[0;34m  |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x69a5ef0[0m [0;32m'double &'[0m
[0;34m  |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69a5bc0[0m [0;32m'double'[0m sugar
[0;34m  |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m  |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m  |         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ba0ed8[0m <[0;33mline:1021:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba0f10[0m <[0;33mline:1022:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'double *':'double *'[0m
[0;34m  | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6ba0c60[0m [0;32m'double *'[0m sugar
[0;34m  |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x608b140[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m  |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x608b0f8[0m[0;1;36m '_Iterator'[0m
[0;34m  |   `-[0m[0;32mPointerType[0m[0;33m 0x5d5b2a0[0m [0;32m'double *'[0m
[0;34m  |     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba0fe0[0m <[0;33mline:1023:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ba0f90[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x69a5fa0[0m [0;32m'std::iterator_traits<double *>::iterator_category'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5d68[0m[0;1;36m 'iterator_category'[0m
[0;34m  |     `-[0m[0;32mRecordType[0m[0;33m 0x604dad0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x604da40[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba10b0[0m <[0;33mline:1024:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'double'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ba1060[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x69a6090[0m [0;32m'std::iterator_traits<double *>::value_type'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5dd0[0m[0;1;36m 'value_type'[0m
[0;34m  |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69a5bc0[0m [0;32m'double'[0m sugar
[0;34m  |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m  |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m  |       `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba1180[0m <[0;33mline:1025:7[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ba1130[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x69a6180[0m [0;32m'std::iterator_traits<double *>::difference_type'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5e28[0m[0;1;36m 'difference_type'[0m
[0;34m  |     `-[0m[0;32mTypedefType[0m[0;33m 0x604dd30[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m  |       |-[0m[0;1;32mTypedef[0m[0;33m 0x5cace68[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m  |       `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3a9e0[0m [0;32m'long'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba11e8[0m <[0;33mline:1027:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m pointer[0m [0;32m'double *':'double *'[0m
[0;34m  | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6ba0c60[0m [0;32m'double *'[0m sugar
[0;34m  |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x608b140[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m  |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x608b0f8[0m[0;1;36m '_Iterator'[0m
[0;34m  |   `-[0m[0;32mPointerType[0m[0;33m 0x5d5b2a0[0m [0;32m'double *'[0m
[0;34m  |     `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ba1960[0m <[0;33mline:1030:7[0m, [0;33mline:1032:24[0m> [0;33mcol:24[0m referenced[0;1;36m reference[0m [0;32m'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type':'double &&'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x6ba1910[0m [0;32m'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x6ba18f0[0m [0;32m'std::conditional<true, double &&, double &>::type'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6ba1878[0m[0;1;36m 'type'[0m
[0;34m  |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6ba1840[0m [0;32m'double &&'[0m sugar
[0;34m  |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5fd7fd0[0m [0;32m'_Iftrue'[0m dependent depth 0 index 1
[0;34m  |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5fd7f88[0m[0;1;36m '_Iftrue'[0m
[0;34m  |       `-[0m[0;32mRValueReferenceType[0m[0;33m 0x699bcd0[0m [0;32m'double &&'[0m
[0;34m  |         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ba19f0[0m <[0;33mline:1035:7[0m, [0;33mline:1036:24[0m> [0;33mline:1035:7[0m[0;1;36m move_iterator[0m [0;32m'void ()'[0m
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ba1bc8[0m <[0;33mline:1038:7[0m, [0;33mline:1040:27[0m> [0;33mline:1039:7[0m used[0;1;36m move_iterator[0m [0;32m'void (std::move_iterator<double *>::iterator_type)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba1ae0[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m __i[0m [0;32m'std::move_iterator<double *>::iterator_type':'double *'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ba0c98[0m[0;1;36m '_M_current'[0m [0;32m'double *':'double *'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba5088[0m <[0;33mline:1040:20[0m> [0;32m'std::move_iterator<double *>::iterator_type':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba5048[0m <[0;33mcol:20[0m> [0;32m'std::move_iterator<double *>::iterator_type':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ba1ae0[0m[0;1;36m '__i'[0m [0;32m'std::move_iterator<double *>::iterator_type':'double *'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x608d920[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6ba1f50[0m <[0;33mline:1042:7[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ba1c88[0m <[0;33mline:1042:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m  | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ba1ea8[0m <[0;33mline:1044:2[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator[0m [0;32m'void (const move_iterator<_Iter> &)'[0m
[0;34m  | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba1dc0[0m <[0;33mcol:16[0m, [0;33mcol:44[0m> [0;33mcol:44[0m[0;1;36m __i[0m [0;32m'const move_iterator<_Iter> &'[0m
[0;34m  | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ba4ae8[0m <[0;33mcol:2[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator[0m [0;32m'void (const move_iterator<double *> &)'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba4a20[0m <[0;33mcol:16[0m, [0;33mcol:44[0m> [0;33mcol:44[0m[0;1;36m __i[0m [0;32m'const move_iterator<double *> &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2078[0m <[0;33mline:1047:28[0m, [0;33mline:1049:28[0m> [0;33mline:1048:7[0m used[0;1;36m base[0m [0;32m'std::move_iterator<double *>::iterator_type () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6bab170[0m <[0;33mline:1049:7[0m, [0;33mcol:28[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6bab160[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bab148[0m <[0;33mcol:16[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6bab118[0m <[0;33mcol:16[0m> [0;32m'double *const':'double *const'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x6ba0c98[0m
[0;34m  |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6bab0e0[0m <[0;33mcol:16[0m> [0;32m'const std::move_iterator<double *> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba21c8[0m <[0;33mline:1051:28[0m, [0;33mline:1053:53[0m> [0;33mline:1052:7[0m[0;1;36m operator*[0m [0;32m'std::move_iterator<double *>::reference () const'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba22e8[0m <[0;33mline:1055:28[0m, [0;33mline:1057:28[0m> [0;33mline:1056:7[0m[0;1;36m operator->[0m [0;32m'std::move_iterator<double *>::pointer () const'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2418[0m <[0;33mline:1059:28[0m, [0;33mline:1064:7[0m> [0;33mline:1060:7[0m[0;1;36m operator++[0m [0;32m'std::move_iterator<double *> &()'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2588[0m <[0;33mline:1066:28[0m, [0;33mline:1072:7[0m> [0;33mline:1067:7[0m[0;1;36m operator++[0m [0;32m'std::move_iterator<double *> (int)'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba24c8[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2660[0m <[0;33mline:1074:28[0m, [0;33mline:1079:7[0m> [0;33mline:1075:7[0m[0;1;36m operator--[0m [0;32m'std::move_iterator<double *> &()'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba27a0[0m <[0;33mline:1081:28[0m, [0;33mline:1087:7[0m> [0;33mline:1082:7[0m[0;1;36m operator--[0m [0;32m'std::move_iterator<double *> (int)'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba2710[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2988[0m <[0;33mline:1089:28[0m, [0;33mline:1091:49[0m> [0;33mline:1090:7[0m[0;1;36m operator+[0m [0;32m'std::move_iterator<double *> (std::move_iterator<double *>::difference_type) const'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba2890[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'std::move_iterator<double *>::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2b48[0m <[0;33mline:1093:28[0m, [0;33mline:1098:7[0m> [0;33mline:1094:7[0m[0;1;36m operator+=[0m [0;32m'std::move_iterator<double *> &(std::move_iterator<double *>::difference_type)'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba2a50[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'std::move_iterator<double *>::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2ca0[0m <[0;33mline:1100:28[0m, [0;33mline:1102:49[0m> [0;33mline:1101:7[0m[0;1;36m operator-[0m [0;32m'std::move_iterator<double *> (std::move_iterator<double *>::difference_type) const'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba2c10[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'std::move_iterator<double *>::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2df8[0m <[0;33mline:1104:28[0m, [0;33mline:1109:7[0m> [0;33mline:1105:7[0m[0;1;36m operator-=[0m [0;32m'std::move_iterator<double *> &(std::move_iterator<double *>::difference_type)'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba2d68[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'std::move_iterator<double *>::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ba2fb8[0m <[0;33mline:1111:28[0m, [0;33mline:1113:44[0m> [0;33mline:1112:7[0m[0;1;36m operator[][0m [0;32m'std::move_iterator<double *>::reference (std::move_iterator<double *>::difference_type) const'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba2ec0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'std::move_iterator<double *>::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6ba30a0[0m <[0;33mline:1013:11[0m> [0;33mcol:11[0m implicit referenced[0;1;36m ~move_iterator[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ba45c8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit used constexpr[0;1;36m move_iterator[0m [0;32m'void (const std::move_iterator<double *> &) noexcept'[0m inline default trivial
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba46d8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m used [0;32m'const std::move_iterator<double *> &'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ba0c98[0m[0;1;36m '_M_current'[0m [0;32m'double *':'double *'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba5728[0m <[0;33mcol:11[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ba56e0[0m <[0;33mcol:11[0m> [0;32m'double *const':'double *const'[0m[0;36m lvalue[0m[0;36m[0m ._M_current[0;33m 0x6ba0c98[0m
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba56c0[0m <[0;33mcol:11[0m> [0;32m'const std::move_iterator<double *>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ba46d8[0m[0;1;36m ''[0m [0;32m'const std::move_iterator<double *> &'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ba5770[0m <[0;33mcol:11[0m>
[0;34m  `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ba4778[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit used constexpr[0;1;36m move_iterator[0m [0;32m'void (std::move_iterator<double *> &&) noexcept'[0m inline default trivial
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba4888[0m <[0;33mcol:11[0m> [0;33mcol:11[0m used [0;32m'std::move_iterator<double *> &&'[0m
[0;34m    |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ba0c98[0m[0;1;36m '_M_current'[0m [0;32m'double *':'double *'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba4ce8[0m <[0;33mcol:11[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ba4ca0[0m <[0;33mcol:11[0m> [0;32m'double *':'double *'[0m[0;36m xvalue[0m[0;36m[0m ._M_current[0;33m 0x6ba0c98[0m
[0;34m    |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6ba4c70[0m <[0;33mcol:11[0m> [0;32m'std::move_iterator<double *>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<class std::move_iterator<double *> &&> <NoOp>
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba4c40[0m <[0;33mcol:11[0m> [0;32m'std::move_iterator<double *>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ba4888[0m[0;1;36m ''[0m [0;32m'std::move_iterator<double *> &&'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ba4d30[0m <[0;33mcol:11[0m>

Dumping std::make_move_iterator:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6095548[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1205:3[0m, [0;33mline:1208:45[0m> [0;33mline:1207:5[0m[0;1;36m make_move_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6095270[0m <[0;33mline:1205:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60954a8[0m <[0;33mline:1206:5[0m, [0;33mline:1208:45[0m> [0;33mline:1207:5[0m[0;1;36m make_move_iterator[0m [0;32m'move_iterator<_Iterator> (_Iterator)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6095390[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __i[0m [0;32m'_Iterator'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60956b8[0m <[0;33mline:1208:5[0m, [0;33mcol:45[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60956a8[0m <[0;33mcol:7[0m, [0;33mcol:42[0m>
[0;34m      `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x6095680[0m <[0;33mcol:14[0m, [0;33mcol:42[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m[0m[0;36m[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6095660[0m <[0;33mcol:39[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6095390[0m[0;1;36m '__i'[0m [0;32m'_Iterator'[0m

Dumping std::__make_move_if_noexcept_iterator:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6096f08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1210:3[0m, [0;33mline:1216:32[0m> [0;33mline:1215:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60956d0[0m <[0;33mline:1210:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6096cd0[0m <[0;33mcol:32[0m, [0;33mline:1213:55[0m> [0;33mline:1210:41[0m referenced typename depth 0 index 1[0;1;36m _ReturnType[0m
[0;34m| `-[0mTemplateArgument type [0;32m'typename conditional<__move_if_noexcept_cond<typename iterator_traits<_Iterator>::value_type>::value, _Iterator, move_iterator<_Iterator> >::type'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6096e68[0m <[0;33mline:1214:5[0m, [0;33mline:1216:32[0m> [0;33mline:1215:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m [0;32m'_ReturnType (_Iterator)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6096d78[0m <[0;33mcol:38[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __i[0m [0;32m'_Iterator'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6096fd0[0m <[0;33mline:1216:5[0m, [0;33mcol:32[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6096fc0[0m <[0;33mcol:7[0m, [0;33mcol:29[0m>
[0;34m|     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x6096f98[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'_ReturnType'[0m[0;36m[0m[0;36m[0m [0;32m'_ReturnType'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6096f78[0m <[0;33mcol:26[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6096d78[0m[0;1;36m '__i'[0m [0;32m'_Iterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b7d6a8[0m <[0;33mline:1214:5[0m, [0;33mline:1216:32[0m> [0;33mline:1215:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m [0;32m'std::move_iterator<Pont *> (Pont *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::move_iterator<Pont *>'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7d5b8[0m <[0;33mcol:38[0m, [0;33mcol:48[0m> [0;33mcol:48[0m[0;1;36m __i[0m [0;32m'Pont *':'Pont *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b9ff78[0m <[0;33mline:1214:5[0m, [0;33mline:1216:32[0m> [0;33mline:1215:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m [0;32m'std::move_iterator<double *> (double *)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::move_iterator<double *>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b9fe88[0m <[0;33mcol:38[0m, [0;33mcol:48[0m> [0;33mcol:48[0m[0;1;36m __i[0m [0;32m'double *':'double *'[0m

Dumping std::__make_move_if_noexcept_iterator:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6097748[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1220:3[0m, [0;33mline:1225:32[0m> [0;33mline:1224:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6096fe8[0m <[0;33mline:1220:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6097510[0m <[0;33mcol:26[0m, [0;33mline:1222:41[0m> [0;33mline:1220:35[0m referenced typename depth 0 index 1[0;1;36m _ReturnType[0m
[0;34m| `-[0mTemplateArgument type [0;32m'typename conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp *, move_iterator<_Tp *> >::type'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60976a8[0m <[0;33mline:1223:5[0m, [0;33mline:1225:32[0m> [0;33mline:1224:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m [0;32m'_ReturnType (_Tp *)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60975b8[0m <[0;33mcol:38[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __i[0m [0;32m'_Tp *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6097810[0m <[0;33mline:1225:5[0m, [0;33mcol:32[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6097800[0m <[0;33mcol:7[0m, [0;33mcol:29[0m>
[0;34m|     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x60977d8[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'_ReturnType'[0m[0;36m[0m[0;36m[0m [0;32m'_ReturnType'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60977b8[0m <[0;33mcol:26[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60975b8[0m[0;1;36m '__i'[0m [0;32m'_Tp *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b7e0e8[0m <[0;33mline:1223:5[0m, [0;33mline:1225:32[0m> [0;33mline:1224:5[0m used[0;1;36m __make_move_if_noexcept_iterator[0m [0;32m'std::move_iterator<Pont *> (Pont *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::move_iterator<Pont *>'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7e028[0m <[0;33mcol:38[0m, [0;33mcol:43[0m> [0;33mcol:43[0m used[0;1;36m __i[0m [0;32m'Pont *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b82890[0m <[0;33mline:1225:5[0m, [0;33mcol:32[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b82880[0m <[0;33mcol:7[0m, [0;33mcol:29[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b82868[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b82838[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::move_iterator<Pont *> &&) noexcept'[0m elidable
[0;34m|         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b82820[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|           `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x6b827c0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m[0m[0;36m[0m functional cast to class std::move_iterator<class Pont *> <ConstructorConversion>
[0;34m|             `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b82790[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::move_iterator<Pont *>::iterator_type)'[0m
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b82778[0m <[0;33mcol:26[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b826c8[0m <[0;33mcol:26[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7e028[0m[0;1;36m '__i'[0m [0;32m'Pont *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6ba0948[0m <[0;33mline:1223:5[0m, [0;33mline:1225:32[0m> [0;33mline:1224:5[0m used[0;1;36m __make_move_if_noexcept_iterator[0m [0;32m'std::move_iterator<double *> (double *)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::move_iterator<double *>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ba0888[0m <[0;33mcol:38[0m, [0;33mcol:43[0m> [0;33mcol:43[0m used[0;1;36m __i[0m [0;32m'double *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ba5030[0m <[0;33mline:1225:5[0m, [0;33mcol:32[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ba5020[0m <[0;33mcol:7[0m, [0;33mcol:29[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6ba5008[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ba4fd8[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::move_iterator<double *> &&) noexcept'[0m elidable
[0;34m          `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6ba4fc0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x6ba4f58[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m[0m[0;36m[0m functional cast to class std::move_iterator<double *> <ConstructorConversion>
[0;34m              `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ba4f28[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::move_iterator<double *>::iterator_type)'[0m
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba4f10[0m <[0;33mcol:26[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba4e60[0m <[0;33mcol:26[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ba0888[0m[0;1;36m '__i'[0m [0;32m'double *'[0m

Dumping std::__is_move_iterator:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x60980e0[0m parent 0x5cad428 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1235:3[0m, [0;33mline:1240:5[0m> [0;33mline:1236:12[0m struct[0;1;36m __is_move_iterator[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'move_iterator<type-parameter-0-0>'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6097ee8[0m <[0;33mline:1235:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6098348[0m <[0;33mline:1236:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_iterator[0m
[0;34m|-[0m[0;1;32mEnumDecl[0m[0;33m 0x60983d8[0m <[0;33mline:1238:7[0m, [0;33mcol:26[0m> [0;33mcol:7[0m
[0;34m| `-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x60984c0[0m <[0;33mcol:14[0m, [0;33mcol:24[0m> [0;33mcol:14[0m[0;1;36m __value[0m [0;32m'std::__is_move_iterator<move_iterator<type-parameter-0-0> >::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1238:7)'[0m
[0;34m|   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60984a0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6098520[0m <[0;33mline:1239:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __type[0m [0;32m'std::__true_type'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x5cad570[0m [0;32m'std::__true_type'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5cad4d8[0m[0;1;36m '__true_type'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplateDecl[0m[0;33m 0x60bbae0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:286:3[0m, [0;33mline:297:5[0m> [0;33mline:287:12[0m[0;1;36m __copy_move[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60bb8e0[0m <[0;33mline:286:12[0m> [0;33mcol:16[0m [0;32m'bool'[0m depth 0 index 0
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60bb950[0m <[0;33mcol:18[0m> [0;33mcol:22[0m [0;32m'bool'[0m depth 0 index 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bb9b0[0m <[0;33mcol:24[0m> [0;33mcol:24[0m typename depth 0 index 2
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60bba50[0m <[0;33mline:287:5[0m, [0;33mline:297:5[0m> [0;33mline:287:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60bbdd0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m| `-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60bc258[0m <[0;33mline:289:7[0m, [0;33mline:296:2[0m> [0;33mline:291:9[0m[0;1;36m __copy_m[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bbe60[0m <[0;33mline:289:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _II[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bbed8[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 1 index 1[0;1;36m _OI[0m
[0;34m|   `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60bc1b8[0m <[0;33mline:290:9[0m, [0;33mline:296:2[0m> [0;33mline:291:9[0m[0;1;36m __copy_m[0m [0;32m'_OI (_II, _II, _OI)'[0m static
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bbf78[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bbff0[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bc068[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m|     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60bc580[0m <[0;33mline:292:9[0m, [0;33mline:296:2[0m>
[0;34m|       |-[0m[0;1;35mForStmt[0m[0;33m 0x60bc518[0m <[0;33mline:293:4[0m, [0;33mline:294:19[0m>
[0;34m|       | |-[0m[0;34m<<<NULL>>>[0m
[0;34m|       | |-[0m[0;34m<<<NULL>>>[0m
[0;34m|       | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60bc388[0m <[0;33mline:293:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60bc320[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m
[0;34m|       | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bc2e0[0m <[0;33mcol:11[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bbf78[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m|       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bc300[0m <[0;33mcol:22[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bbff0[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m|       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60bc468[0m <[0;33mcol:30[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m ','
[0;34m|       | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bc3e0[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|       | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bc3c0[0m <[0;33mcol:32[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bc068[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m|       | | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x60bc440[0m <[0;33mcol:42[0m, [0;33mcol:50[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m <[0;31mToVoid[0m>
[0;34m|       | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bc418[0m <[0;33mcol:48[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bc3f8[0m <[0;33mcol:50[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bbf78[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m|       | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60bc4f8[0m <[0;33mline:294:6[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m|       |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bc4a8[0m <[0;33mcol:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bc488[0m <[0;33mcol:7[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bc068[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m|       |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bc4e0[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bc4c0[0m <[0;33mcol:19[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bbf78[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m|       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60bc570[0m <[0;33mline:295:4[0m, [0;33mcol:11[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bc550[0m <[0;33mcol:11[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bc068[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x60bd3d0[0m[0;1;36m '__copy_move'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x60be188[0m[0;1;36m '__copy_move'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6ac89d8[0m <[0;33mline:352:3[0m, [0;33mline:371:5[0m> [0;33mline:353:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0mTemplateArgument integral 1
[0;34m| |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ac8d80[0m prev 0x6ac89d8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m| `-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6ac91b8[0m <[0;33mline:355:7[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m[0;1;36m __copy_m[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ac8e10[0m <[0;33mline:355:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|   |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ac9118[0m <[0;33mline:356:9[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m[0;1;36m __copy_m[0m [0;32m'_Tp *(const _Tp *, const _Tp *, _Tp *)'[0m static
[0;34m|   | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac8f08[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m __first[0m [0;32m'const _Tp *'[0m
[0;34m|   | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac8f80[0m <[0;33mcol:38[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __last[0m [0;32m'const _Tp *'[0m
[0;34m|   | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac8ff8[0m <[0;33mcol:57[0m, [0;33mcol:62[0m> [0;33mcol:62[0m[0;1;36m __result[0m [0;32m'_Tp *'[0m
[0;34m|   `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ac9618[0m <[0;33mline:356:9[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m used[0;1;36m __copy_m[0m [0;32m'double *(const double *, const double *, double *)'[0m static
[0;34m|     |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac9448[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const double *'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac94c0[0m <[0;33mcol:38[0m, [0;33mcol:49[0m> [0;33mcol:49[0m used[0;1;36m __last[0m [0;32m'const double *'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac9538[0m <[0;33mcol:57[0m, [0;33mcol:62[0m> [0;33mcol:62[0m used[0;1;36m __result[0m [0;32m'double *'[0m
[0;34m|     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ad4330[0m <[0;33mline:358:9[0m, [0;33mline:370:2[0m>
[0;34m|       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ac9ed0[0m <[0;33mline:360:4[0m, [0;33mline:362:33[0m>
[0;34m|       | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6ac9e70[0m <[0;33mline:360:4[0m, [0;33mline:362:32[0m> [0;33mline:360:10[0m[0;1;36m __assignable[0m [0;32m'conditional<false, is_move_assignable<double>, is_copy_assignable<double> >':'std::conditional<false, std::is_move_assignable<double>, std::is_copy_assignable<double> >'[0m
[0;34m|       |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6ac9da0[0m [0;32m'conditional<false, is_move_assignable<double>, is_copy_assignable<double> >'[0m sugar conditional
[0;34m|       |     |-[0mTemplateArgument expr
[0;34m|       |     | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6ac9c50[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m false[0m
[0;34m|       |     |   `-[0m[0;1;35mSubstNonTypeTemplateParmExpr[0m[0;33m 0x6ac98f8[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m|       |     |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ac98e8[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m|       |     |-[0mTemplateArgument type [0;32m'is_move_assignable<double>':'std::is_move_assignable<double>'[0m
[0;34m|       |     |-[0mTemplateArgument type [0;32m'is_copy_assignable<double>':'std::is_copy_assignable<double>'[0m
[0;34m|       |     `-[0m[0;32mRecordType[0m[0;33m 0x6ac9d80[0m [0;32m'std::conditional<false, std::is_move_assignable<double>, std::is_copy_assignable<double> >'[0m
[0;34m|       |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6ac9c70[0m[0;1;36m 'conditional'[0m
[0;34m|       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ad3e48[0m <[0;33mline:364:4[0m, [0;33mcol:72[0m>
[0;34m|       | `-[0m[0;1;32mStaticAssertDecl[0m[0;33m 0x6ad3e08[0m <[0;33mcol:4[0m, [0;33mcol:71[0m> [0;33mcol:4[0m
[0;34m|       |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad3d70[0m <[0;33mcol:19[0m, [0;33mcol:39[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6769118[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m
[0;34m|       |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60bff48[0m <[0;33mcol:46[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "type is not assignable"[0m
[0;34m|       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ad4000[0m <[0;33mline:366:4[0m, [0;33mcol:43[0m>
[0;34m|       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ad3e60[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:20[0m used[0;1;36m _Num[0m [0;32m'const std::ptrdiff_t':'const long'[0m cinit
[0;34m|       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ad3f88[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad3f58[0m <[0;33mcol:27[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad3f18[0m <[0;33mcol:27[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac94c0[0m[0;1;36m '__last'[0m [0;32m'const double *'[0m
[0;34m|       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad3f70[0m <[0;33mcol:36[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad3f38[0m <[0;33mcol:36[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac9448[0m[0;1;36m '__first'[0m [0;32m'const double *'[0m
[0;34m|       |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ad4228[0m <[0;33mline:367:4[0m, [0;33mline:368:61[0m>
[0;34m|       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad4050[0m <[0;33mline:367:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m|       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad4038[0m <[0;33mcol:8[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad4018[0m <[0;33mcol:8[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ad3e60[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m|       | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ad4190[0m <[0;33mline:368:6[0m, [0;33mcol:61[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m|       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad4178[0m <[0;33mcol:6[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m|       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c0480[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m|       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad41e0[0m <[0;33mcol:24[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m|       |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad41c8[0m <[0;33mcol:24[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad4068[0m <[0;33mcol:24[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac9538[0m[0;1;36m '__result'[0m [0;32m'double *'[0m
[0;34m|       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad4210[0m <[0;33mcol:34[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m|       |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad41f8[0m <[0;33mcol:34[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad4088[0m <[0;33mcol:34[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac9448[0m[0;1;36m '__first'[0m [0;32m'const double *'[0m
[0;34m|       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ad4128[0m <[0;33mcol:43[0m, [0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m|       |     |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6ad40b8[0m <[0;33mcol:43[0m, [0;33mcol:53[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'double':'double'[0m
[0;34m|       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad4110[0m <[0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|       |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad40f8[0m <[0;33mcol:57[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad40d8[0m <[0;33mcol:57[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ad3e60[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m|       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ad4320[0m <[0;33mline:369:4[0m, [0;33mcol:22[0m>
[0;34m|         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ad4300[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m '+'
[0;34m|           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad42d0[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad4290[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac9538[0m[0;1;36m '__result'[0m [0;32m'double *'[0m
[0;34m|           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ad42e8[0m <[0;33mcol:22[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ad42b0[0m <[0;33mcol:22[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ad3e60[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bac968[0m <[0;33mline:352:3[0m, [0;33mline:371:5[0m> [0;33mline:353:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bacd10[0m prev 0x6bac968 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m  `-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6bad108[0m <[0;33mline:355:7[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m[0;1;36m __copy_m[0m
[0;34m    |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6bacda0[0m <[0;33mline:355:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m    |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6bad068[0m <[0;33mline:356:9[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m[0;1;36m __copy_m[0m [0;32m'_Tp *(const _Tp *, const _Tp *, _Tp *)'[0m static
[0;34m    | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bace98[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m __first[0m [0;32m'const _Tp *'[0m
[0;34m    | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bacf10[0m <[0;33mcol:38[0m, [0;33mcol:49[0m> [0;33mcol:49[0m[0;1;36m __last[0m [0;32m'const _Tp *'[0m
[0;34m    | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bacf88[0m <[0;33mcol:57[0m, [0;33mcol:62[0m> [0;33mcol:62[0m[0;1;36m __result[0m [0;32m'_Tp *'[0m
[0;34m    `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6bad568[0m <[0;33mline:356:9[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m used[0;1;36m __copy_m[0m [0;32m'double *(const double *, const double *, double *)'[0m static
[0;34m      |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m      |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bad398[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const double *'[0m
[0;34m      |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bad410[0m <[0;33mcol:38[0m, [0;33mcol:49[0m> [0;33mcol:49[0m used[0;1;36m __last[0m [0;32m'const double *'[0m
[0;34m      |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bad488[0m <[0;33mcol:57[0m, [0;33mcol:62[0m> [0;33mcol:62[0m used[0;1;36m __result[0m [0;32m'double *'[0m
[0;34m      `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6baffa0[0m <[0;33mline:358:9[0m, [0;33mline:370:2[0m>
[0;34m        |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6baf940[0m <[0;33mline:360:4[0m, [0;33mline:362:33[0m>
[0;34m        | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6bada10[0m <[0;33mline:360:4[0m, [0;33mline:362:32[0m> [0;33mline:360:10[0m[0;1;36m __assignable[0m [0;32m'conditional<true, is_move_assignable<double>, is_copy_assignable<double> >':'std::conditional<true, std::is_move_assignable<double>, std::is_copy_assignable<double> >'[0m
[0;34m        |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bad940[0m [0;32m'conditional<true, is_move_assignable<double>, is_copy_assignable<double> >'[0m sugar conditional
[0;34m        |     |-[0mTemplateArgument expr
[0;34m        |     | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6bad920[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m        |     |   `-[0m[0;1;35mSubstNonTypeTemplateParmExpr[0m[0;33m 0x6bad7f8[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        |     |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6bad7e8[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m        |     |-[0mTemplateArgument type [0;32m'is_move_assignable<double>':'std::is_move_assignable<double>'[0m
[0;34m        |     |-[0mTemplateArgument type [0;32m'is_copy_assignable<double>':'std::is_copy_assignable<double>'[0m
[0;34m        |     `-[0m[0;32mRecordType[0m[0;33m 0x6b28040[0m [0;32m'std::conditional<true, std::is_move_assignable<double>, std::is_copy_assignable<double> >'[0m
[0;34m        |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b27f30[0m[0;1;36m 'conditional'[0m
[0;34m        |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6bafab8[0m <[0;33mline:364:4[0m, [0;33mcol:72[0m>
[0;34m        | `-[0m[0;1;32mStaticAssertDecl[0m[0;33m 0x6bafa78[0m <[0;33mcol:4[0m, [0;33mcol:71[0m> [0;33mcol:4[0m
[0;34m        |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6baf9e0[0m <[0;33mcol:19[0m, [0;33mcol:39[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6769118[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m
[0;34m        |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60bff48[0m <[0;33mcol:46[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "type is not assignable"[0m
[0;34m        |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6bafc70[0m <[0;33mline:366:4[0m, [0;33mcol:43[0m>
[0;34m        | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6bafad0[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:20[0m used[0;1;36m _Num[0m [0;32m'const std::ptrdiff_t':'const long'[0m cinit
[0;34m        |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6bafbf8[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafbc8[0m <[0;33mcol:27[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bafb88[0m <[0;33mcol:27[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6bad410[0m[0;1;36m '__last'[0m [0;32m'const double *'[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafbe0[0m <[0;33mcol:36[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bafba8[0m <[0;33mcol:36[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6bad398[0m[0;1;36m '__first'[0m [0;32m'const double *'[0m
[0;34m        |-[0m[0;1;35mIfStmt[0m[0;33m 0x6bafe98[0m <[0;33mline:367:4[0m, [0;33mline:368:61[0m>
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafcc0[0m <[0;33mline:367:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafca8[0m <[0;33mcol:8[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bafc88[0m <[0;33mcol:8[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6bafad0[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m        | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6bafe00[0m <[0;33mline:368:6[0m, [0;33mcol:61[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafde8[0m <[0;33mcol:6[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c0480[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafe50[0m <[0;33mcol:24[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafe38[0m <[0;33mcol:24[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bafcd8[0m <[0;33mcol:24[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6bad488[0m[0;1;36m '__result'[0m [0;32m'double *'[0m
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafe80[0m <[0;33mcol:34[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafe68[0m <[0;33mcol:34[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bafcf8[0m <[0;33mcol:34[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6bad398[0m[0;1;36m '__first'[0m [0;32m'const double *'[0m
[0;34m        |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6bafd98[0m <[0;33mcol:43[0m, [0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m        |     |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6bafd28[0m <[0;33mcol:43[0m, [0;33mcol:53[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'double':'double'[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafd80[0m <[0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m        |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bafd68[0m <[0;33mcol:57[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bafd48[0m <[0;33mcol:57[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6bafad0[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m        `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6baff90[0m <[0;33mline:369:4[0m, [0;33mcol:22[0m>
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6baff70[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m '+'
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6baff40[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6baff00[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6bad488[0m[0;1;36m '__result'[0m [0;32m'double *'[0m
[0;34m            `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6baff58[0m <[0;33mcol:22[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6baff20[0m <[0;33mcol:22[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6bafad0[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x60bc820[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:300:3[0m, [0;33mline:311:5[0m> [0;33mline:301:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bc5a0[0m <[0;33mline:300:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Category[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60bcb38[0m <[0;33mline:301:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60bcf78[0m <[0;33mline:303:7[0m, [0;33mline:310:2[0m> [0;33mline:305:9[0m[0;1;36m __copy_m[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bcbc8[0m <[0;33mline:303:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _II[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bcc38[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 1 index 1[0;1;36m _OI[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60bced8[0m <[0;33mline:304:9[0m, [0;33mline:310:2[0m> [0;33mline:305:9[0m[0;1;36m __copy_m[0m [0;32m'_OI (_II, _II, _OI)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bccd8[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bcd50[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bcdc8[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60bd330[0m <[0;33mline:306:9[0m, [0;33mline:310:2[0m>
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x60bd2c8[0m <[0;33mline:307:4[0m, [0;33mline:308:36[0m>
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60bd0a8[0m <[0;33mline:307:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60bd040[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bd000[0m <[0;33mcol:11[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bccd8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bd020[0m <[0;33mcol:22[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bcd50[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60bd188[0m <[0;33mcol:30[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m ','
[0;34m      | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bd100[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bd0e0[0m <[0;33mcol:32[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bcdc8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      | | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x60bd160[0m <[0;33mcol:42[0m, [0;33mcol:50[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m <[0;31mToVoid[0m>
[0;34m      | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bd138[0m <[0;33mcol:48[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bd118[0m <[0;33mcol:50[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bccd8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60bd2a8[0m <[0;33mline:308:6[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bd1c8[0m <[0;33mcol:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bd1a8[0m <[0;33mcol:7[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bcdc8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x60bd280[0m <[0;33mcol:18[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60bd200[0m <[0;33mcol:18[0m, [0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bd268[0m <[0;33mcol:28[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bd248[0m <[0;33mcol:29[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bccd8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60bd320[0m <[0;33mline:309:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bd300[0m <[0;33mcol:11[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bcdc8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x60bd3d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:314:3[0m, [0;33mline:330:5[0m> [0;33mline:315:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60bd678[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60bdab8[0m <[0;33mline:317:7[0m, [0;33mline:329:2[0m> [0;33mline:319:9[0m[0;1;36m __copy_m[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bd708[0m <[0;33mline:317:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _II[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bd778[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _OI[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60bda18[0m <[0;33mline:318:9[0m, [0;33mline:329:2[0m> [0;33mline:319:9[0m[0;1;36m __copy_m[0m [0;32m'_OI (_II, _II, _OI)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bd818[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bd890[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bd908[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60be0e0[0m <[0;33mline:320:9[0m, [0;33mline:329:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60bdca8[0m <[0;33mline:321:4[0m, [0;33mcol:68[0m>
[0;34m      | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bdc50[0m <[0;33mcol:4[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced[0;1;36m _Distance[0m [0;32m'typename iterator_traits<_II>::difference_type'[0m
[0;34m      |   `-[0m[0;32mDependentNameType[0m[0;33m 0x60bdbe0[0m [0;32m'typename iterator_traits<_II>::difference_type'[0m dependent
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x60be078[0m <[0;33mline:322:4[0m, [0;33mline:327:6[0m>
[0;34m      | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60bde20[0m <[0;33mline:322:8[0m, [0;33mcol:40[0m>
[0;34m      | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60bdcf0[0m <[0;33mcol:8[0m, [0;33mcol:33[0m> [0;33mcol:18[0m referenced[0;1;36m __n[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m cinit
[0;34m      | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60bdde8[0m <[0;33mcol:24[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60bdd98[0m <[0;33mcol:31[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m
[0;34m      | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bdd58[0m <[0;33mcol:24[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bd890[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bdd78[0m <[0;33mcol:33[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bd818[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60bdee0[0m <[0;33mcol:42[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60bde78[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x6049ec8[0m[0;33m 0x606da08[0m[0;33m 0x6071148[0m[0;33m 0x6092f08[0m[0;33m 0x60934a8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bde38[0m <[0;33mcol:42[0m> [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60bdcf0[0m[0;1;36m '__n'[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60bde58[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bdf38[0m <[0;33mcol:51[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bdf18[0m <[0;33mcol:53[0m> [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60bdcf0[0m[0;1;36m '__n'[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m
[0;34m      | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60be050[0m <[0;33mline:323:6[0m, [0;33mline:327:6[0m>
[0;34m      |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60bdfc0[0m <[0;33mline:324:8[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bdf70[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bdf50[0m <[0;33mcol:9[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bd908[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bdfa8[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bdf88[0m <[0;33mcol:21[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bd818[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60be000[0m <[0;33mline:325:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bdfe0[0m <[0;33mcol:10[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bd818[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60be038[0m <[0;33mline:326:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60be018[0m <[0;33mcol:10[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bd908[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60be0d0[0m <[0;33mline:328:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60be0b0[0m <[0;33mcol:11[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bd908[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x60be188[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:333:3[0m, [0;33mline:349:5[0m> [0;33mline:334:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60be438[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60be878[0m <[0;33mline:336:7[0m, [0;33mline:348:2[0m> [0;33mline:338:9[0m[0;1;36m __copy_m[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60be4c8[0m <[0;33mline:336:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _II[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60be538[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _OI[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60be7d8[0m <[0;33mline:337:9[0m, [0;33mline:348:2[0m> [0;33mline:338:9[0m[0;1;36m __copy_m[0m [0;32m'_OI (_II, _II, _OI)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60be5d8[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60be650[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60be6c8[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60bef50[0m <[0;33mline:339:9[0m, [0;33mline:348:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60bea88[0m <[0;33mline:340:4[0m, [0;33mcol:68[0m>
[0;34m      | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bea30[0m <[0;33mcol:4[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced[0;1;36m _Distance[0m [0;32m'typename iterator_traits<_II>::difference_type'[0m
[0;34m      |   `-[0m[0;32mDependentNameType[0m[0;33m 0x60be9c0[0m [0;32m'typename iterator_traits<_II>::difference_type'[0m dependent
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x60beee8[0m <[0;33mline:341:4[0m, [0;33mline:346:6[0m>
[0;34m      | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60bec00[0m <[0;33mline:341:8[0m, [0;33mcol:40[0m>
[0;34m      | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60bead0[0m <[0;33mcol:8[0m, [0;33mcol:33[0m> [0;33mcol:18[0m referenced[0;1;36m __n[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m cinit
[0;34m      | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60bebc8[0m <[0;33mcol:24[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60beb78[0m <[0;33mcol:31[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m
[0;34m      | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60beb38[0m <[0;33mcol:24[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60be650[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60beb58[0m <[0;33mcol:33[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60be5d8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60becc0[0m <[0;33mcol:42[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60bec58[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x6049ec8[0m[0;33m 0x606da08[0m[0;33m 0x6071148[0m[0;33m 0x6092f08[0m[0;33m 0x60934a8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bec18[0m <[0;33mcol:42[0m> [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60bead0[0m[0;1;36m '__n'[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60bec38[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bed18[0m <[0;33mcol:51[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60becf8[0m <[0;33mcol:53[0m> [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60bead0[0m[0;1;36m '__n'[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m
[0;34m      | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60beec0[0m <[0;33mline:342:6[0m, [0;33mline:346:6[0m>
[0;34m      |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60bee30[0m <[0;33mline:343:8[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bed50[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bed30[0m <[0;33mcol:9[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60be6c8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x60bee08[0m <[0;33mcol:20[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60bed88[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m
[0;34m      |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bedf0[0m <[0;33mcol:30[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bedd0[0m <[0;33mcol:31[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60be5d8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60bee70[0m <[0;33mline:344:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bee50[0m <[0;33mcol:10[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60be5d8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60beea8[0m <[0;33mline:345:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bee88[0m <[0;33mcol:10[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60be6c8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60bef40[0m <[0;33mline:347:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bef20[0m <[0;33mcol:11[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60be6c8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x60bf1e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:352:3[0m, [0;33mline:371:5[0m> [0;33mline:353:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument expr
[0;34m| `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bf000[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m [0;1;32mNonTypeTemplateParm[0m[0;33m 0x60bef88[0m[0;1;36m '_IsMove'[0m [0;32m'bool'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60bef88[0m <[0;33mline:352:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60bf4c8[0m <[0;33mline:353:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60bf958[0m <[0;33mline:355:7[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m[0;1;36m __copy_m[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bf558[0m <[0;33mline:355:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _Tp[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60bf8b8[0m <[0;33mline:356:9[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m[0;1;36m __copy_m[0m [0;32m'_Tp *(const _Tp *, const _Tp *, _Tp *)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bf648[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bf6c0[0m <[0;33mcol:38[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __last[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bf768[0m <[0;33mcol:57[0m, [0;33mcol:62[0m> [0;33mcol:62[0m referenced[0;1;36m __result[0m [0;32m'_Tp *'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60c06a8[0m <[0;33mline:358:9[0m, [0;33mline:370:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60bfde0[0m <[0;33mline:360:4[0m, [0;33mline:362:33[0m>
[0;34m      | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x60bfd80[0m <[0;33mline:360:4[0m, [0;33mline:362:32[0m> [0;33mline:360:10[0m referenced[0;1;36m __assignable[0m [0;32m'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x60bfc50[0m [0;32m'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'[0m dependent conditional
[0;34m      |     |-[0mTemplateArgument expr
[0;34m      |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60bf9e0[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m [0;1;32mNonTypeTemplateParm[0m[0;33m 0x60bef88[0m[0;1;36m '_IsMove'[0m [0;32m'bool'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'is_move_assignable<_Tp>'[0m
[0;34m      |     `-[0mTemplateArgument type [0;32m'is_copy_assignable<_Tp>'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60bffb8[0m <[0;33mline:364:4[0m, [0;33mcol:72[0m>
[0;34m      | `-[0m[0;1;32mStaticAssertDecl[0m[0;33m 0x60bff78[0m <[0;33mcol:4[0m, [0;33mcol:71[0m> [0;33mcol:4[0m
[0;34m      |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60bfe98[0m <[0;33mcol:19[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60bff48[0m <[0;33mcol:46[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "type is not assignable"[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60c0110[0m <[0;33mline:366:4[0m, [0;33mcol:43[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60bffe0[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:20[0m referenced[0;1;36m _Num[0m [0;32m'const std::ptrdiff_t':'const long'[0m cinit
[0;34m      |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60c00d8[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c0088[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c0048[0m <[0;33mcol:27[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bf6c0[0m[0;1;36m '__last'[0m [0;32m'const _Tp *'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c0068[0m <[0;33mcol:36[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bf648[0m[0;1;36m '__first'[0m [0;32m'const _Tp *'[0m
[0;34m      |-[0m[0;1;35mIfStmt[0m[0;33m 0x60c05b8[0m <[0;33mline:367:4[0m, [0;33mline:368:61[0m>
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60c0160[0m <[0;33mline:367:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60c0148[0m <[0;33mcol:8[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c0128[0m <[0;33mcol:8[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60bffe0[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x60c0580[0m <[0;33mline:368:6[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c0480[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c04a0[0m <[0;33mcol:24[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bf768[0m[0;1;36m '__result'[0m [0;32m'_Tp *'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c04c0[0m <[0;33mcol:34[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bf648[0m[0;1;36m '__first'[0m [0;32m'const _Tp *'[0m
[0;34m      |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60c0560[0m <[0;33mcol:43[0m, [0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m      |     |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x60c04f0[0m <[0;33mcol:43[0m, [0;33mcol:53[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'_Tp'[0m
[0;34m      |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60c0548[0m <[0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60c0530[0m <[0;33mcol:57[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c0510[0m <[0;33mcol:57[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60bffe0[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60c0698[0m <[0;33mline:369:4[0m, [0;33mcol:22[0m>
[0;34m        `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60c0660[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c0610[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6072db8[0m[0;33m 0x6095118[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c05d0[0m <[0;33mcol:11[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60bf768[0m[0;1;36m '__result'[0m [0;32m'_Tp *'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c05f0[0m <[0;33mcol:22[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60bffe0[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m

Dumping std::__copy_move_a:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c0b28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:373:3[0m, [0;33mline:387:5[0m> [0;33mline:375:5[0m[0;1;36m __copy_move_a[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60c06f0[0m <[0;33mline:373:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c0750[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _II[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c07c8[0m <[0;33mcol:40[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced typename depth 0 index 2[0;1;36m _OI[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60c0a88[0m <[0;33mline:374:5[0m, [0;33mline:387:5[0m> [0;33mline:375:5[0m[0;1;36m __copy_move_a[0m [0;32m'_OI (_II, _II, _OI)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c0870[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c08e8[0m <[0;33mcol:32[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c0960[0m <[0;33mcol:44[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60c1a30[0m <[0;33mline:376:5[0m, [0;33mline:387:5[0m>
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60c0d98[0m <[0;33mline:377:7[0m, [0;33mcol:68[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c0d40[0m <[0;33mcol:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m _ValueTypeI[0m [0;32m'typename iterator_traits<_II>::value_type'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x60c0cd0[0m [0;32m'typename iterator_traits<_II>::value_type'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60c0fa8[0m <[0;33mline:378:7[0m, [0;33mcol:68[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c0f50[0m <[0;33mcol:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m _ValueTypeO[0m [0;32m'typename iterator_traits<_OI>::value_type'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x60c0ee0[0m [0;32m'typename iterator_traits<_OI>::value_type'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60c1158[0m <[0;33mline:379:7[0m, [0;33mcol:73[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c1100[0m <[0;33mcol:7[0m, [0;33mcol:64[0m> [0;33mcol:64[0m referenced[0;1;36m _Category[0m [0;32m'typename iterator_traits<_II>::iterator_category'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x60c1090[0m [0;32m'typename iterator_traits<_II>::iterator_category'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60c16f8[0m <[0;33mline:380:7[0m, [0;33mline:383:58[0m>
[0;34m|   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60c1180[0m <[0;33mline:380:7[0m, [0;33mline:383:57[0m> [0;33mline:380:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m|   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x60c16d8[0m <[0;33mcol:29[0m, [0;33mline:383:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60c16b8[0m <[0;33mline:380:30[0m, [0;33mline:383:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60c14d8[0m <[0;33mline:380:30[0m, [0;33mline:382:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60c1378[0m <[0;33mline:380:30[0m, [0;33mline:381:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       | | |-[0m[0;1;35mTypeTraitExpr[0m[0;33m 0x60c1220[0m <[0;33mline:380:30[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m|   |       | | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60c1340[0m <[0;33mline:381:26[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   |       | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60c14a0[0m <[0;33mline:382:26[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   |       `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60c1680[0m <[0;33mline:383:12[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60c1a20[0m <[0;33mline:385:7[0m, [0;33mline:386:70[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x60c19e8[0m <[0;33mline:385:14[0m, [0;33mline:386:70[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60c1950[0m <[0;33mline:385:14[0m, [0;33mline:386:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c1988[0m <[0;33mcol:45[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c0870[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c19a8[0m <[0;33mcol:54[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c08e8[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c19c8[0m <[0;33mcol:62[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c0960[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6ac7368[0m <[0;33mline:374:5[0m, [0;33mline:387:5[0m> [0;33mline:375:5[0m used[0;1;36m __copy_move_a[0m [0;32m'double *(const double *, const double *, double *)'[0m inline
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0mTemplateArgument type [0;32m'const double *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac7198[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __first[0m [0;32m'const double *':'const double *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac7210[0m <[0;33mcol:32[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __last[0m [0;32m'const double *':'const double *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac7288[0m <[0;33mcol:44[0m, [0;33mcol:48[0m> [0;33mcol:48[0m used[0;1;36m __result[0m [0;32m'double *':'double *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ac9830[0m <[0;33mline:376:5[0m, [0;33mline:387:5[0m>
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ac7808[0m <[0;33mline:377:7[0m, [0;33mcol:68[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ac77b0[0m <[0;33mcol:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m _ValueTypeI[0m [0;32m'typename iterator_traits<const double *>::value_type':'double'[0m
[0;34m|   |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6ac7760[0m [0;32m'typename iterator_traits<const double *>::value_type'[0m sugar
[0;34m|   |     `-[0m[0;32mTypedefType[0m[0;33m 0x6ab4a00[0m [0;32m'std::iterator_traits<const double *>::value_type'[0m sugar
[0;34m|   |       |-[0m[0;1;32mTypedef[0m[0;33m 0x6ab0a18[0m[0;1;36m 'value_type'[0m
[0;34m|   |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6ab07b0[0m [0;32m'double'[0m sugar
[0;34m|   |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054820[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|   |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x60547d8[0m[0;1;36m '_Tp'[0m
[0;34m|   |         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ac7978[0m <[0;33mline:378:7[0m, [0;33mcol:68[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ac7920[0m <[0;33mcol:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m _ValueTypeO[0m [0;32m'typename iterator_traits<double *>::value_type':'double'[0m
[0;34m|   |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6ac78d0[0m [0;32m'typename iterator_traits<double *>::value_type'[0m sugar
[0;34m|   |     `-[0m[0;32mTypedefType[0m[0;33m 0x69a6090[0m [0;32m'std::iterator_traits<double *>::value_type'[0m sugar
[0;34m|   |       |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5dd0[0m[0;1;36m 'value_type'[0m
[0;34m|   |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69a5bc0[0m [0;32m'double'[0m sugar
[0;34m|   |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|   |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m|   |         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ac7ae8[0m <[0;33mline:379:7[0m, [0;33mcol:73[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ac7a90[0m <[0;33mcol:7[0m, [0;33mcol:64[0m> [0;33mcol:64[0m[0;1;36m _Category[0m [0;32m'typename iterator_traits<const double *>::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m|   |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6ac7a40[0m [0;32m'typename iterator_traits<const double *>::iterator_category'[0m sugar
[0;34m|   |     `-[0m[0;32mTypedefType[0m[0;33m 0x6ab26c0[0m [0;32m'std::iterator_traits<const double *>::iterator_category'[0m sugar
[0;34m|   |       |-[0m[0;1;32mTypedef[0m[0;33m 0x6ab09b0[0m[0;1;36m 'iterator_category'[0m
[0;34m|   |       `-[0m[0;32mRecordType[0m[0;33m 0x604dad0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m|   |         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x604da40[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ac88c8[0m <[0;33mline:380:7[0m, [0;33mline:383:58[0m>
[0;34m|   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ac7b00[0m <[0;33mline:380:7[0m, [0;33mline:383:57[0m> [0;33mline:380:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m|   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x6ac8850[0m <[0;33mcol:29[0m, [0;33mline:383:57[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m|   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ac8830[0m <[0;33mline:380:30[0m, [0;33mline:383:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ac86c0[0m <[0;33mline:380:30[0m, [0;33mline:382:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ac8130[0m <[0;33mline:380:30[0m, [0;33mline:381:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       | | |-[0m[0;1;35mTypeTraitExpr[0m[0;33m 0x6ac7ba0[0m <[0;33mline:380:30[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m|   |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac8118[0m <[0;33mline:381:26[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m|   |       | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac80e8[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;32m'std::__is_pointer<const double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ac8010[0m[0;1;36m '__value'[0m [0;32m'std::__is_pointer<const double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m
[0;34m|   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac86a8[0m <[0;33mline:382:26[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m|   |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac8678[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ac85a0[0m[0;1;36m '__value'[0m [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m
[0;34m|   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac8818[0m <[0;33mline:383:12[0m, [0;33mcol:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m|   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac87e8[0m <[0;33mcol:12[0m, [0;33mcol:50[0m> [0;32m'std::__are_same<double, double>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:104:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x661ad90[0m[0;1;36m '__value'[0m [0;32m'std::__are_same<double, double>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:104:7)'[0m
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ac9820[0m <[0;33mline:385:7[0m, [0;33mline:386:70[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ac97a0[0m <[0;33mline:385:14[0m, [0;33mline:386:70[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac9788[0m <[0;33mline:385:14[0m, [0;33mline:386:36[0m> [0;32m'double *(*)(const double *, const double *, double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac9728[0m <[0;33mline:385:14[0m, [0;33mline:386:36[0m> [0;32m'double *(const double *, const double *, double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6ac9618[0m[0;1;36m '__copy_m'[0m [0;32m'double *(const double *, const double *, double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6ac91b8[0m[0;1;36m '__copy_m'[0m)
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac97d8[0m <[0;33mcol:45[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac9308[0m <[0;33mcol:45[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac7198[0m[0;1;36m '__first'[0m [0;32m'const double *':'const double *'[0m
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac97f0[0m <[0;33mcol:54[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac9328[0m <[0;33mcol:54[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac7210[0m[0;1;36m '__last'[0m [0;32m'const double *':'const double *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac9808[0m <[0;33mcol:62[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac9348[0m <[0;33mcol:62[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac7288[0m[0;1;36m '__result'[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6babcb8[0m <[0;33mline:374:5[0m, [0;33mline:387:5[0m> [0;33mline:375:5[0m used[0;1;36m __copy_move_a[0m [0;32m'double *(double *, double *, double *)'[0m inline
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6babae8[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __first[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6babb60[0m <[0;33mcol:32[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __last[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6babbd8[0m <[0;33mcol:44[0m, [0;33mcol:48[0m> [0;33mcol:48[0m used[0;1;36m __result[0m [0;32m'double *':'double *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6bad7b0[0m <[0;33mline:376:5[0m, [0;33mline:387:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6bac098[0m <[0;33mline:377:7[0m, [0;33mcol:68[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6bac040[0m <[0;33mcol:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m _ValueTypeI[0m [0;32m'typename iterator_traits<double *>::value_type':'double'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6babff0[0m [0;32m'typename iterator_traits<double *>::value_type'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x69a6090[0m [0;32m'std::iterator_traits<double *>::value_type'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5dd0[0m[0;1;36m 'value_type'[0m
[0;34m    |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69a5bc0[0m [0;32m'double'[0m sugar
[0;34m    |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m    |         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6bac208[0m <[0;33mline:378:7[0m, [0;33mcol:68[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6bac1b0[0m <[0;33mcol:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m _ValueTypeO[0m [0;32m'typename iterator_traits<double *>::value_type':'double'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6bac160[0m [0;32m'typename iterator_traits<double *>::value_type'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x69a6090[0m [0;32m'std::iterator_traits<double *>::value_type'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5dd0[0m[0;1;36m 'value_type'[0m
[0;34m    |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69a5bc0[0m [0;32m'double'[0m sugar
[0;34m    |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m    |         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6bac378[0m <[0;33mline:379:7[0m, [0;33mcol:73[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6bac320[0m <[0;33mcol:7[0m, [0;33mcol:64[0m> [0;33mcol:64[0m[0;1;36m _Category[0m [0;32m'typename iterator_traits<double *>::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6bac2d0[0m [0;32m'typename iterator_traits<double *>::iterator_category'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x69a5fa0[0m [0;32m'std::iterator_traits<double *>::iterator_category'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5d68[0m[0;1;36m 'iterator_category'[0m
[0;34m    |       `-[0m[0;32mRecordType[0m[0;33m 0x604dad0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m    |         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x604da40[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6bac858[0m <[0;33mline:380:7[0m, [0;33mline:383:58[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6bac390[0m <[0;33mline:380:7[0m, [0;33mline:383:57[0m> [0;33mline:380:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m    |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x6bac7e0[0m <[0;33mcol:29[0m, [0;33mline:383:57[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6bac7c0[0m <[0;33mline:380:30[0m, [0;33mline:383:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6bac650[0m <[0;33mline:380:30[0m, [0;33mline:382:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6bac540[0m <[0;33mline:380:30[0m, [0;33mline:381:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | | |-[0m[0;1;35mTypeTraitExpr[0m[0;33m 0x6bac430[0m <[0;33mline:380:30[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bac528[0m <[0;33mline:381:26[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |       | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bac4f8[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ac85a0[0m[0;1;36m '__value'[0m [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m
[0;34m    |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bac638[0m <[0;33mline:382:26[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bac608[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ac85a0[0m[0;1;36m '__value'[0m [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m
[0;34m    |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bac7a8[0m <[0;33mline:383:12[0m, [0;33mcol:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bac778[0m <[0;33mcol:12[0m, [0;33mcol:50[0m> [0;32m'std::__are_same<double, double>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:104:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x661ad90[0m[0;1;36m '__value'[0m [0;32m'std::__are_same<double, double>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:104:7)'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6bad7a0[0m <[0;33mline:385:7[0m, [0;33mline:386:70[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6bad6f0[0m <[0;33mline:385:14[0m, [0;33mline:386:70[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bad6d8[0m <[0;33mline:385:14[0m, [0;33mline:386:36[0m> [0;32m'double *(*)(const double *, const double *, double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bad678[0m <[0;33mline:385:14[0m, [0;33mline:386:36[0m> [0;32m'double *(const double *, const double *, double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6bad568[0m[0;1;36m '__copy_m'[0m [0;32m'double *(const double *, const double *, double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6bad108[0m[0;1;36m '__copy_m'[0m)
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bad740[0m <[0;33mcol:45[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bad728[0m <[0;33mcol:45[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bad258[0m <[0;33mcol:45[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6babae8[0m[0;1;36m '__first'[0m [0;32m'double *':'double *'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bad770[0m <[0;33mcol:54[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bad758[0m <[0;33mcol:54[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bad278[0m <[0;33mcol:54[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6babb60[0m[0;1;36m '__last'[0m [0;32m'double *':'double *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bad788[0m <[0;33mcol:62[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bad298[0m <[0;33mcol:62[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6babbd8[0m[0;1;36m '__result'[0m [0;32m'double *':'double *'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c3688[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:400:3[0m, [0;33mline:404:55[0m> [0;33mline:403:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60c24f8[0m <[0;33mline:400:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c2558[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60c35e8[0m <[0;33mline:401:5[0m, [0;33mline:404:55[0m> [0;33mline:403:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3228[0m <[0;33mcol:20[0m, [0;33mcol:26[0m> [0;33mcol:27[0m [0;32m'_CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c32a0[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;33mcol:36[0m [0;32m'_CharT *'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c34b8[0m <[0;33mline:404:6[0m, [0;33mcol:54[0m> [0;33mcol:55[0m [0;32m'ostreambuf_iterator<_CharT, char_traits<_CharT> >'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c40b8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:406:3[0m, [0;33mline:410:55[0m> [0;33mline:409:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60c3708[0m <[0;33mline:406:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c3768[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60c4018[0m <[0;33mline:407:5[0m, [0;33mline:410:55[0m> [0;33mline:409:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3c58[0m <[0;33mcol:20[0m, [0;33mcol:32[0m> [0;33mcol:33[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3cd0[0m <[0;33mcol:35[0m, [0;33mcol:47[0m> [0;33mcol:48[0m [0;32m'const _CharT *'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3ee8[0m <[0;33mline:410:6[0m, [0;33mcol:54[0m> [0;33mcol:55[0m [0;32m'ostreambuf_iterator<_CharT, char_traits<_CharT> >'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c4bb8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:412:3[0m, [0;33mline:416:64[0m> [0;33mline:415:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60c4138[0m <[0;33mline:412:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c4198[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60c4b18[0m <[0;33mline:413:5[0m, [0;33mline:416:64[0m> [0;33mline:415:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type (istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c4758[0m <[0;33mcol:20[0m, [0;33mcol:68[0m> [0;33mcol:69[0m [0;32m'istreambuf_iterator<_CharT, char_traits<_CharT> >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c4968[0m <[0;33mline:416:6[0m, [0;33mcol:54[0m> [0;33mcol:55[0m [0;32m'istreambuf_iterator<_CharT, char_traits<_CharT> >'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c49e0[0m <[0;33mcol:57[0m, [0;33mcol:63[0m> [0;33mcol:64[0m [0;32m'_CharT *'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c5028[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:418:3[0m, [0;33mline:425:5[0m> [0;33mline:420:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60c4c38[0m <[0;33mline:418:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c4c98[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _II[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c4d08[0m <[0;33mcol:40[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced typename depth 0 index 2[0;1;36m _OI[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60c4f88[0m <[0;33mline:419:5[0m, [0;33mline:425:5[0m> [0;33mline:420:5[0m[0;1;36m __copy_move_a2[0m [0;32m'_OI (_II, _II, _OI)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c4db0[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c4e28[0m <[0;33mcol:33[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c4ea0[0m <[0;33mcol:45[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60c5450[0m <[0;33mline:421:5[0m, [0;33mline:425:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60c5440[0m <[0;33mline:422:7[0m, [0;33mline:424:39[0m>
[0;34m|     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x60c5418[0m <[0;33mline:422:14[0m, [0;33mline:424:39[0m> [0;32m'_OI'[0m[0;36m[0m[0;36m[0m [0;32m'_OI'[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x60c53e0[0m <[0;33mline:422:18[0m, [0;33mline:424:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c5100[0m <[0;33mline:422:18[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__copy_move_a'[0;33m 0x60c0b28[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x60c5228[0m <[0;33mcol:46[0m, [0;33mcol:71[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c51a8[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x6075dc8[0m[0;33m 0x608af18[0m[0;33m 0x6097ce8[0m[0;33m 0x60bb828[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c5208[0m <[0;33mcol:64[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c4db0[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x60c52f0[0m <[0;33mline:423:11[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c5270[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x6075dc8[0m[0;33m 0x608af18[0m[0;33m 0x6097ce8[0m[0;33m 0x60bb828[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c52d0[0m <[0;33mcol:29[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c4e28[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x60c53b8[0m <[0;33mline:424:11[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c5338[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x6075dc8[0m[0;33m 0x608af18[0m[0;33m 0x6097ce8[0m[0;33m 0x60bb828[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c5398[0m <[0;33mcol:29[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c4ea0[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6ac6048[0m <[0;33mline:419:5[0m, [0;33mline:425:5[0m> [0;33mline:420:5[0m used[0;1;36m __copy_move_a2[0m [0;32m'double *(const double *, const double *, double *)'[0m inline
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0mTemplateArgument type [0;32m'const double *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac5e78[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __first[0m [0;32m'const double *':'const double *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac5ef0[0m <[0;33mcol:33[0m, [0;33mcol:37[0m> [0;33mcol:37[0m used[0;1;36m __last[0m [0;32m'const double *':'const double *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ac5f68[0m <[0;33mcol:45[0m, [0;33mcol:49[0m> [0;33mcol:49[0m used[0;1;36m __result[0m [0;32m'double *':'double *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ac75d0[0m <[0;33mline:421:5[0m, [0;33mline:425:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ac75c0[0m <[0;33mline:422:7[0m, [0;33mline:424:39[0m>
[0;34m|     `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x6ac7598[0m <[0;33mline:422:14[0m, [0;33mline:424:39[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m functional cast to double * <NoOp>
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ac7560[0m <[0;33mline:422:18[0m, [0;33mline:424:38[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac7548[0m <[0;33mline:422:18[0m, [0;33mcol:44[0m> [0;32m'double *(*)(const double *, const double *, double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac74a8[0m <[0;33mcol:18[0m, [0;33mcol:44[0m> [0;32m'double *(const double *, const double *, double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ac7368[0m[0;1;36m '__copy_move_a'[0m [0;32m'double *(const double *, const double *, double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60c0b28[0m[0;1;36m '__copy_move_a'[0m)
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x6ac67d0[0m <[0;33mcol:46[0m, [0;33mcol:71[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac67b8[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;32m'const double *(*)(const double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac6758[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;32m'const double *(const double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ac6658[0m[0;1;36m '__niter_base'[0m [0;32m'const double *(const double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60bb828[0m[0;1;36m '__niter_base'[0m)
[0;34m|         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac67f8[0m <[0;33mcol:64[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac6468[0m <[0;33mcol:64[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac5e78[0m[0;1;36m '__first'[0m [0;32m'const double *':'const double *'[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x6ac69b0[0m <[0;33mline:423:11[0m, [0;33mcol:35[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac6998[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'const double *(*)(const double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac6960[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'const double *(const double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ac6658[0m[0;1;36m '__niter_base'[0m [0;32m'const double *(const double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60bb828[0m[0;1;36m '__niter_base'[0m)
[0;34m|         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac69d8[0m <[0;33mcol:29[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac6870[0m <[0;33mcol:29[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac5ef0[0m[0;1;36m '__last'[0m [0;32m'const double *':'const double *'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ac6e10[0m <[0;33mline:424:11[0m, [0;33mcol:37[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac6df8[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double *(*)(double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac6d68[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double *(double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ac6c68[0m[0;1;36m '__niter_base'[0m [0;32m'double *(double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60bb828[0m[0;1;36m '__niter_base'[0m)
[0;34m|           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ac6e38[0m <[0;33mcol:29[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ac6a50[0m <[0;33mcol:29[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ac5f68[0m[0;1;36m '__result'[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6baac38[0m <[0;33mline:419:5[0m, [0;33mline:425:5[0m> [0;33mline:420:5[0m used[0;1;36m __copy_move_a2[0m [0;32m'double *(double *, double *, double *)'[0m inline
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6baaa68[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __first[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6baaae0[0m <[0;33mcol:33[0m, [0;33mcol:37[0m> [0;33mcol:37[0m used[0;1;36m __last[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6baab58[0m <[0;33mcol:45[0m, [0;33mcol:49[0m> [0;33mcol:49[0m used[0;1;36m __result[0m [0;32m'double *':'double *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6babf20[0m <[0;33mline:421:5[0m, [0;33mline:425:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6babf10[0m <[0;33mline:422:7[0m, [0;33mline:424:39[0m>
[0;34m      `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x6babee8[0m <[0;33mline:422:14[0m, [0;33mline:424:39[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m functional cast to double * <NoOp>
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6babeb0[0m <[0;33mline:422:18[0m, [0;33mline:424:38[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6babe98[0m <[0;33mline:422:18[0m, [0;33mcol:44[0m> [0;32m'double *(*)(double *, double *, double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6babdf8[0m <[0;33mcol:18[0m, [0;33mcol:44[0m> [0;32m'double *(double *, double *, double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6babcb8[0m[0;1;36m '__copy_move_a'[0m [0;32m'double *(double *, double *, double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60c0b28[0m[0;1;36m '__copy_move_a'[0m)
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6bab450[0m <[0;33mcol:46[0m, [0;33mcol:71[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bab438[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;32m'double *(*)(double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bab400[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;32m'double *(double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ac6c68[0m[0;1;36m '__niter_base'[0m [0;32m'double *(double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60bb828[0m[0;1;36m '__niter_base'[0m)
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bab478[0m <[0;33mcol:64[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bab310[0m <[0;33mcol:64[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6baaa68[0m[0;1;36m '__first'[0m [0;32m'double *':'double *'[0m
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6bab630[0m <[0;33mline:423:11[0m, [0;33mcol:35[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bab618[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double *(*)(double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bab5e0[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double *(double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ac6c68[0m[0;1;36m '__niter_base'[0m [0;32m'double *(double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60bb828[0m[0;1;36m '__niter_base'[0m)
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bab658[0m <[0;33mcol:29[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bab4f0[0m <[0;33mcol:29[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6baaae0[0m[0;1;36m '__last'[0m [0;32m'double *':'double *'[0m
[0;34m          `-[0m[0;1;35mCallExpr[0m[0;33m 0x6bab810[0m <[0;33mline:424:11[0m, [0;33mcol:37[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bab7f8[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double *(*)(double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bab7c0[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double *(double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ac6c68[0m[0;1;36m '__niter_base'[0m [0;32m'double *(double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60bb828[0m[0;1;36m '__niter_base'[0m)
[0;34m            `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bab838[0m <[0;33mcol:29[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bab6d0[0m <[0;33mcol:29[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6baab58[0m[0;1;36m '__result'[0m [0;32m'double *':'double *'[0m

Dumping std::move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c6018[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:477:3[0m, [0;33mline:489:5[0m> [0;33mline:479:5[0m[0;1;36m move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c5c98[0m <[0;33mline:477:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _II[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c5d08[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _OI[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60c5f78[0m <[0;33mline:478:5[0m, [0;33mline:489:5[0m> [0;33mline:479:5[0m[0;1;36m move[0m [0;32m'_OI (_II, _II, _OI)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c5da8[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c5e20[0m <[0;33mcol:23[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c5e98[0m <[0;33mcol:35[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60c6370[0m <[0;33mline:480:5[0m, [0;33mline:489:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x60c6088[0m <[0;33mline:485:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60c6360[0m <[0;33mline:487:7[0m, [0;33mline:488:47[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x60c6328[0m <[0;33mline:487:14[0m, [0;33mline:488:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c60e8[0m <[0;33mline:487:14[0m, [0;33mcol:38[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__copy_move_a2'[0;33m 0x60c3688[0m[0;33m 0x60c40b8[0m[0;33m 0x60c4bb8[0m[0;33m 0x60c5028[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x60c6220[0m <[0;33mcol:40[0m, [0;33mcol:65[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c61a8[0m <[0;33mcol:40[0m, [0;33mcol:45[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__miter_base'[0;33m 0x5d14f98[0m[0;33m 0x6076a28[0m[0;33m 0x60989e8[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c6200[0m <[0;33mcol:58[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c5da8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x60c62e0[0m <[0;33mline:488:12[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c6268[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__miter_base'[0;33m 0x5d14f98[0m[0;33m 0x6076a28[0m[0;33m 0x60989e8[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c62c0[0m <[0;33mcol:30[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c5e20[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c6308[0m <[0;33mcol:39[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c5e98[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplateDecl[0m[0;33m 0x60c65a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:496:3[0m, [0;33mline:507:5[0m> [0;33mline:497:12[0m[0;1;36m __copy_move_backward[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60c63a0[0m <[0;33mline:496:12[0m> [0;33mcol:16[0m [0;32m'bool'[0m depth 0 index 0
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60c6410[0m <[0;33mcol:18[0m> [0;33mcol:22[0m [0;32m'bool'[0m depth 0 index 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c6470[0m <[0;33mcol:24[0m> [0;33mcol:24[0m typename depth 0 index 2
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60c6510[0m <[0;33mline:497:5[0m, [0;33mline:507:5[0m> [0;33mline:497:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60c6890[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m| `-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c6cd8[0m <[0;33mline:499:7[0m, [0;33mline:506:2[0m> [0;33mline:501:9[0m[0;1;36m __copy_move_b[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c6920[0m <[0;33mline:499:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _BI1[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c6998[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 1 index 1[0;1;36m _BI2[0m
[0;34m|   `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c6c38[0m <[0;33mline:500:9[0m, [0;33mline:506:2[0m> [0;33mline:501:9[0m[0;1;36m __copy_move_b[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m static
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c6a38[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c6ab0[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c6b28[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m|     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60c6f48[0m <[0;33mline:502:9[0m, [0;33mline:506:2[0m>
[0;34m|       |-[0m[0;1;35mWhileStmt[0m[0;33m 0x60c6f00[0m <[0;33mline:503:4[0m, [0;33mline:504:23[0m>
[0;34m|       | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60c6e08[0m <[0;33mline:503:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60c6da0[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m
[0;34m|       | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c6d60[0m <[0;33mcol:11[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c6a38[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m|       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c6d80[0m <[0;33mcol:22[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c6ab0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|       | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60c6ee0[0m <[0;33mline:504:6[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m|       |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60c6e78[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60c6e60[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m|       |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c6e40[0m <[0;33mcol:9[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c6b28[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m|       |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60c6ec8[0m <[0;33mcol:20[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60c6eb0[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m|       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c6e90[0m <[0;33mcol:23[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c6ab0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60c6f38[0m <[0;33mline:505:4[0m, [0;33mcol:11[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60c6f18[0m <[0;33mcol:11[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60c6b28[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x60cb130[0m[0;1;36m '__copy_move_backward'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x60cbe20[0m[0;1;36m '__copy_move_backward'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6b26ea8[0m <[0;33mline:554:3[0m, [0;33mline:573:5[0m> [0;33mline:555:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b27250[0m prev 0x6b26ea8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m  `-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b27648[0m <[0;33mline:557:7[0m, [0;33mline:572:2[0m> [0;33mline:559:9[0m[0;1;36m __copy_move_b[0m
[0;34m    |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b272e0[0m <[0;33mline:557:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m    |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b275a8[0m <[0;33mline:558:9[0m, [0;33mline:572:2[0m> [0;33mline:559:9[0m[0;1;36m __copy_move_b[0m [0;32m'_Tp *(const _Tp *, const _Tp *, _Tp *)'[0m static
[0;34m    | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b273d8[0m <[0;33mcol:23[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __first[0m [0;32m'const _Tp *'[0m
[0;34m    | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b27450[0m <[0;33mcol:43[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __last[0m [0;32m'const _Tp *'[0m
[0;34m    | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b274c8[0m <[0;33mcol:62[0m, [0;33mcol:67[0m> [0;33mcol:67[0m[0;1;36m __result[0m [0;32m'_Tp *'[0m
[0;34m    `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6b27aa8[0m <[0;33mline:558:9[0m, [0;33mline:572:2[0m> [0;33mline:559:9[0m used[0;1;36m __copy_move_b[0m [0;32m'double *(const double *, const double *, double *)'[0m static
[0;34m      |-[0mTemplateArgument type [0;32m'double'[0m
[0;34m      |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b278d8[0m <[0;33mcol:23[0m, [0;33mcol:34[0m> [0;33mcol:34[0m used[0;1;36m __first[0m [0;32m'const double *'[0m
[0;34m      |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b27950[0m <[0;33mcol:43[0m, [0;33mcol:54[0m> [0;33mcol:54[0m used[0;1;36m __last[0m [0;32m'const double *'[0m
[0;34m      |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b279c8[0m <[0;33mcol:62[0m, [0;33mcol:67[0m> [0;33mcol:67[0m used[0;1;36m __result[0m [0;32m'double *'[0m
[0;34m      `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b28a48[0m <[0;33mline:560:9[0m, [0;33mline:572:2[0m>
[0;34m        |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b28190[0m <[0;33mline:562:4[0m, [0;33mline:564:33[0m>
[0;34m        | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b28130[0m <[0;33mline:562:4[0m, [0;33mline:564:32[0m> [0;33mline:562:10[0m[0;1;36m __assignable[0m [0;32m'conditional<true, is_move_assignable<double>, is_copy_assignable<double> >':'std::conditional<true, std::is_move_assignable<double>, std::is_copy_assignable<double> >'[0m
[0;34m        |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6b28060[0m [0;32m'conditional<true, is_move_assignable<double>, is_copy_assignable<double> >'[0m sugar conditional
[0;34m        |     |-[0mTemplateArgument expr
[0;34m        |     | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6b27f10[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m        |     |   `-[0m[0;1;35mSubstNonTypeTemplateParmExpr[0m[0;33m 0x6b27db8[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        |     |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6b27da8[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m        |     |-[0mTemplateArgument type [0;32m'is_move_assignable<double>':'std::is_move_assignable<double>'[0m
[0;34m        |     |-[0mTemplateArgument type [0;32m'is_copy_assignable<double>':'std::is_copy_assignable<double>'[0m
[0;34m        |     `-[0m[0;32mRecordType[0m[0;33m 0x6b28040[0m [0;32m'std::conditional<true, std::is_move_assignable<double>, std::is_copy_assignable<double> >'[0m
[0;34m        |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6b27f30[0m[0;1;36m 'conditional'[0m
[0;34m        |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b284d0[0m <[0;33mline:566:4[0m, [0;33mcol:72[0m>
[0;34m        | `-[0m[0;1;32mStaticAssertDecl[0m[0;33m 0x6b28490[0m <[0;33mcol:4[0m, [0;33mcol:71[0m> [0;33mcol:4[0m
[0;34m        |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b283f8[0m <[0;33mcol:19[0m, [0;33mcol:39[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6769118[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m
[0;34m        |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60cd920[0m <[0;33mcol:46[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "type is not assignable"[0m
[0;34m        |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b28688[0m <[0;33mline:568:4[0m, [0;33mcol:43[0m>
[0;34m        | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6b284e8[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:20[0m used[0;1;36m _Num[0m [0;32m'const std::ptrdiff_t':'const long'[0m cinit
[0;34m        |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b28610[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b285e0[0m <[0;33mcol:27[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b285a0[0m <[0;33mcol:27[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b27950[0m[0;1;36m '__last'[0m [0;32m'const double *'[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b285f8[0m <[0;33mcol:36[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b285c0[0m <[0;33mcol:36[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b278d8[0m[0;1;36m '__first'[0m [0;32m'const double *'[0m
[0;34m        |-[0m[0;1;35mIfStmt[0m[0;33m 0x6b28940[0m <[0;33mline:569:4[0m, [0;33mline:570:68[0m>
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b286d8[0m <[0;33mline:569:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b286c0[0m <[0;33mcol:8[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b286a0[0m <[0;33mcol:8[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b284e8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m        | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b288c0[0m <[0;33mline:570:6[0m, [0;33mcol:68[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b288a8[0m <[0;33mcol:6[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdb50[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b288f8[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b287b0[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28780[0m <[0;33mcol:24[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b28740[0m <[0;33mcol:24[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b279c8[0m[0;1;36m '__result'[0m [0;32m'double *'[0m
[0;34m        |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28798[0m <[0;33mcol:35[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b28760[0m <[0;33mcol:35[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b284e8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28928[0m <[0;33mcol:41[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28910[0m <[0;33mcol:41[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b287d0[0m <[0;33mcol:41[0m> [0;32m'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b278d8[0m[0;1;36m '__first'[0m [0;32m'const double *'[0m
[0;34m        |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b28870[0m <[0;33mcol:50[0m, [0;33mcol:64[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m        |     |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6b28800[0m <[0;33mcol:50[0m, [0;33mcol:60[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'double':'double'[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28858[0m <[0;33mcol:64[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m        |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28840[0m <[0;33mcol:64[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b28820[0m <[0;33mcol:64[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b284e8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m        `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b28a38[0m <[0;33mline:571:4[0m, [0;33mcol:22[0m>
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b28a18[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m '-'
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b289e8[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b289a8[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b279c8[0m[0;1;36m '__result'[0m [0;32m'double *'[0m
[0;34m            `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28a00[0m <[0;33mcol:22[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b289c8[0m <[0;33mcol:22[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b284e8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x60ca630[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:510:3[0m, [0;33mline:521:5[0m> [0;33mline:511:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c6f68[0m <[0;33mline:510:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Category[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60ca948[0m <[0;33mline:511:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60cad88[0m <[0;33mline:513:7[0m, [0;33mline:520:2[0m> [0;33mline:515:9[0m[0;1;36m __copy_move_b[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60ca9d8[0m <[0;33mline:513:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _BI1[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60caa48[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 1 index 1[0;1;36m _BI2[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60cace8[0m <[0;33mline:514:9[0m, [0;33mline:520:2[0m> [0;33mline:515:9[0m[0;1;36m __copy_move_b[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60caae8[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cab60[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cabd8[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60cb090[0m <[0;33mline:516:9[0m, [0;33mline:520:2[0m>
[0;34m      |-[0m[0;1;35mWhileStmt[0m[0;33m 0x60cb048[0m <[0;33mline:517:4[0m, [0;33mline:518:39[0m>
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60caeb8[0m <[0;33mline:517:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cae50[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cae10[0m <[0;33mcol:11[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60caae8[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cae30[0m <[0;33mcol:22[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cab60[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60cb028[0m <[0;33mline:518:6[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60caf28[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60caf10[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60caef0[0m <[0;33mcol:9[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cabd8[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x60cb000[0m <[0;33mcol:20[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60caf60[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cafe8[0m <[0;33mcol:30[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cafd0[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cafb0[0m <[0;33mcol:33[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cab60[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60cb080[0m <[0;33mline:519:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cb060[0m <[0;33mcol:11[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cabd8[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x60cb130[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:524:3[0m, [0;33mline:536:5[0m> [0;33mline:525:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60cb3d8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60cb818[0m <[0;33mline:527:7[0m, [0;33mline:535:2[0m> [0;33mline:529:9[0m[0;1;36m __copy_move_b[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60cb468[0m <[0;33mline:527:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _BI1[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60cb4d8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _BI2[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60cb778[0m <[0;33mline:528:9[0m, [0;33mline:535:2[0m> [0;33mline:529:9[0m[0;1;36m __copy_move_b[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cb578[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cb5f0[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cb668[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60cbd78[0m <[0;33mline:530:9[0m, [0;33mline:535:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cba18[0m <[0;33mline:531:4[0m, [0;33mcol:55[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60cb9b0[0m <[0;33mcol:4[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __n[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x60cbd10[0m <[0;33mline:532:4[0m, [0;33mline:533:23[0m>
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60cbb18[0m <[0;33mline:532:9[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cba30[0m <[0;33mcol:9[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cb9b0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60cbae0[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cba90[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m
[0;34m      | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cba50[0m <[0;33mcol:15[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cb5f0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cba70[0m <[0;33mcol:24[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cb578[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60cbbe0[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cbb78[0m <[0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x6049ec8[0m[0;33m 0x606da08[0m[0;33m 0x6071148[0m[0;33m 0x6092f08[0m[0;33m 0x60934a8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cbb38[0m <[0;33mcol:33[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cb9b0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60cbb58[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cbc38[0m <[0;33mcol:42[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cbc18[0m <[0;33mcol:44[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cb9b0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60cbcf0[0m <[0;33mline:533:6[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cbc88[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cbc70[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cbc50[0m <[0;33mcol:9[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cb668[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m      |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cbcd8[0m <[0;33mcol:20[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cbcc0[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cbca0[0m <[0;33mcol:23[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cb5f0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60cbd68[0m <[0;33mline:534:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cbd48[0m <[0;33mcol:11[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cb668[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x60cbe20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:539:3[0m, [0;33mline:551:5[0m> [0;33mline:540:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60cc0c8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60cc508[0m <[0;33mline:542:7[0m, [0;33mline:550:2[0m> [0;33mline:544:9[0m[0;1;36m __copy_move_b[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60cc158[0m <[0;33mline:542:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _BI1[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60cc1c8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _BI2[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60cc468[0m <[0;33mline:543:9[0m, [0;33mline:550:2[0m> [0;33mline:544:9[0m[0;1;36m __copy_move_b[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cc268[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cc2e0[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cc358[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60ccb00[0m <[0;33mline:545:9[0m, [0;33mline:550:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cc708[0m <[0;33mline:546:4[0m, [0;33mcol:55[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60cc6a0[0m <[0;33mcol:4[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __n[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x60cca98[0m <[0;33mline:547:4[0m, [0;33mline:548:39[0m>
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60cc808[0m <[0;33mline:547:9[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cc720[0m <[0;33mcol:9[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cc6a0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60cc7d0[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cc780[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m
[0;34m      | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cc740[0m <[0;33mcol:15[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cc2e0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cc760[0m <[0;33mcol:24[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cc268[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60cc8d0[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cc868[0m <[0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x6049ec8[0m[0;33m 0x606da08[0m[0;33m 0x6071148[0m[0;33m 0x6092f08[0m[0;33m 0x60934a8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cc828[0m <[0;33mcol:33[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cc6a0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60cc848[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cc928[0m <[0;33mcol:42[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cc908[0m <[0;33mcol:44[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cc6a0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60cca78[0m <[0;33mline:548:6[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cc978[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cc960[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cc940[0m <[0;33mcol:9[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cc358[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x60cca50[0m <[0;33mcol:20[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cc9b0[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cca38[0m <[0;33mcol:30[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60cca20[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cca00[0m <[0;33mcol:33[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cc2e0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60ccaf0[0m <[0;33mline:549:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ccad0[0m <[0;33mcol:11[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cc358[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x60ccd90[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:554:3[0m, [0;33mline:573:5[0m> [0;33mline:555:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument expr
[0;34m| `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ccbb0[0m <[0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m [0;1;32mNonTypeTemplateParm[0m[0;33m 0x60ccb38[0m[0;1;36m '_IsMove'[0m [0;32m'bool'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60ccb38[0m <[0;33mline:554:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60cd078[0m <[0;33mline:555:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60cd498[0m <[0;33mline:557:7[0m, [0;33mline:572:2[0m> [0;33mline:559:9[0m[0;1;36m __copy_move_b[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60cd108[0m <[0;33mline:557:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _Tp[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60cd3f8[0m <[0;33mline:558:9[0m, [0;33mline:572:2[0m> [0;33mline:559:9[0m[0;1;36m __copy_move_b[0m [0;32m'_Tp *(const _Tp *, const _Tp *, _Tp *)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cd1c8[0m <[0;33mcol:23[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cd240[0m <[0;33mcol:43[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced[0;1;36m __last[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cd2e8[0m <[0;33mcol:62[0m, [0;33mcol:67[0m> [0;33mcol:67[0m referenced[0;1;36m __result[0m [0;32m'_Tp *'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60cde20[0m <[0;33mline:560:9[0m, [0;33mline:572:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cd830[0m <[0;33mline:562:4[0m, [0;33mline:564:33[0m>
[0;34m      | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x60cd7d0[0m <[0;33mline:562:4[0m, [0;33mline:564:32[0m> [0;33mline:562:10[0m referenced[0;1;36m __assignable[0m [0;32m'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x60cd6a0[0m [0;32m'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'[0m dependent conditional
[0;34m      |     |-[0mTemplateArgument expr
[0;34m      |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cd520[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m [0;1;32mNonTypeTemplateParm[0m[0;33m 0x60ccb38[0m[0;1;36m '_IsMove'[0m [0;32m'bool'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'is_move_assignable<_Tp>'[0m
[0;34m      |     `-[0mTemplateArgument type [0;32m'is_copy_assignable<_Tp>'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cd990[0m <[0;33mline:566:4[0m, [0;33mcol:72[0m>
[0;34m      | `-[0m[0;1;32mStaticAssertDecl[0m[0;33m 0x60cd950[0m <[0;33mcol:4[0m, [0;33mcol:71[0m> [0;33mcol:4[0m
[0;34m      |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60cd8e8[0m <[0;33mcol:19[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60cd920[0m <[0;33mcol:46[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "type is not assignable"[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cdae8[0m <[0;33mline:568:4[0m, [0;33mcol:43[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60cd9b8[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:20[0m referenced[0;1;36m _Num[0m [0;32m'const std::ptrdiff_t':'const long'[0m cinit
[0;34m      |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60cdab0[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cda60[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cda20[0m <[0;33mcol:27[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cd240[0m[0;1;36m '__last'[0m [0;32m'const _Tp *'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cda40[0m <[0;33mcol:36[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cd1c8[0m[0;1;36m '__first'[0m [0;32m'const _Tp *'[0m
[0;34m      |-[0m[0;1;35mIfStmt[0m[0;33m 0x60cdd30[0m <[0;33mline:569:4[0m, [0;33mline:570:68[0m>
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60cdb38[0m <[0;33mline:569:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60cdb20[0m <[0;33mcol:8[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdb00[0m <[0;33mcol:8[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cd9b8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x60cdcf8[0m <[0;33mline:570:6[0m, [0;33mcol:68[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdb50[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m      |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60cdc00[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cdbb0[0m <[0;33mcol:33[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m
[0;34m      |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdb70[0m <[0;33mcol:24[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cd2e8[0m[0;1;36m '__result'[0m [0;32m'_Tp *'[0m
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdb90[0m <[0;33mcol:35[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cd9b8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdc38[0m <[0;33mcol:41[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cd1c8[0m[0;1;36m '__first'[0m [0;32m'const _Tp *'[0m
[0;34m      |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60cdcd8[0m <[0;33mcol:50[0m, [0;33mcol:64[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m      |     |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x60cdc68[0m <[0;33mcol:50[0m, [0;33mcol:60[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'_Tp'[0m
[0;34m      |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60cdcc0[0m <[0;33mcol:64[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60cdca8[0m <[0;33mcol:64[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdc88[0m <[0;33mcol:64[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cd9b8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60cde10[0m <[0;33mline:571:4[0m, [0;33mcol:22[0m>
[0;34m        `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60cddd8[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60cdd88[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdd48[0m <[0;33mcol:11[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cd2e8[0m[0;1;36m '__result'[0m [0;32m'_Tp *'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cdd68[0m <[0;33mcol:22[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cd9b8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m

Dumping std::__copy_move_backward_a:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60ce258[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:575:3[0m, [0;33mline:591:5[0m> [0;33mline:577:5[0m[0;1;36m __copy_move_backward_a[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60cde68[0m <[0;33mline:575:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60cdec8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _BI1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60cdf38[0m <[0;33mcol:41[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced typename depth 0 index 2[0;1;36m _BI2[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60ce1b8[0m <[0;33mline:576:5[0m, [0;33mline:591:5[0m> [0;33mline:577:5[0m[0;1;36m __copy_move_backward_a[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60cdfe0[0m <[0;33mcol:28[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ce058[0m <[0;33mcol:42[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ce0d0[0m <[0;33mcol:55[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60d06e0[0m <[0;33mline:578:5[0m, [0;33mline:591:5[0m>
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cfbe8[0m <[0;33mline:579:7[0m, [0;33mcol:69[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60cfb90[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m _ValueType1[0m [0;32m'typename iterator_traits<_BI1>::value_type'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x60ce370[0m [0;32m'typename iterator_traits<_BI1>::value_type'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cfd68[0m <[0;33mline:580:7[0m, [0;33mcol:69[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60cfd10[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m _ValueType2[0m [0;32m'typename iterator_traits<_BI2>::value_type'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x60cfca0[0m [0;32m'typename iterator_traits<_BI2>::value_type'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cfee8[0m <[0;33mline:581:7[0m, [0;33mcol:74[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60cfe90[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m _Category[0m [0;32m'typename iterator_traits<_BI1>::iterator_category'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x60cfe20[0m [0;32m'typename iterator_traits<_BI1>::iterator_category'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60d03a8[0m <[0;33mline:582:7[0m, [0;33mline:585:58[0m>
[0;34m|   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60cff10[0m <[0;33mline:582:7[0m, [0;33mline:585:57[0m> [0;33mline:582:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m|   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x60d0388[0m <[0;33mcol:29[0m, [0;33mline:585:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60d0368[0m <[0;33mline:582:30[0m, [0;33mline:585:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60d01e8[0m <[0;33mline:582:30[0m, [0;33mline:584:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60d00c8[0m <[0;33mline:582:30[0m, [0;33mline:583:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       | | |-[0m[0;1;35mTypeTraitExpr[0m[0;33m 0x60cffb0[0m <[0;33mline:582:30[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m|   |       | | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60d0090[0m <[0;33mline:583:26[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   |       | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60d01b0[0m <[0;33mline:584:26[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   |       `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60d0330[0m <[0;33mline:585:12[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60d06d0[0m <[0;33mline:587:7[0m, [0;33mline:590:18[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x60d0698[0m <[0;33mline:587:14[0m, [0;33mline:590:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x60d0600[0m <[0;33mline:587:14[0m, [0;33mline:588:45[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0638[0m <[0;33mcol:59[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60cdfe0[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0658[0m <[0;33mline:589:10[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ce058[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0678[0m <[0;33mline:590:10[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ce0d0[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b25f88[0m <[0;33mline:576:5[0m, [0;33mline:591:5[0m> [0;33mline:577:5[0m used[0;1;36m __copy_move_backward_a[0m [0;32m'double *(double *, double *, double *)'[0m inline
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b25d78[0m <[0;33mcol:28[0m, [0;33mcol:33[0m> [0;33mcol:33[0m used[0;1;36m __first[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b25df0[0m <[0;33mcol:42[0m, [0;33mcol:47[0m> [0;33mcol:47[0m used[0;1;36m __last[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b25e68[0m <[0;33mcol:55[0m, [0;33mcol:60[0m> [0;33mcol:60[0m used[0;1;36m __result[0m [0;32m'double *':'double *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b27cf0[0m <[0;33mline:578:5[0m, [0;33mline:591:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b265d8[0m <[0;33mline:579:7[0m, [0;33mcol:69[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b26580[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m _ValueType1[0m [0;32m'typename iterator_traits<double *>::value_type':'double'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6b26530[0m [0;32m'typename iterator_traits<double *>::value_type'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x69a6090[0m [0;32m'std::iterator_traits<double *>::value_type'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5dd0[0m[0;1;36m 'value_type'[0m
[0;34m    |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69a5bc0[0m [0;32m'double'[0m sugar
[0;34m    |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m    |         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b26748[0m <[0;33mline:580:7[0m, [0;33mcol:69[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b266f0[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m _ValueType2[0m [0;32m'typename iterator_traits<double *>::value_type':'double'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6b266a0[0m [0;32m'typename iterator_traits<double *>::value_type'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x69a6090[0m [0;32m'std::iterator_traits<double *>::value_type'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5dd0[0m[0;1;36m 'value_type'[0m
[0;34m    |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x69a5bc0[0m [0;32m'double'[0m sugar
[0;34m    |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x6054190[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x6054148[0m[0;1;36m '_Tp'[0m
[0;34m    |         `-[0m[0;32mBuiltinType[0m[0;33m 0x5c3aae0[0m [0;32m'double'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b268b8[0m <[0;33mline:581:7[0m, [0;33mcol:74[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6b26860[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m[0;1;36m _Category[0m [0;32m'typename iterator_traits<double *>::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6b26810[0m [0;32m'typename iterator_traits<double *>::iterator_category'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x69a5fa0[0m [0;32m'std::iterator_traits<double *>::iterator_category'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x69a5d68[0m[0;1;36m 'iterator_category'[0m
[0;34m    |       `-[0m[0;32mRecordType[0m[0;33m 0x604dad0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m    |         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x604da40[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b26d98[0m <[0;33mline:582:7[0m, [0;33mline:585:58[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6b268d0[0m <[0;33mline:582:7[0m, [0;33mline:585:57[0m> [0;33mline:582:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m    |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x6b26d20[0m <[0;33mcol:29[0m, [0;33mline:585:57[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b26d00[0m <[0;33mline:582:30[0m, [0;33mline:585:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b26b90[0m <[0;33mline:582:30[0m, [0;33mline:584:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b26a80[0m <[0;33mline:582:30[0m, [0;33mline:583:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | | |-[0m[0;1;35mTypeTraitExpr[0m[0;33m 0x6b26970[0m <[0;33mline:582:30[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b26a68[0m <[0;33mline:583:26[0m, [0;33mcol:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |       | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b26a38[0m <[0;33mcol:26[0m, [0;33mcol:46[0m> [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ac85a0[0m[0;1;36m '__value'[0m [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m
[0;34m    |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b26b78[0m <[0;33mline:584:26[0m, [0;33mcol:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b26b48[0m <[0;33mcol:26[0m, [0;33mcol:46[0m> [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6ac85a0[0m[0;1;36m '__value'[0m [0;32m'std::__is_pointer<double *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m
[0;34m    |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b26ce8[0m <[0;33mline:585:12[0m, [0;33mcol:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b26cb8[0m <[0;33mcol:12[0m, [0;33mcol:50[0m> [0;32m'std::__are_same<double, double>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:104:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x661ad90[0m[0;1;36m '__value'[0m [0;32m'std::__are_same<double, double>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:104:7)'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b27ce0[0m <[0;33mline:587:7[0m, [0;33mline:590:18[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b27c30[0m <[0;33mline:587:14[0m, [0;33mline:590:18[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b27c18[0m <[0;33mline:587:14[0m, [0;33mline:588:45[0m> [0;32m'double *(*)(const double *, const double *, double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b27bb8[0m <[0;33mline:587:14[0m, [0;33mline:588:45[0m> [0;32m'double *(const double *, const double *, double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6b27aa8[0m[0;1;36m '__copy_move_b'[0m [0;32m'double *(const double *, const double *, double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b27648[0m[0;1;36m '__copy_move_b'[0m)
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b27c80[0m <[0;33mcol:59[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b27c68[0m <[0;33mcol:59[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b27798[0m <[0;33mcol:59[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b25d78[0m[0;1;36m '__first'[0m [0;32m'double *':'double *'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b27cb0[0m <[0;33mline:589:10[0m> [0;32m'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b27c98[0m <[0;33mcol:10[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b277b8[0m <[0;33mcol:10[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b25df0[0m[0;1;36m '__last'[0m [0;32m'double *':'double *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b27cc8[0m <[0;33mline:590:10[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b277d8[0m <[0;33mcol:10[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b25e68[0m[0;1;36m '__result'[0m [0;32m'double *':'double *'[0m

Dumping std::__copy_move_backward_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60d0b18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:593:3[0m, [0;33mline:600:5[0m> [0;33mline:595:5[0m[0;1;36m __copy_move_backward_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x60d0728[0m <[0;33mline:593:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60d0788[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _BI1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60d07f8[0m <[0;33mcol:41[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced typename depth 0 index 2[0;1;36m _BI2[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60d0a78[0m <[0;33mline:594:5[0m, [0;33mline:600:5[0m> [0;33mline:595:5[0m[0;1;36m __copy_move_backward_a2[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60d08a0[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60d0918[0m <[0;33mcol:43[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60d0990[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60d0f40[0m <[0;33mline:596:5[0m, [0;33mline:600:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60d0f30[0m <[0;33mline:597:7[0m, [0;33mline:599:34[0m>
[0;34m|     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x60d0f08[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'_BI2'[0m[0;36m[0m[0;36m[0m [0;32m'_BI2'[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x60d0ed0[0m <[0;33mline:597:19[0m, [0;33mline:599:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60d0bf0[0m <[0;33mline:597:19[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__copy_move_backward_a'[0;33m 0x60ce258[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x60d0d18[0m <[0;33mline:598:6[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60d0c98[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x6075dc8[0m[0;33m 0x608af18[0m[0;33m 0x6097ce8[0m[0;33m 0x60bb828[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0cf8[0m <[0;33mcol:24[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60d08a0[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x60d0de0[0m <[0;33mcol:34[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60d0d60[0m <[0;33mcol:34[0m, [0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x6075dc8[0m[0;33m 0x608af18[0m[0;33m 0x6097ce8[0m[0;33m 0x60bb828[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0dc0[0m <[0;33mcol:52[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60d0918[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x60d0ea8[0m <[0;33mline:599:6[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60d0e28[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x6075dc8[0m[0;33m 0x608af18[0m[0;33m 0x6097ce8[0m[0;33m 0x60bb828[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0e88[0m <[0;33mcol:24[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60d0990[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b24638[0m <[0;33mline:594:5[0m, [0;33mline:600:5[0m> [0;33mline:595:5[0m used[0;1;36m __copy_move_backward_a2[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m inline
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b24468[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mcol:34[0m used[0;1;36m __first[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b244e0[0m <[0;33mcol:43[0m, [0;33mcol:48[0m> [0;33mcol:48[0m used[0;1;36m __last[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b24558[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;33mcol:61[0m used[0;1;36m __result[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b26398[0m <[0;33mline:596:5[0m, [0;33mline:600:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b26388[0m <[0;33mline:597:7[0m, [0;33mline:599:34[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b26370[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b26340[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m          `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b26328[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x6b262c0[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m functional cast to class __gnu_cxx::__normal_iterator<double *, class std::vector<double, class std::allocator<double> > > <ConstructorConversion>
[0;34m              `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b26290[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (double *const &) noexcept'[0m
[0;34m                `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b26278[0m <[0;33mline:597:19[0m, [0;33mline:599:33[0m> [0;32m'double *const':'double *const'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b261b0[0m <[0;33mline:597:19[0m, [0;33mline:599:33[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m                    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b26198[0m <[0;33mline:597:19[0m, [0;33mcol:54[0m> [0;32m'double *(*)(double *, double *, double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b260c8[0m <[0;33mcol:19[0m, [0;33mcol:54[0m> [0;32m'double *(double *, double *, double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b25f88[0m[0;1;36m '__copy_move_backward_a'[0m [0;32m'double *(double *, double *, double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60ce258[0m[0;1;36m '__copy_move_backward_a'[0m)
[0;34m                    |-[0m[0;1;35mCallExpr[0m[0;33m 0x6b25480[0m <[0;33mline:598:6[0m, [0;33mcol:31[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m                    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b25468[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'double *(*)(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b253d8[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'double *(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b25058[0m[0;1;36m '__niter_base'[0m [0;32m'double *(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x608af18[0m[0;1;36m '__niter_base'[0m)
[0;34m                    | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b25500[0m <[0;33mcol:24[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m                    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b254e8[0m <[0;33mcol:24[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b24cc8[0m <[0;33mcol:24[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b24468[0m[0;1;36m '__first'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m                    |-[0m[0;1;35mCallExpr[0m[0;33m 0x6b25700[0m <[0;33mcol:34[0m, [0;33mcol:58[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m                    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b256e8[0m <[0;33mcol:34[0m, [0;33mcol:39[0m> [0;32m'double *(*)(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b256b0[0m <[0;33mcol:34[0m, [0;33mcol:39[0m> [0;32m'double *(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b25058[0m[0;1;36m '__niter_base'[0m [0;32m'double *(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x608af18[0m[0;1;36m '__niter_base'[0m)
[0;34m                    | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b25780[0m <[0;33mcol:52[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m                    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b25768[0m <[0;33mcol:52[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b25590[0m <[0;33mcol:52[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b244e0[0m[0;1;36m '__last'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m                    `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b25980[0m <[0;33mline:599:6[0m, [0;33mcol:32[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m                      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b25968[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'double *(*)(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b25930[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'double *(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b25058[0m[0;1;36m '__niter_base'[0m [0;32m'double *(__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x608af18[0m[0;1;36m '__niter_base'[0m)
[0;34m                      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b25a00[0m <[0;33mcol:24[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, vector<double, allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m                        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b259e8[0m <[0;33mcol:24[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b25810[0m <[0;33mcol:24[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b24558[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m

Dumping std::move_backward:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60d1ae8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:656:3[0m, [0;33mline:671:5[0m> [0;33mline:658:5[0m[0;1;36m move_backward[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60d1760[0m <[0;33mline:656:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BI1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60d17d8[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _BI2[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60d1a48[0m <[0;33mline:657:5[0m, [0;33mline:671:5[0m> [0;33mline:658:5[0m[0;1;36m move_backward[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60d1878[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60d18f0[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60d1968[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60d1e00[0m <[0;33mline:659:5[0m, [0;33mline:671:5[0m>
[0;34m|   |-[0m[0;1;35mNullStmt[0m[0;33m 0x60d1b58[0m <[0;33mline:666:54[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60d1df0[0m <[0;33mline:668:7[0m, [0;33mline:670:15[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x60d1db8[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60d1b90[0m <[0;33mline:668:14[0m, [0;33mcol:47[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__copy_move_backward_a2'[0;33m 0x60d0b18[0m
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x60d1cb0[0m <[0;33mcol:49[0m, [0;33mcol:74[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60d1c38[0m <[0;33mcol:49[0m, [0;33mcol:54[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__miter_base'[0;33m 0x5d14f98[0m[0;33m 0x6076a28[0m[0;33m 0x60989e8[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d1c90[0m <[0;33mcol:67[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60d1878[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x60d1d70[0m <[0;33mline:669:7[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x60d1cf8[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__miter_base'[0;33m 0x5d14f98[0m[0;33m 0x6076a28[0m[0;33m 0x60989e8[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d1d50[0m <[0;33mcol:25[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60d18f0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d1d98[0m <[0;33mline:670:7[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60d1968[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b225b8[0m <[0;33mline:657:5[0m, [0;33mline:671:5[0m> [0;33mline:658:5[0m used[0;1;36m move_backward[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b223a8[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __first[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b22420[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __last[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b22498[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;33mcol:51[0m used[0;1;36m __result[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b24ab0[0m <[0;33mline:659:5[0m, [0;33mline:671:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x60d1b58[0m <[0;33mline:666:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b24aa0[0m <[0;33mline:668:7[0m, [0;33mline:670:15[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b24a88[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b24a58[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m          `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b24a40[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b24830[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m              |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b24818[0m <[0;33mline:668:14[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b24778[0m <[0;33mcol:14[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b24638[0m[0;1;36m '__copy_move_backward_a2'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60d0b18[0m[0;1;36m '__copy_move_backward_a2'[0m)
[0;34m              |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b248c0[0m <[0;33mcol:49[0m, [0;33mcol:74[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m              | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b248a8[0m <[0;33mcol:49[0m, [0;33mcol:74[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m              |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b23e50[0m <[0;33mcol:49[0m, [0;33mcol:74[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m              |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b23e38[0m <[0;33mcol:49[0m, [0;33mcol:54[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b23da8[0m <[0;33mcol:49[0m, [0;33mcol:54[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b23c48[0m[0;1;36m '__miter_base'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5d14f98[0m[0;1;36m '__miter_base'[0m)
[0;34m              |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b23ed0[0m <[0;33mcol:67[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m              |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b23eb8[0m <[0;33mcol:67[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m              |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b23af8[0m <[0;33mcol:67[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b223a8[0m[0;1;36m '__first'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m              |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b24948[0m <[0;33mline:669:7[0m, [0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m              | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b24930[0m <[0;33mcol:7[0m, [0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m              |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b24060[0m <[0;33mcol:7[0m, [0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m              |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b24048[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b24010[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b23c48[0m[0;1;36m '__miter_base'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5d14f98[0m[0;1;36m '__miter_base'[0m)
[0;34m              |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b240e0[0m <[0;33mcol:25[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m              |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b240c8[0m <[0;33mcol:25[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m              |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b23f58[0m <[0;33mcol:25[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b22420[0m[0;1;36m '__last'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m              `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b249d0[0m <[0;33mline:670:7[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b249b8[0m <[0;33mcol:7[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b24110[0m <[0;33mcol:7[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b22498[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m

Dumping __gnu_cxx::new_allocator::propagate_on_container_move_assignment:
[0;1;32mTypedefDecl[0m[0;33m 0x61226a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/new_allocator.h:76:7[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;32mElaboratedType[0m[0;33m 0x6122630[0m [0;32m'std::true_type'[0m sugar
[0;34m  `-[0m[0;32mTypedefType[0m[0;33m 0x5f03ee0[0m [0;32m'std::true_type'[0m sugar
[0;34m    |-[0m[0;1;32mTypedef[0m[0;33m 0x5efb368[0m[0;1;36m 'true_type'[0m
[0;34m    `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5efb280[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m      |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m      |-[0mTemplateArgument expr
[0;34m      | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5efb148[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m      |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5efb0f0[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m      `-[0m[0;32mRecordType[0m[0;33m 0x5efb260[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m        `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5efb168[0m[0;1;36m 'integral_constant'[0m

Dumping std::allocator<void>::propagate_on_container_move_assignment:
[0;1;32mTypedefDecl[0m[0;33m 0x612c870[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/allocator.h:84:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5f03ee0[0m [0;32m'std::true_type'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x5efb368[0m[0;1;36m 'true_type'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5efb280[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m    |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m    |-[0mTemplateArgument expr
[0;34m    | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5efb148[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m    |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5efb0f0[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x5efb260[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m      `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5efb168[0m[0;1;36m 'integral_constant'[0m

Dumping std::allocator::propagate_on_container_move_assignment:
[0;1;32mTypedefDecl[0m[0;33m 0x612e150[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/allocator.h:126:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5f03ee0[0m [0;32m'std::true_type'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x5efb368[0m[0;1;36m 'true_type'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5efb280[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m    |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m    |-[0mTemplateArgument expr
[0;34m    | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5efb148[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m    |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5efb0f0[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x5efb260[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m      `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5efb168[0m[0;1;36m 'integral_constant'[0m

Dumping std::allocator_traits::propagate_on_container_move_assignment:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5fc33e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:184:7[0m, [0;33mline:185:47[0m> [0;33mline:184:13[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'__detected_or_t<std::false_type, __pocma, _Alloc>':'typename __detected_or<integral_constant<bool, false>, __pocma, type-parameter-0-0>::type'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5fc32b0[0m [0;32m'__detected_or_t<std::false_type, __pocma, _Alloc>'[0m sugar dependent alias __detected_or_t
[0;34m  |-[0mTemplateArgument type [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m  |-[0mTemplateArgument template __pocma
[0;34m  |-[0mTemplateArgument type [0;32m'_Alloc'[0m
[0;34m  |-[0m[0;32mDependentNameType[0m[0;33m 0x5fc3260[0m [0;32m'typename __detected_or<integral_constant<bool, false>, __pocma, type-parameter-0-0>::type'[0m dependent
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5fc3260[0m [0;32m'typename __detected_or<integral_constant<bool, false>, __pocma, type-parameter-0-0>::type'[0m dependent

Dumping std::allocator_traits<allocator<type-parameter-0-0> >::propagate_on_container_move_assignment:
[0;1;32mTypeAliasDecl[0m[0;33m 0x6170d10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:413:7[0m, [0;33mcol:54[0m> [0;33mcol:13[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5f03ee0[0m [0;32m'std::true_type'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x5efb368[0m[0;1;36m 'true_type'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5efb280[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m    |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m    |-[0mTemplateArgument expr
[0;34m    | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5efb148[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m    |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5efb0f0[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x5efb260[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m      `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5efb168[0m[0;1;36m 'integral_constant'[0m

Dumping std::__do_alloc_on_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x61746f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:534:3[0m, [0;33mline:536:33[0m> [0;33mline:535:17[0m[0;1;36m __do_alloc_on_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6174380[0m <[0;33mline:534:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Alloc[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6174658[0m <[0;33mline:535:5[0m, [0;33mline:536:33[0m> [0;33mline:535:17[0m[0;1;36m __do_alloc_on_move[0m [0;32m'void (_Alloc &, _Alloc &, std::true_type)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6174448[0m <[0;33mcol:36[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __one[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61744c0[0m <[0;33mcol:51[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced[0;1;36m __two[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6174538[0m <[0;33mcol:66[0m> [0;33mcol:75[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6174860[0m <[0;33mline:536:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6174840[0m <[0;33mcol:7[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6174768[0m <[0;33mcol:7[0m> [0;32m'_Alloc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6174448[0m[0;1;36m '__one'[0m [0;32m'_Alloc &'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6174818[0m <[0;33mcol:15[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61747a8[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61747f8[0m <[0;33mcol:25[0m> [0;32m'_Alloc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61744c0[0m[0;1;36m '__two'[0m [0;32m'_Alloc &'[0m

Dumping std::__do_alloc_on_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6174be8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:538:3[0m, [0;33mline:540:7[0m> [0;33mline:539:17[0m[0;1;36m __do_alloc_on_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6174878[0m <[0;33mline:538:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Alloc[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6174b48[0m <[0;33mline:539:5[0m, [0;33mline:540:7[0m> [0;33mline:539:17[0m[0;1;36m __do_alloc_on_move[0m [0;32m'void (_Alloc &, _Alloc &, std::false_type)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6174938[0m <[0;33mcol:36[0m, [0;33mcol:42[0m> [0;33mcol:43[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61749b0[0m <[0;33mcol:45[0m, [0;33mcol:51[0m> [0;33mcol:52[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6174a28[0m <[0;33mcol:54[0m> [0;33mcol:64[0m [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6174c58[0m <[0;33mline:540:5[0m, [0;33mcol:7[0m>

Dumping std::__alloc_on_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6174f18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:542:3[0m, [0;33mline:548:5[0m> [0;33mline:543:17[0m[0;1;36m __alloc_on_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6174c68[0m <[0;33mline:542:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Alloc[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6174e78[0m <[0;33mline:543:5[0m, [0;33mline:548:5[0m> [0;33mline:543:17[0m[0;1;36m __alloc_on_move[0m [0;32m'void (_Alloc &, _Alloc &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6174d28[0m <[0;33mcol:33[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __one[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6174da0[0m <[0;33mcol:48[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced[0;1;36m __two[0m [0;32m'_Alloc &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6175318[0m <[0;33mline:544:5[0m, [0;33mline:548:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6175088[0m <[0;33mline:545:7[0m, [0;33mcol:48[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6175030[0m <[0;33mcol:7[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __traits[0m [0;32m'allocator_traits<_Alloc>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6174f90[0m [0;32m'allocator_traits<_Alloc>'[0m dependent allocator_traits
[0;34m    |     `-[0mTemplateArgument type [0;32m'_Alloc'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61751e8[0m <[0;33mline:546:7[0m, [0;33mcol:80[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6175190[0m <[0;33mcol:7[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced[0;1;36m __pocma[0m [0;32m'typename __traits::propagate_on_container_move_assignment'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x6175120[0m [0;32m'typename __traits::propagate_on_container_move_assignment'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x61752e0[0m <[0;33mline:547:7[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6175200[0m <[0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__do_alloc_on_move'[0;33m 0x6174be8[0m[0;33m 0x61746f8[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6175250[0m <[0;33mcol:26[0m> [0;32m'_Alloc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6174d28[0m[0;1;36m '__one'[0m [0;32m'_Alloc &'[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6175270[0m <[0;33mcol:33[0m> [0;32m'_Alloc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6174da0[0m[0;1;36m '__two'[0m [0;32m'_Alloc &'[0m
[0;34m      `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x61752c0[0m <[0;33mcol:40[0m, [0;33mcol:48[0m> [0;32m'__pocma':'typename __traits::propagate_on_container_move_assignment'[0m[0;36m[0m[0;36m[0m [0;32m'__pocma':'typename __traits::propagate_on_container_move_assignment'[0m

Dumping __gnu_cxx::__alloc_traits::_S_propagate_on_move_assign:
[0;1;32mCXXMethodDecl[0m[0;33m 0x617b640[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/alloc_traits.h:103:5[0m, [0;33mline:104:73[0m> [0;33mline:103:27[0m referenced constexpr[0;1;36m _S_propagate_on_move_assign[0m [0;32m'bool ()'[0m static
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x617c730[0m <[0;33mline:104:5[0m, [0;33mcol:73[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x617c720[0m <[0;33mcol:7[0m, [0;33mcol:66[0m>
[0;34m    `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x617c6e8[0m <[0;33mcol:14[0m, [0;33mcol:66[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m

Dumping __gnu_cxx::__alloc_traits::_S_nothrow_move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x617b880[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/alloc_traits.h:112:5[0m, [0;33mline:113:66[0m> [0;33mline:112:27[0m constexpr[0;1;36m _S_nothrow_move[0m [0;32m'bool ()'[0m static
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x617c9d8[0m <[0;33mline:113:5[0m, [0;33mcol:66[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x617c9c8[0m <[0;33mcol:7[0m, [0;33mcol:63[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x617c9a8[0m <[0;33mcol:14[0m, [0;33mcol:63[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x617c930[0m <[0;33mcol:14[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x617c918[0m <[0;33mcol:14[0m> [0;32m'bool (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x617c8c8[0m <[0;33mcol:14[0m> [0;32m'bool ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x617b640[0m[0;1;36m '_S_propagate_on_move_assign'[0m [0;32m'bool ()'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x617c988[0m <[0;33mcol:47[0m, [0;33mcol:63[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x617c970[0m <[0;33mcol:47[0m> [0;32m'bool (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x617c950[0m <[0;33mcol:47[0m> [0;32m'bool ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x617b7c0[0m[0;1;36m '_S_always_equal'[0m [0;32m'bool ()'[0m

Dumping std::__uninitialized_move_a:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x618c628[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:291:3[0m, [0;33mline:300:5[0m> [0;33mline:294:5[0m[0;1;36m __uninitialized_move_a[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618c178[0m <[0;33mline:291:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618c1e8[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618c258[0m <[0;33mline:292:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x618c588[0m <[0;33mline:293:5[0m, [0;33mline:300:5[0m> [0;33mline:294:5[0m[0;1;36m __uninitialized_move_a[0m [0;32m'_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618c300[0m <[0;33mcol:28[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618c378[0m <[0;33mcol:52[0m, [0;33mcol:67[0m> [0;33mcol:67[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618c3f0[0m <[0;33mline:295:7[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618c498[0m <[0;33mcol:34[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x618c900[0m <[0;33mline:296:5[0m, [0;33mline:300:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x618c8f0[0m <[0;33mline:297:7[0m, [0;33mline:299:24[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x618c8b0[0m <[0;33mline:297:14[0m, [0;33mline:299:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x618c6c0[0m <[0;33mline:297:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_copy_a'[0;33m 0x618b0a8[0m[0;33m 0x618bfd8[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x618c798[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1251:44[0m, [0;33mcol:73[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x618c730[0m <[0;33mcol:44[0m, [0;33mcol:49[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'make_move_iterator'[0;33m 0x6095548[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x618c778[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:297:70[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618c300[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x618c848[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1251:44[0m, [0;33mcol:73[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x618c7e0[0m <[0;33mcol:44[0m, [0;33mcol:49[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'make_move_iterator'[0;33m 0x6095548[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x618c828[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:298:35[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618c378[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x618c870[0m <[0;33mline:299:7[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618c3f0[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x618c890[0m <[0;33mcol:17[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618c498[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m

Dumping std::__uninitialized_move_if_noexcept_a:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x618cdc8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:302:3[0m, [0;33mline:313:5[0m> [0;33mline:305:5[0m[0;1;36m __uninitialized_move_if_noexcept_a[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618c918[0m <[0;33mline:302:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618c988[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618c9f8[0m <[0;33mline:303:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Allocator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x618cd28[0m <[0;33mline:304:5[0m, [0;33mline:313:5[0m> [0;33mline:305:5[0m[0;1;36m __uninitialized_move_if_noexcept_a[0m [0;32m'_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator, _Allocator &)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618caa0[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618cb18[0m <[0;33mline:306:12[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618cb90[0m <[0;33mline:307:12[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618cc38[0m <[0;33mline:308:12[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x618d0b0[0m <[0;33mline:309:5[0m, [0;33mline:313:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x618d0a0[0m <[0;33mline:310:7[0m, [0;33mline:312:69[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x618d060[0m <[0;33mline:310:14[0m, [0;33mline:312:69[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x618ce60[0m <[0;33mline:310:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_copy_a'[0;33m 0x618b0a8[0m[0;33m 0x618bfd8[0m
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x618cf40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1253:3[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x618ced0[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__make_move_if_noexcept_iterator'[0;33m 0x6096f08[0m[0;33m 0x6097748[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x618cf20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:311:43[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618caa0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x618cff8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1253:3[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x618cf88[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__make_move_if_noexcept_iterator'[0;33m 0x6096f08[0m[0;33m 0x6097748[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x618cfd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:312:43[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618cb18[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x618d020[0m <[0;33mcol:52[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618cb90[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x618d040[0m <[0;33mcol:62[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618cc38[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b6ab18[0m <[0;33mline:304:5[0m, [0;33mline:313:5[0m> [0;33mline:305:5[0m used[0;1;36m __uninitialized_move_if_noexcept_a[0m [0;32m'Pont *(Pont *, Pont *, Pont *, std::allocator<Pont> &)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<Pont>'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b6a818[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m used[0;1;36m __first[0m [0;32m'Pont *':'Pont *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b6a890[0m <[0;33mline:306:12[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m __last[0m [0;32m'Pont *':'Pont *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b6a908[0m <[0;33mline:307:12[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __result[0m [0;32m'Pont *':'Pont *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b6a9d8[0m <[0;33mline:308:12[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __alloc[0m [0;32m'std::allocator<Pont> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b826a0[0m <[0;33mline:309:5[0m, [0;33mline:313:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b82690[0m <[0;33mline:310:7[0m, [0;33mline:312:69[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b82678[0m <[0;33mline:310:14[0m, [0;33mline:312:69[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b81de0[0m <[0;33mline:310:14[0m, [0;33mline:312:69[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b81dc8[0m <[0;33mline:310:14[0m, [0;33mcol:19[0m> [0;32m'Pont *(*)(std::move_iterator<Pont *>, std::move_iterator<Pont *>, Pont *, allocator<Pont> &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b81d30[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'Pont *(std::move_iterator<Pont *>, std::move_iterator<Pont *>, Pont *, allocator<Pont> &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b81be8[0m[0;1;36m '__uninitialized_copy_a'[0m [0;32m'Pont *(std::move_iterator<Pont *>, std::move_iterator<Pont *>, Pont *, allocator<Pont> &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x618bfd8[0m[0;1;36m '__uninitialized_copy_a'[0m)
[0;34m|         |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b825b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1253:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::move_iterator<Pont *> &&) noexcept'[0m elidable
[0;34m|         | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b82460[0m <[0;33mcol:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|         |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b7e2b0[0m <[0;33mcol:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b7e298[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'std::move_iterator<Pont *> (*)(Pont *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b7e200[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'std::move_iterator<Pont *> (Pont *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b7e0e8[0m[0;1;36m '__make_move_if_noexcept_iterator'[0m [0;32m'std::move_iterator<Pont *> (Pont *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6097748[0m[0;1;36m '__make_move_if_noexcept_iterator'[0m)
[0;34m|         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b80858[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:311:43[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b6ec90[0m <[0;33mcol:43[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b6a818[0m[0;1;36m '__first'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m|         |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b82630[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1253:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::move_iterator<Pont *> &&) noexcept'[0m elidable
[0;34m|         | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b82618[0m <[0;33mcol:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|         |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b81200[0m <[0;33mcol:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<Pont *>':'std::move_iterator<Pont *>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b811e8[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'std::move_iterator<Pont *> (*)(Pont *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b811b0[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'std::move_iterator<Pont *> (Pont *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b7e0e8[0m[0;1;36m '__make_move_if_noexcept_iterator'[0m [0;32m'std::move_iterator<Pont *> (Pont *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6097748[0m[0;1;36m '__make_move_if_noexcept_iterator'[0m)
[0;34m|         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b81228[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:312:43[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b809a0[0m <[0;33mcol:43[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b6a890[0m[0;1;36m '__last'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b82660[0m <[0;33mcol:52[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b81240[0m <[0;33mcol:52[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b6a908[0m[0;1;36m '__result'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b81260[0m <[0;33mcol:62[0m> [0;32m'std::allocator<Pont>':'std::allocator<Pont>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b6a9d8[0m[0;1;36m '__alloc'[0m [0;32m'std::allocator<Pont> &'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b97e28[0m <[0;33mline:304:5[0m, [0;33mline:313:5[0m> [0;33mline:305:5[0m used[0;1;36m __uninitialized_move_if_noexcept_a[0m [0;32m'double *(double *, double *, double *, std::allocator<double> &)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'double *'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::allocator<double>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b97b28[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m used[0;1;36m __first[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b97ba0[0m <[0;33mline:306:12[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m __last[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b97c18[0m <[0;33mline:307:12[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __result[0m [0;32m'double *':'double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b97ce8[0m <[0;33mline:308:12[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __alloc[0m [0;32m'std::allocator<double> &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ba4e38[0m <[0;33mline:309:5[0m, [0;33mline:313:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ba4e28[0m <[0;33mline:310:7[0m, [0;33mline:312:69[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6ba4e10[0m <[0;33mline:310:14[0m, [0;33mline:312:69[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ba4560[0m <[0;33mline:310:14[0m, [0;33mline:312:69[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba4548[0m <[0;33mline:310:14[0m, [0;33mcol:19[0m> [0;32m'double *(*)(std::move_iterator<double *>, std::move_iterator<double *>, double *, allocator<double> &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba44b0[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'double *(std::move_iterator<double *>, std::move_iterator<double *>, double *, allocator<double> &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ba4368[0m[0;1;36m '__uninitialized_copy_a'[0m [0;32m'double *(std::move_iterator<double *>, std::move_iterator<double *>, double *, allocator<double> &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x618bfd8[0m[0;1;36m '__uninitialized_copy_a'[0m)
[0;34m          |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ba4d40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1253:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::move_iterator<double *> &&) noexcept'[0m elidable
[0;34m          | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6ba4bf0[0m <[0;33mcol:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ba0b10[0m <[0;33mcol:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m[0m[0;36m[0m
[0;34m          |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba0af8[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'std::move_iterator<double *> (*)(double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba0a60[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'std::move_iterator<double *> (double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ba0948[0m[0;1;36m '__make_move_if_noexcept_iterator'[0m [0;32m'std::move_iterator<double *> (double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6097748[0m[0;1;36m '__make_move_if_noexcept_iterator'[0m)
[0;34m          |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba3088[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:311:43[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b9dee0[0m <[0;33mcol:43[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b97b28[0m[0;1;36m '__first'[0m [0;32m'double *':'double *'[0m
[0;34m          |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6ba4dc8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1253:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::move_iterator<double *> &&) noexcept'[0m elidable
[0;34m          | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6ba4db0[0m <[0;33mcol:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ba3a50[0m <[0;33mcol:3[0m, [0;33mcol:46[0m> [0;32m'std::move_iterator<double *>':'std::move_iterator<double *>'[0m[0;36m[0m[0;36m[0m
[0;34m          |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba3a38[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'std::move_iterator<double *> (*)(double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba3a00[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'std::move_iterator<double *> (double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ba0948[0m[0;1;36m '__make_move_if_noexcept_iterator'[0m [0;32m'std::move_iterator<double *> (double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6097748[0m[0;1;36m '__make_move_if_noexcept_iterator'[0m)
[0;34m          |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba3a78[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:312:43[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba31d0[0m <[0;33mcol:43[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b97ba0[0m[0;1;36m '__last'[0m [0;32m'double *':'double *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ba4df8[0m <[0;33mcol:52[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba3a90[0m <[0;33mcol:52[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b97c18[0m[0;1;36m '__result'[0m [0;32m'double *':'double *'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ba3ab0[0m <[0;33mcol:62[0m> [0;32m'std::allocator<double>':'std::allocator<double>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b97ce8[0m[0;1;36m '__alloc'[0m [0;32m'std::allocator<double> &'[0m

Dumping std::__uninitialized_copy_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x61902a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:378:3[0m, [0;33mline:400:5[0m> [0;33mline:381:5[0m[0;1;36m __uninitialized_copy_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618fc18[0m <[0;33mline:378:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618fc88[0m <[0;33mcol:38[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced typename depth 0 index 1[0;1;36m _InputIterator2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618fcf8[0m <[0;33mline:379:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x618fd68[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 3[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6190208[0m <[0;33mline:380:5[0m, [0;33mline:400:5[0m> [0;33mline:381:5[0m[0;1;36m __uninitialized_copy_move[0m [0;32m'_ForwardIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _ForwardIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618fe18[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618fe90[0m <[0;33mline:382:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618ff08[0m <[0;33mline:383:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __first2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618ff80[0m <[0;33mline:384:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __last2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x618fff8[0m <[0;33mline:385:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190098[0m <[0;33mline:386:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61907d0[0m <[0;33mline:387:5[0m, [0;33mline:400:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61904d8[0m <[0;33mline:388:7[0m, [0;33mline:390:19[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6190340[0m <[0;33mline:388:7[0m, [0;33mline:390:18[0m> [0;33mline:388:24[0m referenced[0;1;36m __mid[0m [0;32m'_ForwardIterator'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6190498[0m <[0;33mcol:32[0m, [0;33mline:390:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61903c8[0m <[0;33mline:388:32[0m, [0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_copy_a'[0;33m 0x618b0a8[0m[0;33m 0x618bfd8[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190418[0m <[0;33mcol:60[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618fe18[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190438[0m <[0;33mcol:70[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618fe90[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190458[0m <[0;33mline:389:11[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618fff8[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190478[0m <[0;33mline:390:11[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190098[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m    `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x61907b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:399:2[0m>
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6190628[0m <[0;33mline:392:2[0m, [0;33mline:394:2[0m>
[0;34m      | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6190618[0m <[0;33mline:393:4[0m, [0;33mcol:72[0m>
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x61905d8[0m <[0;33mcol:11[0m, [0;33mcol:72[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6190510[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_move_a'[0;33m 0x618c628[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190558[0m <[0;33mcol:39[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618ff08[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190578[0m <[0;33mcol:49[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618ff80[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator2'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190598[0m <[0;33mcol:58[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6190340[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61905b8[0m <[0;33mcol:65[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190098[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m      `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x6190790[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:399:2[0m>
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6190770[0m <[0;33mline:396:2[0m, [0;33mline:399:2[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6190720[0m <[0;33mline:397:4[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6190660[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Destroy'[0;33m 0x617d688[0m[0;33m 0x617eaf8[0m[0;33m 0x6181208[0m[0;33m 0x6181ca8[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61906c0[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x618fff8[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61906e0[0m <[0;33mcol:28[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6190340[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190700[0m <[0;33mcol:35[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190098[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m          `-[0m[0;1;35mCXXThrowExpr[0m[0;33m 0x6190758[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:42:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m

Dumping std::__uninitialized_move_copy:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6190e28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:406:3[0m, [0;33mline:428:5[0m> [0;33mline:409:5[0m[0;1;36m __uninitialized_move_copy[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61907f0[0m <[0;33mline:406:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6190868[0m <[0;33mcol:38[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced typename depth 0 index 1[0;1;36m _InputIterator2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61908d8[0m <[0;33mline:407:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6190948[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 3[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6190d88[0m <[0;33mline:408:5[0m, [0;33mline:428:5[0m> [0;33mline:409:5[0m[0;1;36m __uninitialized_move_copy[0m [0;32m'_ForwardIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _ForwardIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61909f8[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190a70[0m <[0;33mline:410:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190ae8[0m <[0;33mline:411:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __first2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190b60[0m <[0;33mline:412:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __last2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190bd8[0m <[0;33mline:413:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190c78[0m <[0;33mline:414:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6191350[0m <[0;33mline:415:5[0m, [0;33mline:428:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6191050[0m <[0;33mline:416:7[0m, [0;33mline:418:19[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6190ec0[0m <[0;33mline:416:7[0m, [0;33mline:418:18[0m> [0;33mline:416:24[0m referenced[0;1;36m __mid[0m [0;32m'_ForwardIterator'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6191010[0m <[0;33mcol:32[0m, [0;33mline:418:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6190f48[0m <[0;33mline:416:32[0m, [0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_move_a'[0;33m 0x618c628[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190f90[0m <[0;33mcol:60[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61909f8[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190fb0[0m <[0;33mcol:70[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190a70[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190fd0[0m <[0;33mline:417:11[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190bd8[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190ff0[0m <[0;33mline:418:11[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190c78[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m    `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x6191330[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:427:2[0m>
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61911a8[0m <[0;33mline:420:2[0m, [0;33mline:422:2[0m>
[0;34m      | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6191198[0m <[0;33mline:421:4[0m, [0;33mcol:72[0m>
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6191158[0m <[0;33mcol:11[0m, [0;33mcol:72[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6191088[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_copy_a'[0;33m 0x618b0a8[0m[0;33m 0x618bfd8[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61910d8[0m <[0;33mcol:39[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190ae8[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61910f8[0m <[0;33mcol:49[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190b60[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator2'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191118[0m <[0;33mcol:58[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6190ec0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191138[0m <[0;33mcol:65[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190c78[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m      `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x6191310[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:427:2[0m>
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61912f0[0m <[0;33mline:424:2[0m, [0;33mline:427:2[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x61912a0[0m <[0;33mline:425:4[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61911e0[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Destroy'[0;33m 0x617d688[0m[0;33m 0x617eaf8[0m[0;33m 0x6181208[0m[0;33m 0x6181ca8[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191240[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190bd8[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191260[0m <[0;33mcol:28[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6190ec0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191280[0m <[0;33mcol:35[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190c78[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m          `-[0m[0;1;35mCXXThrowExpr[0m[0;33m 0x61912d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:42:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m

Dumping std::__uninitialized_fill_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6191a48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:433:3[0m, [0;33mline:450:5[0m> [0;33mline:436:5[0m[0;1;36m __uninitialized_fill_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6191370[0m <[0;33mline:433:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61913e8[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 1[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6191458[0m <[0;33mcol:53[0m, [0;33mcol:62[0m> [0;33mcol:62[0m referenced typename depth 0 index 2[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61914c8[0m <[0;33mline:434:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 3[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x61919a8[0m <[0;33mline:435:5[0m, [0;33mline:450:5[0m> [0;33mline:436:5[0m[0;1;36m __uninitialized_fill_move[0m [0;32m'_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &, _InputIterator, _InputIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6191578[0m <[0;33mcol:31[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61915f0[0m <[0;33mcol:58[0m, [0;33mcol:75[0m> [0;33mcol:75[0m referenced[0;1;36m __mid[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6191698[0m <[0;33mline:437:10[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6191710[0m <[0;33mcol:26[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6191788[0m <[0;33mline:438:10[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6191828[0m <[0;33mcol:33[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6191ee0[0m <[0;33mline:439:5[0m, [0;33mline:450:5[0m>
[0;34m    |-[0m[0;1;35mCallExpr[0m[0;33m 0x6191bc0[0m <[0;33mline:440:7[0m, [0;33mcol:64[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6191af0[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_fill_a'[0;33m 0x618d5e8[0m[0;33m 0x618e3a8[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191b40[0m <[0;33mcol:35[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6191578[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191b60[0m <[0;33mcol:45[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61915f0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191b80[0m <[0;33mcol:52[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6191698[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191ba0[0m <[0;33mcol:57[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6191828[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m    `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x6191ec0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:449:2[0m>
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6191d38[0m <[0;33mline:442:2[0m, [0;33mline:444:2[0m>
[0;34m      | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6191d28[0m <[0;33mline:443:4[0m, [0;33mcol:70[0m>
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6191ce8[0m <[0;33mcol:11[0m, [0;33mcol:70[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6191c20[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_move_a'[0;33m 0x618c628[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191c68[0m <[0;33mcol:39[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6191710[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191c88[0m <[0;33mcol:48[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6191788[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191ca8[0m <[0;33mcol:56[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61915f0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191cc8[0m <[0;33mcol:63[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6191828[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m      `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x6191ea0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:449:2[0m>
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6191e80[0m <[0;33mline:446:2[0m, [0;33mline:449:2[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6191e30[0m <[0;33mline:447:4[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6191d70[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Destroy'[0;33m 0x617d688[0m[0;33m 0x617eaf8[0m[0;33m 0x6181208[0m[0;33m 0x6181ca8[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191dd0[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6191578[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191df0[0m <[0;33mcol:28[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61915f0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6191e10[0m <[0;33mcol:35[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6191828[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m          `-[0m[0;1;35mCXXThrowExpr[0m[0;33m 0x6191e68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:42:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m

Dumping std::__uninitialized_move_fill:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x61925c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:455:3[0m, [0;33mline:475:5[0m> [0;33mline:458:5[0m[0;1;36m __uninitialized_move_fill[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6191f00[0m <[0;33mline:455:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6191f78[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6191fe8[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6192058[0m <[0;33mline:456:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 3[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6192528[0m <[0;33mline:457:5[0m, [0;33mline:475:5[0m> [0;33mline:458:5[0m[0;1;36m __uninitialized_move_fill[0m [0;32m'void (_InputIterator, _InputIterator, _ForwardIterator, _ForwardIterator, const _Tp &, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6192108[0m <[0;33mcol:31[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6192180[0m <[0;33mcol:56[0m, [0;33mcol:71[0m> [0;33mcol:71[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61921f8[0m <[0;33mline:459:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __first2[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6192270[0m <[0;33mline:460:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __last2[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6192318[0m <[0;33mcol:36[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61923b8[0m <[0;33mline:461:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6192ae0[0m <[0;33mline:462:5[0m, [0;33mline:475:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61927f0[0m <[0;33mline:463:7[0m, [0;33mline:465:20[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6192660[0m <[0;33mline:463:7[0m, [0;33mline:465:19[0m> [0;33mline:463:24[0m referenced[0;1;36m __mid2[0m [0;32m'_ForwardIterator'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x61927b0[0m <[0;33mcol:33[0m, [0;33mline:465:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61926e8[0m <[0;33mline:463:33[0m, [0;33mcol:38[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_move_a'[0;33m 0x618c628[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6192730[0m <[0;33mcol:61[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6192108[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6192750[0m <[0;33mcol:71[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6192180[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6192770[0m <[0;33mline:464:12[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61921f8[0m[0;1;36m '__first2'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6192790[0m <[0;33mline:465:12[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61923b8[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m    `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x6192ac0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:474:2[0m>
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6192938[0m <[0;33mline:467:2[0m, [0;33mline:469:2[0m>
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x61928f8[0m <[0;33mline:468:4[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6192828[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_fill_a'[0;33m 0x618d5e8[0m[0;33m 0x618e3a8[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6192878[0m <[0;33mcol:32[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6192660[0m[0;1;36m '__mid2'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6192898[0m <[0;33mcol:40[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6192270[0m[0;1;36m '__last2'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61928b8[0m <[0;33mcol:49[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6192318[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61928d8[0m <[0;33mcol:54[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61923b8[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m      `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x6192aa0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:474:2[0m>
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6192a80[0m <[0;33mline:471:2[0m, [0;33mline:474:2[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6192a30[0m <[0;33mline:472:4[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6192970[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Destroy'[0;33m 0x617d688[0m[0;33m 0x617eaf8[0m[0;33m 0x6181208[0m[0;33m 0x6181ca8[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61929d0[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61921f8[0m[0;1;36m '__first2'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61929f0[0m <[0;33mcol:28[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6192660[0m[0;1;36m '__mid2'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6192a10[0m <[0;33mcol:36[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61923b8[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m          `-[0m[0;1;35mCXXThrowExpr[0m[0;33m 0x6192a68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:42:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m

Dumping __move_storage:
[0;1;32mVarDecl[0m[0;33m 0x61d6978[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_vector.h:463:2[0m, [0;33mline:465:38[0m> [0;33mline:463:17[0m referenced[0;1;36m __move_storage[0m [0;32m'const bool'[0m constexpr cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6b20[0m <[0;33mline:464:4[0m, [0;33mline:465:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x61d6a60[0m <[0;33mline:464:4[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61d6a18[0m <[0;33mcol:4[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_S_propagate_on_move_assign
[0;34m  `-[0m[0;1;35mCallExpr[0m[0;33m 0x61d6b00[0m <[0;33mline:465:7[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61d6ab8[0m <[0;33mcol:7[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_S_always_equal

Dumping std::vector::_M_move_assign:
[0;1;32mCXXMethodDecl[0m[0;33m 0x61cf2f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_vector.h:1533:7[0m, [0;33mline:1540:7[0m> [0;33mline:1534:7[0m[0;1;36m _M_move_assign[0m [0;32m'void (vector<_Tp, _Alloc> &&, std::true_type) noexcept'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61cf0e0[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __x[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61cf1d0[0m <[0;33mcol:36[0m, [0;33mcol:41[0m> [0;33mcol:50[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61e7960[0m <[0;33mline:1535:7[0m, [0;33mline:1540:7[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61e5d58[0m <[0;33mline:1536:2[0m, [0;33mcol:31[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x61e5c90[0m <[0;33mcol:2[0m, [0;33mcol:30[0m> [0;33mcol:9[0m referenced[0;1;36m __tmp[0m [0;32m'vector<_Tp, _Alloc>'[0m callinit
[0;34m  |   `-[0m[0;1;35mParenListExpr[0m[0;33m 0x61e5d38[0m <[0;33mcol:14[0m, [0;33mcol:30[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x61e5cf8[0m <[0;33mcol:15[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x61e5c28[0m <[0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x61e5e78[0m <[0;33mline:1537:2[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e5dc8[0m <[0;33mcol:2[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_swap_data
[0;34m  | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e5d80[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_impl
[0;34m  | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x61e5d70[0m <[0;33mcol:2[0m> [0;32m'vector<_Tp, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e5e30[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_impl
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61e5e10[0m <[0;33mcol:29[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61e5c90[0m[0;1;36m '__tmp'[0m [0;32m'vector<_Tp, _Alloc>'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x61e5fa8[0m <[0;33mline:1538:2[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e5ef8[0m <[0;33mcol:2[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_swap_data
[0;34m  | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e5eb0[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_impl
[0;34m  | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x61e5ea0[0m <[0;33mcol:2[0m> [0;32m'vector<_Tp, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e5f60[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_impl
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61e5f40[0m <[0;33mcol:29[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61cf0e0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m  `-[0m[0;1;35mCallExpr[0m[0;33m 0x61e7930[0m <[0;33mline:1539:2[0m, [0;33mcol:71[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61e5ff0[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__alloc_on_move'[0;33m 0x6174f18[0m
[0;34m    |-[0m[0;1;35mCallExpr[0m[0;33m 0x61e6090[0m <[0;33mcol:23[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x61e6038[0m <[0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x61e7910[0m <[0;33mcol:46[0m, [0;33mcol:70[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e60d0[0m <[0;33mcol:46[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_get_Tp_allocator
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61e60b0[0m <[0;33mcol:46[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61cf0e0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m

Dumping std::vector::_M_move_assign:
[0;1;32mCXXMethodDecl[0m[0;33m 0x61cf5b8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_vector.h:1544:7[0m, [0;33mline:1557:7[0m> [0;33mline:1545:7[0m[0;1;36m _M_move_assign[0m [0;32m'void (vector<_Tp, _Alloc> &&, std::false_type)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61cf3b0[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __x[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61cf4a0[0m <[0;33mcol:36[0m, [0;33mcol:41[0m> [0;33mcol:51[0m [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61e85d8[0m <[0;33mline:1546:7[0m, [0;33mline:1557:7[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x61e85b0[0m <[0;33mline:1547:2[0m, [0;33mline:1556:4[0m> has_else
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61e7b08[0m <[0;33mline:1547:6[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61e7a90[0m <[0;33mcol:32[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x60484d8[0m[0;33m 0x606c788[0m[0;33m 0x606fd38[0m[0;33m 0x608eb18[0m[0;33m 0x608f1c8[0m[0;33m 0x612f200[0m[0;33m 0x612f720[0m
[0;34m    | |-[0m[0;1;35mCallExpr[0m[0;33m 0x61e79f8[0m <[0;33mcol:6[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e79b0[0m <[0;33mcol:6[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_get_Tp_allocator
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61e7990[0m <[0;33mcol:6[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61cf3b0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x61e7a70[0m <[0;33mcol:35[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e7a28[0m <[0;33mcol:35[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_Tp_allocator
[0;34m    |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x61e7a18[0m <[0;33mcol:35[0m> [0;32m'vector<_Tp, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m    |-[0m[0;1;35mCallExpr[0m[0;33m 0x61e8210[0m <[0;33mline:1548:4[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x61e7b50[0m <[0;33mcol:4[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mCallExpr[0m[0;33m 0x61e7c40[0m <[0;33mcol:19[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61e7bd0[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61e7c20[0m <[0;33mcol:29[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61cf3b0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m    | `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x61e80f8[0m <[0;33mcol:35[0m, [0;33mcol:50[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept'[0m zeroing
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61e8590[0m <[0;33mline:1550:4[0m, [0;33mline:1556:4[0m>
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x61e84d8[0m <[0;33mline:1553:6[0m, [0;33mline:1554:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e8250[0m <[0;33mline:1553:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->assign
[0;34m      | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x61e8240[0m <[0;33mcol:6[0m> [0;32m'vector<_Tp, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m      | |-[0m[0;1;35mCallExpr[0m[0;33m 0x61e8390[0m <[0;33mcol:19[0m, [0;33mcol:68[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61e82b8[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__make_move_if_noexcept_iterator'[0;33m 0x6096f08[0m[0;33m 0x6097748[0m
[0;34m      | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x61e8370[0m <[0;33mcol:57[0m, [0;33mcol:67[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e8328[0m <[0;33mcol:57[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .begin
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61e8308[0m <[0;33mcol:57[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61cf3b0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x61e84b0[0m <[0;33mline:1554:5[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61e83d8[0m <[0;33mcol:5[0m, [0;33mcol:10[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__make_move_if_noexcept_iterator'[0;33m 0x6096f08[0m[0;33m 0x6097748[0m
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x61e8490[0m <[0;33mcol:43[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e8448[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .end
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61e8428[0m <[0;33mcol:43[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61cf3b0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x61e8570[0m <[0;33mline:1555:6[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x61e8528[0m <[0;33mcol:6[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .clear
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61e8508[0m <[0;33mcol:6[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61cf3b0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m

Dumping std::__pair_get<0>::__move_get:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6298b80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/utility:193:7[0m, [0;33mline:196:52[0m> [0;33mline:195:9[0m[0;1;36m __move_get[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62986d0[0m <[0;33mline:193:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _Tp1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6298748[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Tp2[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6298ae0[0m <[0;33mline:194:9[0m, [0;33mline:196:52[0m> [0;33mline:195:9[0m constexpr[0;1;36m __move_get[0m [0;32m'_Tp1 &&(std::pair<_Tp1, _Tp2> &&) noexcept'[0m static
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62989b8[0m <[0;33mcol:20[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __pair[0m [0;32m'std::pair<_Tp1, _Tp2> &&'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x62992e0[0m <[0;33mline:196:9[0m, [0;33mcol:52[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x62992d0[0m <[0;33mcol:11[0m, [0;33mcol:49[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x62992a8[0m <[0;33mcol:18[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x62991b0[0m <[0;33mcol:18[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x6012a40[0m[0;33m 0x6012f00[0m
[0;34m        `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6299260[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .first
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6299240[0m <[0;33mcol:37[0m> [0;32m'std::pair<_Tp1, _Tp2>':'pair<_Tp1, _Tp2>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x62989b8[0m[0;1;36m '__pair'[0m [0;32m'std::pair<_Tp1, _Tp2> &&'[0m

Dumping std::__pair_get<1>::__move_get:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x629a020[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/utility:212:7[0m, [0;33mline:215:53[0m> [0;33mline:214:9[0m[0;1;36m __move_get[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6299ba0[0m <[0;33mline:212:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _Tp1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6299c18[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Tp2[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6299f80[0m <[0;33mline:213:9[0m, [0;33mline:215:53[0m> [0;33mline:214:9[0m constexpr[0;1;36m __move_get[0m [0;32m'_Tp2 &&(std::pair<_Tp1, _Tp2> &&) noexcept'[0m static
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6299e58[0m <[0;33mcol:20[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __pair[0m [0;32m'std::pair<_Tp1, _Tp2> &&'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x629a780[0m <[0;33mline:215:9[0m, [0;33mcol:53[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x629a770[0m <[0;33mcol:11[0m, [0;33mcol:50[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x629a748[0m <[0;33mcol:18[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x629a650[0m <[0;33mcol:18[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x6012a40[0m[0;33m 0x6012f00[0m
[0;34m        `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x629a700[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .second
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x629a6e0[0m <[0;33mcol:37[0m> [0;32m'std::pair<_Tp1, _Tp2>':'pair<_Tp1, _Tp2>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6299e58[0m[0;1;36m '__pair'[0m [0;32m'std::pair<_Tp1, _Tp2> &&'[0m

Dumping std::remove:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x62bf698[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:510:3[0m, [0;33mline:512:38[0m> [0;33mcol:5[0m[0;1;36m remove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62bf2e8[0m <[0;33mline:510:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _FIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62bf358[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62bf5f8[0m <[0;33mline:511:5[0m, [0;33mline:512:38[0m> [0;33mcol:5[0m[0;1;36m remove[0m [0;32m'_FIter (_FIter, _FIter, const _Tp &)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bf3f8[0m <[0;33mcol:12[0m> [0;33mcol:18[0m [0;32m'_FIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bf470[0m <[0;33mcol:20[0m> [0;33mcol:26[0m [0;32m'_FIter'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bf518[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const _Tp &'[0m

Dumping std::remove_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x62bfa88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:514:3[0m, [0;33mline:516:41[0m> [0;33mcol:5[0m[0;1;36m remove_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62bf708[0m <[0;33mline:514:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _FIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62bf778[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62bf9e8[0m <[0;33mline:515:5[0m, [0;33mline:516:41[0m> [0;33mcol:5[0m[0;1;36m remove_if[0m [0;32m'_FIter (_FIter, _FIter, _Predicate)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bf818[0m <[0;33mcol:15[0m> [0;33mcol:21[0m [0;32m'_FIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bf890[0m <[0;33mcol:23[0m> [0;33mcol:29[0m [0;32m'_FIter'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bf908[0m <[0;33mcol:31[0m> [0;33mcol:41[0m [0;32m'_Predicate'[0m

Dumping std::remove_copy:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x62bfff8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:518:3[0m, [0;33mline:520:51[0m> [0;33mcol:5[0m[0;1;36m remove_copy[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62bfaf8[0m <[0;33mline:518:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _IIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62bfb68[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _OIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62bfbd8[0m <[0;33mcol:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62bff58[0m <[0;33mline:519:5[0m, [0;33mline:520:51[0m> [0;33mcol:5[0m[0;1;36m remove_copy[0m [0;32m'_OIter (_IIter, _IIter, _OIter, const _Tp &)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bfc80[0m <[0;33mcol:17[0m> [0;33mcol:23[0m [0;32m'_IIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bfcf8[0m <[0;33mcol:25[0m> [0;33mcol:31[0m [0;32m'_IIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bfd70[0m <[0;33mcol:33[0m> [0;33mcol:39[0m [0;32m'_OIter'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62bfe18[0m <[0;33mcol:41[0m, [0;33mcol:50[0m> [0;33mcol:51[0m [0;32m'const _Tp &'[0m

Dumping std::remove_copy_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x62c04f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:522:3[0m, [0;33mline:524:54[0m> [0;33mcol:5[0m[0;1;36m remove_copy_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62c0070[0m <[0;33mline:522:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _IIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62c00e8[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _OIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62c0158[0m <[0;33mcol:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 2[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62c0458[0m <[0;33mline:523:5[0m, [0;33mline:524:54[0m> [0;33mcol:5[0m[0;1;36m remove_copy_if[0m [0;32m'_OIter (_IIter, _IIter, _OIter, _Predicate)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62c0200[0m <[0;33mcol:20[0m> [0;33mcol:26[0m [0;32m'_IIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62c0278[0m <[0;33mcol:28[0m> [0;33mcol:34[0m [0;32m'_IIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62c02f0[0m <[0;33mcol:36[0m> [0;33mcol:42[0m [0;32m'_OIter'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62c0368[0m <[0;33mcol:44[0m> [0;33mcol:54[0m [0;32m'_Predicate'[0m

Dumping std::__move_median_to_first:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6348958[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:76:3[0m, [0;33mline:96:5[0m> [0;33mline:78:5[0m[0;1;36m __move_median_to_first[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6348470[0m <[0;33mline:76:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63484e8[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 1[0;1;36m _Compare[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63488b8[0m <[0;33mline:77:5[0m, [0;33mline:96:5[0m> [0;33mline:78:5[0m[0;1;36m __move_median_to_first[0m [0;32m'void (_Iterator, _Iterator, _Iterator, _Iterator, _Compare)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6348588[0m <[0;33mcol:28[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced[0;1;36m __result[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6348600[0m <[0;33mcol:47[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __a[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6348678[0m <[0;33mcol:62[0m, [0;33mcol:72[0m> [0;33mcol:72[0m referenced[0;1;36m __b[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63486f0[0m <[0;33mline:79:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __c[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6348768[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63492e0[0m <[0;33mline:80:5[0m, [0;33mline:96:5[0m>
[0;34m|   `-[0m[0;1;35mIfStmt[0m[0;33m 0x63492b8[0m <[0;33mline:81:7[0m, [0;33mline:95:30[0m> has_else
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6348a38[0m <[0;33mline:81:11[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63489d8[0m <[0;33mcol:11[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348768[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63489f8[0m <[0;33mcol:18[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348600[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348a18[0m <[0;33mcol:23[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348678[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m|     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6348ea8[0m <[0;33mline:82:2[0m, [0;33mline:89:2[0m>
[0;34m|     | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6348e80[0m <[0;33mline:83:4[0m, [0;33mline:88:34[0m> has_else
[0;34m|     |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6348ac8[0m <[0;33mline:83:8[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348a68[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348768[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348a88[0m <[0;33mcol:15[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348678[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m|     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348aa8[0m <[0;33mcol:20[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63486f0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|     |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6348bb8[0m <[0;33mline:84:6[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6348b30[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x62b7238[0m
[0;34m|     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348b78[0m <[0;33mcol:21[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348588[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348b98[0m <[0;33mcol:31[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348678[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m|     |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6348e58[0m <[0;33mline:85:9[0m, [0;33mline:88:34[0m> has_else
[0;34m|     |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6348c48[0m <[0;33mline:85:13[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348be8[0m <[0;33mcol:13[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348768[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|     |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348c08[0m <[0;33mcol:20[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348600[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348c28[0m <[0;33mcol:25[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63486f0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|     |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6348d50[0m <[0;33mline:86:6[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6348c98[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x62b7238[0m
[0;34m|     |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348ce0[0m <[0;33mcol:21[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348588[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348d00[0m <[0;33mcol:31[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63486f0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|     |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6348e28[0m <[0;33mline:88:6[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6348da0[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x62b7238[0m
[0;34m|     |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348de8[0m <[0;33mcol:21[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348588[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348e08[0m <[0;33mcol:31[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348600[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|     `-[0m[0;1;35mIfStmt[0m[0;33m 0x6349290[0m <[0;33mline:90:12[0m, [0;33mline:95:30[0m> has_else
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x6348f20[0m <[0;33mline:90:16[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348ec0[0m <[0;33mcol:16[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348768[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348ee0[0m <[0;33mcol:23[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348600[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348f00[0m <[0;33mcol:28[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63486f0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x6348ff8[0m <[0;33mline:91:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6348f70[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x62b7238[0m
[0;34m|       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348fb8[0m <[0;33mcol:17[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348588[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6348fd8[0m <[0;33mcol:27[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348600[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|       `-[0m[0;1;35mIfStmt[0m[0;33m 0x6349268[0m <[0;33mline:92:12[0m, [0;33mline:95:30[0m> has_else
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x6349088[0m <[0;33mline:92:16[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6349028[0m <[0;33mcol:16[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348768[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6349048[0m <[0;33mcol:23[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348678[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6349068[0m <[0;33mcol:28[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63486f0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x6349160[0m <[0;33mline:93:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63490d8[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x62b7238[0m
[0;34m|         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6349120[0m <[0;33mcol:17[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348588[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6349140[0m <[0;33mcol:27[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63486f0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6349238[0m <[0;33mline:95:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63491b0[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x62b7238[0m
[0;34m|           |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63491f8[0m <[0;33mcol:17[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348588[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6349218[0m <[0;33mcol:27[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6348678[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6afcaa8[0m <[0;33mline:77:5[0m, [0;33mline:96:5[0m> [0;33mline:78:5[0m used[0;1;36m __move_median_to_first[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6afc748[0m <[0;33mcol:28[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __result[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6afc7c0[0m <[0;33mcol:47[0m, [0;33mcol:57[0m> [0;33mcol:57[0m used[0;1;36m __a[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6afc838[0m <[0;33mcol:62[0m, [0;33mcol:72[0m> [0;33mcol:72[0m used[0;1;36m __b[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6afc8b0[0m <[0;33mline:79:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m __c[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6afc958[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m __comp[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6affe38[0m <[0;33mline:80:5[0m, [0;33mline:96:5[0m>
[0;34m    `-[0m[0;1;35mIfStmt[0m[0;33m 0x6affe10[0m <[0;33mline:81:7[0m, [0;33mline:95:30[0m> has_else
[0;34m      |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afe150[0m <[0;33mline:81:11[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe010[0m <[0;33mcol:11[0m, [0;33mcol:26[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afdff0[0m <[0;33mcol:11[0m, [0;33mcol:26[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6aebda8[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe028[0m <[0;33mcol:11[0m> [0;32m'const __gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afdf30[0m <[0;33mcol:11[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc958[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m      | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afe098[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe080[0m <[0;33mcol:18[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afdf50[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc7c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afe120[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe108[0m <[0;33mcol:23[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afdf70[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc838[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aff180[0m <[0;33mline:82:2[0m, [0;33mline:89:2[0m>
[0;34m      | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6aff158[0m <[0;33mline:83:4[0m, [0;33mline:88:34[0m> has_else
[0;34m      |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afe3b0[0m <[0;33mline:83:8[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe270[0m <[0;33mcol:8[0m, [0;33mcol:23[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afe250[0m <[0;33mcol:8[0m, [0;33mcol:23[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6aebda8[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe288[0m <[0;33mcol:8[0m> [0;32m'const __gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afe190[0m <[0;33mcol:8[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc958[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m      |   | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afe2f8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe2e0[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afe1b0[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc838[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |   | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afe380[0m <[0;33mcol:20[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe368[0m <[0;33mcol:20[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afe1d0[0m <[0;33mcol:20[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc8b0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6afe8a0[0m <[0;33mline:84:6[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe888[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afe828[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6afe708[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62b7238[0m[0;1;36m 'iter_swap'[0m)
[0;34m      |   | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afe928[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe910[0m <[0;33mcol:21[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afe438[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc748[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |   | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afe9b0[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afe998[0m <[0;33mcol:31[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afe458[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc838[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6aff130[0m <[0;33mline:85:9[0m, [0;33mline:88:34[0m> has_else
[0;34m      |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afec00[0m <[0;33mline:85:13[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afeac0[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afeaa0[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6aebda8[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m
[0;34m      |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afead8[0m <[0;33mcol:13[0m> [0;32m'const __gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afe9e0[0m <[0;33mcol:13[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc958[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m      |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afeb48[0m <[0;33mcol:20[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afeb30[0m <[0;33mcol:20[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afea00[0m <[0;33mcol:20[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc7c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afebd0[0m <[0;33mcol:25[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afebb8[0m <[0;33mcol:25[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afea20[0m <[0;33mcol:25[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc8b0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6afed78[0m <[0;33mline:86:6[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afed60[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afed28[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6afe708[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62b7238[0m[0;1;36m 'iter_swap'[0m)
[0;34m      |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afee00[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afede8[0m <[0;33mcol:21[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afec88[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc748[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6afee88[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afee70[0m <[0;33mcol:31[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afeca8[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc8b0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6afeff0[0m <[0;33mline:88:6[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afefd8[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afefa0[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6afe708[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62b7238[0m[0;1;36m 'iter_swap'[0m)
[0;34m      |       |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aff078[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff060[0m <[0;33mcol:21[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afef00[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc748[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      |       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aff100[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m      |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff0e8[0m <[0;33mcol:31[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afef20[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc7c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m      `-[0m[0;1;35mIfStmt[0m[0;33m 0x6affde8[0m <[0;33mline:90:12[0m, [0;33mline:95:30[0m> has_else
[0;34m        |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aff3b8[0m <[0;33mline:90:16[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff278[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff258[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6aebda8[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff290[0m <[0;33mcol:16[0m> [0;32m'const __gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff198[0m <[0;33mcol:16[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc958[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m        | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aff300[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff2e8[0m <[0;33mcol:23[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff1b8[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc7c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m        | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aff388[0m <[0;33mcol:28[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m        |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff370[0m <[0;33mcol:28[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff1d8[0m <[0;33mcol:28[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc8b0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aff530[0m <[0;33mline:91:2[0m, [0;33mcol:30[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff518[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff4e0[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6afe708[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62b7238[0m[0;1;36m 'iter_swap'[0m)
[0;34m        | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aff5b8[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff5a0[0m <[0;33mcol:17[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff440[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc748[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m        | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aff640[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m        |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff628[0m <[0;33mcol:27[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff460[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc7c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m        `-[0m[0;1;35mIfStmt[0m[0;33m 0x6affdc0[0m <[0;33mline:92:12[0m, [0;33mline:95:30[0m> has_else
[0;34m          |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aff890[0m <[0;33mline:92:16[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff750[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff730[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6aebda8[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >) const'[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff768[0m <[0;33mcol:16[0m> [0;32m'const __gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff670[0m <[0;33mcol:16[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc958[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter':'__gnu_cxx::__ops::_Iter_less_iter'[0m
[0;34m          | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aff7d8[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m          | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff7c0[0m <[0;33mcol:23[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff690[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc838[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m          | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aff860[0m <[0;33mcol:28[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m          |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff848[0m <[0;33mcol:28[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff6b0[0m <[0;33mcol:28[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc8b0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6affa08[0m <[0;33mline:93:2[0m, [0;33mcol:30[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aff9f0[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff9b8[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6afe708[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62b7238[0m[0;1;36m 'iter_swap'[0m)
[0;34m          | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6affa90[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m          | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6affa78[0m <[0;33mcol:17[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff918[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc748[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m          | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6affb18[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m          |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6affb00[0m <[0;33mcol:27[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aff938[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc8b0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m          `-[0m[0;1;35mCallExpr[0m[0;33m 0x6affc80[0m <[0;33mline:95:2[0m, [0;33mcol:30[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6affc68[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6affc30[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6afe708[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62b7238[0m[0;1;36m 'iter_swap'[0m)
[0;34m            |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6affd08[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m            | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6affcf0[0m <[0;33mcol:17[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6affb90[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc748[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m
[0;34m            `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6affd90[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &) noexcept'[0m
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6affd78[0m <[0;33mcol:27[0m> [0;32m'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'const __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6affbb0[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6afc838[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m

Dumping std::__remove_copy_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6357c98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:639:3[0m, [0;33mline:652:5[0m> [0;33mline:642:5[0m[0;1;36m __remove_copy_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6357810[0m <[0;33mline:639:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6357888[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63578f8[0m <[0;33mline:640:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6357bf8[0m <[0;33mline:641:5[0m, [0;33mline:652:5[0m> [0;33mline:642:5[0m[0;1;36m __remove_copy_if[0m [0;32m'_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _Predicate)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63579a0[0m <[0;33mcol:22[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357a18[0m <[0;33mcol:46[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357a90[0m <[0;33mline:643:8[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357b08[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __pred[0m [0;32m'_Predicate'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6358028[0m <[0;33mline:644:5[0m, [0;33mline:652:5[0m>
[0;34m    |-[0m[0;1;35mForStmt[0m[0;33m 0x6357fc0[0m <[0;33mline:645:7[0m, [0;33mline:650:4[0m>
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6357dd0[0m <[0;33mline:645:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6357d50[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m[0;33m 0x612fc80[0m[0;33m 0x61329f0[0m[0;33m 0x61ea078[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357d10[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63579a0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357d30[0m <[0;33mcol:25[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6357a18[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m    | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6357e28[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357e08[0m <[0;33mcol:35[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63579a0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m    | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6357fa8[0m <[0;33mline:646:2[0m, [0;33mline:650:4[0m>
[0;34m    |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6357ea8[0m <[0;33mline:646:6[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6357e80[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357e40[0m <[0;33mcol:7[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6357b08[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357e60[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63579a0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m    |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6357f88[0m <[0;33mline:647:4[0m, [0;33mline:650:4[0m>
[0;34m    |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6357f30[0m <[0;33mline:648:6[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |     | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6357ee0[0m <[0;33mcol:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357ec0[0m <[0;33mcol:7[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6357a90[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |     | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6357f18[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357ef8[0m <[0;33mcol:19[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63579a0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m    |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6357f70[0m <[0;33mline:649:6[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357f50[0m <[0;33mcol:8[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6357a90[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6358018[0m <[0;33mline:651:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357ff8[0m <[0;33mcol:14[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6357a90[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m

Dumping std::remove_copy:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x63584f8[0m prev 0x62bfff8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:668:3[0m, [0;33mline:683:5[0m> [0;33mline:670:5[0m[0;1;36m remove_copy[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6358048[0m <[0;33mline:668:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63580b8[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6358128[0m <[0;33mcol:63[0m, [0;33mcol:72[0m> [0;33mcol:72[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6358458[0m prev 0x62bff58 <[0;33mline:669:5[0m, [0;33mline:683:5[0m> [0;33mline:670:5[0m[0;1;36m remove_copy[0m [0;32m'_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, const _Tp &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63581d0[0m <[0;33mcol:17[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358248[0m <[0;33mcol:41[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63582c0[0m <[0;33mline:671:3[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358368[0m <[0;33mcol:29[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __value[0m [0;32m'const _Tp &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6358750[0m <[0;33mline:672:5[0m, [0;33mline:683:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x6358570[0m <[0;33mline:679:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6358740[0m <[0;33mline:681:7[0m, [0;33mline:682:46[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6358700[0m <[0;33mline:681:14[0m, [0;33mline:682:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6358598[0m <[0;33mline:681:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__remove_copy_if'[0;33m 0x6357c98[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63585e0[0m <[0;33mcol:36[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63581d0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6358600[0m <[0;33mcol:45[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6358248[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6358620[0m <[0;33mcol:53[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63582c0[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x63586d8[0m <[0;33mline:682:2[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6358670[0m <[0;33mcol:2[0m, [0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iter_equals_val'[0;33m 0x60ad6d8[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63586b8[0m <[0;33mcol:38[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6358368[0m[0;1;36m '__value'[0m [0;32m'const _Tp &'[0m

Dumping std::remove_copy_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6358bf8[0m prev 0x62c04f8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:700:3[0m, [0;33mline:716:5[0m> [0;33mline:703:5[0m[0;1;36m remove_copy_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6358770[0m <[0;33mline:700:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63587e8[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6358858[0m <[0;33mline:701:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6358b58[0m prev 0x62c0458 <[0;33mline:702:5[0m, [0;33mline:716:5[0m> [0;33mline:703:5[0m[0;1;36m remove_copy_if[0m [0;32m'_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _Predicate)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358900[0m <[0;33mcol:20[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358978[0m <[0;33mcol:44[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63589f0[0m <[0;33mline:704:6[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6358a68[0m <[0;33mcol:32[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __pred[0m [0;32m'_Predicate'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6358e50[0m <[0;33mline:705:5[0m, [0;33mline:716:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x6358c70[0m <[0;33mline:712:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6358e40[0m <[0;33mline:714:7[0m, [0;33mline:715:45[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6358e00[0m <[0;33mline:714:14[0m, [0;33mline:715:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6358c98[0m <[0;33mline:714:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__remove_copy_if'[0;33m 0x6357c98[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6358ce0[0m <[0;33mcol:36[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6358900[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6358d00[0m <[0;33mcol:45[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6358978[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6358d20[0m <[0;33mcol:53[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63589f0[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6358dd8[0m <[0;33mline:715:8[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6358d70[0m <[0;33mcol:8[0m, [0;33mcol:26[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__pred_iter'[0;33m 0x60af538[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6358db8[0m <[0;33mcol:38[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6358a68[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m

Dumping std::__remove_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635bd18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:858:3[0m, [0;33mline:875:5[0m> [0;33mline:860:5[0m[0;1;36m __remove_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635b990[0m <[0;33mline:858:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635ba08[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 1[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635bc78[0m <[0;33mline:859:5[0m, [0;33mline:875:5[0m> [0;33mline:860:5[0m[0;1;36m __remove_if[0m [0;32m'_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635baa8[0m <[0;33mcol:17[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635bb20[0m <[0;33mcol:43[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __last[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635bb98[0m <[0;33mline:861:3[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m __pred[0m [0;32m'_Predicate'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635c4b8[0m <[0;33mline:862:5[0m, [0;33mline:875:5[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635beb8[0m <[0;33mline:863:7[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635bd88[0m <[0;33mcol:7[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x635be80[0m <[0;33mcol:17[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635bdc8[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__find_if'[0;33m 0x6349758[0m[0;33m 0x6349e68[0m[0;33m 0x634aff8[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635be20[0m <[0;33mcol:32[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635be40[0m <[0;33mcol:41[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635bb20[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635be60[0m <[0;33mcol:49[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635bb98[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x635c000[0m <[0;33mline:864:7[0m, [0;33mline:865:9[0m>
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x635bf98[0m <[0;33mline:864:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635bf18[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x60484d8[0m[0;33m 0x606c788[0m[0;33m 0x606fd38[0m[0;33m 0x608eb18[0m[0;33m 0x608f1c8[0m[0;33m 0x612f200[0m[0;33m 0x612f720[0m[0;33m 0x61e8d88[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635bed8[0m <[0;33mcol:11[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635bef8[0m <[0;33mcol:22[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635bb20[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635bff0[0m <[0;33mline:865:2[0m, [0;33mcol:9[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635bfd0[0m <[0;33mcol:9[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x635c0b0[0m <[0;33mline:866:7[0m, [0;33mcol:42[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x635c028[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:24[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m cinit
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c090[0m <[0;33mcol:35[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635c0e8[0m <[0;33mline:867:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c0c8[0m <[0;33mcol:9[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |-[0m[0;1;35mForStmt[0m[0;33m 0x635c448[0m <[0;33mline:868:7[0m, [0;33mline:873:4[0m>
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x635c1c0[0m <[0;33mline:868:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635c140[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m[0;33m 0x612fc80[0m[0;33m 0x61329f0[0m[0;33m 0x61ea078[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c100[0m <[0;33mcol:14[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c120[0m <[0;33mcol:25[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635bb20[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635c218[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c1f8[0m <[0;33mcol:35[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | `-[0m[0;1;35mIfStmt[0m[0;33m 0x635c430[0m <[0;33mline:869:2[0m, [0;33mline:873:4[0m>
[0;34m    |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635c298[0m <[0;33mline:869:6[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x635c270[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c230[0m <[0;33mcol:7[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635bb98[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c250[0m <[0;33mcol:14[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635c410[0m <[0;33mline:870:4[0m, [0;33mline:873:4[0m>
[0;34m    |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635c3b8[0m <[0;33mline:871:6[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |     | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635c2d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:871:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c2b0[0m <[0;33mcol:7[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x635c028[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x635c390[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635c308[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m    |     |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635c378[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:871:32[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c358[0m <[0;33mcol:33[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635baa8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635c3f8[0m <[0;33mline:872:6[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c3d8[0m <[0;33mcol:8[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x635c028[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635c4a0[0m <[0;33mline:874:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c480[0m <[0;33mcol:14[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x635c028[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m

Dumping std::remove:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635c8a8[0m prev 0x62bf698 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:894:3[0m, [0;33mline:908:5[0m> [0;33mline:896:5[0m[0;1;36m remove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635c4f8[0m <[0;33mline:894:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635c568[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 1[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635c808[0m prev 0x62bf5f8 <[0;33mline:895:5[0m, [0;33mline:908:5[0m> [0;33mline:896:5[0m[0;1;36m remove[0m [0;32m'_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c608[0m <[0;33mcol:12[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c680[0m <[0;33mcol:38[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c728[0m <[0;33mline:897:5[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __value[0m [0;32m'const _Tp &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635cad0[0m <[0;33mline:898:5[0m, [0;33mline:908:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x635c918[0m <[0;33mline:904:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635cac0[0m <[0;33mline:906:7[0m, [0;33mline:907:47[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x635ca88[0m <[0;33mline:906:14[0m, [0;33mline:907:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635c940[0m <[0;33mline:906:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__remove_if'[0;33m 0x635bd18[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c988[0m <[0;33mcol:31[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c608[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c9a8[0m <[0;33mcol:40[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c680[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x635ca60[0m <[0;33mline:907:3[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635c9f8[0m <[0;33mcol:3[0m, [0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iter_equals_val'[0;33m 0x60ad6d8[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635ca40[0m <[0;33mcol:39[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c728[0m[0;1;36m '__value'[0m [0;32m'const _Tp &'[0m

Dumping std::remove_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635ce78[0m prev 0x62bfa88 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:927:3[0m, [0;33mline:941:5[0m> [0;33mline:929:5[0m[0;1;36m remove_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635caf0[0m <[0;33mline:927:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635cb68[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 1[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635cdd8[0m prev 0x62bf9e8 <[0;33mline:928:5[0m, [0;33mline:941:5[0m> [0;33mline:929:5[0m[0;1;36m remove_if[0m [0;32m'_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cc08[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __first[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cc80[0m <[0;33mcol:41[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m __last[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ccf8[0m <[0;33mline:930:8[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __pred[0m [0;32m'_Predicate'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635d0a0[0m <[0;33mline:931:5[0m, [0;33mline:941:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x635cee8[0m <[0;33mline:937:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635d090[0m <[0;33mline:939:7[0m, [0;33mline:940:47[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x635d058[0m <[0;33mline:939:14[0m, [0;33mline:940:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635cf10[0m <[0;33mline:939:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__remove_if'[0;33m 0x635bd18[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635cf58[0m <[0;33mcol:31[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635cc08[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635cf78[0m <[0;33mcol:40[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635cc80[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x635d030[0m <[0;33mline:940:10[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635cfc8[0m <[0;33mcol:10[0m, [0;33mcol:28[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__pred_iter'[0;33m 0x60af538[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635d010[0m <[0;33mcol:40[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ccf8[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m

Dumping std::__move_merge_adaptive:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x63805a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2301:3[0m, [0;33mline:2324:5[0m> [0;33mline:2304:5[0m[0;1;36m __move_merge_adaptive[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x637ff38[0m <[0;33mline:2301:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x637ffa8[0m <[0;33mcol:38[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced typename depth 0 index 1[0;1;36m _InputIterator2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6380018[0m <[0;33mline:2302:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6380088[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 3[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6380508[0m <[0;33mline:2303:5[0m, [0;33mline:2324:5[0m> [0;33mline:2304:5[0m[0;1;36m __move_merge_adaptive[0m [0;32m'void (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6380138[0m <[0;33mcol:27[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63801b0[0m <[0;33mcol:53[0m, [0;33mcol:69[0m> [0;33mcol:69[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6380228[0m <[0;33mline:2305:6[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63802a0[0m <[0;33mcol:32[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __last2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6380318[0m <[0;33mline:2306:6[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6380390[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6380e80[0m <[0;33mline:2307:5[0m, [0;33mline:2324:5[0m>
[0;34m    |-[0m[0;1;35mWhileStmt[0m[0;33m 0x6380c50[0m <[0;33mline:2308:7[0m, [0;33mline:2321:2[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6380820[0m <[0;33mline:2308:14[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x63806f0[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6380670[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m[0;33m 0x612fc80[0m[0;33m 0x61329f0[0m[0;33m 0x61ea078[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380630[0m <[0;33mcol:14[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380138[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380650[0m <[0;33mcol:26[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63801b0[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m    | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x63807e8[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6380768[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m[0;33m 0x612fc80[0m[0;33m 0x61329f0[0m[0;33m 0x61ea078[0m
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380728[0m <[0;33mcol:37[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380228[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380748[0m <[0;33mcol:49[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63802a0[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator2'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6380c30[0m <[0;33mline:2309:2[0m, [0;33mline:2321:2[0m>
[0;34m    |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6380bd0[0m <[0;33mline:2310:4[0m, [0;33mline:2319:6[0m> has_else
[0;34m    |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x63808a0[0m <[0;33mline:2310:8[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380840[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380390[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380860[0m <[0;33mcol:15[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380228[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m    |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380880[0m <[0;33mcol:25[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380138[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6380a30[0m <[0;33mline:2311:6[0m, [0;33mline:2314:6[0m>
[0;34m    |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x63809d8[0m <[0;33mline:2312:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   | | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x63808f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2312:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63808d0[0m <[0;33mcol:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380318[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |   | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x63809b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6380928[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m    |   | | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6380998[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2312:34[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380978[0m <[0;33mcol:35[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380228[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m    |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6380a18[0m <[0;33mline:2313:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63809f8[0m <[0;33mcol:10[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380228[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m    |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6380bb0[0m <[0;33mline:2316:6[0m, [0;33mline:2319:6[0m>
[0;34m    |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6380b58[0m <[0;33mline:2317:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6380a70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2317:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380a50[0m <[0;33mcol:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380318[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |   |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6380b30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6380aa8[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m    |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6380b18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2317:34[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380af8[0m <[0;33mcol:35[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380138[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6380b98[0m <[0;33mline:2318:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380b78[0m <[0;33mcol:10[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380138[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6380c18[0m <[0;33mline:2320:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380bf8[0m <[0;33mcol:6[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380318[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    `-[0m[0;1;35mIfStmt[0m[0;33m 0x6380e68[0m <[0;33mline:2322:7[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:491:62[0m>
[0;34m      |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6380d28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2322:11[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6380ca8[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m[0;33m 0x612fc80[0m[0;33m 0x61329f0[0m[0;33m 0x61ea078[0m
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380c68[0m <[0;33mcol:11[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380138[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380c88[0m <[0;33mcol:23[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63801b0[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6380e30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:491:39[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6380d80[0m <[0;33mcol:39[0m, [0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380dd0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2323:17[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380138[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380df0[0m <[0;33mcol:27[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63801b0[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6380e10[0m <[0;33mcol:36[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6380318[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m

Dumping std::__move_merge_adaptive_backward:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x63814b8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2327:3[0m, [0;33mline:2367:5[0m> [0;33mline:2330:5[0m[0;1;36m __move_merge_adaptive_backward[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6380ea0[0m <[0;33mline:2327:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6380f18[0m <[0;33mcol:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 1[0;1;36m _BidirectionalIterator2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6380f88[0m <[0;33mline:2328:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _BidirectionalIterator3[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6380ff8[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 3[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6381418[0m <[0;33mline:2329:5[0m, [0;33mline:2367:5[0m> [0;33mline:2330:5[0m[0;1;36m __move_merge_adaptive_backward[0m [0;32m'void (_BidirectionalIterator1, _BidirectionalIterator1, _BidirectionalIterator2, _BidirectionalIterator2, _BidirectionalIterator3, _Compare)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63810a8[0m <[0;33mcol:36[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __first1[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6381120[0m <[0;33mline:2331:8[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __last1[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6381198[0m <[0;33mline:2332:8[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __first2[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6381210[0m <[0;33mline:2333:8[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __last2[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6381288[0m <[0;33mline:2334:8[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __result[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6381300[0m <[0;33mline:2335:8[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63820d0[0m <[0;33mline:2336:5[0m, [0;33mline:2367:5[0m>
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x6381888[0m <[0;33mline:2337:7[0m, [0;33mline:2343:2[0m> has_else
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6381600[0m <[0;33mline:2337:11[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6381580[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x60484d8[0m[0;33m 0x606c788[0m[0;33m 0x606fd38[0m[0;33m 0x608eb18[0m[0;33m 0x608f1c8[0m[0;33m 0x612f200[0m[0;33m 0x612f720[0m[0;33m 0x61e8d88[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381540[0m <[0;33mcol:11[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63810a8[0m[0;1;36m '__first1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381560[0m <[0;33mcol:23[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381120[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m    | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6381748[0m <[0;33mline:2338:2[0m, [0;33mline:2341:2[0m>
[0;34m    | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6381700[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:673:48[0m, [0;33mcol:80[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6381658[0m <[0;33mcol:48[0m, [0;33mcol:53[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move_backward'[0;33m 0x60d1ae8[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63816a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2339:28[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381198[0m[0;1;36m '__first2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63816c0[0m <[0;33mcol:38[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381210[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63816e0[0m <[0;33mcol:47[0m> [0;32m'_BidirectionalIterator3'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381288[0m[0;1;36m '__result'[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m    | | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6381738[0m <[0;33mline:2340:4[0m>
[0;34m    | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6381870[0m <[0;33mline:2342:12[0m, [0;33mline:2343:2[0m>
[0;34m    |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6381828[0m <[0;33mline:2342:16[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63817a8[0m <[0;33mcol:25[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x60484d8[0m[0;33m 0x606c788[0m[0;33m 0x606fd38[0m[0;33m 0x608eb18[0m[0;33m 0x608f1c8[0m[0;33m 0x612f200[0m[0;33m 0x612f720[0m[0;33m 0x61e8d88[0m
[0;34m    |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381768[0m <[0;33mcol:16[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381198[0m[0;1;36m '__first2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381788[0m <[0;33mcol:28[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381210[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6381860[0m <[0;33mline:2343:2[0m>
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x63818d0[0m <[0;33mline:2345:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63818b0[0m <[0;33mcol:9[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381120[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6381908[0m <[0;33mline:2346:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63818e8[0m <[0;33mcol:9[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381210[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    `-[0m[0;1;35mWhileStmt[0m[0;33m 0x63820b8[0m <[0;33mline:2347:7[0m, [0;33mline:2366:2[0m>
[0;34m      |-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6381920[0m <[0;33mline:2347:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m      `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63820a0[0m <[0;33mline:2348:2[0m, [0;33mline:2366:2[0m>
[0;34m        `-[0m[0;1;35mIfStmt[0m[0;33m 0x6382078[0m <[0;33mline:2349:4[0m, [0;33mline:2365:6[0m> has_else
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6381990[0m <[0;33mline:2349:8[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381930[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381300[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381950[0m <[0;33mcol:15[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381210[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381970[0m <[0;33mcol:24[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381120[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6381d90[0m <[0;33mline:2350:6[0m, [0;33mline:2358:6[0m>
[0;34m          | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6381ae0[0m <[0;33mline:2351:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m          | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x63819f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2351:8[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m          | | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x63819e0[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m          | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63819c0[0m <[0;33mcol:11[0m> [0;32m'_BidirectionalIterator3'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381288[0m[0;1;36m '__result'[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m          | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6381ab8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6381a30[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m          | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6381aa0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2351:36[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m          | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381a80[0m <[0;33mcol:37[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381120[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          | |-[0m[0;1;35mIfStmt[0m[0;33m 0x6381d40[0m <[0;33mline:2352:8[0m, [0;33mline:2356:3[0m>
[0;34m          | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6381bc0[0m <[0;33mline:2352:12[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6381b40[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x60484d8[0m[0;33m 0x606c788[0m[0;33m 0x606fd38[0m[0;33m 0x608eb18[0m[0;33m 0x608f1c8[0m[0;33m 0x612f200[0m[0;33m 0x612f720[0m[0;33m 0x61e8d88[0m
[0;34m          | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381b00[0m <[0;33mcol:12[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63810a8[0m[0;1;36m '__first1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381b20[0m <[0;33mcol:24[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381120[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6381d20[0m <[0;33mline:2353:3[0m, [0;33mline:2356:3[0m>
[0;34m          | |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6381cd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:673:48[0m, [0;33mcol:80[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6381c18[0m <[0;33mcol:48[0m, [0;33mcol:53[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move_backward'[0;33m 0x60d1ae8[0m
[0;34m          | |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381c60[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2354:29[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381198[0m[0;1;36m '__first2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m          | |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6381ca0[0m <[0;33mcol:39[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m          | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381c80[0m <[0;33mcol:41[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381210[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m          | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381cb8[0m <[0;33mcol:50[0m> [0;32m'_BidirectionalIterator3'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381288[0m[0;1;36m '__result'[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m          | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6381d10[0m <[0;33mline:2355:5[0m>
[0;34m          | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6381d78[0m <[0;33mline:2357:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381d58[0m <[0;33mcol:10[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381120[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6382050[0m <[0;33mline:2360:6[0m, [0;33mline:2365:6[0m>
[0;34m            |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6381ed8[0m <[0;33mline:2361:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m            | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6381df0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2361:8[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m            | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6381dd8[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m            | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381db8[0m <[0;33mcol:11[0m> [0;32m'_BidirectionalIterator3'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381288[0m[0;1;36m '__result'[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m            | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6381eb0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6381e28[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m            |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6381e98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2361:36[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m            |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381e78[0m <[0;33mcol:37[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381210[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m            |-[0m[0;1;35mIfStmt[0m[0;33m 0x6382000[0m <[0;33mline:2362:8[0m, [0;33mline:2363:3[0m>
[0;34m            | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6381fb8[0m <[0;33mline:2362:12[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6381f38[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x60484d8[0m[0;33m 0x606c788[0m[0;33m 0x606fd38[0m[0;33m 0x608eb18[0m[0;33m 0x608f1c8[0m[0;33m 0x612f200[0m[0;33m 0x612f720[0m[0;33m 0x61e8d88[0m
[0;34m            | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381ef8[0m <[0;33mcol:12[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381198[0m[0;1;36m '__first2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m            | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6381f18[0m <[0;33mcol:24[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381210[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m            | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6381ff0[0m <[0;33mline:2363:3[0m>
[0;34m            `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6382038[0m <[0;33mline:2364:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m              `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6382018[0m <[0;33mcol:10[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6381210[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m

Dumping std::__move_merge:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x638b898[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2636:3[0m, [0;33mline:2660:5[0m> [0;33mline:2639:5[0m[0;1;36m __move_merge[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x638b2a0[0m <[0;33mline:2636:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x638b318[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x638b388[0m <[0;33mline:2637:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x638b7f8[0m <[0;33mline:2638:5[0m, [0;33mline:2660:5[0m> [0;33mline:2639:5[0m[0;1;36m __move_merge[0m [0;32m'_OutputIterator (_InputIterator, _InputIterator, _InputIterator, _InputIterator, _OutputIterator, _Compare)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x638b430[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x638b4a8[0m <[0;33mcol:43[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x638b520[0m <[0;33mline:2640:4[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __first2[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x638b598[0m <[0;33mcol:29[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __last2[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x638b610[0m <[0;33mline:2641:4[0m, [0;33mcol:20[0m> [0;33mcol:20[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x638b688[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x638c170[0m <[0;33mline:2642:5[0m, [0;33mline:2660:5[0m>
[0;34m    |-[0m[0;1;35mWhileStmt[0m[0;33m 0x638bf58[0m <[0;33mline:2643:7[0m, [0;33mline:2656:2[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x638bb10[0m <[0;33mline:2643:14[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x638b9e0[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x638b960[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m[0;33m 0x612fc80[0m[0;33m 0x61329f0[0m[0;33m 0x61ea078[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638b920[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b430[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638b940[0m <[0;33mcol:26[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b4a8[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator'[0m
[0;34m    | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x638bad8[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x638ba58[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x60497e8[0m[0;33m 0x606d448[0m[0;33m 0x6070af8[0m[0;33m 0x608f8b8[0m[0;33m 0x608fe98[0m[0;33m 0x612fc80[0m[0;33m 0x61329f0[0m[0;33m 0x61ea078[0m
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638ba18[0m <[0;33mcol:37[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b520[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638ba38[0m <[0;33mcol:49[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b598[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x638bf38[0m <[0;33mline:2644:2[0m, [0;33mline:2656:2[0m>
[0;34m    |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x638bed8[0m <[0;33mline:2645:4[0m, [0;33mline:2654:6[0m> has_else
[0;34m    |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x638bb90[0m <[0;33mline:2645:8[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bb30[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b688[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bb50[0m <[0;33mcol:15[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b520[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m    |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bb70[0m <[0;33mcol:25[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b430[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x638bd20[0m <[0;33mline:2646:6[0m, [0;33mline:2649:6[0m>
[0;34m    |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x638bcc8[0m <[0;33mline:2647:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   | | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x638bbe0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2647:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bbc0[0m <[0;33mcol:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b610[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |   | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x638bca0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x638bc18[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m    |   | | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x638bc88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2647:34[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bc68[0m <[0;33mcol:35[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b520[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m    |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x638bd08[0m <[0;33mline:2648:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bce8[0m <[0;33mcol:10[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b520[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m    |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x638beb8[0m <[0;33mline:2651:6[0m, [0;33mline:2654:6[0m>
[0;34m    |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x638be60[0m <[0;33mline:2652:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x638bd60[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2652:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bd40[0m <[0;33mcol:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b610[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |   |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x638be38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x638bd98[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m    |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x638be20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2652:34[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638be00[0m <[0;33mcol:35[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b430[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x638bea0[0m <[0;33mline:2653:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638be80[0m <[0;33mcol:10[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b430[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x638bf20[0m <[0;33mline:2655:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bf00[0m <[0;33mcol:6[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b610[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x638c160[0m <[0;33mline:2657:7[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:491:62[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x638c128[0m <[0;33mcol:39[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x638bf90[0m <[0;33mcol:39[0m, [0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638bfe0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2657:29[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b520[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638c000[0m <[0;33mcol:39[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b598[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x638c0f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:491:39[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x638c040[0m <[0;33mcol:39[0m, [0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x6013608[0m[0;33m 0x60c6018[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638c090[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2658:23[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b430[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638c0b0[0m <[0;33mcol:33[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b4a8[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x638c0d0[0m <[0;33mline:2659:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x638b610[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m

Dumping wmemmove:
[0;1;32mFunctionDecl[0m[0;33m 0x63dbc88[0m <[0;33m/usr/include/wchar.h:267:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/wchar.h:267:17[0m used[0;1;36m wmemmove[0m [0;32m'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63dba98[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __s1[0m [0;32m'wchar_t *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63dbb18[0m <[0;33mcol:42[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __s2[0m [0;32m'const wchar_t *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63dbb90[0m <[0;33mcol:63[0m, [0;33mcol:70[0m> [0;33mcol:70[0m[0;1;36m __n[0m [0;32m'size_t':'unsigned long'[0m

Dumping std::wmemmove:
[0;1;32mUsingDecl[0m[0;33m 0x5dd76a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cwchar:200:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::wmemmove

Dumping std::wmemmove:
[0;1;32mUsingShadowDecl[0m[0;33m 0x5dd76f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cwchar:200:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x63dbc88[0m[0;1;36m 'wmemmove'[0m [0;32m'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'[0m

Dumping __gnu_cxx::char_traits::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6413f38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:116:7[0m, [0;33mline:117:67[0m> [0;33mcol:7[0m[0;1;36m move[0m [0;32m'__gnu_cxx::char_traits::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6413ce8[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __s1[0m [0;32m'__gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6413d60[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m[0;1;36m __s2[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6413e18[0m <[0;33mcol:52[0m, [0;33mcol:64[0m> [0;33mcol:64[0m[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping __gnu_cxx::char_traits::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x641bc00[0m parent 0x6412310 prev 0x6413f38 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:181:3[0m, [0;33mline:188:5[0m> [0;33mline:184:5[0m[0;1;36m move[0m [0;32m'typename char_traits<_CharT>::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641b8a8[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m __s1[0m [0;32m'__gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641b920[0m <[0;33mcol:27[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __s2[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641b9d8[0m <[0;33mcol:50[0m, [0;33mcol:62[0m> [0;33mcol:62[0m referenced[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641be98[0m <[0;33mline:185:5[0m, [0;33mline:188:5[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x641be88[0m <[0;33mline:186:7[0m, [0;33mline:187:35[0m>
[0;34m    `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x641be58[0m <[0;33mline:186:14[0m, [0;33mline:187:35[0m> [0;32m'_CharT *'[0m[0;36m[0m[0;36m[0m static_cast<_CharT *> <Dependent>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x641bde0[0m <[0;33mline:186:35[0m, [0;33mline:187:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bcf8[0m <[0;33mline:186:35[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bd18[0m <[0;33mcol:53[0m> [0;32m'__gnu_cxx::char_traits::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641b8a8[0m[0;1;36m '__s1'[0m [0;32m'__gnu_cxx::char_traits::char_type *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bd38[0m <[0;33mcol:59[0m> [0;32m'const __gnu_cxx::char_traits::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641b920[0m[0;1;36m '__s2'[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m        `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641bdc0[0m <[0;33mline:187:11[0m, [0;33mcol:33[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bda8[0m <[0;33mcol:11[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bd58[0m <[0;33mcol:11[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641b9d8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m          `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x641bd88[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'__gnu_cxx::char_traits::char_type':'_CharT'[0m

Dumping std::char_traits<char>::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x641ea38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:337:7[0m, [0;33mline:343:7[0m> [0;33mline:338:7[0m[0;1;36m move[0m [0;32m'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641e828[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __s1[0m [0;32m'std::char_traits<char>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641e8a0[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x641e918[0m <[0;33mcol:52[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6420970[0m <[0;33mline:339:7[0m, [0;33mline:343:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6420718[0m <[0;33mline:340:2[0m, [0;33mline:341:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64206b0[0m <[0;33mline:340:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6420680[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6420640[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641e918[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6420698[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6420660[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6420708[0m <[0;33mline:341:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64206f0[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64206d0[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641e828[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char>::char_type *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6420960[0m <[0;33mline:342:2[0m, [0;33mcol:67[0m>
[0;34m    `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6420930[0m <[0;33mcol:9[0m, [0;33mcol:67[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m static_cast<std::char_traits<char>::char_type *> <BitCast>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6420870[0m <[0;33mcol:33[0m, [0;33mcol:66[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6420858[0m <[0;33mcol:33[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6420730[0m <[0;33mcol:33[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64208c0[0m <[0;33mcol:51[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64208a8[0m <[0;33mcol:51[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6420750[0m <[0;33mcol:51[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641e828[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char>::char_type *'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64208f0[0m <[0;33mcol:57[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64208d8[0m <[0;33mcol:57[0m> [0;32m'const std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6420770[0m <[0;33mcol:57[0m> [0;32m'const std::char_traits<char>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641e8a0[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char>::char_type *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6420908[0m <[0;33mcol:63[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6420790[0m <[0;33mcol:63[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x641e918[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::char_traits<wchar_t>::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6425758[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:449:7[0m, [0;33mline:455:7[0m> [0;33mline:450:7[0m[0;1;36m move[0m [0;32m'std::char_traits<wchar_t>::char_type *(std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6425588[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __s1[0m [0;32m'std::char_traits<wchar_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6425600[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<wchar_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6425678[0m <[0;33mcol:52[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6427240[0m <[0;33mline:451:7[0m, [0;33mline:455:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6427050[0m <[0;33mline:452:2[0m, [0;33mline:453:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6426fe8[0m <[0;33mline:452:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6426fb8[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6426f78[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6425678[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6426fd0[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6426f98[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6427040[0m <[0;33mline:453:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6427028[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<wchar_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6427008[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<wchar_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6425588[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<wchar_t>::char_type *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6427230[0m <[0;33mline:454:2[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x64271b0[0m <[0;33mcol:9[0m, [0;33mcol:33[0m> [0;32m'wchar_t *'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6427198[0m <[0;33mcol:9[0m> [0;32m'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6427110[0m <[0;33mcol:9[0m> [0;32m'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63dbc88[0m[0;1;36m 'wmemmove'[0m [0;32m'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'[0m ([0;1;32mUsingShadow[0m[0;33m 0x5dd76f8[0m[0;1;36m 'wmemmove'[0m)
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64271e8[0m <[0;33mcol:18[0m> [0;32m'std::char_traits<wchar_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64270b0[0m <[0;33mcol:18[0m> [0;32m'std::char_traits<wchar_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6425588[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<wchar_t>::char_type *'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6427200[0m <[0;33mcol:24[0m> [0;32m'const std::char_traits<wchar_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64270d0[0m <[0;33mcol:24[0m> [0;32m'const std::char_traits<wchar_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6425600[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<wchar_t>::char_type *'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6427218[0m <[0;33mcol:30[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64270f0[0m <[0;33mcol:30[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6425678[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::char_traits<char16_t>::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x642b288[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:557:7[0m, [0;33mline:564:7[0m> [0;33mline:558:7[0m[0;1;36m move[0m [0;32m'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x642b078[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __s1[0m [0;32m'std::char_traits<char16_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x642b0f0[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x642b168[0m <[0;33mcol:52[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64476a8[0m <[0;33mline:559:7[0m, [0;33mline:564:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6447458[0m <[0;33mline:560:2[0m, [0;33mline:561:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64473f0[0m <[0;33mline:560:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64473c0[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447380[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x642b168[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64473d8[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64473a0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6447448[0m <[0;33mline:561:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6447430[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447410[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x642b078[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char16_t>::char_type *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6447698[0m <[0;33mline:562:2[0m, [0;33mline:563:59[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x6447678[0m <[0;33mline:562:9[0m, [0;33mline:563:59[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6447648[0m <[0;33mline:562:10[0m, [0;33mline:563:58[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m static_cast<std::char_traits<char16_t>::char_type *> <BitCast>
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x64475a0[0m <[0;33mcol:4[0m, [0;33mcol:57[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6447588[0m <[0;33mcol:4[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447470[0m <[0;33mcol:4[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64475f0[0m <[0;33mcol:22[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64475d8[0m <[0;33mcol:22[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6447490[0m <[0;33mcol:22[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x642b078[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char16_t>::char_type *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6447620[0m <[0;33mcol:28[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6447608[0m <[0;33mcol:28[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64474b0[0m <[0;33mcol:28[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x642b0f0[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6447538[0m <[0;33mcol:34[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6447520[0m <[0;33mcol:34[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64474d0[0m <[0;33mcol:34[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x642b168[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m            `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6447500[0m <[0;33mcol:40[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'std::char_traits<char16_t>::char_type':'char16_t'[0m

Dumping std::char_traits<char32_t>::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6449a18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:654:7[0m, [0;33mline:661:7[0m> [0;33mline:655:7[0m[0;1;36m move[0m [0;32m'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6449808[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __s1[0m [0;32m'std::char_traits<char32_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6449880[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64498f8[0m <[0;33mcol:52[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x644bb00[0m <[0;33mline:656:7[0m, [0;33mline:661:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x644b8b0[0m <[0;33mline:657:2[0m, [0;33mline:658:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x644b848[0m <[0;33mline:657:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644b818[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b7d8[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64498f8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644b830[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x644b7f8[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x644b8a0[0m <[0;33mline:658:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644b888[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b868[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6449808[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char32_t>::char_type *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x644baf0[0m <[0;33mline:659:2[0m, [0;33mline:660:59[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x644bad0[0m <[0;33mline:659:9[0m, [0;33mline:660:59[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x644baa0[0m <[0;33mline:659:10[0m, [0;33mline:660:58[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m static_cast<std::char_traits<char32_t>::char_type *> <BitCast>
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x644b9f8[0m <[0;33mcol:4[0m, [0;33mcol:57[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644b9e0[0m <[0;33mcol:4[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b8c8[0m <[0;33mcol:4[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c0250[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644ba48[0m <[0;33mcol:22[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644ba30[0m <[0;33mcol:22[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b8e8[0m <[0;33mcol:22[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6449808[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char32_t>::char_type *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644ba78[0m <[0;33mcol:28[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644ba60[0m <[0;33mcol:28[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b908[0m <[0;33mcol:28[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6449880[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x644b990[0m <[0;33mcol:34[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x644b978[0m <[0;33mcol:34[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x644b928[0m <[0;33mcol:34[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64498f8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m            `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x644b958[0m <[0;33mcol:40[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'std::char_traits<char32_t>::char_type':'char32_t'[0m

Dumping std::__cxx11::basic_string::_S_move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x654eb40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:343:7[0m, [0;33mline:350:7[0m> [0;33mline:344:7[0m[0;1;36m _S_move[0m [0;32m'void (_CharT *, const _CharT *, std::__cxx11::basic_string::size_type)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x654e9b0[0m <[0;33mcol:15[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __d[0m [0;32m'_CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x654ea28[0m <[0;33mcol:28[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __s[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x654eaa0[0m <[0;33mcol:47[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __n[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x658dce0[0m <[0;33mline:345:7[0m, [0;33mline:350:7[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x658dcb8[0m <[0;33mline:346:2[0m, [0;33mline:349:35[0m> has_else
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x658da38[0m <[0;33mline:346:6[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x658d9b0[0m <[0;33mcol:10[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x60484d8[0m[0;33m 0x606c788[0m[0;33m 0x606fd38[0m[0;33m 0x608eb18[0m[0;33m 0x608f1c8[0m[0;33m 0x612f200[0m[0;33m 0x612f720[0m[0;33m 0x61e8d88[0m[0;33m 0x6402978[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x658d970[0m <[0;33mcol:6[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x654eaa0[0m[0;1;36m '__n'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m    | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x658d990[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |-[0m[0;1;35mCallExpr[0m[0;33m 0x658db68[0m <[0;33mline:347:4[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x658dac0[0m <[0;33mcol:4[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x658db18[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x658daf8[0m <[0;33mcol:25[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x654e9b0[0m[0;1;36m '__d'[0m [0;32m'_CharT *'[0m
[0;34m    | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x658db50[0m <[0;33mcol:30[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x658db30[0m <[0;33mcol:31[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x654ea28[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x658dc80[0m <[0;33mline:349:4[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x658dbe8[0m <[0;33mcol:4[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x658dc20[0m <[0;33mcol:22[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x654e9b0[0m[0;1;36m '__d'[0m [0;32m'_CharT *'[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x658dc40[0m <[0;33mcol:27[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x654ea28[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x658dc60[0m <[0;33mcol:32[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x654eaa0[0m[0;1;36m '__n'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m

Dumping remove:
[0;1;32mFunctionDecl[0m[0;33m 0x65d59a0[0m <[0;33m/usr/include/stdio.h:144:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/stdio.h:144:12[0m[0;1;36m remove[0m [0;32m'int (const char *) throw()'[0m extern
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d5900[0m <[0;33mcol:20[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m __filename[0m [0;32m'const char *'[0m

Dumping std::remove:
[0;1;32mUsingDecl[0m[0;33m 0x6155fb0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdio:131:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remove

Dumping std::remove:
[0;1;32mUsingShadowDecl[0m[0;33m 0x6156008[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdio:131:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x65d59a0[0m[0;1;36m 'remove'[0m [0;32m'int (const char *) throw()'[0m

Dumping std::locale::facet::_M_remove_reference:
[0;1;32mCXXMethodDecl[0m[0;33m 0x66f1848[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:449:5[0m, [0;33mline:462:5[0m> [0;33mline:450:5[0m[0;1;36m _M_remove_reference[0m [0;32m'void () const throw()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f2248[0m <[0;33mline:451:5[0m, [0;33mline:462:5[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x66f2000[0m <[0;33mline:453:60[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x66f2230[0m <[0;33mline:454:7[0m, [0;33mline:461:2[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x66f2150[0m <[0;33mline:454:11[0m, [0;33mcol:71[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | |-[0m[0;1;35mCallExpr[0m[0;33m 0x66f2100[0m <[0;33mcol:11[0m, [0;33mcol:66[0m> [0;32m'_Atomic_word':'int'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x66f20e8[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'_Atomic_word (*)(_Atomic_word *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f2028[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'_Atomic_word (_Atomic_word *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64d9ca0[0m[0;1;36m '__exchange_and_add_dispatch'[0m [0;32m'_Atomic_word (_Atomic_word *, int)'[0m
[0;34m    | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x66f2098[0m <[0;33mcol:50[0m, [0;33mcol:51[0m> [0;32m'_Atomic_word *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m    | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x66f2068[0m <[0;33mcol:51[0m> [0;32m'_Atomic_word':'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_refcount[0;33m 0x66f0200[0m
[0;34m    | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x66f2058[0m <[0;33mcol:51[0m> [0;32m'const std::locale::facet *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x66f20d0[0m <[0;33mcol:64[0m, [0;33mcol:65[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x66f20b0[0m <[0;33mcol:65[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x66f2130[0m <[0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f2210[0m <[0;33mline:455:2[0m, [0;33mline:461:2[0m>
[0;34m      |-[0m[0;1;35mNullStmt[0m[0;33m 0x66f2170[0m <[0;33mline:456:63[0m>
[0;34m      `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x66f21f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:460:8[0m>
[0;34m        |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f21a8[0m <[0;33mline:458:6[0m, [0;33mcol:21[0m>
[0;34m        | `-[0m[0;1;35mCXXDeleteExpr[0m[0;33m 0x66f2188[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x611f5a8[0m[0;1;36m 'operator delete'[0m [0;32m'void (void *) noexcept'[0m
[0;34m        |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x66f2178[0m <[0;33mcol:15[0m> [0;32m'const std::locale::facet *'[0m[0;36m[0m[0;36m[0m this
[0;34m        `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x66f21d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:460:8[0m>
[0;34m          |-[0m[0;34m<<<NULL>>>[0m
[0;34m          `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f21c0[0m <[0;33mcol:6[0m, [0;33mcol:8[0m>

Dumping std::locale::_Impl::_M_remove_reference:
[0;1;32mCXXMethodDecl[0m[0;33m 0x66f4628[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:559:5[0m, [0;33mline:572:5[0m> [0;33mline:560:5[0m referenced[0;1;36m _M_remove_reference[0m [0;32m'void () throw()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f86e8[0m <[0;33mline:561:5[0m, [0;33mline:572:5[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x66f84a0[0m <[0;33mline:563:60[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x66f86d0[0m <[0;33mline:564:7[0m, [0;33mline:571:2[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x66f85f0[0m <[0;33mline:564:11[0m, [0;33mcol:71[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | |-[0m[0;1;35mCallExpr[0m[0;33m 0x66f85a0[0m <[0;33mcol:11[0m, [0;33mcol:66[0m> [0;32m'_Atomic_word':'int'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x66f8588[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'_Atomic_word (*)(_Atomic_word *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f84c8[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'_Atomic_word (_Atomic_word *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64d9ca0[0m[0;1;36m '__exchange_and_add_dispatch'[0m [0;32m'_Atomic_word (_Atomic_word *, int)'[0m
[0;34m    | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x66f8538[0m <[0;33mcol:50[0m, [0;33mcol:51[0m> [0;32m'_Atomic_word *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m    | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x66f8508[0m <[0;33mcol:51[0m> [0;32m'_Atomic_word':'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_refcount[0;33m 0x66f3bb8[0m
[0;34m    | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x66f84f8[0m <[0;33mcol:51[0m> [0;32m'std::locale::_Impl *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x66f8570[0m <[0;33mcol:64[0m, [0;33mcol:65[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x66f8550[0m <[0;33mcol:65[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x66f85d0[0m <[0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f86b0[0m <[0;33mline:565:2[0m, [0;33mline:571:2[0m>
[0;34m      |-[0m[0;1;35mNullStmt[0m[0;33m 0x66f8610[0m <[0;33mline:566:63[0m>
[0;34m      `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x66f8690[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:570:8[0m>
[0;34m        |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f8648[0m <[0;33mline:568:6[0m, [0;33mcol:21[0m>
[0;34m        | `-[0m[0;1;35mCXXDeleteExpr[0m[0;33m 0x66f8628[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x611f5a8[0m[0;1;36m 'operator delete'[0m [0;32m'void (void *) noexcept'[0m
[0;34m        |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x66f8618[0m <[0;33mcol:15[0m> [0;32m'std::locale::_Impl *'[0m[0;36m[0m[0;36m[0m this
[0;34m        `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x66f8670[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:570:8[0m>
[0;34m          |-[0m[0;34m<<<NULL>>>[0m
[0;34m          `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f8660[0m <[0;33mcol:6[0m, [0;33mcol:8[0m>

Dumping std::errc::identifier_removed:
[0;1;32mEnumConstantDecl[0m[0;33m 0x671ae10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:72:7[0m, [0;33m/usr/include/asm-generic/errno.h:24:16[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:72:7[0m[0;1;36m identifier_removed[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x671adf0[0m <[0;33m/usr/include/asm-generic/errno.h:24:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 43[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x671add0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 43[0m

Dumping std::ios_base::_Callback_list::_M_remove_reference:
[0;1;32mCXXMethodDecl[0m[0;33m 0x67655b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:544:7[0m, [0;33mline:555:7[0m> [0;33mline:545:7[0m[0;1;36m _M_remove_reference[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x676fb38[0m <[0;33mline:546:7[0m, [0;33mline:555:7[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x676f878[0m <[0;33mline:548:62[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x676fa28[0m <[0;33mline:549:9[0m, [0;33mcol:77[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x676f898[0m <[0;33mcol:9[0m, [0;33mcol:76[0m> [0;33mcol:13[0m used[0;1;36m __res[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x676f9f8[0m <[0;33mcol:21[0m, [0;33mcol:76[0m> [0;32m'_Atomic_word':'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x676f9e0[0m <[0;33mcol:21[0m, [0;33mcol:32[0m> [0;32m'_Atomic_word (*)(_Atomic_word *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x676f920[0m <[0;33mcol:21[0m, [0;33mcol:32[0m> [0;32m'_Atomic_word (_Atomic_word *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64d9ca0[0m[0;1;36m '__exchange_and_add_dispatch'[0m [0;32m'_Atomic_word (_Atomic_word *, int)'[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x676f990[0m <[0;33mcol:60[0m, [0;33mcol:61[0m> [0;32m'_Atomic_word *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x676f960[0m <[0;33mcol:61[0m> [0;32m'_Atomic_word':'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_refcount[0;33m 0x6765128[0m
[0;34m  |     |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x676f950[0m <[0;33mcol:61[0m> [0;32m'std::ios_base::_Callback_list *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x676f9c8[0m <[0;33mcol:74[0m, [0;33mcol:75[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x676f9a8[0m <[0;33mcol:75[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x676fad8[0m <[0;33mline:550:9[0m, [0;33mline:553:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x676fa98[0m <[0;33mline:550:13[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x676fa80[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x676fa40[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x676f898[0m[0;1;36m '__res'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x676fa60[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x676fac0[0m <[0;33mline:551:11[0m, [0;33mline:553:11[0m>
[0;34m  |   `-[0m[0;1;35mNullStmt[0m[0;33m 0x676fab8[0m <[0;33mline:552:65[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x676fb28[0m <[0;33mline:554:9[0m, [0;33mcol:16[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x676fb10[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x676faf0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x676f898[0m[0;1;36m '__res'[0m [0;32m'int'[0m

Dumping std::ios_base::_M_move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6768710[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:867:5[0m, [0;33mline:868:24[0m> [0;33mcol:5[0m referenced[0;1;36m _M_move[0m [0;32m'void (std::ios_base &) noexcept'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6768618[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;33mcol:22[0m [0;32m'std::ios_base &'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x67803f8[0m parent 0x67764d0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/streambuf:150:7[0m, [0;33mline:154:48[0m> [0;33mline:153:9[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x677f978[0m <[0;33mline:150:16[0m, [0;33mcol:21[0m> [0;33mcol:21[0m [0;32m'bool'[0m depth 1 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x677f9d8[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 1 index 1[0;1;36m _CharT2[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6780348[0m parent 0x67764d0 <[0;33mline:151:9[0m, [0;33mline:154:48[0m> [0;33mline:153:9[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, _CharT2 *>::__type (istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>, _CharT2 *)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6780000[0m <[0;33mcol:24[0m, [0;33mcol:51[0m> [0;33mcol:52[0m [0;32m'istreambuf_iterator<_CharT2>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67801a0[0m <[0;33mline:154:10[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'istreambuf_iterator<_CharT2>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6780218[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;33mcol:48[0m [0;32m'_CharT2 *'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x67c7648[0m parent 0x67c5630 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf_iterator.h:77:7[0m, [0;33mline:81:48[0m> [0;33mline:80:2[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x67c6de8[0m <[0;33mline:77:16[0m, [0;33mcol:21[0m> [0;33mcol:21[0m [0;32m'bool'[0m depth 1 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x67c6e48[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 1 index 1[0;1;36m _CharT2[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x67c7598[0m parent 0x67c5630 <[0;33mline:78:2[0m, [0;33mline:81:48[0m> [0;33mline:80:2[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, _CharT2 *>::__type (istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>, _CharT2 *)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67c7290[0m <[0;33mcol:17[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'istreambuf_iterator<_CharT2>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67c7430[0m <[0;33mline:81:10[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'istreambuf_iterator<_CharT2>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67c74a8[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;33mcol:48[0m [0;32m'_CharT2 *'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x67d8918[0m prev 0x60c3688 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf_iterator.h:307:3[0m, [0;33mline:317:5[0m> [0;33mline:310:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x67d8080[0m <[0;33mline:307:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x67d80e0[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x67d8878[0m prev 0x60c35e8 <[0;33mline:308:5[0m, [0;33mline:317:5[0m> [0;33mline:310:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type (_CharT *, _CharT *, ostreambuf_iterator<_CharT>)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d8568[0m <[0;33mcol:20[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d85e0[0m <[0;33mcol:37[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __last[0m [0;32m'_CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d8780[0m <[0;33mline:311:6[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __result[0m [0;32m'ostreambuf_iterator<_CharT>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67d8c98[0m <[0;33mline:312:5[0m, [0;33mline:317:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67d8ad0[0m <[0;33mline:313:7[0m, [0;33mcol:48[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67d8998[0m <[0;33mcol:7[0m, [0;33mcol:41[0m> [0;33mcol:24[0m referenced[0;1;36m __num[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x67d8a98[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x67d8a40[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m[0;33m 0x61f3228[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d8a00[0m <[0;33mcol:32[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d85e0[0m[0;1;36m '__last'[0m [0;32m'_CharT *'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d8a20[0m <[0;33mcol:41[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d8568[0m[0;1;36m '__first'[0m [0;32m'_CharT *'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x67d8c50[0m <[0;33mline:314:7[0m, [0;33mline:315:32[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67d8b58[0m <[0;33mline:314:11[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67d8b28[0m <[0;33mcol:11[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d8ae8[0m <[0;33mcol:11[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67d8998[0m[0;1;36m '__num'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67d8b40[0m <[0;33mcol:19[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67d8b08[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x67d8c20[0m <[0;33mline:315:2[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67d8b98[0m <[0;33mcol:2[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_put
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d8b78[0m <[0;33mcol:2[0m> [0;32m'ostreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d8780[0m[0;1;36m '__result'[0m [0;32m'ostreambuf_iterator<_CharT>'[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d8be0[0m <[0;33mcol:18[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d8568[0m[0;1;36m '__first'[0m [0;32m'_CharT *'[0m
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d8c00[0m <[0;33mcol:27[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67d8998[0m[0;1;36m '__num'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x67d8c88[0m <[0;33mline:316:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d8c68[0m <[0;33mcol:14[0m> [0;32m'ostreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d8780[0m[0;1;36m '__result'[0m [0;32m'ostreambuf_iterator<_CharT>'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x67d9538[0m prev 0x60c40b8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf_iterator.h:319:3[0m, [0;33mline:329:5[0m> [0;33mline:322:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x67d8cd0[0m <[0;33mline:319:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x67d8d30[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x67d9498[0m prev 0x60c4018 <[0;33mline:320:5[0m, [0;33mline:329:5[0m> [0;33mline:322:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type (const _CharT *, const _CharT *, ostreambuf_iterator<_CharT>)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d9188[0m <[0;33mcol:20[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d9200[0m <[0;33mcol:43[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __last[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d93a0[0m <[0;33mline:323:6[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __result[0m [0;32m'ostreambuf_iterator<_CharT>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67d98b8[0m <[0;33mline:324:5[0m, [0;33mline:329:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67d96f0[0m <[0;33mline:325:7[0m, [0;33mcol:48[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67d95b8[0m <[0;33mcol:7[0m, [0;33mcol:41[0m> [0;33mcol:24[0m referenced[0;1;36m __num[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x67d96b8[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x67d9660[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m[0;33m 0x61f3228[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d9620[0m <[0;33mcol:32[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9200[0m[0;1;36m '__last'[0m [0;32m'const _CharT *'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d9640[0m <[0;33mcol:41[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9188[0m[0;1;36m '__first'[0m [0;32m'const _CharT *'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x67d9870[0m <[0;33mline:326:7[0m, [0;33mline:327:32[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67d9778[0m <[0;33mline:326:11[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67d9748[0m <[0;33mcol:11[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d9708[0m <[0;33mcol:11[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67d95b8[0m[0;1;36m '__num'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67d9760[0m <[0;33mcol:19[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67d9728[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x67d9840[0m <[0;33mline:327:2[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67d97b8[0m <[0;33mcol:2[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_put
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d9798[0m <[0;33mcol:2[0m> [0;32m'ostreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d93a0[0m[0;1;36m '__result'[0m [0;32m'ostreambuf_iterator<_CharT>'[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d9800[0m <[0;33mcol:18[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9188[0m[0;1;36m '__first'[0m [0;32m'const _CharT *'[0m
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d9820[0m <[0;33mcol:27[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67d95b8[0m[0;1;36m '__num'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x67d98a8[0m <[0;33mline:328:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67d9888[0m <[0;33mcol:14[0m> [0;32m'ostreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d93a0[0m[0;1;36m '__result'[0m [0;32m'ostreambuf_iterator<_CharT>'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x67da1e0[0m prev 0x67a3a50 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf_iterator.h:331:3[0m, [0;33mline:364:5[0m> [0;33mline:334:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x67d98f0[0m <[0;33mline:331:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x67d9950[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x67da140[0m prev 0x67a3988 <[0;33mline:332:5[0m, [0;33mline:364:5[0m> [0;33mline:334:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type (istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>, _CharT *)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d9da0[0m <[0;33mcol:20[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __first[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d9f40[0m <[0;33mline:335:6[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __last[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d9fb8[0m <[0;33mcol:42[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __result[0m [0;32m'_CharT *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67db6a0[0m <[0;33mline:336:5[0m, [0;33mline:364:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67da3d8[0m <[0;33mline:337:7[0m, [0;33mcol:78[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x67da380[0m <[0;33mcol:7[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __is_iterator_type[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x67da2e0[0m [0;32m'istreambuf_iterator<_CharT>'[0m dependent istreambuf_iterator
[0;34m    |     `-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67da558[0m <[0;33mline:338:7[0m, [0;33mcol:71[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x67da500[0m <[0;33mcol:7[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m traits_type[0m [0;32m'typename __is_iterator_type::traits_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x67da490[0m [0;32m'typename __is_iterator_type::traits_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67da688[0m <[0;33mline:339:7[0m, [0;33mcol:74[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x67da630[0m <[0;33mcol:7[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m streambuf_type[0m [0;32m'typename __is_iterator_type::streambuf_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x67da5c0[0m [0;32m'typename __is_iterator_type::streambuf_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67da808[0m <[0;33mline:340:7[0m, [0;33mcol:68[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x67da7b0[0m <[0;33mcol:7[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m int_type[0m [0;32m'typename traits_type::int_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x67da740[0m [0;32m'typename traits_type::int_type'[0m dependent
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x67db658[0m <[0;33mline:342:7[0m, [0;33mline:362:2[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67da908[0m <[0;33mline:342:11[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67da840[0m <[0;33mcol:11[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_sbuf
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67da820[0m <[0;33mcol:11[0m> [0;32m'istreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9da0[0m[0;1;36m '__first'[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m    | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x67da8f0[0m <[0;33mcol:30[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    | |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67da8a8[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_sbuf
[0;34m    | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67da888[0m <[0;33mcol:31[0m> [0;32m'istreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9f40[0m[0;1;36m '__last'[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67db630[0m <[0;33mline:343:2[0m, [0;33mline:362:2[0m>
[0;34m    |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67daa88[0m <[0;33mline:344:4[0m, [0;33mcol:42[0m>
[0;34m    |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67da9b8[0m <[0;33mcol:4[0m, [0;33mcol:35[0m> [0;33mcol:20[0m referenced[0;1;36m __sb[0m [0;32m'streambuf_type *'[0m cinit
[0;34m    |   |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67daa40[0m <[0;33mcol:27[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_sbuf
[0;34m    |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67daa20[0m <[0;33mcol:27[0m> [0;32m'istreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9da0[0m[0;1;36m '__first'[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m    |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67dabc0[0m <[0;33mline:345:4[0m, [0;33mcol:32[0m>
[0;34m    |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67daad0[0m <[0;33mcol:4[0m, [0;33mcol:31[0m> [0;33mcol:13[0m referenced[0;1;36m __c[0m [0;32m'int_type':'typename traits_type::int_type'[0m cinit
[0;34m    |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x67daba0[0m <[0;33mcol:19[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67dab58[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->sgetc
[0;34m    |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67dab38[0m <[0;33mcol:19[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67da9b8[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |   `-[0m[0;1;35mWhileStmt[0m[0;33m 0x67db618[0m <[0;33mline:346:4[0m, [0;33mline:361:6[0m>
[0;34m    |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x67dad28[0m <[0;33mline:346:11[0m, [0;33mcol:60[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x67dacf8[0m <[0;33mcol:12[0m, [0;33mcol:60[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x67dac10[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67dac48[0m <[0;33mcol:37[0m> [0;32m'int_type':'typename traits_type::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67daad0[0m[0;1;36m '__c'[0m [0;32m'int_type':'typename traits_type::int_type'[0m
[0;34m    |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x67dacd8[0m <[0;33mcol:42[0m, [0;33mcol:59[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x67daca0[0m <[0;33mcol:42[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67db5f8[0m <[0;33mline:347:6[0m, [0;33mline:361:6[0m>
[0;34m    |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67daf58[0m <[0;33mline:348:8[0m, [0;33mcol:59[0m>
[0;34m    |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67dad50[0m <[0;33mcol:8[0m, [0;33mcol:58[0m> [0;33mcol:25[0m referenced[0;1;36m __n[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m    |       |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x67daf20[0m <[0;33mcol:31[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x67daec8[0m <[0;33mcol:45[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x6072608[0m[0;33m 0x6094958[0m[0;33m 0x61f3228[0m
[0;34m    |       |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x67dae20[0m <[0;33mcol:31[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67dadd8[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->egptr
[0;34m    |       |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67dadb8[0m <[0;33mcol:31[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67da9b8[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |       |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x67daea8[0m <[0;33mcol:47[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67dae60[0m <[0;33mcol:47[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->gptr
[0;34m    |       |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67dae40[0m <[0;33mcol:47[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67da9b8[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x67db5d0[0m <[0;33mline:349:8[0m, [0;33mline:360:3[0m> has_else
[0;34m    |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67dafe0[0m <[0;33mline:349:12[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m    |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67dafb0[0m <[0;33mcol:12[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67daf70[0m <[0;33mcol:12[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67dad50[0m[0;1;36m '__n'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67dafc8[0m <[0;33mcol:18[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |         |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67daf90[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |         |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67db370[0m <[0;33mline:350:3[0m, [0;33mline:355:3[0m>
[0;34m    |         | |-[0m[0;1;35mCallExpr[0m[0;33m 0x67db150[0m <[0;33mline:351:5[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         | | |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x67db050[0m <[0;33mcol:5[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |         | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db088[0m <[0;33mcol:23[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9fb8[0m[0;1;36m '__result'[0m [0;32m'_CharT *'[0m
[0;34m    |         | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x67db110[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         | | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67db0c8[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->gptr
[0;34m    |         | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db0a8[0m <[0;33mcol:33[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67da9b8[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db130[0m <[0;33mcol:47[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67dad50[0m[0;1;36m '__n'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    |         | |-[0m[0;1;35mCallExpr[0m[0;33m 0x67db210[0m <[0;33mline:352:5[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67db1a8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->__safe_gbump
[0;34m    |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db188[0m <[0;33mcol:5[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67da9b8[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db1f0[0m <[0;33mcol:24[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67dad50[0m[0;1;36m '__n'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    |         | |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x67db278[0m <[0;33mline:353:5[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m    |         | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db238[0m <[0;33mcol:5[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9fb8[0m[0;1;36m '__result'[0m [0;32m'_CharT *'[0m
[0;34m    |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db258[0m <[0;33mcol:17[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67dad50[0m[0;1;36m '__n'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    |         | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67db350[0m <[0;33mline:354:5[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |         |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db2a8[0m <[0;33mcol:5[0m> [0;32m'int_type':'typename traits_type::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67daad0[0m[0;1;36m '__c'[0m [0;32m'int_type':'typename traits_type::int_type'[0m
[0;34m    |         |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x67db330[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67db2e8[0m <[0;33mcol:11[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->underflow
[0;34m    |         |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db2c8[0m <[0;33mcol:11[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67da9b8[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67db5b0[0m <[0;33mline:357:3[0m, [0;33mline:360:3[0m>
[0;34m    |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67db4c8[0m <[0;33mline:358:5[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |           | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x67db3f8[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |           | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x67db3e0[0m <[0;33mcol:6[0m, [0;33mcol:14[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m    |           | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db3a0[0m <[0;33mcol:6[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9fb8[0m[0;1;36m '__result'[0m [0;32m'_CharT *'[0m
[0;34m    |           | `-[0m[0;1;35mCallExpr[0m[0;33m 0x67db4a0[0m <[0;33mcol:19[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |           |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x67db448[0m <[0;33mcol:19[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db480[0m <[0;33mcol:45[0m> [0;32m'int_type':'typename traits_type::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67daad0[0m[0;1;36m '__c'[0m [0;32m'int_type':'typename traits_type::int_type'[0m
[0;34m    |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67db590[0m <[0;33mline:359:5[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db4e8[0m <[0;33mcol:5[0m> [0;32m'int_type':'typename traits_type::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67daad0[0m[0;1;36m '__c'[0m [0;32m'int_type':'typename traits_type::int_type'[0m
[0;34m    |             `-[0m[0;1;35mCallExpr[0m[0;33m 0x67db570[0m <[0;33mcol:11[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |               `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x67db528[0m <[0;33mcol:11[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->snextc
[0;34m    |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db508[0m <[0;33mcol:11[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67da9b8[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x67db690[0m <[0;33mline:363:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67db670[0m <[0;33mcol:14[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67d9fb8[0m[0;1;36m '__result'[0m [0;32m'_CharT *'[0m

Dumping std::basic_ios::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x689f0f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_ios.h:478:7[0m, [0;33mline:487:7[0m> [0;33mline:479:7[0m[0;1;36m move[0m [0;32m'void (basic_ios<_CharT, _Traits> &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x689f030[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __rhs[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x68a36b0[0m <[0;33mline:480:7[0m, [0;33mline:487:7[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x68a1ed0[0m <[0;33mline:481:2[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x68a1e68[0m <[0;33mcol:2[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_move[0;33m 0x6768710[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x68a1e58[0m <[0;33mcol:12[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68a1eb0[0m <[0;33mcol:20[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x689f030[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x68a1f78[0m <[0;33mline:482:2[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x68a1f08[0m <[0;33mcol:2[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_cache_locale[0;33m 0x689f810[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x68a1ef8[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x68a1f48[0m <[0;33mcol:18[0m> [0;32m'std::locale'[0m[0;36m lvalue[0m[0;36m[0m ->_M_ios_locale[0;33m 0x67663f8[0m
[0;34m  |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x68a1f38[0m <[0;33mcol:18[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x68a2098[0m <[0;33mline:483:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x68a1fb0[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->tie
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x68a1fa0[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x68a2070[0m <[0;33mcol:12[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x68a2018[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .tie
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68a1ff8[0m <[0;33mcol:12[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x689f030[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m  |   `-[0m[0;1;35mCXXNullPtrLiteralExpr[0m[0;33m 0x68a2060[0m <[0;33mcol:22[0m> [0;32m'nullptr_t'[0m[0;36m[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x68a3558[0m <[0;33mline:484:2[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x68a20d0[0m <[0;33mcol:2[0m> [0;32m'std::basic_ios::char_type':'_CharT'[0m[0;36m lvalue[0m[0;36m[0m ->_M_fill[0;33m 0x689bf00[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x68a20c0[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x68a3510[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_fill
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68a2100[0m <[0;33mcol:12[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x689f030[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x68a3620[0m <[0;33mline:485:2[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x68a3588[0m <[0;33mcol:2[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_fill_init[0;33m 0x689bf60[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x68a3578[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x68a35d8[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_fill_init
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68a35b8[0m <[0;33mcol:17[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x689f030[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m  `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x68a3690[0m <[0;33mline:486:2[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |-[0m[0;1;35mMemberExpr[0m[0;33m 0x68a3650[0m <[0;33mcol:2[0m> [0;32m'basic_streambuf<_CharT, _Traits> *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_streambuf[0;33m 0x689c0e8[0m
[0;34m    | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x68a3640[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    `-[0m[0;1;35mCXXNullPtrLiteralExpr[0m[0;33m 0x68a3680[0m <[0;33mcol:17[0m> [0;32m'nullptr_t'[0m[0;36m[0m[0;36m[0m

Dumping std::basic_ios::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x689f298[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_ios.h:489:7[0m, [0;33mline:491:28[0m> [0;33mline:490:7[0m[0;1;36m move[0m [0;32m'void (basic_ios<_CharT, _Traits> &&)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x689f1d8[0m <[0;33mcol:12[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __rhs[0m [0;32m'basic_ios<_CharT, _Traits> &&'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x68a3790[0m <[0;33mline:491:7[0m, [0;33mcol:28[0m>
[0;34m  `-[0m[0;1;35mCallExpr[0m[0;33m 0x68a3768[0m <[0;33mcol:9[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x68a3700[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->move
[0;34m    | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x68a36f0[0m <[0;33mcol:9[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m this
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68a3748[0m <[0;33mcol:20[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x689f1d8[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &&'[0m

Dumping Pont::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x697fa80[0m parent 0x5c7c9a0 prev 0x5c7d4d0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:32:1[0m, [0;33mline:37:1[0m> [0;33mline:32:12[0m[0;1;36m move[0m [0;32m'void (int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x697f968[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;33mcol:21[0m used[0;1;36m nx[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x697f9e8[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m ny[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x697ff20[0m <[0;33mcol:33[0m, [0;33mline:37:1[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x697ff08[0m <[0;33mline:33:2[0m, [0;33mline:36:2[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fd98[0m <[0;33mline:33:6[0m, [0;33mcol:48[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fd00[0m <[0;33mcol:6[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fc68[0m <[0;33mcol:6[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fbd0[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x697fbb8[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x697fb78[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x697f968[0m[0;1;36m 'nx'[0m [0;32m'int'[0m
[0;34m    | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x697fb98[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fc48[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x697fc30[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x697fbf0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x697f968[0m[0;1;36m 'nx'[0m [0;32m'int'[0m
[0;34m    | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x697fc10[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2000[0m
[0;34m    | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fce0[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x697fcc8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x697fc88[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x697f9e8[0m[0;1;36m 'ny'[0m [0;32m'int'[0m
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x697fca8[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fd78[0m <[0;33mcol:42[0m, [0;33mcol:48[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x697fd60[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x697fd20[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x697f9e8[0m[0;1;36m 'ny'[0m [0;32m'int'[0m
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x697fd40[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2000[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x697fee8[0m <[0;33mcol:54[0m, [0;33mline:36:2[0m>
[0;34m      |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fe30[0m <[0;33mline:34:3[0m, [0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x697fdc8[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->x[0;33m 0x5c7cb88[0m
[0;34m      | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x697fdb8[0m <[0;33mcol:3[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m this
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x697fe18[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x697fdf8[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x697f968[0m[0;1;36m 'nx'[0m [0;32m'int'[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x697fec8[0m <[0;33mline:35:3[0m, [0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m        |-[0m[0;1;35mMemberExpr[0m[0;33m 0x697fe60[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->y[0;33m 0x5c7cbf0[0m
[0;34m        | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x697fe50[0m <[0;33mcol:3[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m this
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x697feb0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x697fe90[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x697f9e8[0m[0;1;36m 'ny'[0m [0;32m'int'[0m

Dumping distance:
[0;1;32mFunctionDecl[0m[0;33m 0x67d2cc0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.h:19:1[0m, [0;33mcol:31[0m> [0;33mcol:8[0m used[0;1;36m distance[0m [0;32m'double (Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d2b68[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67d2be0[0m <[0;33mcol:25[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m b[0m [0;32m'Pont'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b7c4e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:77:3[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7c068[0m <[0;33mline:77:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b7c448[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator, std::input_iterator_tag)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7c220[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7c298[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7c310[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b7c8b0[0m <[0;33mline:82:5[0m, [0;33mline:93:5[0m>
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b7c6f8[0m <[0;33mline:86:7[0m, [0;33mcol:72[0m>
[0;34m|   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6b7c670[0m <[0;33mcol:7[0m, [0;33mcol:71[0m> [0;33mcol:65[0m referenced[0;1;36m __n[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m nrvo cinit
[0;34m|   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6b7c6d8[0m <[0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|   |-[0m[0;1;35mWhileStmt[0m[0;33m 0x6b7c860[0m <[0;33mline:87:7[0m, [0;33mline:91:2[0m>
[0;34m|   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6b7c798[0m <[0;33mline:87:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b7c750[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x6b6f7c8[0m
[0;34m|   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b7c710[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7c220[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b7c730[0m <[0;33mcol:25[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7c298[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b7c840[0m <[0;33mline:88:2[0m, [0;33mline:91:2[0m>
[0;34m|   |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6b7c7f0[0m <[0;33mline:89:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b7c7d0[0m <[0;33mcol:6[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7c220[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6b7c828[0m <[0;33mline:90:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b7c808[0m <[0;33mcol:6[0m> [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b7c670[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b7c898[0m <[0;33mline:92:7[0m, [0;33mcol:14[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b7c878[0m <[0;33mcol:14[0m> [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b7c670[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x755ac38[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x755aa20[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x755aa98[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x755ab00[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7589018[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7588e00[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7588e78[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7588ee0[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7594378[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7594160[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75941d8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7594240[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x759d188[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x759cf70[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x759cfe8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x759d050[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75ad1b8[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75acfa0[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75ad018[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75ad080[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75c3768[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75c3550[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75c35c8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75c3630[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75d8fd8[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const double *>::difference_type (const double *, const double *, std::input_iterator_tag)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75d8dc0[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const double *':'const double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75d8e38[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const double *':'const double *'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75d8ea0[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b7cd28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:95:3[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7c8d8[0m <[0;33mline:95:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _RandomAccessIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b7cc88[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<_RandomAccessIterator>::difference_type (_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7ca60[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced[0;1;36m __first[0m [0;32m'_RandomAccessIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7cad8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m referenced[0;1;36m __last[0m [0;32m'_RandomAccessIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7cb50[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b7ce08[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b7cdf8[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b7cdd8[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b7cd98[0m <[0;33mcol:14[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7cad8[0m[0;1;36m '__last'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b7cdb8[0m <[0;33mcol:23[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7ca60[0m[0;1;36m '__first'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x755b148[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x755af30[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x755afa8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x755b010[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7560a08[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75609f8[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x75609d8[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75609a8[0m <[0;33mcol:14[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7560968[0m <[0;33mcol:14[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x755afa8[0m[0;1;36m '__last'[0m [0;32m'char *':'char *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75609c0[0m <[0;33mcol:23[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7560988[0m <[0;33mcol:23[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x755af30[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75894a8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7589290[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7589308[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7589370[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75896f0[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75896e0[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x75896c0[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7589690[0m <[0;33mcol:14[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7589650[0m <[0;33mcol:14[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7589308[0m[0;1;36m '__last'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75896a8[0m <[0;33mcol:23[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7589670[0m <[0;33mcol:23[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7589290[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7594808[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75945f0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7594668[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75946d0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7594a50[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7594a40[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7594a20[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75949f0[0m <[0;33mcol:14[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75949b0[0m <[0;33mcol:14[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7594668[0m[0;1;36m '__last'[0m [0;32m'const char *':'const char *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7594a08[0m <[0;33mcol:23[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75949d0[0m <[0;33mcol:23[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75945f0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x759d618[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x759d400[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x759d478[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x759d4e0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x759d860[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x759d850[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x759d830[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x759d800[0m <[0;33mcol:14[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x759d7c0[0m <[0;33mcol:14[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x759d478[0m[0;1;36m '__last'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x759d818[0m <[0;33mcol:23[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x759d7e0[0m <[0;33mcol:23[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x759d400[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75ad648[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75ad430[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75ad4a8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75ad510[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75ad890[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75ad880[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x75ad860[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75ad830[0m <[0;33mcol:14[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75ad7f0[0m <[0;33mcol:14[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75ad4a8[0m[0;1;36m '__last'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75ad848[0m <[0;33mcol:23[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75ad810[0m <[0;33mcol:23[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75ad430[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75c3bf8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75c39e0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75c3a58[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75c3ac0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75c3e40[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75c3e30[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x75c3e10[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75c3de0[0m <[0;33mcol:14[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75c3da0[0m <[0;33mcol:14[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75c3a58[0m[0;1;36m '__last'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75c3df8[0m <[0;33mcol:23[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75c3dc0[0m <[0;33mcol:23[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75c39e0[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75d9468[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const double *>::difference_type (const double *, const double *, std::random_access_iterator_tag)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75d9250[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const double *':'const double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75d92c8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const double *':'const double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75d9330[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75d96b0[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75d96a0[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x75d9680[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75d9650[0m <[0;33mcol:14[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75d9610[0m <[0;33mcol:14[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75d92c8[0m[0;1;36m '__last'[0m [0;32m'const double *':'const double *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75d9668[0m <[0;33mcol:23[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75d9630[0m <[0;33mcol:23[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75d9250[0m[0;1;36m '__first'[0m [0;32m'const double *':'const double *'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b7d3a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:109:3[0m, [0;33mline:113:27[0m> [0;33mline:111:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7ce20[0m <[0;33mline:109:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b7d308[0m <[0;33mline:110:5[0m, [0;33mline:113:27[0m> [0;33mline:111:5[0m[0;1;36m __distance[0m [0;32m'std::ptrdiff_t (std::_List_iterator<_Tp>, std::_List_iterator<_Tp>, std::input_iterator_tag)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7cfe8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:111:50[0m> [0;33mcol:51[0m [0;32m'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7d168[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:112:43[0m> [0;33mcol:44[0m [0;32m'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7d1e0[0m <[0;33mline:113:9[0m> [0;33mcol:27[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b7d988[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:115:3[0m, [0;33mline:119:27[0m> [0;33mline:117:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7d418[0m <[0;33mline:115:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b7d8e8[0m <[0;33mline:116:5[0m, [0;33mline:119:27[0m> [0;33mline:117:5[0m[0;1;36m __distance[0m [0;32m'std::ptrdiff_t (std::_List_const_iterator<_Tp>, std::_List_const_iterator<_Tp>, std::input_iterator_tag)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7d5c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:117:56[0m> [0;33mcol:57[0m [0;32m'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7d748[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:118:49[0m> [0;33mcol:50[0m [0;32m'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7d7c0[0m <[0;33mline:119:9[0m> [0;33mcol:27[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b81e18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:135:3[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m[0;1;36m distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7d9f8[0m <[0;33mline:135:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b81d78[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m[0;1;36m distance[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7db80[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b81c50[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b82038[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b82028[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b81ff0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b81ea0[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__distance'[0;33m 0x6b7c4e8[0m[0;33m 0x6b7cd28[0m[0;33m 0x6b7d3a8[0m[0;33m 0x6b7d988[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b81f00[0m <[0;33mcol:30[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7db80[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b81f20[0m <[0;33mcol:39[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b81c50[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b81fc8[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b81f60[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iterator_category'[0;33m 0x6b7b208[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b81fa8[0m <[0;33mcol:34[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b7db80[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75539a8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7553810[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7553888[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7560b68[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7560b58[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7560b40[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7560a90[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7560a78[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<char *>::difference_type (*)(char *, char *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7560930[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x755b148[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7cd28[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7560ac8[0m <[0;33mcol:30[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7559e80[0m <[0;33mcol:30[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7553810[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7560ae0[0m <[0;33mcol:39[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7559ea0[0m <[0;33mcol:39[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7553888[0m[0;1;36m '__last'[0m [0;32m'char *':'char *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7560b10[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7560af8[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x755a800[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x755a7e8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<char *>::iterator_category (*)(char *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x755a338[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<char *>::iterator_category (char *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x755a238[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<char *>::iterator_category (char *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7b208[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x755a828[0m <[0;33mcol:34[0m> [0;32m'char *const':'char *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7559f08[0m <[0;33mcol:34[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7553810[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x757f2d8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x757f140[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x757f1b8[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7589858[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7589848[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7589830[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7589780[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7589768[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type (*)(wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7589618[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x75894a8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7cd28[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75897b8[0m <[0;33mcol:30[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75885c0[0m <[0;33mcol:30[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x757f140[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75897d0[0m <[0;33mcol:39[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75885e0[0m <[0;33mcol:39[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x757f1b8[0m[0;1;36m '__last'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7589800[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x75897e8[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x7588c60[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7588c48[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category (*)(wchar_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75889f8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x75888f8[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7b208[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7588c88[0m <[0;33mcol:34[0m> [0;32m'wchar_t *const':'wchar_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7588648[0m <[0;33mcol:34[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x757f140[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7592988[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75927f0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7592868[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7594bb8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7594ba8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7594b90[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7594ae0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7594ac8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char *>::difference_type (*)(const char *, const char *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7594978[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7594808[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7cd28[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7594b18[0m <[0;33mcol:30[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7593920[0m <[0;33mcol:30[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75927f0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7594b30[0m <[0;33mcol:39[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7593940[0m <[0;33mcol:39[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7592868[0m[0;1;36m '__last'[0m [0;32m'const char *':'const char *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7594b60[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7594b48[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x7593fc0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7593fa8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char *>::iterator_category (*)(const char *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7593d58[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char *>::iterator_category (const char *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7593c58[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char *>::iterator_category (const char *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7b208[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7593fe8[0m <[0;33mcol:34[0m> [0;32m'const char *const':'const char *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75939a8[0m <[0;33mcol:34[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75927f0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x759b798[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x759b600[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x759b678[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x759d9c8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x759d9b8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x759d9a0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x759d8f0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x759d8d8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type (*)(const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x759d788[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x759d618[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7cd28[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x759d928[0m <[0;33mcol:30[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x759c730[0m <[0;33mcol:30[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x759b600[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x759d940[0m <[0;33mcol:39[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x759c750[0m <[0;33mcol:39[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x759b678[0m[0;1;36m '__last'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x759d970[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x759d958[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x759cdd0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x759cdb8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (*)(const wchar_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x759cb68[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x759ca68[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7b208[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x759cdf8[0m <[0;33mcol:34[0m> [0;32m'const wchar_t *const':'const wchar_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x759c7b8[0m <[0;33mcol:34[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x759b600[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75a43a8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75a4210[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75a4288[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75ad9f8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75ad9e8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x75ad9d0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x75ad920[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75ad908[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type (*)(const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75ad7b8[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x75ad648[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7cd28[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75ad958[0m <[0;33mcol:30[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75ac760[0m <[0;33mcol:30[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75a4210[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75ad970[0m <[0;33mcol:39[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75ac780[0m <[0;33mcol:39[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75a4288[0m[0;1;36m '__last'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x75ad9a0[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x75ad988[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x75ace00[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75acde8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category (*)(const char16_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75acb98[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x75aca98[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7b208[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75ace28[0m <[0;33mcol:34[0m> [0;32m'const char16_t *const':'const char16_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75ac7e8[0m <[0;33mcol:34[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75a4210[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75bc988[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75bc7f0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75bc868[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75c3fa8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75c3f98[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x75c3f80[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x75c3ed0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75c3eb8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type (*)(const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75c3d68[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x75c3bf8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7cd28[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75c3f08[0m <[0;33mcol:30[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75c2d10[0m <[0;33mcol:30[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75bc7f0[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75c3f20[0m <[0;33mcol:39[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75c2d30[0m <[0;33mcol:39[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75bc868[0m[0;1;36m '__last'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x75c3f50[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x75c3f38[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x75c33b0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75c3398[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category (*)(const char32_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75c3148[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x75c3048[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7b208[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75c33d8[0m <[0;33mcol:34[0m> [0;32m'const char32_t *const':'const char32_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75c2d98[0m <[0;33mcol:34[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75bc7f0[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x75d6e18[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const double *>::difference_type (const double *, const double *)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75d6c80[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const double *':'const double *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x75d6cf8[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const double *':'const double *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x75d9818[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x75d9808[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x75d97f0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const double *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x75d9740[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const double *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75d9728[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const double *>::difference_type (*)(const double *, const double *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75d95d8[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const double *>::difference_type (const double *, const double *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x75d9468[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const double *>::difference_type (const double *, const double *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7cd28[0m[0;1;36m '__distance'[0m)
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75d9778[0m <[0;33mcol:30[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75d8538[0m <[0;33mcol:30[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75d6c80[0m[0;1;36m '__first'[0m [0;32m'const double *':'const double *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75d9790[0m <[0;33mcol:39[0m> [0;32m'const double *':'const double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75d8558[0m <[0;33mcol:39[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75d6cf8[0m[0;1;36m '__last'[0m [0;32m'const double *':'const double *'[0m
[0;34m          `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x75d97c0[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m            `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x75d97a8[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const double *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mCallExpr[0m[0;33m 0x75d8c20[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const double *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m                |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75d8c08[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const double *>::iterator_category (*)(const double *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75d89b8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const double *>::iterator_category (const double *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x75d88b8[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const double *>::iterator_category (const double *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7b208[0m[0;1;36m '__iterator_category'[0m)
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x75d8c48[0m <[0;33mcol:34[0m> [0;32m'const double *const':'const double *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x75d85c0[0m <[0;33mcol:34[0m> [0;32m'const double *':'const double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x75d6c80[0m[0;1;36m '__first'[0m [0;32m'const double *':'const double *'[0m

Dumping distance:
[0;1;32mFunctionDecl[0m[0;33m 0x74a6d10[0m prev 0x67d2cc0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:39:1[0m, [0;33mline:43:1[0m> [0;33mline:39:8[0m used[0;1;36m distance[0m [0;32m'double (Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x74a6bf8[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x74a6c70[0m <[0;33mcol:25[0m, [0;33mcol:30[0m> [0;33mcol:30[0m used[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x74a7d38[0m <[0;33mcol:33[0m, [0;33mline:43:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x74a6f70[0m <[0;33mline:40:2[0m, [0;33mcol:30[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x74a6dd8[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:6[0m used[0;1;36m dx[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x74a6f50[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x74a6e90[0m <[0;33mcol:11[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x74a6e60[0m <[0;33mcol:11[0m, [0;33mcol:13[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x74a5c08[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a6eb0[0m <[0;33mcol:11[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a6e40[0m <[0;33mcol:11[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x74a6bf8[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x74a6f18[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x74a6ee8[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x74a5c08[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a6f38[0m <[0;33mcol:22[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a6ec8[0m <[0;33mcol:22[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x74a6c70[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x74a7138[0m <[0;33mline:41:2[0m, [0;33mcol:30[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x74a6fa0[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:6[0m used[0;1;36m dy[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x74a7118[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x74a7058[0m <[0;33mcol:11[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x74a7028[0m <[0;33mcol:11[0m, [0;33mcol:13[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x74a5da0[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a7078[0m <[0;33mcol:11[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a7008[0m <[0;33mcol:11[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x74a6bf8[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x74a70e0[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x74a70b0[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x74a5da0[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a7100[0m <[0;33mcol:22[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a7090[0m <[0;33mcol:22[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x74a6c70[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x74a7d28[0m <[0;33mline:42:2[0m, [0;33mcol:35[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x74a7d00[0m <[0;33mcol:9[0m, [0;33mcol:35[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a7ce8[0m <[0;33mcol:9[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a7ba8[0m <[0;33mcol:9[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x74a7aa8[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x68f06f8[0m[0;1;36m 'sqrt'[0m)
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x74a7310[0m <[0;33mcol:14[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m        |-[0m[0;1;35mParenExpr[0m[0;33m 0x74a7240[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x74a7220[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a71f0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a71b0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x74a6dd8[0m[0;1;36m 'dx'[0m [0;32m'int'[0m
[0;34m        |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a7208[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a71d0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x74a6dd8[0m[0;1;36m 'dx'[0m [0;32m'int'[0m
[0;34m        `-[0m[0;1;35mParenExpr[0m[0;33m 0x74a72f0[0m <[0;33mcol:26[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x74a72d0[0m <[0;33mcol:27[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a72a0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a7260[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x74a6fa0[0m[0;1;36m 'dy'[0m [0;32m'int'[0m
[0;34m            `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74a72b8[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x74a7280[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x74a6fa0[0m[0;1;36m 'dy'[0m [0;32m'int'[0m

Dumping negyzet_e:
[0;1;32mFunctionDecl[0m[0;33m 0x6090900[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.h:17:1[0m, [0;33mcol:45[0m> [0;33mcol:5[0m[0;1;36m negyzet_e[0m [0;32m'int (Pont, Pont, Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6061820[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6090710[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6090788[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m c[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6090800[0m <[0;33mcol:39[0m, [0;33mcol:44[0m> [0;33mcol:44[0m[0;1;36m d[0m [0;32m'Pont'[0m

Dumping negyzet_e:
[0;1;32mFunctionDecl[0m[0;33m 0x6d658c8[0m prev 0x6090900 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:45:1[0m, [0;33mline:60:1[0m> [0;33mline:45:5[0m[0;1;36m negyzet_e[0m [0;32m'int (Pont, Pont, Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d656b0[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;33mcol:20[0m used[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d65728[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d657a0[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m c[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d65818[0m <[0;33mcol:39[0m, [0;33mcol:44[0m> [0;33mcol:44[0m used[0;1;36m d[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da4150[0m <[0;33mcol:47[0m, [0;33mline:60:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6d89240[0m <[0;33mline:46:2[0m, [0;33mline:53:3[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6d65d50[0m <[0;33mline:46:2[0m, [0;33mline:53:2[0m> [0;33mline:46:18[0m used[0;1;36m szakaszok[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m cinit
[0;34m  |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6d89228[0m <[0;33mcol:30[0m, [0;33mline:53:2[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d891f0[0m <[0;33mline:46:30[0m, [0;33mline:53:2[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (initializer_list<std::vector<double, std::allocator<double> >::value_type>, const std::vector<double, std::allocator<double> >::allocator_type &)'[0m list std::initializer_list
[0;34m  |       |-[0m[0;1;35mCXXStdInitializerListExpr[0m[0;33m 0x6d89020[0m <[0;33mline:46:30[0m, [0;33mline:53:2[0m> [0;32m'initializer_list<std::vector<double, std::allocator<double> >::value_type>':'std::initializer_list<double>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6d89008[0m <[0;33mline:46:30[0m, [0;33mline:53:2[0m> [0;32m'const double [6]'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |       |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6d88f98[0m <[0;33mline:46:30[0m, [0;33mline:53:2[0m> [0;32m'const double [6]'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6d66660[0m <[0;33mline:47:3[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66648[0m <[0;33mcol:3[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d665f8[0m <[0;33mcol:3[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d64650[0m[0;1;36m 'distance'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  |       |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d66850[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66690[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d65e08[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d656b0[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  |       |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d66978[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66960[0m <[0;33mcol:15[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d65e28[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d65728[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  |       |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6d66b50[0m <[0;33mline:48:3[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66b38[0m <[0;33mcol:3[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d66b18[0m <[0;33mcol:3[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d64650[0m[0;1;36m 'distance'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  |       |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d66b98[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66b80[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d669f8[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d656b0[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  |       |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d66be0[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66bc8[0m <[0;33mcol:15[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d66a18[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d657a0[0m[0;1;36m 'c'[0m [0;32m'Pont'[0m
[0;34m  |       |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6d66dc0[0m <[0;33mline:49:3[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66da8[0m <[0;33mcol:3[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d66d88[0m <[0;33mcol:3[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d64650[0m[0;1;36m 'distance'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  |       |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d66e08[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66df0[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d66c60[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d656b0[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  |       |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d66e50[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d66e38[0m <[0;33mcol:15[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d66c80[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d65818[0m[0;1;36m 'd'[0m [0;32m'Pont'[0m
[0;34m  |       |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6d67030[0m <[0;33mline:50:3[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d67018[0m <[0;33mcol:3[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d66ff8[0m <[0;33mcol:3[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d64650[0m[0;1;36m 'distance'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  |       |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d67078[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d67060[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d66ed0[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d65728[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  |       |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d68a40[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d670a8[0m <[0;33mcol:15[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d66ef0[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d657a0[0m[0;1;36m 'c'[0m [0;32m'Pont'[0m
[0;34m  |       |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6d68c20[0m <[0;33mline:51:3[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d68c08[0m <[0;33mcol:3[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d68be8[0m <[0;33mcol:3[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d64650[0m[0;1;36m 'distance'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  |       |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d68c68[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d68c50[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d68ac0[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d65728[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  |       |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d68cb0[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d68c98[0m <[0;33mcol:15[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d68ae0[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d65818[0m[0;1;36m 'd'[0m [0;32m'Pont'[0m
[0;34m  |       |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6d68e90[0m <[0;33mline:52:3[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d68e78[0m <[0;33mcol:3[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d68e58[0m <[0;33mcol:3[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d64650[0m[0;1;36m 'distance'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  |       |       |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d68ed8[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d68ec0[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d68d30[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d65818[0m[0;1;36m 'd'[0m [0;32m'Pont'[0m
[0;34m  |       |       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d68f20[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d68f08[0m <[0;33mcol:15[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d68d50[0m <[0;33mcol:15[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d657a0[0m[0;1;36m 'c'[0m [0;32m'Pont'[0m
[0;34m  |       `-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x6d891d0[0m <[0;33m<invalid sloc>[0m> [0;32m'const std::vector<double, std::allocator<double> >::allocator_type':'const std::allocator<double>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6d92478[0m <[0;33mline:54:2[0m, [0;33mcol:40[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6d91180[0m <[0;33mcol:2[0m, [0;33mcol:40[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d91168[0m <[0;33mcol:2[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d910e0[0m <[0;33mcol:2[0m> [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d90fd8[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x679da58[0m[0;1;36m 'sort'[0m)
[0;34m  |   |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d923c0[0m <[0;33mcol:7[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m  |   | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6d92278[0m <[0;33mcol:7[0m, [0;33mcol:23[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6d89358[0m <[0;33mcol:7[0m, [0;33mcol:23[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6d89328[0m <[0;33mcol:7[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x6d7d560[0m
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d892a8[0m <[0;33mcol:7[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d92448[0m <[0;33mcol:25[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > > &&) noexcept'[0m elidable
[0;34m  |     `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6d92430[0m <[0;33mcol:25[0m, [0;33mcol:39[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6d90d30[0m <[0;33mcol:25[0m, [0;33mcol:39[0m> [0;32m'std::vector<double, std::allocator<double> >::iterator':'__gnu_cxx::__normal_iterator<double *, std::vector<double, std::allocator<double> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6d90d00[0m <[0;33mcol:25[0m, [0;33mcol:35[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x6d7d768[0m
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d90c80[0m <[0;33mcol:25[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6da3ab0[0m <[0;33mline:55:2[0m, [0;33mline:57:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6d92530[0m <[0;33mline:55:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6d924a8[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6d92510[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d925a0[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d92588[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d92548[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d924a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6d92568[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 6[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6d925e0[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d925c0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d924a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6da3a98[0m <[0;33mcol:29[0m, [0;33mline:57:3[0m>
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3a60[0m <[0;33mline:56:3[0m, [0;33mcol:27[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3a48[0m <[0;33mcol:24[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da39d0[0m <[0;33mcol:24[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6cc8728[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d9f1a0[0m <[0;33mcol:3[0m, [0;33mcol:22[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d9f188[0m <[0;33mcol:8[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(double)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d9f108[0m <[0;33mcol:8[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6cc1228[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m
[0;34m  |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d925f8[0m <[0;33mcol:3[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d62440[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d9f0f0[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d92720[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d92708[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d92688[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6d7e990[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |     |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d92618[0m <[0;33mcol:11[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d92670[0m <[0;33mcol:21[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d92658[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d92638[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d924a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da39b8[0m <[0;33mcol:27[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6d9f1d8[0m <[0;33mcol:27[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " "[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6da4140[0m <[0;33mline:58:2[0m, [0;33mcol:105[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da4128[0m <[0;33mcol:9[0m, [0;33mcol:105[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da4108[0m <[0;33mcol:9[0m, [0;33mcol:105[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da3ee8[0m <[0;33mcol:9[0m, [0;33mcol:72[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m        | |-[0m[0;1;35mParenExpr[0m[0;33m 0x6da3cc8[0m <[0;33mcol:9[0m, [0;33mcol:38[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da3ca8[0m <[0;33mcol:10[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m        | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3c78[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3b78[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3b60[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3b40[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6d7e990[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m
[0;34m        | |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3ae8[0m <[0;33mcol:10[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m        | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3b28[0m <[0;33mcol:20[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m        | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da3b08[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m        | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3c90[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3c40[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3c28[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3c08[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6d7e990[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m
[0;34m        | |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3bb0[0m <[0;33mcol:26[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m        | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3bf0[0m <[0;33mcol:36[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m        | |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da3bd0[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 3[0m
[0;34m        | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6da3ec8[0m <[0;33mcol:43[0m, [0;33mcol:72[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da3ea8[0m <[0;33mcol:44[0m, [0;33mcol:71[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m        |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3e78[0m <[0;33mcol:44[0m, [0;33mcol:55[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3d78[0m <[0;33mcol:44[0m, [0;33mcol:55[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3d60[0m <[0;33mcol:53[0m, [0;33mcol:55[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3d40[0m <[0;33mcol:53[0m, [0;33mcol:55[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6d7e990[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m
[0;34m        |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3ce8[0m <[0;33mcol:44[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m        |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3d28[0m <[0;33mcol:54[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m        |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da3d08[0m <[0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3e90[0m <[0;33mcol:60[0m, [0;33mcol:71[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3e40[0m <[0;33mcol:60[0m, [0;33mcol:71[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3e28[0m <[0;33mcol:69[0m, [0;33mcol:71[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3e08[0m <[0;33mcol:69[0m, [0;33mcol:71[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6d7e990[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m
[0;34m        |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3db0[0m <[0;33mcol:60[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m        |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3df0[0m <[0;33mcol:70[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m        |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da3dd0[0m <[0;33mcol:70[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 5[0m
[0;34m        `-[0m[0;1;35mParenExpr[0m[0;33m 0x6da40e8[0m <[0;33mcol:77[0m, [0;33mcol:105[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6da40c8[0m <[0;33mcol:78[0m, [0;33mcol:104[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da4098[0m <[0;33mcol:78[0m, [0;33mcol:89[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da3f98[0m <[0;33mcol:78[0m, [0;33mcol:89[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m            |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3f80[0m <[0;33mcol:87[0m, [0;33mcol:89[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3f60[0m <[0;33mcol:87[0m, [0;33mcol:89[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6d7e990[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m
[0;34m            |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3f08[0m <[0;33mcol:78[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m            |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da3f48[0m <[0;33mcol:88[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m            |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da3f28[0m <[0;33mcol:88[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 3[0m
[0;34m            `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da40b0[0m <[0;33mcol:93[0m, [0;33mcol:104[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6da4060[0m <[0;33mcol:93[0m, [0;33mcol:104[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type':'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da4048[0m <[0;33mcol:102[0m, [0;33mcol:104[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da4028[0m <[0;33mcol:102[0m, [0;33mcol:104[0m> [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6d7e990[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<double, std::allocator<double> >::reference (std::vector::size_type) noexcept'[0m
[0;34m                |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6da3fd0[0m <[0;33mcol:93[0m> [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d65d50[0m[0;1;36m 'szakaszok'[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6da4010[0m <[0;33mcol:103[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6da3ff0[0m <[0;33mcol:103[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m

Dumping random_pontok:
[0;1;32mFunctionDecl[0m[0;33m 0x5a40ab0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.h:18:1[0m, [0;33mcol:25[0m> [0;33mcol:6[0m[0;1;36m random_pontok[0m [0;32m'void (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5a40a20[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;33mcol:24[0m[0;1;36m n[0m [0;32m'int'[0m

Dumping random_pontok:
[0;1;32mFunctionDecl[0m[0;33m 0x6754678[0m prev 0x5a40ab0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:62:1[0m, [0;33mline:68:1[0m> [0;33mline:62:6[0m[0;1;36m random_pontok[0m [0;32m'void (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67545e8[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6776b20[0m <[0;33mcol:27[0m, [0;33mline:68:1[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6754930[0m <[0;33mline:63:2[0m, [0;33mcol:18[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6754918[0m <[0;33mcol:2[0m> [0;32m'void (*)(unsigned int) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67548a0[0m <[0;33mcol:2[0m> [0;32m'void (unsigned int) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bf74a8[0m[0;1;36m 'srand'[0m [0;32m'void (unsigned int) throw()'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6754958[0m <[0;33mcol:8[0m, [0;33mcol:17[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6754860[0m <[0;33mcol:8[0m, [0;33mcol:17[0m> [0;32m'time_t':'long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6754848[0m <[0;33mcol:8[0m> [0;32m'time_t (*)(time_t *) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67547c8[0m <[0;33mcol:8[0m> [0;32m'time_t (time_t *) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x620e820[0m[0;1;36m 'time'[0m [0;32m'time_t (time_t *) throw()'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6754888[0m <[0;33m/home/tunde/Downloads/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/lib/clang/9.0.0/include/stddef.h:84:18[0m> [0;32m'time_t *'[0m[0;36m[0m[0;36m[0m <[0;31mNullToPointer[0m>
[0;34m  |       `-[0m[0;1;35mGNUNullExpr[0m[0;33m 0x67547b0[0m <[0;33mcol:18[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67765b0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:64:2[0m, [0;33mcol:28[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6754d50[0m <[0;33mcol:2[0m, [0;33mcol:27[0m> [0;33mcol:16[0m used[0;1;36m pontok[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m callinit
[0;34m  |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6776598[0m <[0;33mcol:16[0m, [0;33mcol:27[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6776558[0m <[0;33mcol:16[0m, [0;33mcol:27[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector::size_type, const std::vector<Pont, std::allocator<Pont> >::value_type &, const std::vector<Pont, std::allocator<Pont> >::allocator_type &)'[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6776400[0m <[0;33mcol:23[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67763e8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6754d00[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67545e8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |       |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6776470[0m <[0;33mcol:26[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6776438[0m <[0;33mcol:26[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m  |       |   |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6754db8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |       |   `-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x6776418[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x6776538[0m <[0;33m<invalid sloc>[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >::allocator_type':'const std::allocator<Pont>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  `-[0m[0;1;35mForStmt[0m[0;33m 0x6776ae8[0m <[0;33mline:65:2[0m, [0;33mline:67:3[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6776668[0m <[0;33mline:65:7[0m, [0;33mcol:16[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67765e0[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6776648[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67766f0[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67766c0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6776680[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67765e0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67766d8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67766a0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67545e8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6776730[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6776710[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67765e0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6776ad0[0m <[0;33mcol:30[0m, [0;33mline:67:3[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6776ab8[0m <[0;33mline:66:4[0m, [0;33mcol:52[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x67769f8[0m <[0;33mcol:4[0m, [0;33mcol:52[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mMemberExpr[0m[0;33m 0x67769c8[0m <[0;33mcol:4[0m, [0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x676c588[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6776748[0m <[0;33mcol:4[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6754d50[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m          `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6776aa0[0m <[0;33mcol:22[0m, [0;33mcol:51[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::value_type':'Pont'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6776a68[0m <[0;33mcol:22[0m, [0;33mcol:51[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::value_type':'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m              |-[0m[0;1;35mParenExpr[0m[0;33m 0x67769a8[0m <[0;33mcol:22[0m, [0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6776988[0m <[0;33mcol:23[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m              |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6776888[0m <[0;33mcol:23[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '%'
[0;34m              |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6776848[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6776830[0m <[0;33mcol:23[0m> [0;32m'int (*)() throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6776810[0m <[0;33mcol:23[0m> [0;32m'int () throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bf7358[0m[0;1;36m 'rand'[0m [0;32m'int () throw()'[0m
[0;34m              |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6776868[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2001[0m
[0;34m              |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6776968[0m <[0;33mcol:38[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '%'
[0;34m              |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6776928[0m <[0;33mcol:38[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6776910[0m <[0;33mcol:38[0m> [0;32m'int (*)() throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67768f0[0m <[0;33mcol:38[0m> [0;32m'int () throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bf7358[0m[0;1;36m 'rand'[0m [0;32m'int () throw()'[0m
[0;34m              |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6776948[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2001[0m
[0;34m              `-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x6776a48[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m

Dumping rendez_x_szerint:
[0;1;32mFunctionDecl[0m[0;33m 0x6ccbaf8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:70:1[0m, [0;33mline:72:1[0m> [0;33mline:70:6[0m[0;1;36m rendez_x_szerint[0m [0;32m'void (vector<double>)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ccba00[0m <[0;33mcol:23[0m, [0;33mcol:39[0m> [0;33mcol:39[0m used[0;1;36m pontok[0m [0;32m'vector<double>':'std::vector<double, std::allocator<double> >'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd2088[0m <[0;33mcol:47[0m, [0;33mline:72:1[0m>

Dumping x_rendez:
[0;1;32mFunctionDecl[0m[0;33m 0x65af588[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user13/labor3/feladat1/Pont.cpp:74:1[0m, [0;33mline:76:1[0m> [0;33mline:74:6[0m[0;1;36m x_rendez[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65af438[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65af4b0[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;33mcol:42[0m used[0;1;36m b[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65af748[0m <[0;33mcol:45[0m, [0;33mline:76:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x65af738[0m <[0;33mline:75:2[0m, [0;33mcol:27[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65af718[0m <[0;33mcol:9[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m      |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x65af688[0m <[0;33mcol:9[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x65af658[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x6545758[0m
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65af638[0m <[0;33mcol:9[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65af438[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m      `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x65af6f8[0m <[0;33mcol:20[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mMemberExpr[0m[0;33m 0x65af6c8[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x6545758[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65af6a8[0m <[0;33mcol:20[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65af4b0[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m

