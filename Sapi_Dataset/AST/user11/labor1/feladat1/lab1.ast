Dumping countBits:
[0;1;32mFunctionDecl[0m[0;33m 0x5869c88[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:6:1[0m, [0;33mcol:18[0m> [0;33mcol:5[0m[0;1;36m countBits[0m [0;32m'int (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5869bf0[0m <[0;33mcol:15[0m> [0;33mcol:18[0m [0;32m'int'[0m

Dumping countBits:
[0;1;32mFunctionDecl[0m[0;33m 0x5aeaa08[0m prev 0x5869c88 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:7:1[0m, [0;33mline:16:1[0m> [0;33mline:7:5[0m[0;1;36m countBits[0m [0;32m'int (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5aea970[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m number[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5aeae20[0m <[0;33mline:8:1[0m, [0;33mline:16:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5aeab50[0m <[0;33mline:9:5[0m, [0;33mcol:12[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5aeaac8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:9[0m used[0;1;36m s[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5aeab30[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x5aeadc0[0m <[0;33mline:10:5[0m, [0;33mline:14:5[0m>
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5aeaba0[0m <[0;33mline:10:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5aeab88[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5aeab68[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5aea970[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5aeada0[0m <[0;33mline:11:5[0m, [0;33mline:14:5[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5aeacc8[0m <[0;33mline:12:9[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5aeabb8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5aeaac8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5aeaca8[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5aeac90[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5aeabd8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5aeaac8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x5aeac70[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5aeac50[0m <[0;33mcol:14[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '&'
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5aeac38[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5aeabf8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5aea970[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5aeac18[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5aead80[0m <[0;33mline:13:9[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5aeace8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5aea970[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5aead60[0m <[0;33mcol:16[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '>>'
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5aead48[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5aead08[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5aea970[0m[0;1;36m 'number'[0m [0;32m'int'[0m
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5aead28[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5aeae10[0m <[0;33mline:15:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5aeadf8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5aeadd8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5aeaac8[0m[0;1;36m 's'[0m [0;32m'int'[0m

Dumping setBit:
[0;1;32mFunctionDecl[0m[0;33m 0x6e9ded0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:7:1[0m, [0;33mcol:22[0m> [0;33mcol:5[0m[0;1;36m setBit[0m [0;32m'int (int &, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6e9dd70[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;33mcol:17[0m [0;32m'int &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6e9ddf0[0m <[0;33mcol:19[0m> [0;33mcol:22[0m [0;32m'int'[0m

Dumping setBit:
[0;1;32mFunctionDecl[0m[0;33m 0x711ed00[0m prev 0x6e9ded0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:17:1[0m, [0;33mline:29:1[0m> [0;33mline:17:5[0m[0;1;36m setBit[0m [0;32m'int (int &, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x711ebe0[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m number[0m [0;32m'int &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x711ec60[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m order[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7121e80[0m <[0;33mline:18:1[0m, [0;33mline:29:1[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x7121e58[0m <[0;33mline:19:5[0m, [0;33mline:27:5[0m> has_else
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x711eea0[0m <[0;33mline:19:9[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x711ee08[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x711edf0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x711edb0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x711ec60[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m    | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x711edd0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 31[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x711ee80[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x711ee68[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x711ee28[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x711ec60[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x711ee48[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x711eef0[0m <[0;33mline:20:5[0m, [0;33mline:22:5[0m>
[0;34m    | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x711eee0[0m <[0;33mline:21:9[0m, [0;33mcol:16[0m>
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x711eec0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7121e38[0m <[0;33mline:24:5[0m, [0;33mline:27:5[0m>
[0;34m      |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x7121dd8[0m <[0;33mline:25:9[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '|=' ComputeLHSTy=[0;32m'unsigned long'[0m ComputeResultTy=[0;32m'unsigned long'[0m
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x711ef08[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x711ebe0[0m[0;1;36m 'number'[0m [0;32m'int &'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7121db8[0m <[0;33mcol:18[0m, [0;33mcol:23[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |   |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7121d60[0m <[0;33mcol:18[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7121da0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7121d80[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x711ec60[0m[0;1;36m 'order'[0m [0;32m'int'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7121e28[0m <[0;33mline:26:9[0m, [0;33mcol:16[0m>
[0;34m        `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7121e08[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m

Dumping mean:
[0;1;32mFunctionDecl[0m[0;33m 0x5147140[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:8:1[0m, [0;33mcol:28[0m> [0;33mcol:8[0m used[0;1;36m mean[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5146fa8[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;33mcol:20[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5147028[0m <[0;33mcol:24[0m> [0;33mcol:28[0m [0;32m'int'[0m

Dumping mean:
[0;1;32mFunctionDecl[0m[0;33m 0x53cb020[0m prev 0x5147140 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:30:1[0m, [0;33mline:43:1[0m> [0;33mline:30:8[0m used[0;1;36m mean[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53caf00[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;33mcol:20[0m used[0;1;36m a[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53caf80[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x53cb948[0m <[0;33mline:31:1[0m, [0;33mline:43:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x53cb4a0[0m <[0;33mline:32:5[0m, [0;33mline:35:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53cb128[0m <[0;33mline:32:8[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb110[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb0d0[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53caf80[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x53cb0f0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x53cb488[0m <[0;33mline:33:5[0m, [0;33mline:35:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x53cb478[0m <[0;33mline:34:9[0m, [0;33m/usr/include/math.h:98:35[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb460[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x53cb440[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x53cb400[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb3e8[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb2f8[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x53cb198[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb428[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x53cb358[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x53cb538[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:36:5[0m, [0;33mcol:10[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x53cb4d0[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x53cb608[0m <[0;33mline:37:5[0m, [0;33mcol:17[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x53cb568[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;33mcol:12[0m used[0;1;36m osz[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb5f0[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x53cb5d0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x53cb858[0m <[0;33mline:38:5[0m, [0;33mline:41:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53cb660[0m <[0;33mline:38:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb620[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x53cb4d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x53cb640[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53cb6f0[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb6c0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb680[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x53cb4d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb6d8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb6a0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53caf80[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x53cb730[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb710[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x53cb4d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x53cb840[0m <[0;33mline:39:5[0m, [0;33mline:41:5[0m>
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x53cb810[0m <[0;33mline:40:9[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb748[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x53cb568[0m[0;1;36m 'osz'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb7f8[0m <[0;33mcol:14[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x53cb7d8[0m <[0;33mcol:14[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb7a8[0m <[0;33mcol:14[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb768[0m <[0;33mcol:14[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53caf00[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb7c0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb788[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x53cb4d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x53cb938[0m <[0;33mline:42:5[0m, [0;33mcol:16[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53cb918[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb8d0[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb890[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x53cb568[0m[0;1;36m 'osz'[0m [0;32m'double'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb900[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53cb8e8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53cb8b0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53caf80[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m

Dumping stddev:
[0;1;32mFunctionDecl[0m[0;33m 0x6e2f338[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:9:1[0m, [0;33mcol:30[0m> [0;33mcol:8[0m[0;1;36m stddev[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6e2f218[0m <[0;33mcol:15[0m, [0;33mcol:23[0m> [0;33mcol:22[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6e2f298[0m <[0;33mcol:26[0m> [0;33mcol:30[0m [0;32m'int'[0m

Dumping stddev:
[0;1;32mFunctionDecl[0m[0;33m 0x70b3b18[0m prev 0x6e2f338 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:44:1[0m, [0;33mline:60:1[0m> [0;33mline:44:8[0m[0;1;36m stddev[0m [0;32m'double (double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70b39f8[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;33mcol:22[0m used[0;1;36m a[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70b3a78[0m <[0;33mcol:27[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x70b4c28[0m <[0;33mline:45:1[0m, [0;33mline:60:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x70b3d48[0m <[0;33mline:46:5[0m, [0;33mline:49:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x70b3c20[0m <[0;33mline:46:8[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b3c08[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b3bc8[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x70b3a78[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x70b3be8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x70b3d30[0m <[0;33mline:47:5[0m, [0;33mline:49:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x70b3d20[0m <[0;33mline:48:9[0m, [0;33m/usr/include/math.h:98:35[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b3d08[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x70b3ce8[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x70b3ca8[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b3c90[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b3c40[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x70b31e8[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b3cd0[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x70b3c60[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x70b3f60[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:50:5[0m, [0;33mcol:36[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x70b3d78[0m <[0;33mcol:5[0m, [0;33mcol:35[0m> [0;33mcol:12[0m used[0;1;36m atl[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x70b3f00[0m <[0;33mcol:17[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b3ee8[0m <[0;33mcol:17[0m> [0;32m'double (*)(double *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b3e68[0m <[0;33mcol:17[0m> [0;32m'double (double *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x70b3070[0m[0;1;36m 'mean'[0m [0;32m'double (double *, int)'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b3f30[0m <[0;33mcol:22[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b3e28[0m <[0;33mcol:22[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x70b39f8[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b3f48[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b3e48[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x70b3a78[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x70b3ff8[0m <[0;33mline:51:5[0m, [0;33mcol:10[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x70b3f90[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x70b40c8[0m <[0;33mline:52:5[0m, [0;33mcol:18[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x70b4028[0m <[0;33mcol:5[0m, [0;33mcol:17[0m> [0;33mcol:12[0m used[0;1;36m szum[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b40b0[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x70b4090[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x70b4520[0m <[0;33mline:53:5[0m, [0;33mline:58:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x70b4120[0m <[0;33mline:53:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b40e0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b3f90[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x70b4100[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x70b41b0[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4180[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b4140[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b3f90[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4198[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b4160[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x70b3a78[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x70b41f0[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b41d0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b3f90[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x70b44f8[0m <[0;33mline:54:5[0m, [0;33mline:58:5[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x70b42c0[0m <[0;33mline:55:9[0m, [0;33mcol:19[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x70b4220[0m <[0;33mcol:9[0m, [0;33mcol:18[0m> [0;33mcol:16[0m used[0;1;36m s[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b42a8[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x70b4288[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x70b43f8[0m <[0;33mline:56:9[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b42d8[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b4220[0m[0;1;36m 's'[0m [0;32m'double'[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x70b43d8[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b43a8[0m <[0;33mcol:11[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x70b4368[0m <[0;33mcol:11[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4338[0m <[0;33mcol:11[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b42f8[0m <[0;33mcol:11[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x70b39f8[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4350[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b4318[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b3f90[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b43c0[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b4388[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b3d78[0m[0;1;36m 'atl'[0m [0;32m'double'[0m
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x70b44c8[0m <[0;33mline:57:9[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b4418[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b4028[0m[0;1;36m 'szum'[0m [0;32m'double'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x70b44a8[0m <[0;33mcol:15[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4478[0m <[0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b4438[0m <[0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b4220[0m[0;1;36m 's'[0m [0;32m'double'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4490[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b4458[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b4220[0m[0;1;36m 's'[0m [0;32m'double'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x70b4c18[0m <[0;33mline:59:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x70b4bf0[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4bd8[0m <[0;33mcol:12[0m> [0;32m'double (*)(double) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b4b90[0m <[0;33mcol:12[0m> [0;32m'double (double) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x66850a0[0m[0;1;36m 'sqrt'[0m [0;32m'double (double) throw()'[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x70b4640[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b45f8[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b45b8[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70b4028[0m[0;1;36m 'szum'[0m [0;32m'double'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4628[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m          `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70b4610[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70b45d8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x70b3a78[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m

Dumping max2:
[0;1;32mFunctionDecl[0m[0;33m 0x5d495b0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:10:1[0m, [0;33mcol:30[0m> [0;33mcol:10[0m[0;1;36m max2[0m [0;32m'double *(double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d49410[0m <[0;33mcol:15[0m, [0;33mcol:23[0m> [0;33mcol:22[0m [0;32m'double *':'double *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d49490[0m <[0;33mcol:26[0m> [0;33mcol:30[0m [0;32m'int'[0m

Dumping max2:
[0;1;32mFunctionDecl[0m[0;33m 0x5fced60[0m prev 0x5d495b0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:61:1[0m, [0;33mline:96:1[0m> [0;33mline:61:10[0m[0;1;36m max2[0m [0;32m'double *(double *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fcec40[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;33mcol:22[0m used[0;1;36m a[0m [0;32m'double *':'double *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fcecc0[0m <[0;33mcol:28[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m numElements[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fd07b0[0m <[0;33mline:62:1[0m, [0;33mline:96:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5fcf1c0[0m <[0;33mline:63:5[0m, [0;33mcol:40[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5fcee28[0m <[0;33mcol:5[0m, [0;33mcol:39[0m> [0;33mcol:13[0m used[0;1;36m maxi[0m [0;32m'double *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x5fcf178[0m <[0;33mcol:18[0m, [0;33mcol:39[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x5804ce0[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(std::size_t)'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf0a8[0m <[0;33mcol:29[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcee90[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |     `-[0m[0;1;35mInitListExpr[0m[0;33m 0x5fcf0f8[0m <[0;33mcol:31[0m, [0;33mcol:39[0m> [0;32m'double [2]'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf148[0m <[0;33m/usr/include/math.h:98:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |       | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5fcef58[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fcef18[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcef00[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fceeb0[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fcd198[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcef40[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5fceed0[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf160[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingCast[0m>
[0;34m  |         `-[0m[0;1;35mParenExpr[0m[0;33m 0x5fcf020[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fcefe0[0m <[0;33mcol:16[0m, [0;33mcol:34[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcefc8[0m <[0;33mcol:16[0m> [0;32m'float (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcef78[0m <[0;33mcol:16[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fcd198[0m[0;1;36m '__builtin_nanf'[0m [0;32m'float (const char *) noexcept'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf008[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |               `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5fcef98[0m <[0;33mcol:32[0m> [0;32m'const char [1]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ""[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5fcf600[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:64:5[0m, [0;33mline:73:5[0m> has_else
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcf230[0m <[0;33mline:64:8[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf218[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf1d8[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcecc0[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf1f8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fcf298[0m <[0;33mline:65:5[0m, [0;33mline:67:5[0m>
[0;34m  | | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fcf288[0m <[0;33mline:66:9[0m, [0;33mcol:16[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf270[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf250[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  | `-[0m[0;1;35mIfStmt[0m[0;33m 0x5fcf5e8[0m <[0;33mline:68:10[0m, [0;33mline:73:5[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcf308[0m <[0;33mline:68:13[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf2f0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf2b0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcecc0[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf2d0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fcf5c0[0m <[0;33mline:69:5[0m, [0;33mline:73:5[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcf430[0m <[0;33mline:70:9[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf380[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf368[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf328[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf348[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf418[0m <[0;33mcol:17[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf3f8[0m <[0;33mcol:17[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf3e0[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf3a0[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf3c0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcf558[0m <[0;33mline:71:9[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf4a8[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf490[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf450[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf470[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf540[0m <[0;33mcol:17[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf520[0m <[0;33mcol:17[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf508[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf4c8[0m <[0;33mcol:17[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf4e8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fcf5b0[0m <[0;33mline:72:9[0m, [0;33mcol:16[0m>
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf598[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf578[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5fcf6a8[0m <[0;33mline:74:5[0m, [0;33mcol:10[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5fcf640[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcf7c8[0m <[0;33mline:75:5[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf718[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf700[0m <[0;33mcol:5[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf6c0[0m <[0;33mcol:5[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf6e0[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf7b0[0m <[0;33mcol:13[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf790[0m <[0;33mcol:13[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf778[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf738[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf758[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcf8f0[0m <[0;33mline:76:5[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf840[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf828[0m <[0;33mcol:5[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf7e8[0m <[0;33mcol:5[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf808[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf8d8[0m <[0;33mcol:13[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf8b8[0m <[0;33mcol:13[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf8a0[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf860[0m <[0;33mcol:13[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf880[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5fcfd98[0m <[0;33mline:77:5[0m, [0;33mline:81:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcfa30[0m <[0;33mline:77:8[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfa00[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf968[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf950[0m <[0;33mcol:8[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf910[0m <[0;33mcol:8[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf930[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfa18[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcf9e0[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcf9c8[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcf988[0m <[0;33mcol:16[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcf9a8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fcfd70[0m <[0;33mcol:24[0m, [0;33mline:81:5[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5fcfb60[0m <[0;33mline:78:9[0m, [0;33mcol:25[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5fcfa68[0m <[0;33mcol:9[0m, [0;33mcol:24[0m> [0;33mcol:16[0m used[0;1;36m v[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfb48[0m <[0;33mcol:18[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcfb28[0m <[0;33mcol:18[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfb10[0m <[0;33mcol:18[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfad0[0m <[0;33mcol:18[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcfaf0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcfc80[0m <[0;33mline:79:9[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcfbd0[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfbb8[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfb78[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcfb98[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfc68[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcfc48[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfc30[0m <[0;33mcol:17[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfbf0[0m <[0;33mcol:17[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcfc10[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcfd50[0m <[0;33mline:80:9[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcfcf8[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfce0[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfca0[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcfcc0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfd38[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfd18[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcfa68[0m[0;1;36m 'v'[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5fd0730[0m <[0;33mline:82:5[0m, [0;33mline:94:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcfdf0[0m <[0;33mline:82:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfdb0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcf640[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcfdd0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcfe80[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfe50[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfe10[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcf640[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfe68[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfe30[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcecc0[0m[0;1;36m 'numElements'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5fcfec0[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfea0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcf640[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fd0710[0m <[0;33mline:83:5[0m, [0;33mline:94:5[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x5fd02b8[0m <[0;33mline:84:9[0m, [0;33mline:88:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fd0010[0m <[0;33mline:84:12[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcffe0[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcff30[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcff18[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcfed8[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fcfef8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcfff8[0m <[0;33mcol:20[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fcffc0[0m <[0;33mcol:20[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcff90[0m <[0;33mcol:20[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcff50[0m <[0;33mcol:20[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcffa8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcff70[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcf640[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fd0298[0m <[0;33mline:85:9[0m, [0;33mline:88:9[0m>
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fd0138[0m <[0;33mline:86:13[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd0088[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0070[0m <[0;33mcol:13[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd0030[0m <[0;33mcol:13[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |   |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fd0050[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0120[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd0100[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd00e8[0m <[0;33mcol:21[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd00a8[0m <[0;33mcol:21[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |   |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fd00c8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fd0278[0m <[0;33mline:87:13[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd01b0[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0198[0m <[0;33mcol:13[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd0158[0m <[0;33mcol:13[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fd0178[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0260[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd0240[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0210[0m <[0;33mcol:21[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd01d0[0m <[0;33mcol:21[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0228[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd01f0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcf640[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5fd06f8[0m <[0;33mline:89:9[0m, [0;33mline:92:9[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fd0580[0m <[0;33mline:89:12[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fd0408[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd03d8[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd0340[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0310[0m <[0;33mcol:12[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd02d0[0m <[0;33mcol:12[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |     | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0328[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd02f0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcf640[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd03f0[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd03b8[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd03a0[0m <[0;33mcol:17[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd0360[0m <[0;33mcol:17[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |     | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fd0380[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fd0560[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0530[0m <[0;33mcol:26[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd0498[0m <[0;33mcol:26[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0468[0m <[0;33mcol:26[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd0428[0m <[0;33mcol:26[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |     |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0480[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd0448[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcf640[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0548[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd0510[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd04f8[0m <[0;33mcol:31[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd04b8[0m <[0;33mcol:31[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |     |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fd04d8[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fd06e0[0m <[0;33mline:90:9[0m, [0;33mline:92:9[0m>
[0;34m  |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fd06c0[0m <[0;33mline:91:13[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |         |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd05f8[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd05e0[0m <[0;33mcol:13[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd05a0[0m <[0;33mcol:13[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m
[0;34m  |         | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fd05c0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd06a8[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fd0688[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0658[0m <[0;33mcol:21[0m> [0;32m'double *':'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd0618[0m <[0;33mcol:21[0m> [0;32m'double *':'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fcec40[0m[0;1;36m 'a'[0m [0;32m'double *':'double *'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0670[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd0638[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcf640[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fd07a0[0m <[0;33mline:95:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fd0788[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fd0768[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fcee28[0m[0;1;36m 'maxi'[0m [0;32m'double *'[0m

Dumping capitalizeWords:
[0;1;32mFunctionDecl[0m[0;33m 0x6aa4768[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:11:1[0m, [0;33mcol:30[0m> [0;33mcol:8[0m[0;1;36m capitalizeWords[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aa4670[0m <[0;33mcol:24[0m> [0;33mcol:30[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping capitalizeWords:
[0;1;32mFunctionDecl[0m[0;33m 0x6d2b8a0[0m prev 0x6aa4768 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:97:1[0m, [0;33mline:114:1[0m> [0;33mline:97:8[0m[0;1;36m capitalizeWords[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d2b810[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d2c738[0m <[0;33mline:98:1[0m, [0;33mline:114:1[0m>
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2bc80[0m <[0;33mline:99:5[0m, [0;33mcol:28[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d2ba30[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2ba18[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2b9a0[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x69735f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2b948[0m <[0;33mcol:5[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2b988[0m <[0;33mcol:10[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6d2b968[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2bc68[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6d2bc10[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2bbf8[0m <[0;33mcol:13[0m> [0;32m'int (*)(int) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bb80[0m <[0;33mcol:13[0m> [0;32m'int (int) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x677c498[0m[0;1;36m 'toupper'[0m [0;32m'int (int) throw()'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2bc50[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2bc38[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d2bb48[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2bb30[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bb10[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x69735f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |           |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bab8[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2baf8[0m <[0;33mcol:26[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |             `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6d2bad8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6d2bd20[0m <[0;33mline:100:5[0m, [0;33mcol:10[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6d2bcb8[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6d2c688[0m <[0;33mline:101:5[0m, [0;33mline:112:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2bd78[0m <[0;33mline:101:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bd38[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2bcb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6d2bd58[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2be70[0m <[0;33mcol:14[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2be58[0m <[0;33mcol:14[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2be40[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bd98[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2bcb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6d2be08[0m <[0;33mcol:16[0m, [0;33mcol:28[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6d2bdd8[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x69729d8[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2be28[0m <[0;33mcol:16[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bdb8[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6d2beb0[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2be90[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2bcb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d2c670[0m <[0;33mline:102:5[0m, [0;33mline:112:5[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6d2c648[0m <[0;33mline:103:9[0m, [0;33mline:110:9[0m> has_else
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2c048[0m <[0;33mline:103:12[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c018[0m <[0;33mcol:12[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c000[0m <[0;33mcol:12[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d2bfb0[0m <[0;33mcol:12[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2bf98[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bf78[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x69735f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bec8[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2bf60[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2bf40[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |     | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2bf28[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2bee8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2bcb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6d2bf08[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c030[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x6d2bfe8[0m <[0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 32[0m
[0;34m  |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d2c340[0m <[0;33mline:104:9[0m, [0;33mline:106:9[0m>
[0;34m  |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2c320[0m <[0;33mline:105:13[0m, [0;33mcol:36[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d2c110[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c0f8[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c0d8[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x69735f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c068[0m <[0;33mcol:13[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c0c0[0m <[0;33mcol:18[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c0a8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c088[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2bcb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c308[0m <[0;33mcol:21[0m, [0;33mcol:36[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6d2c2b0[0m <[0;33mcol:21[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c298[0m <[0;33mcol:21[0m> [0;32m'int (*)(int) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c278[0m <[0;33mcol:21[0m> [0;32m'int (int) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x677c498[0m[0;1;36m 'toupper'[0m [0;32m'int (int) throw()'[0m
[0;34m  |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c2f0[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c2d8[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d2c240[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c228[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c208[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x69735f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c198[0m <[0;33mcol:29[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c1f0[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c1d8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c1b8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2bcb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d2c630[0m <[0;33mline:108:9[0m, [0;33mline:110:9[0m>
[0;34m  |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2c610[0m <[0;33mline:109:13[0m, [0;33mcol:36[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |         |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d2c400[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c3e8[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c3c8[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x69735f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c358[0m <[0;33mcol:13[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c3b0[0m <[0;33mcol:18[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c398[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c378[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2bcb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c5f8[0m <[0;33mcol:21[0m, [0;33mcol:36[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x6d2c5a0[0m <[0;33mcol:21[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c588[0m <[0;33mcol:21[0m> [0;32m'int (*)(int) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c568[0m <[0;33mcol:21[0m> [0;32m'int (int) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x677c2e8[0m[0;1;36m 'tolower'[0m [0;32m'int (int) throw()'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c5e0[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c5c8[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |                 `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d2c530[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |                   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c518[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |                   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c4f8[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x69735f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |                   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c488[0m <[0;33mcol:29[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |                   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c4e0[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |                     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c4c8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |                       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c4a8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2bcb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6d2c728[0m <[0;33mline:113:6[0m, [0;33mcol:13[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6d2c6f8[0m <[0;33mcol:13[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::__cxx11::basic_string<char> &&) noexcept'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c6e0[0m <[0;33mcol:13[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c6c0[0m <[0;33mcol:13[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2b810[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping std::type_info::hash_code:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5f19930[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo:140:5[0m, [0;33mline:148:5[0m> [0;33mline:140:12[0m[0;1;36m hash_code[0m [0;32m'std::size_t () const noexcept'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5f1b920[0m <[0;33mline:141:5[0m, [0;33mline:148:5[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5f1b910[0m <[0;33mline:143:7[0m, [0;33mline:144:38[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5f1b8c0[0m <[0;33mline:143:14[0m, [0;33mline:144:38[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f1b8a8[0m <[0;33mline:143:14[0m> [0;32m'std::size_t (*)(const void *, std::size_t, std::size_t)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f1b830[0m <[0;33mcol:14[0m> [0;32m'std::size_t (const void *, std::size_t, std::size_t)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f18a68[0m[0;1;36m '_Hash_bytes'[0m [0;32m'std::size_t (const void *, std::size_t, std::size_t)'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f1b8f8[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m      | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5f1b6f0[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5f1b6c0[0m <[0;33mcol:26[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->name[0;33m 0x5f193b8[0m
[0;34m      |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5f1b6b0[0m <[0;33mcol:26[0m> [0;32m'const std::type_info *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x5f1b7a8[0m <[0;33mcol:34[0m, [0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f1b790[0m <[0;33mcol:34[0m> [0;32m'unsigned long (*)(const char *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f1b710[0m <[0;33mcol:34[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5ee30d0[0m[0;1;36m '__builtin_strlen'[0m [0;32m'unsigned long (const char *) noexcept'[0m
[0;34m      | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5f1b770[0m <[0;33mcol:51[0m, [0;33mcol:56[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5f1b740[0m <[0;33mcol:51[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->name[0;33m 0x5f193b8[0m
[0;34m      |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5f1b730[0m <[0;33mcol:51[0m> [0;32m'const std::type_info *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5f1b800[0m <[0;33mline:144:5[0m, [0;33mcol:37[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m static_cast<std::size_t> <NoOp>
[0;34m        `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5f1b7d0[0m <[0;33mcol:25[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m[0;1;36m 3339675911[0m

Dumping std::codecvt_base:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9bc38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:136:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m class[0;1;36m codecvt_base[0m

Dumping std::codecvt:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f9bf00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:137:3[0m, [0;33mline:138:11[0m> [0;33mcol:11[0m[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9bcf0[0m <[0;33mline:137:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9bd68[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9bdd8[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9be70[0m <[0;33mline:138:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m class[0;1;36m codecvt[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5f9c188[0m[0;1;36m 'codecvt'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5f9c410[0m[0;1;36m 'codecvt'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5f9c188[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:139:3[0m, [0;33mcol:49[0m> [0;33mcol:20[0m class[0;1;36m codecvt[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::codecvt:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5f9c410[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:141:3[0m, [0;33mcol:52[0m> [0;33mcol:20[0m class[0;1;36m codecvt[0m
[0;34m|-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m`-[0mTemplateArgument type [0;32m'__mbstate_t'[0m

Dumping std::codecvt_byname:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f9c860[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/localefwd.h:143:3[0m, [0;33mline:144:11[0m> [0;33mcol:11[0m[0;1;36m codecvt_byname[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9c650[0m <[0;33mline:143:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _InternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9c6c8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m typename depth 0 index 1[0;1;36m _ExternT[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f9c738[0m <[0;33mcol:50[0m, [0;33mcol:59[0m> [0;33mcol:59[0m typename depth 0 index 2[0;1;36m _StateT[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f9c7d0[0m <[0;33mline:144:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m class[0;1;36m codecvt_byname[0m

Dumping __codecvt_result:
[0;1;32mEnumDecl[0m[0;33m 0x614a5e0[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:180:1[0m, [0;33mline:186:1[0m> [0;33mline:180:6[0m[0;1;36m __codecvt_result[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x614a6a0[0m <[0;33mline:182:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_ok[0m [0;32m'__codecvt_result'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x614a6f0[0m <[0;33mline:183:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_partial[0m [0;32m'__codecvt_result'[0m
[0;34m|-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x614a740[0m <[0;33mline:184:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_error[0m [0;32m'__codecvt_result'[0m
[0;34m`-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x614a790[0m <[0;33mline:185:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_noconv[0m [0;32m'__codecvt_result'[0m

Dumping code:
[0;1;32mFunctionDecl[0m[0;33m 0x62ba8b0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:12:1[0m, [0;33mcol:20[0m> [0;33mcol:8[0m[0;1;36m code[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62ba820[0m <[0;33mcol:13[0m> [0;33mcol:20[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping decode:
[0;1;32mFunctionDecl[0m[0;33m 0x62ba9f8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:13:1[0m, [0;33mcol:22[0m> [0;33mcol:8[0m[0;1;36m decode[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62ba968[0m <[0;33mcol:15[0m> [0;33mcol:22[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping std::error_code:
[0;1;32mCXXRecordDecl[0m[0;33m 0x630dd68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:47:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m referenced class[0;1;36m error_code[0m

Dumping std::is_error_code_enum:
[0;1;32mClassTemplateDecl[0m[0;33m 0x630e0a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x630df80[0m <[0;33mline:52:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x630e010[0m <[0;33mline:53:5[0m, [0;33mcol:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x630e330[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6317788[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::error_code'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63179c0[0m prev 0x6317788 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6318678[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_V2::error_category'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63188b0[0m prev 0x6318678 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6321d88[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6321fc0[0m prev 0x6321d88 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6325058[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::error_condition'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6325290[0m prev 0x6325058 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6328b00[0m[0;1;36m 'is_error_code_enum'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x65446d8[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6544910[0m prev 0x65446d8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6551ee8[0m <[0;33mline:52:3[0m, [0;33mline:53:53[0m> [0;33mcol:12[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6552120[0m prev 0x6551ee8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_error_code_enum[0m

Dumping __code:
[0;1;32mParmVarDecl[0m[0;33m 0x630fd48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:118:16[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __code[0m [0;32m'const std::error_code &'[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x63120f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:139:3[0m, [0;33mcol:36[0m> [0;33mcol:14[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::errc) noexcept'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6311ff8[0m <[0;33mcol:30[0m> [0;33mcol:34[0m [0;32m'std::errc'[0m

Dumping std::error_code:
[0;1;32mCXXRecordDecl[0m[0;33m 0x6314868[0m prev 0x630dd68 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:146:3[0m, [0;33mline:200:3[0m> [0;33mline:146:10[0m referenced struct[0;1;36m error_code[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6314960[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit referenced struct[0;1;36m error_code[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6314a58[0m <[0;33mline:148:5[0m, [0;33mline:149:49[0m> [0;33mline:148:5[0m referenced[0;1;36m error_code[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6316418[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x63164e0[0m <[0;33mline:149:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6316478[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6316640[0m <[0;33mcol:27[0m, [0;33mcol:44[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m| |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6316620[0m <[0;33mcol:28[0m, [0;33mcol:44[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6316608[0m <[0;33mcol:28[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6316590[0m <[0;33mcol:28[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6311e00[0m[0;1;36m 'system_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63166b0[0m <[0;33mcol:47[0m, [0;33mcol:49[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6314cb0[0m <[0;33mline:151:5[0m, [0;33mline:152:39[0m> [0;33mline:151:5[0m used[0;1;36m error_code[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6314b18[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;33mcol:20[0m used[0;1;36m __v[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6314b90[0m <[0;33mcol:25[0m, [0;33mcol:47[0m> [0;33mcol:47[0m used[0;1;36m __cat[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6316418[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6316700[0m <[0;33mline:152:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63166c0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6314b18[0m[0;1;36m '__v'[0m [0;32m'int'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6316478[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6316760[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6316740[0m <[0;33mcol:30[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6314b90[0m[0;1;36m '__cat'[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63167d0[0m <[0;33mcol:37[0m, [0;33mcol:39[0m>
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x63152e8[0m <[0;33mline:154:5[0m, [0;33mline:157:39[0m> [0;33mline:156:7[0m[0;1;36m error_code[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6314d68[0m <[0;33mline:154:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 0 index 0[0;1;36m _ErrorCodeEnum[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63150d0[0m <[0;33mcol:39[0m, [0;33mline:155:61[0m> [0;33mline:154:39[0m typename depth 0 index 1
[0;34m| | `-[0mTemplateArgument type [0;32m'typename enable_if<is_error_code_enum<_ErrorCodeEnum>::value>::type'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6315240[0m <[0;33mline:156:7[0m, [0;33mline:157:39[0m> [0;33mline:156:7[0m[0;1;36m error_code[0m [0;32m'void (_ErrorCodeEnum) noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6315178[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __e[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63168b8[0m <[0;33mline:157:7[0m, [0;33mcol:39[0m>
[0;34m| |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6316898[0m <[0;33mcol:9[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m| |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x63167f0[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x63167e0[0m <[0;33mcol:10[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6316870[0m <[0;33mcol:17[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6316808[0m <[0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'make_error_code'[0;33m 0x63120f0[0m
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6316850[0m <[0;33mcol:33[0m> [0;32m'_ErrorCodeEnum'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6315178[0m[0;1;36m '__e'[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6339e20[0m <[0;33mline:156:7[0m, [0;33mline:157:39[0m> [0;33mline:156:7[0m referenced[0;1;36m error_code[0m [0;32m'void (std::io_errc) noexcept'[0m
[0;34m|   |-[0mTemplateArgument type [0;32m'std::io_errc'[0m
[0;34m|   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6339d20[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __e[0m [0;32m'std::io_errc':'std::io_errc'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6315478[0m <[0;33mline:159:5[0m, [0;33mline:164:5[0m> [0;33mline:160:5[0m used[0;1;36m assign[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6315360[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __v[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63153d8[0m <[0;33mcol:21[0m, [0;33mcol:43[0m> [0;33mcol:43[0m used[0;1;36m __cat[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6316a00[0m <[0;33mline:161:5[0m, [0;33mline:164:5[0m>
[0;34m|   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6316948[0m <[0;33mline:162:7[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m|   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x63168e0[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x6316418[0m
[0;34m|   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x63168d0[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6316930[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6316910[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6315360[0m[0;1;36m '__v'[0m [0;32m'int'[0m
[0;34m|   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x63169e0[0m <[0;33mline:163:7[0m, [0;33mcol:17[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m|     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6316978[0m <[0;33mcol:7[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cat[0;33m 0x6316478[0m
[0;34m|     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6316968[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x63169c8[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63169a8[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63153d8[0m[0;1;36m '__cat'[0m [0;32m'const std::_V2::error_category &'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6315550[0m <[0;33mline:166:5[0m, [0;33mline:168:37[0m> [0;33mline:167:5[0m[0;1;36m clear[0m [0;32m'void () noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6316b50[0m <[0;33mline:168:5[0m, [0;33mcol:37[0m>
[0;34m|   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6316b20[0m <[0;33mcol:7[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m|     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6316a30[0m <[0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->assign[0;33m 0x6315478[0m
[0;34m|     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6316a20[0m <[0;33mcol:7[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6316a60[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6316b00[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6316ae8[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6316ac8[0m <[0;33mcol:17[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6311e00[0m[0;1;36m 'system_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6315b60[0m <[0;33mline:171:5[0m, [0;33mline:175:46[0m> [0;33mline:174:7[0m[0;1;36m operator=[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63155f0[0m <[0;33mline:171:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 0 index 0[0;1;36m _ErrorCodeEnum[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6315ac0[0m <[0;33mline:172:7[0m, [0;33mline:175:46[0m> [0;33mline:174:7[0m[0;1;36m operator=[0m [0;32m'typename enable_if<is_error_code_enum<_ErrorCodeEnum>::value, error_code &>::type (_ErrorCodeEnum) noexcept'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63159b0[0m <[0;33mcol:17[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __e[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6316cb0[0m <[0;33mline:175:7[0m, [0;33mcol:46[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6316ca0[0m <[0;33mcol:9[0m, [0;33mcol:43[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6316c80[0m <[0;33mcol:16[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m|         |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6316bd8[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6316bc8[0m <[0;33mcol:17[0m> [0;32m'std::error_code *'[0m[0;36m[0m[0;36m[0m this
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6316c58[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6316bf0[0m <[0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'make_error_code'[0;33m 0x63120f0[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6316c38[0m <[0;33mcol:40[0m> [0;32m'_ErrorCodeEnum'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63159b0[0m[0;1;36m '__e'[0m [0;32m'_ErrorCodeEnum'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6315c78[0m <[0;33mline:177:5[0m, [0;33mline:178:47[0m> [0;33mcol:5[0m used[0;1;36m value[0m [0;32m'int () const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6316d30[0m <[0;33mcol:28[0m, [0;33mcol:47[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6316d20[0m <[0;33mcol:30[0m, [0;33mcol:37[0m>
[0;34m|     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6316d08[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6316cd8[0m <[0;33mcol:37[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x6316418[0m
[0;34m|         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6316cc8[0m <[0;33mcol:37[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6315da0[0m <[0;33mline:180:5[0m, [0;33mline:181:49[0m> [0;33mcol:5[0m used[0;1;36m category[0m [0;32m'const std::_V2::error_category &() const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6316dc8[0m <[0;33mcol:31[0m, [0;33mcol:49[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6316db8[0m <[0;33mcol:33[0m, [0;33mcol:41[0m>
[0;34m|     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6316da0[0m <[0;33mcol:40[0m, [0;33mcol:41[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6316d88[0m <[0;33mcol:41[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6316d58[0m <[0;33mcol:41[0m> [0;32m'const std::_V2::error_category *const'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cat[0;33m 0x6316478[0m
[0;34m|           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6316d48[0m <[0;33mcol:41[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6315ec0[0m <[0;33mline:183:5[0m, [0;33mline:184:37[0m> [0;33mcol:5[0m[0;1;36m default_error_condition[0m [0;32m'std::error_condition () const noexcept'[0m
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6315fa0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:92:33[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:189:43[0m> [0;33mline:188:5[0m used[0;1;36m message[0m [0;32m'std::__cxx11::string () const'[0m
[0;34m| |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6316f90[0m <[0;33mline:189:5[0m, [0;33mcol:43[0m>
[0;34m| | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6316f80[0m <[0;33mcol:7[0m, [0;33mcol:40[0m>
[0;34m| |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6316f68[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m
[0;34m| |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6316f38[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::__cxx11::basic_string<char> &&) noexcept'[0m elidable
[0;34m| |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6316f20[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m| |         `-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x6316f00[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x6316f00[0m)
[0;34m| |           `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6316ed0[0m <[0;33mcol:14[0m, [0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m
[0;34m| |             |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6316e40[0m <[0;33mcol:14[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .message[0;33m 0x630f798[0m
[0;34m| |             | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6316e20[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |             |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6316df0[0m <[0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->category[0;33m 0x6315da0[0m
[0;34m| |             |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6316de0[0m <[0;33mcol:14[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |             `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6316eb0[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |               `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6316e80[0m <[0;33mcol:33[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->value[0;33m 0x6315c78[0m
[0;34m| |                 `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6316e70[0m <[0;33mcol:33[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| `-[0m[0;1;34mAbiTagAttr[0m[0;33m 0x6316040[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:92:47[0m, [0;33mcol:67[0m> cxx11
[0;34m|-[0m[0;1;32mCXXConversionDecl[0m[0;33m 0x63160e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:191:5[0m, [0;33mline:192:29[0m> [0;33mline:191:14[0m[0;1;36m operator bool[0m [0;32m'bool () const noexcept'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6317050[0m <[0;33mline:192:5[0m, [0;33mcol:29[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6317040[0m <[0;33mcol:7[0m, [0;33mcol:26[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6317020[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6317008[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6316fb8[0m <[0;33mcol:14[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_value[0;33m 0x6316418[0m
[0;34m|       |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6316fa8[0m <[0;33mcol:14[0m> [0;32m'const std::error_code *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6316fe8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6316190[0m <[0;33mline:195:3[0m, [0;33mcol:10[0m> [0;33mcol:3[0m private
[0;34m|-[0m[0;1;32mFriendDecl[0m[0;33m 0x63163c0[0m <[0;33mline:196:5[0m, [0;33mcol:33[0m> [0;33mcol:12[0m [0;32m'class hash<error_code>':'std::hash<std::error_code>'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x6316418[0m <[0;33mline:198:5[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m _M_value[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x6316478[0m <[0;33mline:199:5[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m _M_cat[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x63172e8[0m <[0;33mline:146:10[0m> [0;33mcol:10[0m implicit used constexpr[0;1;36m error_code[0m [0;32m'void (const std::error_code &) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63173f8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m used [0;32m'const std::error_code &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6316418[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f2f848[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5f2f800[0m <[0;33mcol:10[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ._M_value[0;33m 0x6316418[0m
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f2f7e0[0m <[0;33mcol:10[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63173f8[0m[0;1;36m ''[0m [0;32m'const std::error_code &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6316478[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f2f8f0[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5f2f8a8[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *const'[0m[0;36m lvalue[0m[0;36m[0m ._M_cat[0;33m 0x6316478[0m
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f2f888[0m <[0;33mcol:10[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63173f8[0m[0;1;36m ''[0m [0;32m'const std::error_code &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5f2f940[0m <[0;33mcol:10[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6317498[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit used constexpr[0;1;36m error_code[0m [0;32m'void (std::error_code &&) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63175a8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m used [0;32m'std::error_code &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6316418[0m[0;1;36m '_M_value'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6318148[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6318100[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m xvalue[0m[0;36m[0m ._M_value[0;33m 0x6316418[0m
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x63180d0[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct std::error_code &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63180a0[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63175a8[0m[0;1;36m ''[0m [0;32m'std::error_code &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6316478[0m[0;1;36m '_M_cat'[0m [0;32m'const std::_V2::error_category *'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6318230[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x63181e8[0m <[0;33mcol:10[0m> [0;32m'const std::_V2::error_category *'[0m[0;36m xvalue[0m[0;36m[0m ._M_cat[0;33m 0x6316478[0m
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x63181b8[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct std::error_code &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6318188[0m <[0;33mcol:10[0m> [0;32m'std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63175a8[0m[0;1;36m ''[0m [0;32m'std::error_code &&'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6318280[0m <[0;33mcol:10[0m>
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6317658[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit referenced[0;1;36m ~error_code[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5f2e8b8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit[0;1;36m operator=[0m [0;32m'std::error_code &(const std::error_code &)'[0m inline default trivial noexcept-unevaluated 0x5f2e8b8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f2e9c8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m [0;32m'const std::error_code &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5f2ea38[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit[0;1;36m operator=[0m [0;32m'std::error_code &(std::error_code &&)'[0m inline default trivial noexcept-unevaluated 0x5f2ea38
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f2eb48[0m <[0;33mcol:10[0m> [0;33mcol:10[0m [0;32m'std::error_code &&'[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x6317110[0m prev 0x63120f0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:203:3[0m, [0;33mline:205:67[0m> [0;33mline:204:3[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::errc) noexcept'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6317078[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __e[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x63182e8[0m <[0;33mline:205:3[0m, [0;33mcol:67[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x63182d8[0m <[0;33mcol:5[0m, [0;33mcol:64[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x63182c0[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6318290[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::error_code &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6318050[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x6317618[0m <[0;33mcol:12[0m, [0;33mcol:64[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m            |-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6317218[0m <[0;33mcol:23[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m static_cast<int> <IntegralCast>
[0;34m            | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6317200[0m <[0;33mcol:40[0m> [0;32m'std::errc'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63171c8[0m <[0;33mcol:40[0m> [0;32m'std::errc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6317078[0m[0;1;36m '__e'[0m [0;32m'std::errc'[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x63172c8[0m <[0;33mcol:46[0m, [0;33mcol:63[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63172b0[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6317290[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6311f08[0m[0;1;36m 'generic_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m

Dumping std::system_error::_M_code:
[0;1;32mFieldDecl[0m[0;33m 0x63271e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:344:5[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_code[0m [0;32m'std::error_code'[0m

Dumping std::system_error::code:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5f2e2b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:369:5[0m, [0;33mline:370:45[0m> [0;33mcol:5[0m[0;1;36m code[0m [0;32m'const std::error_code &() const noexcept'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5f385c8[0m <[0;33mcol:27[0m, [0;33mcol:45[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5f385b8[0m <[0;33mcol:29[0m, [0;33mcol:36[0m>
[0;34m    `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5f38588[0m <[0;33mcol:36[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m ->_M_code[0;33m 0x63271e0[0m
[0;34m      `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5f38578[0m <[0;33mcol:36[0m> [0;32m'const std::system_error *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping std::hash<std::error_code>::hash:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5f38ce8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:386:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m hash[0m

Dumping std::hash<std::error_code>::operator():
[0;1;32mCXXMethodDecl[0m[0;33m 0x5f38eb0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/system_error:389:7[0m, [0;33mline:394:7[0m> [0;33mline:390:7[0m[0;1;36m operator()[0m [0;32m'std::size_t (const std::error_code &) const noexcept'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f38d88[0m <[0;33mcol:18[0m, [0;33mcol:36[0m> [0;33mcol:36[0m used[0;1;36m __e[0m [0;32m'const std::error_code &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5f39ab8[0m <[0;33mline:391:7[0m, [0;33mline:394:7[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5f394f0[0m <[0;33mline:392:2[0m, [0;33mcol:58[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5f38fa8[0m <[0;33mcol:2[0m, [0;33mcol:57[0m> [0;33mcol:15[0m used[0;1;36m __tmp[0m [0;32m'const std::size_t':'const unsigned long'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5f39470[0m <[0;33mcol:23[0m, [0;33mcol:57[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f39458[0m <[0;33mcol:23[0m, [0;33mcol:40[0m> [0;32m'std::size_t (*)(const int &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f393c8[0m <[0;33mcol:23[0m, [0;33mcol:40[0m> [0;32m'std::size_t (const int &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5f392c8[0m[0;1;36m 'hash'[0m [0;32m'std::size_t (const int &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x61fad78[0m[0;1;36m 'hash'[0m)
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5f390f8[0m <[0;33mcol:45[0m, [0;33mcol:49[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ._M_value[0;33m 0x6316418[0m
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f390d8[0m <[0;33mcol:45[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5f38d88[0m[0;1;36m '__e'[0m [0;32m'const std::error_code &'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5f39aa8[0m <[0;33mline:393:2[0m, [0;33mcol:58[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5f39a60[0m <[0;33mcol:9[0m, [0;33mcol:58[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f39a48[0m <[0;33mcol:9[0m, [0;33mcol:26[0m> [0;32m'std::size_t (*)(const std::_V2::error_category *const &, std::size_t)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f399b0[0m <[0;33mcol:9[0m, [0;33mcol:26[0m> [0;32m'std::size_t (const std::_V2::error_category *const &, std::size_t)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5f398a8[0m[0;1;36m '__hash_combine'[0m [0;32m'std::size_t (const std::_V2::error_category *const &, std::size_t)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x61fb0c8[0m[0;1;36m '__hash_combine'[0m)
[0;34m      |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5f395b8[0m <[0;33mcol:41[0m, [0;33mcol:45[0m> [0;32m'const std::_V2::error_category *const'[0m[0;36m lvalue[0m[0;36m[0m ._M_cat[0;33m 0x6316478[0m
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f39598[0m <[0;33mcol:41[0m> [0;32m'const std::error_code'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5f38d88[0m[0;1;36m '__e'[0m [0;32m'const std::error_code &'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f39a90[0m <[0;33mcol:53[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5f395e8[0m <[0;33mcol:53[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5f38fa8[0m[0;1;36m '__tmp'[0m [0;32m'const std::size_t':'const unsigned long'[0m

Dumping std::is_error_code_enum:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6328b00[0m parent 0x630dcb8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:205:3[0m, [0;33mcol:71[0m> [0;33mcol:22[0m struct[0;1;36m is_error_code_enum[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'std::io_errc'[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6328d68[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m implicit struct[0;1;36m is_error_code_enum[0m

Dumping std::make_error_code:
[0;1;32mFunctionDecl[0m[0;33m 0x6328fe0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:209:3[0m, [0;33mline:211:68[0m> [0;33mline:210:3[0m[0;1;36m make_error_code[0m [0;32m'std::error_code (std::io_errc) noexcept'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6328ee8[0m <[0;33mcol:19[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m __e[0m [0;32m'std::io_errc'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6329480[0m <[0;33mline:211:3[0m, [0;33mcol:68[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6329470[0m <[0;33mcol:5[0m, [0;33mcol:65[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6329458[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6329428[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::error_code &&) noexcept'[0m elidable
[0;34m        `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6329410[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x63291b8[0m <[0;33mcol:12[0m, [0;33mcol:65[0m> [0;32m'std::error_code'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, const std::_V2::error_category &) noexcept'[0m
[0;34m            |-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x63290e8[0m <[0;33mcol:23[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m static_cast<int> <IntegralCast>
[0;34m            | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63290d0[0m <[0;33mcol:40[0m> [0;32m'std::io_errc'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6329098[0m <[0;33mcol:40[0m> [0;32m'std::io_errc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6328ee8[0m[0;1;36m '__e'[0m [0;32m'std::io_errc'[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x6329198[0m <[0;33mcol:46[0m, [0;33mcol:64[0m> [0;32m'const std::_V2::error_category'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6329180[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6329160[0m <[0;33mcol:46[0m> [0;32m'const std::_V2::error_category &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6328e38[0m[0;1;36m 'iostream_category'[0m [0;32m'const std::_V2::error_category &() noexcept'[0m

Dumping code:
[0;1;32mFunctionDecl[0m[0;33m 0x6542808[0m prev 0x62ba8b0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:115:1[0m, [0;33mline:146:1[0m> [0;33mline:115:8[0m[0;1;36m code[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6542778[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;33mcol:20[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65434b8[0m <[0;33mline:116:1[0m, [0;33mline:146:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x65429c8[0m <[0;33mline:117:5[0m, [0;33mcol:12[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x65428c8[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m s[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6542948[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6543408[0m <[0;33mline:118:5[0m, [0;33mline:144:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6542a20[0m <[0;33mline:118:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65429e0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6542948[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6542a00[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6542b18[0m <[0;33mcol:14[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542b00[0m <[0;33mcol:14[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542ae8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542a40[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6542948[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6542ab0[0m <[0;33mcol:16[0m, [0;33mcol:28[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6542a80[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x61889d8[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542ad0[0m <[0;33mcol:16[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542a60[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6542778[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6542b58[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542b38[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6542948[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65433d8[0m <[0;33mline:119:5[0m, [0;33mline:144:5[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6542ce0[0m <[0;33mline:120:9[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542b70[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6542cb8[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542ca0[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542c88[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |   |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6542c38[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542c20[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542c00[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x61895f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |   |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542b90[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6542778[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542be8[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542bd0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542bb0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6542948[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6542f90[0m <[0;33mline:121:9[0m, [0;33mline:131:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6542df0[0m <[0;33mline:121:12[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6542d58[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542d40[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542d00[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6542d20[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6542dd0[0m <[0;33mcol:19[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542db8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542d78[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6542d98[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6542f78[0m <[0;33mline:122:9[0m, [0;33mline:131:9[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6542f50[0m <[0;33mline:123:13[0m, [0;33mline:130:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6542e68[0m <[0;33mline:123:16[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542e50[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542e10[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6542e30[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6542ee8[0m <[0;33mline:124:13[0m, [0;33mline:126:13[0m>
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6542ec8[0m <[0;33mline:125:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542e88[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6542ea8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6542f38[0m <[0;33mline:128:13[0m, [0;33mline:130:13[0m>
[0;34m  |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6542f20[0m <[0;33mline:129:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542f00[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6543238[0m <[0;33mline:132:9[0m, [0;33mline:142:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543098[0m <[0;33mline:132:12[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543000[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6542fe8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6542fa8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6542fc8[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543078[0m <[0;33mcol:19[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543060[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543020[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543040[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6543220[0m <[0;33mline:133:9[0m, [0;33mline:142:9[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x65431f8[0m <[0;33mline:134:13[0m, [0;33mline:141:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543110[0m <[0;33mline:134:16[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65430f8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65430b8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65430d8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6543190[0m <[0;33mline:135:13[0m, [0;33mline:137:13[0m>
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543170[0m <[0;33mline:136:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543130[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543150[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65431e0[0m <[0;33mline:139:13[0m, [0;33mline:141:13[0m>
[0;34m  |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x65431c8[0m <[0;33mline:140:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65431a8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65433b8[0m <[0;33mline:143:9[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x65432f8[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65432e0[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65432c0[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x61895f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543250[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6542778[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65432a8[0m <[0;33mcol:14[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543290[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543270[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6542948[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6543390[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543378[0m <[0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543360[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543330[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65428c8[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x65434a8[0m <[0;33mline:145:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6543478[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::__cxx11::basic_string<char> &&) noexcept'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543460[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543440[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6542778[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping decode:
[0;1;32mFunctionDecl[0m[0;33m 0x65435b0[0m prev 0x62ba9f8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:147:1[0m, [0;33mline:178:1[0m> [0;33mline:147:8[0m[0;1;36m decode[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6543520[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6544280[0m <[0;33mline:148:1[0m, [0;33mline:178:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6543790[0m <[0;33mline:149:5[0m, [0;33mcol:14[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6543670[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:9[0m used[0;1;36m s[0m [0;32m'int'[0m cinit
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65436d8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6543710[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x65441d0[0m <[0;33mline:150:5[0m, [0;33mline:176:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65437e8[0m <[0;33mline:150:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65437a8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543710[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x65437c8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65438e0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65438c8[0m <[0;33mcol:14[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65438b0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543808[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543710[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6543878[0m <[0;33mcol:17[0m, [0;33mcol:29[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6543848[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x61889d8[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543898[0m <[0;33mcol:17[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543828[0m <[0;33mcol:17[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6543520[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6543920[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543900[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543710[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x65441a0[0m <[0;33mline:151:5[0m, [0;33mline:176:5[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543aa8[0m <[0;33mline:152:9[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543938[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6543a80[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543a68[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543a50[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |   |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6543a00[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65439e8[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65439c8[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x61895f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |   |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543958[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6543520[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65439b0[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543998[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543978[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543710[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6543d58[0m <[0;33mline:153:9[0m, [0;33mline:163:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543bb8[0m <[0;33mline:153:12[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543b20[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543b08[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543ac8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543ae8[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543b98[0m <[0;33mcol:19[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543b80[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543b40[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543b60[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6543d40[0m <[0;33mline:154:9[0m, [0;33mline:163:9[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6543d18[0m <[0;33mline:155:13[0m, [0;33mline:162:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543c30[0m <[0;33mline:155:16[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543c18[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543bd8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543bf8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6543cb0[0m <[0;33mline:156:13[0m, [0;33mline:158:13[0m>
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543c90[0m <[0;33mline:157:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543c50[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543c70[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6543d00[0m <[0;33mline:160:13[0m, [0;33mline:162:13[0m>
[0;34m  |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6543ce8[0m <[0;33mline:161:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543cc8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6544000[0m <[0;33mline:164:9[0m, [0;33mline:174:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543e60[0m <[0;33mline:164:12[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543dc8[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543db0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543d70[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543d90[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543e40[0m <[0;33mcol:19[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543e28[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543de8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543e08[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6543fe8[0m <[0;33mline:165:9[0m, [0;33mline:174:9[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6543fc0[0m <[0;33mline:166:13[0m, [0;33mline:173:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543ed8[0m <[0;33mline:166:16[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6543ec0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543e80[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543ea0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6543f58[0m <[0;33mline:167:13[0m, [0;33mline:169:13[0m>
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6543f38[0m <[0;33mline:168:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543ef8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6543f18[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6543fa8[0m <[0;33mline:171:13[0m, [0;33mline:173:13[0m>
[0;34m  |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6543f90[0m <[0;33mline:172:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6543f70[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6544180[0m <[0;33mline:175:9[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x65440c0[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x65440a8[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6544088[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x61895f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6544018[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6543520[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6544070[0m <[0;33mcol:14[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6544058[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6544038[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543710[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6544158[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6544140[0m <[0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6544128[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65440f8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6543670[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6544270[0m <[0;33mline:177:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6544240[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::__cxx11::basic_string<char> &&) noexcept'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6544228[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6544208[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6543520[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping decode:
[0;1;32mFunctionDecl[0m[0;33m 0x51859f8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:13:1[0m, [0;33mcol:22[0m> [0;33mcol:8[0m[0;1;36m decode[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5185968[0m <[0;33mcol:15[0m> [0;33mcol:22[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping decode:
[0;1;32mFunctionDecl[0m[0;33m 0x540e610[0m prev 0x51859f8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:147:1[0m, [0;33mline:178:1[0m> [0;33mline:147:8[0m[0;1;36m decode[0m [0;32m'std::__cxx11::string (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x540e580[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x540f2e0[0m <[0;33mline:148:1[0m, [0;33mline:178:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x540e7f0[0m <[0;33mline:149:5[0m, [0;33mcol:14[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x540e6d0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:9[0m used[0;1;36m s[0m [0;32m'int'[0m cinit
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540e738[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x540e770[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x540f230[0m <[0;33mline:150:5[0m, [0;33mline:176:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540e848[0m <[0;33mline:150:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540e808[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e770[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540e828[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540e940[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540e928[0m <[0;33mcol:14[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540e910[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540e868[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e770[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x540e8d8[0m <[0;33mcol:17[0m, [0;33mcol:29[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x540e8a8[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x50539d8[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540e8f8[0m <[0;33mcol:17[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540e888[0m <[0;33mcol:17[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x540e580[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x540e980[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540e960[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e770[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x540f200[0m <[0;33mline:151:5[0m, [0;33mline:176:5[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540eb08[0m <[0;33mline:152:9[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540e998[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x540eae0[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540eac8[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540eab0[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |   |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x540ea60[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540ea48[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540ea28[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x50545f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |   |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540e9b8[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x540e580[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540ea10[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540e9f8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540e9d8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e770[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x540edb8[0m <[0;33mline:153:9[0m, [0;33mline:163:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540ec18[0m <[0;33mline:153:12[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540eb80[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540eb68[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540eb28[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540eb48[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540ebf8[0m <[0;33mcol:19[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540ebe0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540eba0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540ebc0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x540eda0[0m <[0;33mline:154:9[0m, [0;33mline:163:9[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x540ed78[0m <[0;33mline:155:13[0m, [0;33mline:162:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540ec90[0m <[0;33mline:155:16[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540ec78[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540ec38[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540ec58[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 65[0m
[0;34m  |   |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x540ed10[0m <[0;33mline:156:13[0m, [0;33mline:158:13[0m>
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540ecf0[0m <[0;33mline:157:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540ecb0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540ecd0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 90[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x540ed60[0m <[0;33mline:160:13[0m, [0;33mline:162:13[0m>
[0;34m  |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x540ed48[0m <[0;33mline:161:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540ed28[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x540f060[0m <[0;33mline:164:9[0m, [0;33mline:174:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540eec0[0m <[0;33mline:164:12[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540ee28[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540ee10[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540edd0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540edf0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540eea0[0m <[0;33mcol:19[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540ee88[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540ee48[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540ee68[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x540f048[0m <[0;33mline:165:9[0m, [0;33mline:174:9[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x540f020[0m <[0;33mline:166:13[0m, [0;33mline:173:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540ef38[0m <[0;33mline:166:16[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540ef20[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540eee0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540ef00[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 97[0m
[0;34m  |   |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x540efb8[0m <[0;33mline:167:13[0m, [0;33mline:169:13[0m>
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540ef98[0m <[0;33mline:168:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540ef58[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x540ef78[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 122[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x540f008[0m <[0;33mline:171:13[0m, [0;33mline:173:13[0m>
[0;34m  |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x540eff0[0m <[0;33mline:172:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540efd0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x540f1e0[0m <[0;33mline:175:9[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x540f120[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540f108[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540f0e8[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x50545f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540f078[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x540e580[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540f0d0[0m <[0;33mcol:14[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540f0b8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540f098[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e770[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x540f1b8[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540f1a0[0m <[0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540f188[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540f158[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x540e6d0[0m[0;1;36m 's'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x540f2d0[0m <[0;33mline:177:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x540f2a0[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::__cxx11::basic_string<char> &&) noexcept'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x540f288[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x540f268[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x540e580[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping splitText:
[0;1;32mFunctionDecl[0m[0;33m 0x6693bb0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.h:14:1[0m, [0;33mcol:22[0m> [0;33mcol:5[0m[0;1;36m splitText[0m [0;32m'int (std::__cxx11::string)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6693ab0[0m <[0;33mcol:15[0m> [0;33mcol:22[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m

Dumping splitText:
[0;1;32mFunctionDecl[0m[0;33m 0x691d330[0m prev 0x6693bb0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user11/labor1/feladat1/lab1.cpp:179:1[0m, [0;33mline:196:1[0m> [0;33mline:179:5[0m[0;1;36m splitText[0m [0;32m'int (std::__cxx11::string)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x691d298[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m text[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x692e278[0m <[0;33mline:180:1[0m, [0;33mline:196:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x691d510[0m <[0;33mline:181:5[0m, [0;33mcol:17[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x691d3f0[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;33mcol:9[0m used[0;1;36m szum[0m [0;32m'int'[0m cinit
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x691d458[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x691d490[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692ab30[0m <[0;33mline:182:5[0m, [0;33mcol:24[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ab18[0m <[0;33mcol:22[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692aa98[0m <[0;33mcol:22[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x686f898[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692a0f0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692a0d8[0m <[0;33mcol:9[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692a058[0m <[0;33mcol:9[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6879898[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x691d528[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6913060[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692a040[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x691d5c8[0m <[0;33mcol:11[0m> [0;32m'const char [9]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "szavak: "[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692aa80[0m <[0;33mcol:24[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692aa58[0m <[0;33mcol:24[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6873f78[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6853a28[0m[0;1;36m 'endl'[0m)
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x692e1f8[0m <[0;33mline:183:5[0m, [0;33mline:193:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692aba8[0m <[0;33mline:183:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ab68[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x692ab88[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692aca0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ac88[0m <[0;33mcol:14[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ac70[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692abc8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x692ac38[0m <[0;33mcol:17[0m, [0;33mcol:29[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x692ac08[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x65619d8[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ac58[0m <[0;33mcol:17[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692abe8[0m <[0;33mcol:17[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x692ace0[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692acc0[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x692e1d8[0m <[0;33mline:184:5[0m, [0;33mline:193:5[0m>
[0;34m  |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692cd00[0m <[0;33mline:185:9[0m, [0;33mcol:21[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cce8[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, char)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692cc70[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, char)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x68771f8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, char)'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692acf8[0m <[0;33mcol:9[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6913060[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cc58[0m <[0;33mcol:15[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692adc0[0m <[0;33mcol:15[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ada8[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ad88[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x65625f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ad18[0m <[0;33mcol:15[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ad70[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ad58[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ad38[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x692e1c0[0m <[0;33mline:186:9[0m, [0;33mline:191:9[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d778[0m <[0;33mline:186:12[0m, [0;33mcol:106[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d5f8[0m <[0;33mcol:12[0m, [0;33mcol:91[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |     | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d478[0m <[0;33mcol:12[0m, [0;33mcol:77[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |     | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d2f8[0m <[0;33mcol:12[0m, [0;33mcol:63[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |     | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d178[0m <[0;33mcol:12[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |     | | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692cff8[0m <[0;33mcol:12[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |     | | | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692ce78[0m <[0;33mcol:12[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ce48[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ce30[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | | | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692cde0[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | | | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cdc8[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | | | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692cda8[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x65625f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | | | | | | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692cd38[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cd90[0m <[0;33mcol:17[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | | | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cd78[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | | | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692cd58[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ce60[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | | | |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x692ce18[0m <[0;33mcol:21[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 32[0m
[0;34m  |     | | | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692cfd8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | | | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cfa8[0m <[0;33mcol:26[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cf90[0m <[0;33mcol:26[0m, [0;33mcol:32[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | | |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692cf40[0m <[0;33mcol:26[0m, [0;33mcol:32[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cf28[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692cf08[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x65625f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | | | | | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ce98[0m <[0;33mcol:26[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | | | | | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cef0[0m <[0;33mcol:31[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692ced8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692ceb8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692cfc0[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | | |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x692cf78[0m <[0;33mcol:35[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  |     | | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d158[0m <[0;33mcol:40[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d128[0m <[0;33mcol:40[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d110[0m <[0;33mcol:40[0m, [0;33mcol:46[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692d0c0[0m <[0;33mcol:40[0m, [0;33mcol:46[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d0a8[0m <[0;33mcol:44[0m, [0;33mcol:46[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d088[0m <[0;33mcol:44[0m, [0;33mcol:46[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x65625f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | | | | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d018[0m <[0;33mcol:40[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | | | | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d070[0m <[0;33mcol:45[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d058[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d038[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d140[0m <[0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x692d0f8[0m <[0;33mcol:49[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 46[0m
[0;34m  |     | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d2d8[0m <[0;33mcol:54[0m, [0;33mcol:63[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d2a8[0m <[0;33mcol:54[0m, [0;33mcol:60[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d290[0m <[0;33mcol:54[0m, [0;33mcol:60[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692d240[0m <[0;33mcol:54[0m, [0;33mcol:60[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d228[0m <[0;33mcol:58[0m, [0;33mcol:60[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d208[0m <[0;33mcol:58[0m, [0;33mcol:60[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x65625f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | | | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d198[0m <[0;33mcol:54[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | | | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d1f0[0m <[0;33mcol:59[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d1d8[0m <[0;33mcol:59[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d1b8[0m <[0;33mcol:59[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d2c0[0m <[0;33mcol:63[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x692d278[0m <[0;33mcol:63[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 63[0m
[0;34m  |     | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d458[0m <[0;33mcol:68[0m, [0;33mcol:77[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d428[0m <[0;33mcol:68[0m, [0;33mcol:74[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d410[0m <[0;33mcol:68[0m, [0;33mcol:74[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692d3c0[0m <[0;33mcol:68[0m, [0;33mcol:74[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d3a8[0m <[0;33mcol:72[0m, [0;33mcol:74[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d388[0m <[0;33mcol:72[0m, [0;33mcol:74[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x65625f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d318[0m <[0;33mcol:68[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d370[0m <[0;33mcol:73[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d358[0m <[0;33mcol:73[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d338[0m <[0;33mcol:73[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d440[0m <[0;33mcol:77[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x692d3f8[0m <[0;33mcol:77[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 44[0m
[0;34m  |     | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d5d8[0m <[0;33mcol:82[0m, [0;33mcol:91[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d5a8[0m <[0;33mcol:82[0m, [0;33mcol:88[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d590[0m <[0;33mcol:82[0m, [0;33mcol:88[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692d540[0m <[0;33mcol:82[0m, [0;33mcol:88[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d528[0m <[0;33mcol:86[0m, [0;33mcol:88[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d508[0m <[0;33mcol:86[0m, [0;33mcol:88[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x65625f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d498[0m <[0;33mcol:82[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d4f0[0m <[0;33mcol:87[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d4d8[0m <[0;33mcol:87[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d4b8[0m <[0;33mcol:87[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d5c0[0m <[0;33mcol:91[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x692d578[0m <[0;33mcol:91[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 9[0m
[0;34m  |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x692d758[0m <[0;33mcol:97[0m, [0;33mcol:106[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d728[0m <[0;33mcol:97[0m, [0;33mcol:103[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d710[0m <[0;33mcol:97[0m, [0;33mcol:103[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692d6c0[0m <[0;33mcol:97[0m, [0;33mcol:103[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d6a8[0m <[0;33mcol:101[0m, [0;33mcol:103[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d688[0m <[0;33mcol:101[0m, [0;33mcol:103[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x65625f8[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d618[0m <[0;33mcol:97[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x691d298[0m[0;1;36m 'text'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d670[0m <[0;33mcol:102[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d658[0m <[0;33mcol:102[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d638[0m <[0;33mcol:102[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d490[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692d740[0m <[0;33mcol:106[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |     `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x692d6f8[0m <[0;33mcol:106[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x692e1a0[0m <[0;33mline:187:9[0m, [0;33mline:191:9[0m>
[0;34m  |       |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x692d7b8[0m <[0;33mline:189:13[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d798[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d3f0[0m[0;1;36m 'szum'[0m [0;32m'int'[0m
[0;34m  |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x692e168[0m <[0;33mline:190:13[0m, [0;33mcol:19[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692e150[0m <[0;33mcol:17[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692e130[0m <[0;33mcol:17[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x686f898[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692d7d0[0m <[0;33mcol:13[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6913060[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692e118[0m <[0;33mcol:19[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692e0f0[0m <[0;33mcol:19[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6873f78[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6853a28[0m[0;1;36m 'endl'[0m)
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x692e268[0m <[0;33mline:194:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x692e250[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x692e230[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x691d3f0[0m[0;1;36m 'szum'[0m [0;32m'int'[0m

