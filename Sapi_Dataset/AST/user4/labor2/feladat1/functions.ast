Dumping negyzet:
[0;1;32mFunctionDecl[0m[0;33m 0x517b560[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.h:6:1[0m, [0;33mcol:36[0m> [0;33mcol:6[0m[0;1;36m negyzet[0m [0;32m'bool (Pont, Pont, Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514f078[0m <[0;33mcol:14[0m> [0;33mcol:18[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514f0f0[0m <[0;33mcol:20[0m> [0;33mcol:24[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514f168[0m <[0;33mcol:26[0m> [0;33mcol:30[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514f1e0[0m <[0;33mcol:32[0m> [0;33mcol:36[0m [0;32m'Pont'[0m

Dumping negyzet:
[0;1;32mFunctionDecl[0m[0;33m 0x53c3150[0m prev 0x517b560 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.cpp:4:1[0m, [0;33mline:15:1[0m> [0;33mline:4:6[0m[0;1;36m negyzet[0m [0;32m'bool (Pont, Pont, Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53c2f40[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53c2fb8[0m <[0;33mcol:22[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53c3030[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m c[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53c30a8[0m <[0;33mcol:38[0m, [0;33mcol:43[0m> [0;33mcol:43[0m used[0;1;36m d[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x53c5160[0m <[0;33mline:5:1[0m, [0;33mline:15:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x53c3ed8[0m <[0;33mline:6:5[0m, [0;33mline:9:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53c3e80[0m <[0;33mline:6:8[0m, [0;33mcol:71[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53c3ce0[0m <[0;33mcol:8[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53c3b40[0m <[0;33mcol:8[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x53c3300[0m <[0;33mcol:8[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c32e8[0m <[0;33mcol:8[0m> [0;32m'bool (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3298[0m <[0;33mcol:8[0m> [0;32m'bool (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b9d8[0m[0;1;36m 'hasonlit'[0m [0;32m'bool (Pont, Pont)'[0m
[0;34m  | | | | | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c3840[0m <[0;33mcol:17[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3688[0m <[0;33mcol:17[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3258[0m <[0;33mcol:17[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2f40[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  | | | | | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c3990[0m <[0;33mcol:19[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3978[0m <[0;33mcol:19[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3278[0m <[0;33mcol:19[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2fb8[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  | | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x53c3a80[0m <[0;33mcol:25[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3a68[0m <[0;33mcol:25[0m> [0;32m'bool (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3a48[0m <[0;33mcol:25[0m> [0;32m'bool (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b9d8[0m[0;1;36m 'hasonlit'[0m [0;32m'bool (Pont, Pont)'[0m
[0;34m  | | | |   |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c3ac8[0m <[0;33mcol:34[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3ab0[0m <[0;33mcol:34[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3a08[0m <[0;33mcol:34[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2fb8[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  | | | |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c3b10[0m <[0;33mcol:36[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3af8[0m <[0;33mcol:36[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3a28[0m <[0;33mcol:36[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c3030[0m[0;1;36m 'c'[0m [0;32m'Pont'[0m
[0;34m  | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x53c3c20[0m <[0;33mcol:42[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3c08[0m <[0;33mcol:42[0m> [0;32m'bool (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3be8[0m <[0;33mcol:42[0m> [0;32m'bool (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b9d8[0m[0;1;36m 'hasonlit'[0m [0;32m'bool (Pont, Pont)'[0m
[0;34m  | | |   |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c3c68[0m <[0;33mcol:51[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3c50[0m <[0;33mcol:51[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3ba8[0m <[0;33mcol:51[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c3030[0m[0;1;36m 'c'[0m [0;32m'Pont'[0m
[0;34m  | | |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c3cb0[0m <[0;33mcol:53[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3c98[0m <[0;33mcol:53[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3bc8[0m <[0;33mcol:53[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c30a8[0m[0;1;36m 'd'[0m [0;32m'Pont'[0m
[0;34m  | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x53c3dc0[0m <[0;33mcol:59[0m, [0;33mcol:71[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3da8[0m <[0;33mcol:59[0m> [0;32m'bool (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3d88[0m <[0;33mcol:59[0m> [0;32m'bool (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b9d8[0m[0;1;36m 'hasonlit'[0m [0;32m'bool (Pont, Pont)'[0m
[0;34m  | |   |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c3e08[0m <[0;33mcol:68[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3df0[0m <[0;33mcol:68[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3d48[0m <[0;33mcol:68[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c30a8[0m[0;1;36m 'd'[0m [0;32m'Pont'[0m
[0;34m  | |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c3e50[0m <[0;33mcol:70[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3e38[0m <[0;33mcol:70[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3d68[0m <[0;33mcol:70[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2f40[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x53c3ec0[0m <[0;33mline:7:5[0m, [0;33mline:9:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x53c3eb0[0m <[0;33mline:8:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x53c3ea0[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x53c5128[0m <[0;33mline:10:5[0m, [0;33mline:13:5[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53c50d0[0m <[0;33mline:10:8[0m, [0;33mcol:101[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x53c45e0[0m <[0;33mcol:8[0m, [0;33mcol:67[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53c45c0[0m <[0;33mcol:9[0m, [0;33mcol:66[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c45a8[0m <[0;33mcol:9[0m, [0;33mcol:51[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  | | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4590[0m <[0;33mcol:9[0m, [0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53c43f0[0m <[0;33mcol:9[0m, [0;33mcol:51[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c43d8[0m <[0;33mcol:9[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  | | |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c43c0[0m <[0;33mcol:9[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | |   |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53c4220[0m <[0;33mcol:9[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |   |     |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x53c3fe0[0m <[0;33mcol:9[0m, [0;33mcol:21[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |   |     |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c3fc8[0m <[0;33mcol:9[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | |   |     |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3f78[0m <[0;33mcol:9[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b7d0[0m[0;1;36m 'tavolsag'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  | | |   |     |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c4028[0m <[0;33mcol:18[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |   |     |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4010[0m <[0;33mcol:18[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |   |     |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3f38[0m <[0;33mcol:18[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2f40[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  | | |   |     |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c4070[0m <[0;33mcol:20[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |   |     |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4058[0m <[0;33mcol:20[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |   |     |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c3f58[0m <[0;33mcol:20[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2fb8[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  | | |   |     |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x53c4160[0m <[0;33mcol:24[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |   |     |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4148[0m <[0;33mcol:24[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | |   |     |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4128[0m <[0;33mcol:24[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b7d0[0m[0;1;36m 'tavolsag'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  | | |   |     |       |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c41a8[0m <[0;33mcol:33[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |   |     |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4190[0m <[0;33mcol:33[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |   |     |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c40e8[0m <[0;33mcol:33[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2fb8[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  | | |   |     |       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c41f0[0m <[0;33mcol:35[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |   |     |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c41d8[0m <[0;33mcol:35[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |   |     |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4108[0m <[0;33mcol:35[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c3030[0m[0;1;36m 'c'[0m [0;32m'Pont'[0m
[0;34m  | | |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x53c4300[0m <[0;33mcol:39[0m, [0;33mcol:51[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c42e8[0m <[0;33mcol:39[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c42c8[0m <[0;33mcol:39[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b7d0[0m[0;1;36m 'tavolsag'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  | | |   |       |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c4348[0m <[0;33mcol:48[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4330[0m <[0;33mcol:48[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |   |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4288[0m <[0;33mcol:48[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c3030[0m[0;1;36m 'c'[0m [0;32m'Pont'[0m
[0;34m  | | |   |       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c4390[0m <[0;33mcol:50[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4378[0m <[0;33mcol:50[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c42a8[0m <[0;33mcol:50[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c30a8[0m[0;1;36m 'd'[0m [0;32m'Pont'[0m
[0;34m  | | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x53c44d0[0m <[0;33mcol:54[0m, [0;33mcol:66[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c44b8[0m <[0;33mcol:54[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4498[0m <[0;33mcol:54[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b7d0[0m[0;1;36m 'tavolsag'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  | | |     |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c4518[0m <[0;33mcol:63[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4500[0m <[0;33mcol:63[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4458[0m <[0;33mcol:63[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c30a8[0m[0;1;36m 'd'[0m [0;32m'Pont'[0m
[0;34m  | | |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c4560[0m <[0;33mcol:65[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4548[0m <[0;33mcol:65[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4478[0m <[0;33mcol:65[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2f40[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x53c50b0[0m <[0;33mcol:72[0m, [0;33mcol:101[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x53c5090[0m <[0;33mcol:73[0m, [0;33mcol:100[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x53c46c0[0m <[0;33mcol:73[0m, [0;33mcol:85[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c46a8[0m <[0;33mcol:73[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4688[0m <[0;33mcol:73[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b7d0[0m[0;1;36m 'tavolsag'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  | |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c4708[0m <[0;33mcol:82[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c46f0[0m <[0;33mcol:82[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4648[0m <[0;33mcol:82[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2f40[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  | |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c4ee0[0m <[0;33mcol:84[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4738[0m <[0;33mcol:84[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4668[0m <[0;33mcol:84[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c3030[0m[0;1;36m 'c'[0m [0;32m'Pont'[0m
[0;34m  | |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x53c4fd0[0m <[0;33mcol:88[0m, [0;33mcol:100[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c4fb8[0m <[0;33mcol:88[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4f98[0m <[0;33mcol:88[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x517b7d0[0m[0;1;36m 'tavolsag'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  | |       |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c5018[0m <[0;33mcol:97[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c5000[0m <[0;33mcol:97[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4f58[0m <[0;33mcol:97[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c2fb8[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  | |       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x53c5060[0m <[0;33mcol:99[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x53c5048[0m <[0;33mcol:99[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53c4f78[0m <[0;33mcol:99[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53c30a8[0m[0;1;36m 'd'[0m [0;32m'Pont'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x53c5110[0m <[0;33mline:11:5[0m, [0;33mline:13:5[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x53c5100[0m <[0;33mline:12:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x53c50f0[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x53c5150[0m <[0;33mline:14:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x53c5140[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping tavolsag:
[0;1;32mFunctionDecl[0m[0;33m 0x54fb7d0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.h:7:1[0m, [0;33mcol:31[0m> [0;33mcol:8[0m used[0;1;36m tavolsag[0m [0;32m'double (Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x54fb678[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x54fb6f0[0m <[0;33mcol:25[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m b[0m [0;32m'Pont'[0m

Dumping tavolsag:
[0;1;32mFunctionDecl[0m[0;33m 0x57452b0[0m prev 0x54fb7d0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.cpp:17:1[0m, [0;33mline:20:1[0m> [0;33mline:17:8[0m used[0;1;36m tavolsag[0m [0;32m'double (Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5745198[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5745210[0m <[0;33mcol:25[0m, [0;33mcol:30[0m> [0;33mcol:30[0m used[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5746368[0m <[0;33mline:18:1[0m, [0;33mline:20:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5746358[0m <[0;33mline:19:5[0m, [0;33mcol:102[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5746330[0m <[0;33mcol:12[0m, [0;33mcol:102[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5746318[0m <[0;33mcol:12[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57461d8[0m <[0;33mcol:12[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x57460d8[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mUsingShadow[0m[0;33m 0x573bbd0[0m[0;1;36m 'sqrt'[0m)
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5745940[0m <[0;33mcol:17[0m, [0;33mcol:101[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5745660[0m <[0;33mcol:17[0m, [0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m        | |-[0m[0;1;35mParenExpr[0m[0;33m 0x57454f0[0m <[0;33mcol:17[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57454d0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        | |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5745410[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57453e0[0m <[0;33mcol:18[0m, [0;33mcol:20[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x54ce9f0[0m
[0;34m        | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5745430[0m <[0;33mcol:18[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57453c0[0m <[0;33mcol:18[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745198[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m        | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5745498[0m <[0;33mcol:27[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5745468[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x54ce9f0[0m
[0;34m        | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57454b8[0m <[0;33mcol:27[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5745448[0m <[0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745210[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m        | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5745640[0m <[0;33mcol:39[0m, [0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5745620[0m <[0;33mcol:40[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5745560[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5745530[0m <[0;33mcol:40[0m, [0;33mcol:42[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x54ce9f0[0m
[0;34m        |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5745580[0m <[0;33mcol:40[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5745510[0m <[0;33mcol:40[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745198[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m        |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57455e8[0m <[0;33mcol:49[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57455b8[0m <[0;33mcol:49[0m, [0;33mcol:51[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x54ce9f0[0m
[0;34m        |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5745608[0m <[0;33mcol:49[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5745598[0m <[0;33mcol:49[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745210[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m        `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5745920[0m <[0;33mcol:61[0m, [0;33mcol:101[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m          |-[0m[0;1;35mParenExpr[0m[0;33m 0x57457b0[0m <[0;33mcol:61[0m, [0;33mcol:79[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5745790[0m <[0;33mcol:62[0m, [0;33mcol:78[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m          |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57456d0[0m <[0;33mcol:62[0m, [0;33mcol:69[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57456a0[0m <[0;33mcol:62[0m, [0;33mcol:64[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x54ceab8[0m
[0;34m          |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57456f0[0m <[0;33mcol:62[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5745680[0m <[0;33mcol:62[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745198[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m          |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5745758[0m <[0;33mcol:71[0m, [0;33mcol:78[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5745728[0m <[0;33mcol:71[0m, [0;33mcol:73[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x54ceab8[0m
[0;34m          |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5745778[0m <[0;33mcol:71[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5745708[0m <[0;33mcol:71[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745210[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m          `-[0m[0;1;35mParenExpr[0m[0;33m 0x5745900[0m <[0;33mcol:83[0m, [0;33mcol:101[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57458e0[0m <[0;33mcol:84[0m, [0;33mcol:100[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m              |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5745820[0m <[0;33mcol:84[0m, [0;33mcol:91[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57457f0[0m <[0;33mcol:84[0m, [0;33mcol:86[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x54ceab8[0m
[0;34m              |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5745840[0m <[0;33mcol:84[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m              |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57457d0[0m <[0;33mcol:84[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745198[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m              `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57458a8[0m <[0;33mcol:93[0m, [0;33mcol:100[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5745878[0m <[0;33mcol:93[0m, [0;33mcol:95[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x54ceab8[0m
[0;34m                  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57458c8[0m <[0;33mcol:93[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5745858[0m <[0;33mcol:93[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745210[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m

Dumping hasonlit:
[0;1;32mFunctionDecl[0m[0;33m 0x5d689d8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.h:8:1[0m, [0;33mcol:29[0m> [0;33mcol:6[0m used[0;1;36m hasonlit[0m [0;32m'bool (Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d68890[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d68908[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m b[0m [0;32m'Pont'[0m

Dumping hasonlit:
[0;1;32mFunctionDecl[0m[0;33m 0x5fb34a0[0m prev 0x5d689d8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.cpp:22:1[0m, [0;33mline:27:1[0m> [0;33mline:22:6[0m used[0;1;36m hasonlit[0m [0;32m'bool (Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb3390[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;33mcol:20[0m used[0;1;36m a[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb3408[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m b[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fb3868[0m <[0;33mline:23:1[0m, [0;33mline:27:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5fb3830[0m <[0;33mline:24:5[0m, [0;33mline:25:16[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fb37f0[0m <[0;33mline:24:8[0m, [0;33mcol:55[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x5fb3680[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fb3660[0m <[0;33mcol:9[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5fb35a0[0m <[0;33mcol:9[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb3570[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5d3b9f0[0m
[0;34m  | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb35c0[0m <[0;33mcol:9[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb3550[0m <[0;33mcol:9[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb3390[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  | | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5fb3628[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb35f8[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5d3b9f0[0m
[0;34m  | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb3648[0m <[0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb35d8[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb3408[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5fb37d0[0m <[0;33mcol:34[0m, [0;33mcol:55[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fb37b0[0m <[0;33mcol:35[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5fb36f0[0m <[0;33mcol:35[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb36c0[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5d3bab8[0m
[0;34m  | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb3710[0m <[0;33mcol:35[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb36a0[0m <[0;33mcol:35[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb3390[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m  | |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5fb3778[0m <[0;33mcol:47[0m, [0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5fb3748[0m <[0;33mcol:47[0m, [0;33mcol:49[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5d3bab8[0m
[0;34m  | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fb3798[0m <[0;33mcol:47[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fb3728[0m <[0;33mcol:47[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5fb3408[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fb3820[0m <[0;33mline:25:9[0m, [0;33mcol:16[0m>
[0;34m  |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5fb3810[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5fb3858[0m <[0;33mline:26:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5fb3848[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping legkissebblegnagyobbTav:
[0;1;32mFunctionDecl[0m[0;33m 0x6625d90[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.h:9:1[0m, [0;33mcol:42[0m> [0;33mcol:9[0m[0;1;36m legkissebblegnagyobbTav[0m [0;32m'double *(Pont *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6625c08[0m <[0;33mcol:33[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'Pont *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6625c88[0m <[0;33mcol:39[0m> [0;33mcol:42[0m [0;32m'int'[0m

Dumping legkissebblegnagyobbTav:
[0;1;32mFunctionDecl[0m[0;33m 0x6870d38[0m prev 0x6625d90 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.cpp:29:1[0m, [0;33mline:47:1[0m> [0;33mline:29:9[0m[0;1;36m legkissebblegnagyobbTav[0m [0;32m'double *(Pont *, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6870c18[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m a[0m [0;32m'Pont *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6870c98[0m <[0;33mcol:40[0m, [0;33mcol:44[0m> [0;33mcol:44[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6872140[0m <[0;33mcol:46[0m, [0;33mline:47:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6870ea0[0m <[0;33mline:30:5[0m, [0;33mcol:27[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6870e00[0m <[0;33mcol:5[0m, [0;33mcol:19[0m> [0;33mcol:12[0m used[0;1;36m mini[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6870e88[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6870e68[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 10000000[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6870f70[0m <[0;33mline:31:5[0m, [0;33mcol:20[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6870ed0[0m <[0;33mcol:5[0m, [0;33mcol:19[0m> [0;33mcol:12[0m used[0;1;36m maxi[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6870f58[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6870f38[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x68718d8[0m <[0;33mline:32:5[0m, [0;33mline:44:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6871028[0m <[0;33mline:32:9[0m, [0;33mcol:18[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6870fa0[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6871008[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x68710b0[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871080[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871040[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870fa0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871098[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871060[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6870c98[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x68710f0[0m <[0;33mcol:27[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68710d0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870fa0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x68718c0[0m <[0;33mcol:31[0m, [0;33mline:44:5[0m>
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x6871888[0m <[0;33mline:33:9[0m, [0;33mline:43:9[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6871200[0m <[0;33mline:33:13[0m, [0;33mcol:24[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6871120[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;33mcol:17[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x68711e0[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68711c8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871188[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870fa0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x68711a8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x68712a0[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871270[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871218[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6871120[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871288[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871238[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6870c98[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x68712e0[0m <[0;33mcol:33[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68712c0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6871120[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6871860[0m <[0;33mcol:37[0m, [0;33mline:43:9[0m>
[0;34m  |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x68715d8[0m <[0;33mline:35:17[0m, [0;33mcol:45[0m>
[0;34m  |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6871310[0m <[0;33mcol:17[0m, [0;33mcol:44[0m> [0;33mcol:24[0m used[0;1;36m x[0m [0;32m'double'[0m cinit
[0;34m  |       |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6871518[0m <[0;33mcol:26[0m, [0;33mcol:44[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871500[0m <[0;33mcol:26[0m> [0;32m'double (*)(Pont, Pont)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68714e0[0m <[0;33mcol:26[0m> [0;32m'double (Pont, Pont)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x686f630[0m[0;1;36m 'tavolsag'[0m [0;32m'double (Pont, Pont)'[0m
[0;34m  |       |     |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6871560[0m <[0;33mcol:35[0m, [0;33mcol:38[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871548[0m <[0;33mcol:35[0m, [0;33mcol:38[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6871430[0m <[0;33mcol:35[0m, [0;33mcol:38[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871400[0m <[0;33mcol:35[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68713c0[0m <[0;33mcol:35[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6870c18[0m[0;1;36m 'a'[0m [0;32m'Pont *'[0m
[0;34m  |       |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871418[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68713e0[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870fa0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |       |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x68715a8[0m <[0;33mcol:40[0m, [0;33mcol:43[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Pont &) noexcept'[0m
[0;34m  |       |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871590[0m <[0;33mcol:40[0m, [0;33mcol:43[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |         `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x68714c0[0m <[0;33mcol:40[0m, [0;33mcol:43[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871490[0m <[0;33mcol:40[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871450[0m <[0;33mcol:40[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6870c18[0m[0;1;36m 'a'[0m [0;32m'Pont *'[0m
[0;34m  |       |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68714a8[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871470[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6871120[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x6871710[0m <[0;33mline:36:17[0m, [0;33mline:38:17[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6871660[0m <[0;33mline:36:20[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |       | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871630[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68715f0[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6871310[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871648[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871610[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870e00[0m[0;1;36m 'mini'[0m [0;32m'double'[0m
[0;34m  |       | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x68716f8[0m <[0;33mcol:29[0m, [0;33mline:38:17[0m>
[0;34m  |       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x68716d8[0m <[0;33mline:37:21[0m, [0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871680[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870e00[0m[0;1;36m 'mini'[0m [0;32m'double'[0m
[0;34m  |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68716c0[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68716a0[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6871310[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x6871848[0m <[0;33mline:39:17[0m, [0;33mline:41:17[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6871798[0m <[0;33mline:39:20[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871768[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871728[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6871310[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871780[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6871748[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870ed0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6871830[0m <[0;33mcol:29[0m, [0;33mline:41:17[0m>
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6871810[0m <[0;33mline:40:21[0m, [0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68717b8[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870ed0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68717f8[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68717d8[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6871310[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x68720e0[0m <[0;33mline:45:5[0m, [0;33mcol:47[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6871928[0m <[0;33mcol:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m used[0;1;36m aux[0m [0;32m'double *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x6872098[0m <[0;33mcol:20[0m, [0;33mcol:46[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x6871bc0[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(unsigned long)'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6871a58[0m <[0;33mcol:32[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6871990[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |     `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6872018[0m <[0;33mcol:36[0m, [0;33mcol:46[0m> [0;32m'double [2]'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6872068[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68719b0[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870e00[0m[0;1;36m 'mini'[0m [0;32m'double'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6872080[0m <[0;33mcol:42[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68719d0[0m <[0;33mcol:42[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6870ed0[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6872130[0m <[0;33mline:46:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6872118[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68720f8[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6871928[0m[0;1;36m 'aux'[0m [0;32m'double *'[0m

Dumping rendezesHasonlito:
[0;1;32mFunctionDecl[0m[0;33m 0x62edf60[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.h:10:1[0m, [0;33mcol:35[0m> [0;33mcol:6[0m[0;1;36m rendezesHasonlito[0m [0;32m'bool (Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62ede50[0m <[0;33mcol:24[0m> [0;33mcol:28[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62edec8[0m <[0;33mcol:30[0m> [0;33mcol:35[0m [0;32m'Pont'[0m

Dumping rendezesHasonlito:
[0;1;32mFunctionDecl[0m[0;33m 0x653a298[0m prev 0x62edf60 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user4/labor2/feladat1/functions.cpp:49:1[0m, [0;33mline:52:1[0m> [0;33mline:49:6[0m[0;1;36m rendezesHasonlito[0m [0;32m'bool (Pont, Pont)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x653a188[0m <[0;33mcol:24[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m A[0m [0;32m'Pont'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x653a200[0m <[0;33mcol:32[0m, [0;33mcol:37[0m> [0;33mcol:37[0m used[0;1;36m B[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x653a4a8[0m <[0;33mcol:40[0m, [0;33mline:52:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x653a498[0m <[0;33mline:51:2[0m, [0;33mcol:27[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x653a478[0m <[0;33mcol:9[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x653a458[0m <[0;33mcol:10[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m        |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x653a398[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x653a368[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x62c0b60[0m
[0;34m        |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x653a3b8[0m <[0;33mcol:10[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x653a348[0m <[0;33mcol:10[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x653a188[0m[0;1;36m 'A'[0m [0;32m'Pont'[0m
[0;34m        `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x653a420[0m <[0;33mcol:19[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mMemberExpr[0m[0;33m 0x653a3f0[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x62c0b60[0m
[0;34m            `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x653a440[0m <[0;33mcol:19[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m              `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x653a3d0[0m <[0;33mcol:19[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x653a200[0m[0;1;36m 'B'[0m [0;32m'Pont'[0m

