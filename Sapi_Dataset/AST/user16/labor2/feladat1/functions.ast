Dumping negyzet:
[0;1;32mFunctionDecl[0m[0;33m 0x63f4d08[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:9:1[0m, [0;33mcol:29[0m> [0;33mcol:6[0m[0;1;36m negyzet[0m [0;32m'bool (const Pont *)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63f4c40[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m a[0m [0;32m'const Pont *'[0m

Dumping negyzet:
[0;1;32mFunctionDecl[0m[0;33m 0x6ce5b68[0m prev 0x63f4d08 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:13:1[0m, [0;33mline:29:1[0m> [0;33mline:13:6[0m[0;1;36m negyzet[0m [0;32m'bool (const Pont *)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ce5ad8[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m a[0m [0;32m'const Pont *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ce75a0[0m <[0;33mline:14:1[0m, [0;33mline:29:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ce5db0[0m <[0;33mline:15:5[0m, [0;33mcol:29[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6ce5c28[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m dist1[0m [0;32m'double'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6ce5ca8[0m <[0;33mcol:5[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m dist2[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ce5d28[0m <[0;33mcol:5[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m dist3[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce5fb0[0m <[0;33mline:16:5[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce5dc8[0m <[0;33mcol:5[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5c28[0m[0;1;36m 'dist1'[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ce5f80[0m <[0;33mcol:13[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce5f68[0m <[0;33mcol:13[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce5f20[0m <[0;33mcol:13[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63f4f40[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |   |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6ce5e88[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce5e70[0m <[0;33mcol:18[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce5e30[0m <[0;33mcol:18[0m> [0;32m'const Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ce5ad8[0m[0;1;36m 'a'[0m [0;32m'const Pont *'[0m
[0;34m  |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce5e50[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6ce5f00[0m <[0;33mcol:23[0m, [0;33mcol:26[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce5ee8[0m <[0;33mcol:23[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce5ea8[0m <[0;33mcol:23[0m> [0;32m'const Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ce5ad8[0m[0;1;36m 'a'[0m [0;32m'const Pont *'[0m
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce5ec8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce6190[0m <[0;33mline:17:5[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce5fd0[0m <[0;33mcol:5[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5ca8[0m[0;1;36m 'dist2'[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ce6160[0m <[0;33mcol:13[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce6148[0m <[0;33mcol:13[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6128[0m <[0;33mcol:13[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63f4f40[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |   |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6ce6090[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce6078[0m <[0;33mcol:18[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6038[0m <[0;33mcol:18[0m> [0;32m'const Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ce5ad8[0m[0;1;36m 'a'[0m [0;32m'const Pont *'[0m
[0;34m  |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce6058[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6ce6108[0m <[0;33mcol:23[0m, [0;33mcol:26[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce60f0[0m <[0;33mcol:23[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce60b0[0m <[0;33mcol:23[0m> [0;32m'const Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ce5ad8[0m[0;1;36m 'a'[0m [0;32m'const Pont *'[0m
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce60d0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce6370[0m <[0;33mline:18:5[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce61b0[0m <[0;33mcol:5[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5d28[0m[0;1;36m 'dist3'[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ce6340[0m <[0;33mcol:13[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce6328[0m <[0;33mcol:13[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6308[0m <[0;33mcol:13[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63f4f40[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |   |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6ce6270[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce6258[0m <[0;33mcol:18[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6218[0m <[0;33mcol:18[0m> [0;32m'const Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ce5ad8[0m[0;1;36m 'a'[0m [0;32m'const Pont *'[0m
[0;34m  |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce6238[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6ce62e8[0m <[0;33mcol:23[0m, [0;33mcol:26[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce62d0[0m <[0;33mcol:23[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6290[0m <[0;33mcol:23[0m> [0;32m'const Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ce5ad8[0m[0;1;36m 'a'[0m [0;32m'const Pont *'[0m
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce62b0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 3[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ce6fa8[0m <[0;33mline:20:5[0m, [0;33mline:21:16[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce6f68[0m <[0;33mline:20:9[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x6ce6420[0m <[0;33mcol:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce6400[0m <[0;33mcol:10[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce63d0[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6390[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5c28[0m[0;1;36m 'dist1'[0m [0;32m'double'[0m
[0;34m  | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce63e8[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce63b0[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5ca8[0m[0;1;36m 'dist2'[0m [0;32m'double'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce6f48[0m <[0;33mcol:29[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce6f30[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6440[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5d28[0m[0;1;36m 'dist3'[0m [0;32m'double'[0m
[0;34m  | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce6f10[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce6ef8[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6460[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5c28[0m[0;1;36m 'dist1'[0m [0;32m'double'[0m
[0;34m  | |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ce6ed0[0m <[0;33mcol:43[0m, [0;33mcol:49[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce6eb8[0m <[0;33mcol:43[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6d78[0m <[0;33mcol:43[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ce6c78[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mUsingShadow[0m[0;33m 0x65a0db0[0m[0;1;36m 'sqrt'[0m)
[0;34m  | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce64e0[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ce6f98[0m <[0;33mline:21:9[0m, [0;33mcol:16[0m>
[0;34m  |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ce6f88[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ce7288[0m <[0;33mline:22:5[0m, [0;33mline:23:16[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce7248[0m <[0;33mline:22:9[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x6ce7050[0m <[0;33mcol:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce7030[0m <[0;33mcol:10[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce7000[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6fc0[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5c28[0m[0;1;36m 'dist1'[0m [0;32m'double'[0m
[0;34m  | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce7018[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce6fe0[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5d28[0m[0;1;36m 'dist3'[0m [0;32m'double'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce7228[0m <[0;33mcol:29[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce7210[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce7070[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5ca8[0m[0;1;36m 'dist2'[0m [0;32m'double'[0m
[0;34m  | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce71f0[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce71d8[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce7090[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5c28[0m[0;1;36m 'dist1'[0m [0;32m'double'[0m
[0;34m  | |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ce71b0[0m <[0;33mcol:43[0m, [0;33mcol:49[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce7198[0m <[0;33mcol:43[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce7170[0m <[0;33mcol:43[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ce6c78[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mUsingShadow[0m[0;33m 0x65a0db0[0m[0;1;36m 'sqrt'[0m)
[0;34m  | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce7110[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ce7278[0m <[0;33mline:23:9[0m, [0;33mcol:16[0m>
[0;34m  |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ce7268[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ce7568[0m <[0;33mline:24:5[0m, [0;33mline:25:16[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce7528[0m <[0;33mline:24:9[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x6ce7330[0m <[0;33mcol:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce7310[0m <[0;33mcol:10[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce72e0[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce72a0[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5ca8[0m[0;1;36m 'dist2'[0m [0;32m'double'[0m
[0;34m  | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce72f8[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce72c0[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5d28[0m[0;1;36m 'dist3'[0m [0;32m'double'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce7508[0m <[0;33mcol:29[0m, [0;33mcol:49[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce74f0[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce7350[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5c28[0m[0;1;36m 'dist1'[0m [0;32m'double'[0m
[0;34m  | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ce74d0[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce74b8[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce7370[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ce5ca8[0m[0;1;36m 'dist2'[0m [0;32m'double'[0m
[0;34m  | |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ce7490[0m <[0;33mcol:43[0m, [0;33mcol:49[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m  | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ce7478[0m <[0;33mcol:43[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ce7450[0m <[0;33mcol:43[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ce6c78[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mUsingShadow[0m[0;33m 0x65a0db0[0m[0;1;36m 'sqrt'[0m)
[0;34m  | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ce73f0[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ce7558[0m <[0;33mline:25:9[0m, [0;33mcol:16[0m>
[0;34m  |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ce7548[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ce7590[0m <[0;33mline:27:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ce7580[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x66f4ca8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:77:3[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66f4828[0m <[0;33mline:77:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x66f4c08[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator, std::input_iterator_tag)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f49e0[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f4a58[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f4ad0[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f5070[0m <[0;33mline:82:5[0m, [0;33mline:93:5[0m>
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x66f4eb8[0m <[0;33mline:86:7[0m, [0;33mcol:72[0m>
[0;34m|   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x66f4e30[0m <[0;33mcol:7[0m, [0;33mcol:71[0m> [0;33mcol:65[0m referenced[0;1;36m __n[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m nrvo cinit
[0;34m|   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x66f4e98[0m <[0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|   |-[0m[0;1;35mWhileStmt[0m[0;33m 0x66f5020[0m <[0;33mline:87:7[0m, [0;33mline:91:2[0m>
[0;34m|   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x66f4f58[0m <[0;33mline:87:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66f4f10[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x66e8be8[0m
[0;34m|   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f4ed0[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66f49e0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f4ef0[0m <[0;33mcol:25[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66f4a58[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f5000[0m <[0;33mline:88:2[0m, [0;33mline:91:2[0m>
[0;34m|   |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x66f4fb0[0m <[0;33mline:89:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f4f90[0m <[0;33mcol:6[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66f49e0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x66f4fe8[0m <[0;33mline:90:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f4fc8[0m <[0;33mcol:6[0m> [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x66f4e30[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x66f5058[0m <[0;33mline:92:7[0m, [0;33mcol:14[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f5038[0m <[0;33mcol:14[0m> [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x66f4e30[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x72d4c18[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72d4a00[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72d4a78[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72d4ae0[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x72ff668[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72ff450[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72ff4c8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72ff530[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x730e028[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x730de10[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x730de88[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x730def0[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7312fa8[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7312d90[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7312e08[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7312e70[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7323fe8[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7323dd0[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7323e48[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7323eb0[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x733a138[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::input_iterator_tag)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7339f20[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7339f98[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x733a000[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x66f54e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:95:3[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66f5098[0m <[0;33mline:95:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _RandomAccessIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x66f5448[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<_RandomAccessIterator>::difference_type (_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f5220[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced[0;1;36m __first[0m [0;32m'_RandomAccessIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f5298[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m referenced[0;1;36m __last[0m [0;32m'_RandomAccessIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f5310[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66f55c8[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x66f55b8[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x66f5598[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f5558[0m <[0;33mcol:14[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66f5298[0m[0;1;36m '__last'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66f5578[0m <[0;33mcol:23[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66f5220[0m[0;1;36m '__first'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x72d5128[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72d4f10[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72d4f88[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72d4ff0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x72d5370[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x72d5360[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72d5340[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5310[0m <[0;33mcol:14[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d52d0[0m <[0;33mcol:14[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72d4f88[0m[0;1;36m '__last'[0m [0;32m'char *':'char *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5328[0m <[0;33mcol:23[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d52f0[0m <[0;33mcol:23[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72d4f10[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x72ffaf8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72ff8e0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72ff958[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72ff9c0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x72ffd40[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x72ffd30[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72ffd10[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72ffce0[0m <[0;33mcol:14[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72ffca0[0m <[0;33mcol:14[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72ff958[0m[0;1;36m '__last'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72ffcf8[0m <[0;33mcol:23[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72ffcc0[0m <[0;33mcol:23[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72ff8e0[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x730e4b8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x730e2a0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x730e318[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x730e380[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x730e700[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x730e6f0[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x730e6d0[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730e6a0[0m <[0;33mcol:14[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730e660[0m <[0;33mcol:14[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x730e318[0m[0;1;36m '__last'[0m [0;32m'const char *':'const char *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730e6b8[0m <[0;33mcol:23[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730e680[0m <[0;33mcol:23[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x730e2a0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7313438[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7313220[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7313298[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7313300[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7313680[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7313670[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7313650[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313620[0m <[0;33mcol:14[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73135e0[0m <[0;33mcol:14[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7313298[0m[0;1;36m '__last'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313638[0m <[0;33mcol:23[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7313600[0m <[0;33mcol:23[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7313220[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7324478[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7324260[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73242d8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7324340[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73246c0[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x73246b0[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7324690[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7324660[0m <[0;33mcol:14[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7324620[0m <[0;33mcol:14[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73242d8[0m[0;1;36m '__last'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7324678[0m <[0;33mcol:23[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7324640[0m <[0;33mcol:23[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7324260[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x733a5c8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x733a3b0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x733a428[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x733a490[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x733a810[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x733a800[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x733a7e0[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x733a7b0[0m <[0;33mcol:14[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x733a770[0m <[0;33mcol:14[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x733a428[0m[0;1;36m '__last'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x733a7c8[0m <[0;33mcol:23[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x733a790[0m <[0;33mcol:23[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x733a3b0[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x66f5b68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:109:3[0m, [0;33mline:113:27[0m> [0;33mline:111:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66f55e0[0m <[0;33mline:109:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x66f5ac8[0m <[0;33mline:110:5[0m, [0;33mline:113:27[0m> [0;33mline:111:5[0m[0;1;36m __distance[0m [0;32m'std::ptrdiff_t (std::_List_iterator<_Tp>, std::_List_iterator<_Tp>, std::input_iterator_tag)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f57a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:111:50[0m> [0;33mcol:51[0m [0;32m'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f5928[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:112:43[0m> [0;33mcol:44[0m [0;32m'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66f59a0[0m <[0;33mline:113:9[0m> [0;33mcol:27[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x66faba8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:115:3[0m, [0;33mline:119:27[0m> [0;33mline:117:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66f5bd8[0m <[0;33mline:115:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x66fab08[0m <[0;33mline:116:5[0m, [0;33mline:119:27[0m> [0;33mline:117:5[0m[0;1;36m __distance[0m [0;32m'std::ptrdiff_t (std::_List_const_iterator<_Tp>, std::_List_const_iterator<_Tp>, std::input_iterator_tag)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66fa7e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:117:56[0m> [0;33mcol:57[0m [0;32m'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66fa968[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:118:49[0m> [0;33mcol:50[0m [0;32m'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66fa9e0[0m <[0;33mline:119:9[0m> [0;33mcol:27[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x66fafd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:135:3[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m[0;1;36m distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66fac18[0m <[0;33mline:135:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x66faf38[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m[0;1;36m distance[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66fada0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66fae18[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x66fb1f8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x66fb1e8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x66fb1b0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66fb060[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__distance'[0;33m 0x66f4ca8[0m[0;33m 0x66f54e8[0m[0;33m 0x66f5b68[0m[0;33m 0x66faba8[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66fb0c0[0m <[0;33mcol:30[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66fada0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66fb0e0[0m <[0;33mcol:39[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66fae18[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x66fb188[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66fb120[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iterator_category'[0;33m 0x66f39a8[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66fb168[0m <[0;33mcol:34[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66fada0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x72c8e68[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72c8cd0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72c8d48[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x72d54d8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x72d54c8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x72d54b0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x72d5400[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d53e8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<char *>::difference_type (*)(char *, char *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d5298[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72d5128[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f54e8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5438[0m <[0;33mcol:30[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d3e60[0m <[0;33mcol:30[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72c8cd0[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5450[0m <[0;33mcol:39[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d3e80[0m <[0;33mcol:39[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72c8d48[0m[0;1;36m '__last'[0m [0;32m'char *':'char *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x72d5480[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72d5468[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x72d47e0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d47c8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<char *>::iterator_category (*)(char *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d4318[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<char *>::iterator_category (char *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72d4218[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<char *>::iterator_category (char *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f39a8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d4808[0m <[0;33mcol:34[0m> [0;32m'char *const':'char *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d3ee8[0m <[0;33mcol:34[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72c8cd0[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x72f8798[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72f8600[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72f8678[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x72ffea8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x72ffe98[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x72ffe80[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x72ffdd0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72ffdb8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type (*)(wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72ffc68[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72ffaf8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f54e8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72ffe08[0m <[0;33mcol:30[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72fec10[0m <[0;33mcol:30[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72f8600[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72ffe20[0m <[0;33mcol:39[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72fec30[0m <[0;33mcol:39[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72f8678[0m[0;1;36m '__last'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x72ffe50[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72ffe38[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x72ff2b0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72ff298[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category (*)(wchar_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72ff048[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72fef48[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f39a8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72ff2d8[0m <[0;33mcol:34[0m> [0;32m'wchar_t *const':'wchar_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72fec98[0m <[0;33mcol:34[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72f8600[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x730c638[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x730c4a0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x730c518[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x730e868[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x730e858[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x730e840[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x730e790[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730e778[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char *>::difference_type (*)(const char *, const char *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730e628[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x730e4b8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f54e8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730e7c8[0m <[0;33mcol:30[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730d5d0[0m <[0;33mcol:30[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x730c4a0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730e7e0[0m <[0;33mcol:39[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730d5f0[0m <[0;33mcol:39[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x730c518[0m[0;1;36m '__last'[0m [0;32m'const char *':'const char *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x730e810[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x730e7f8[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x730dc70[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730dc58[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char *>::iterator_category (*)(const char *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730da08[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char *>::iterator_category (const char *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x730d908[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char *>::iterator_category (const char *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f39a8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730dc98[0m <[0;33mcol:34[0m> [0;32m'const char *const':'const char *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730d658[0m <[0;33mcol:34[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x730c4a0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x73115b8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7311420[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7311498[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73137e8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x73137d8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x73137c0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7313710[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73136f8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type (*)(const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73135a8[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7313438[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f54e8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313748[0m <[0;33mcol:30[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7312550[0m <[0;33mcol:30[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7311420[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313760[0m <[0;33mcol:39[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7312570[0m <[0;33mcol:39[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7311498[0m[0;1;36m '__last'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7313790[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7313778[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x7312bf0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7312bd8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (*)(const wchar_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7312988[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7312888[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f39a8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7312c18[0m <[0;33mcol:34[0m> [0;32m'const wchar_t *const':'const wchar_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73125d8[0m <[0;33mcol:34[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7311420[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x731d208[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x731d070[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x731d0e8[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7324828[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7324818[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7324800[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7324750[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7324738[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type (*)(const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73245e8[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7324478[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f54e8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7324788[0m <[0;33mcol:30[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7323590[0m <[0;33mcol:30[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x731d070[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73247a0[0m <[0;33mcol:39[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73235b0[0m <[0;33mcol:39[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x731d0e8[0m[0;1;36m '__last'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x73247d0[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x73247b8[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x7323c30[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7323c18[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category (*)(const char16_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73239c8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x73238c8[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f39a8[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7323c58[0m <[0;33mcol:34[0m> [0;32m'const char16_t *const':'const char16_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7323618[0m <[0;33mcol:34[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x731d070[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x7333358[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73331c0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7333238[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x733a978[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x733a968[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x733a950[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x733a8a0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x733a888[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type (*)(const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x733a738[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x733a5c8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f54e8[0m[0;1;36m '__distance'[0m)
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x733a8d8[0m <[0;33mcol:30[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73396e0[0m <[0;33mcol:30[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73331c0[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x733a8f0[0m <[0;33mcol:39[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7339700[0m <[0;33mcol:39[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7333238[0m[0;1;36m '__last'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m          `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x733a920[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m            `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x733a908[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mCallExpr[0m[0;33m 0x7339d80[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m                |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7339d68[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category (*)(const char32_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7339b18[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7339a18[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66f39a8[0m[0;1;36m '__iterator_category'[0m)
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7339da8[0m <[0;33mcol:34[0m> [0;32m'const char32_t *const':'const char32_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7339768[0m <[0;33mcol:34[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73331c0[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m

Dumping dist:
[0;1;32mFunctionDecl[0m[0;33m 0x692b960[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:10:1[0m, [0;33mcol:42[0m> [0;33mcol:8[0m used[0;1;36m dist[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x692b808[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x692b880[0m <[0;33mcol:29[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m b[0m [0;32m'const Pont &'[0m

Dumping __dist:
[0;1;32mVarDecl[0m[0;33m 0x7111f28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_heap.h:551:7[0m, [0;33mcol:56[0m> [0;33mcol:18[0m referenced[0;1;36m __dist[0m [0;32m'const auto'[0m cinit
[0;34m`-[0m[0;1;35mCallExpr[0m[0;33m 0x7112038[0m <[0;33mcol:27[0m, [0;33mcol:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7111fb0[0m <[0;33mcol:27[0m, [0;33mcol:32[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'distance'[0;33m 0x66fafd8[0m
[0;34m  |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7111ff8[0m <[0;33mcol:41[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7111c28[0m[0;1;36m '__first'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7112018[0m <[0;33mcol:50[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7111ca0[0m[0;1;36m '__last'[0m [0;32m'_RandomAccessIterator'[0m

Dumping std::uniform_int_distribution:
[0;1;32mClassTemplateDecl[0m[0;33m 0x7181690[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/uniform_int_dist.h:60:3[0m, [0;33mline:216:5[0m> [0;33mline:61:11[0m[0;1;36m uniform_int_distribution[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7181578[0m <[0;33mline:60:12[0m, [0;33mcol:32[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _IntType[0m
[0;34m| `-[0mTemplateArgument type [0;32m'int'[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7181600[0m <[0;33mline:61:5[0m, [0;33mline:216:5[0m> [0;33mline:61:11[0m class[0;1;36m uniform_int_distribution[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x71818e0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m uniform_int_distribution[0m
[0;34m  |-[0m[0;1;32mStaticAssertDecl[0m[0;33m 0x7181b70[0m <[0;33mline:63:7[0m, [0;33mline:64:51[0m> [0;33mline:63:7[0m
[0;34m  | |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x7181a70[0m <[0;33mcol:21[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7181b28[0m <[0;33mline:64:7[0m> [0;32m'const char [43]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "template argument must be an integral type"[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x7181bb0[0m <[0;33mline:66:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7181be8[0m <[0;33mline:68:7[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m result_type[0m [0;32m'_IntType'[0m
[0;34m  | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x71815c0[0m [0;32m'_IntType'[0m dependent depth 0 index 0
[0;34m  |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x7181578[0m[0;1;36m '_IntType'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7181c40[0m <[0;33mline:70:7[0m, [0;33mline:101:7[0m> [0;33mline:70:14[0m referenced struct[0;1;36m param_type[0m definition
[0;34m  | |-[0m[0;1;32mDefinitionData[0m standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m  | | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m  | | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7181d58[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;33mcol:14[0m implicit referenced struct[0;1;36m param_type[0m
[0;34m  | |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7181ea0[0m <[0;33mline:72:2[0m, [0;33mcol:45[0m> [0;33mcol:45[0m[0;1;36m distribution_type[0m [0;32m'uniform_int_distribution<_IntType>':'uniform_int_distribution<_IntType>'[0m
[0;34m  | | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x7181e00[0m [0;32m'uniform_int_distribution<_IntType>'[0m sugar dependent uniform_int_distribution
[0;34m  | |   |-[0mTemplateArgument type [0;32m'_IntType'[0m
[0;34m  | |   `-[0m[0;32mInjectedClassNameType[0m[0;33m 0x7181850[0m [0;32m'uniform_int_distribution<_IntType>'[0m dependent
[0;34m  | |     `-[0m[0;1;32mCXXRecord[0m[0;33m 0x7181600[0m[0;1;36m 'uniform_int_distribution'[0m
[0;34m  | |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x7182098[0m <[0;33mline:74:2[0m, [0;33mline:80:2[0m> [0;33mline:75:2[0m[0;1;36m param_type[0m [0;32m'void (_IntType, _IntType)'[0m
[0;34m  | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7181f08[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;33mcol:22[0m referenced[0;1;36m __a[0m [0;32m'_IntType'[0m cinit
[0;34m  | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7184f08[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7181f80[0m <[0;33mline:76:6[0m, [0;33mcol:56[0m> [0;33mcol:15[0m referenced[0;1;36m __b[0m [0;32m'_IntType'[0m cinit
[0;34m  | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7185048[0m <[0;33mcol:21[0m, [0;33mcol:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x7185010[0m <[0;33mcol:21[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x7182830[0m[0;1;36m '_M_a'[0m [0;32m'_IntType'[0m
[0;34m  | | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x71851d8[0m <[0;33mline:77:8[0m, [0;33mcol:12[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71851b8[0m <[0;33mcol:9[0m> [0;32m'_IntType'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7181f08[0m[0;1;36m '__a'[0m [0;32m'_IntType'[0m
[0;34m  | | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x7182890[0m[0;1;36m '_M_b'[0m [0;32m'_IntType'[0m
[0;34m  | | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x7185240[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185220[0m <[0;33mcol:20[0m> [0;32m'_IntType'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7181f80[0m[0;1;36m '__b'[0m [0;32m'_IntType'[0m
[0;34m  | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71852a0[0m <[0;33mline:78:2[0m, [0;33mline:80:2[0m>
[0;34m  | |   `-[0m[0;1;35mNullStmt[0m[0;33m 0x7185298[0m <[0;33mline:79:34[0m>
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x71821e8[0m <[0;33mline:82:2[0m, [0;33mline:84:17[0m> [0;33mline:83:2[0m[0;1;36m a[0m [0;32m'std::uniform_int_distribution::result_type () const'[0m
[0;34m  | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185308[0m <[0;33mline:84:2[0m, [0;33mcol:17[0m>
[0;34m  | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x71852f8[0m <[0;33mcol:4[0m, [0;33mcol:11[0m>
[0;34m  | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x71852c8[0m <[0;33mcol:11[0m> [0;32m'const _IntType'[0m[0;36m lvalue[0m[0;36m[0m ->_M_a[0;33m 0x7182830[0m
[0;34m  | |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x71852b8[0m <[0;33mcol:11[0m> [0;32m'const std::uniform_int_distribution::param_type *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x71822a8[0m <[0;33mline:86:2[0m, [0;33mline:88:17[0m> [0;33mline:87:2[0m[0;1;36m b[0m [0;32m'std::uniform_int_distribution::result_type () const'[0m
[0;34m  | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185370[0m <[0;33mline:88:2[0m, [0;33mcol:17[0m>
[0;34m  | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185360[0m <[0;33mcol:4[0m, [0;33mcol:11[0m>
[0;34m  | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7185330[0m <[0;33mcol:11[0m> [0;32m'const _IntType'[0m[0;36m lvalue[0m[0;36m[0m ->_M_b[0;33m 0x7182890[0m
[0;34m  | |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185320[0m <[0;33mcol:11[0m> [0;32m'const std::uniform_int_distribution::param_type *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | |-[0m[0;1;32mFriendDecl[0m[0;33m 0x7182598[0m <[0;33mline:90:2[0m, [0;33mline:92:61[0m> [0;33mline:91:2[0m
[0;34m  | | `-[0m[0;1;32mFunctionDecl[0m[0;33m 0x71824d8[0m parent 0x7180ea0 <[0;33mline:90:2[0m, [0;33mline:92:61[0m> [0;33mline:91:2[0m[0;1;36m operator==[0m [0;32m'bool (const std::uniform_int_distribution::param_type &, const std::uniform_int_distribution::param_type &)'[0m
[0;34m  | |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7182388[0m <[0;33mcol:13[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __p1[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7182400[0m <[0;33mcol:37[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __p2[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185768[0m <[0;33mline:92:2[0m, [0;33mcol:61[0m>
[0;34m  | |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185758[0m <[0;33mcol:4[0m, [0;33mcol:55[0m>
[0;34m  | |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7185738[0m <[0;33mcol:11[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  | |         |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7185528[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7185458[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x66e6988[0m[0;33m 0x670c3e8[0m[0;33m 0x670e8d8[0m[0;33m 0x6731538[0m[0;33m 0x6731be8[0m[0;33m 0x67cdf70[0m[0;33m 0x67cff00[0m[0;33m 0x687aa88[0m[0;33m 0x6b2e338[0m[0;33m 0x6ce7d40[0m[0;33m 0x6ce89f0[0m[0;33m 0x6ce9508[0m[0;33m 0x6ce9ca8[0m[0;33m 0x6e79b60[0m[0;33m 0x6e7a4f0[0m[0;33m 0x6e7afc0[0m[0;33m 0x6e7b7a0[0m[0;33m 0x6f04d58[0m
[0;34m  | |         | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71853a8[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_a
[0;34m  | |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185388[0m <[0;33mcol:11[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7182388[0m[0;1;36m '__p1'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |         | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7185410[0m <[0;33mcol:24[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_a
[0;34m  | |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71853f0[0m <[0;33mcol:24[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7182400[0m[0;1;36m '__p2'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |         `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7185700[0m <[0;33mcol:37[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7185630[0m <[0;33mcol:47[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x66e6988[0m[0;33m 0x670c3e8[0m[0;33m 0x670e8d8[0m[0;33m 0x6731538[0m[0;33m 0x6731be8[0m[0;33m 0x67cdf70[0m[0;33m 0x67cff00[0m[0;33m 0x687aa88[0m[0;33m 0x6b2e338[0m[0;33m 0x6ce7d40[0m[0;33m 0x6ce89f0[0m[0;33m 0x6ce9508[0m[0;33m 0x6ce9ca8[0m[0;33m 0x6e79b60[0m[0;33m 0x6e7a4f0[0m[0;33m 0x6e7afc0[0m[0;33m 0x6e7b7a0[0m[0;33m 0x6f04d58[0m
[0;34m  | |           |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7185580[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_b
[0;34m  | |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185560[0m <[0;33mcol:37[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7182388[0m[0;1;36m '__p1'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |           `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71855e8[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_b
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71855c8[0m <[0;33mcol:50[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7182400[0m[0;1;36m '__p2'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |-[0m[0;1;32mFriendDecl[0m[0;33m 0x71827b8[0m <[0;33mline:94:2[0m, [0;33mline:96:28[0m> [0;33mline:95:2[0m
[0;34m  | | `-[0m[0;1;32mFunctionDecl[0m[0;33m 0x71826f8[0m parent 0x7180ea0 <[0;33mline:94:2[0m, [0;33mline:96:28[0m> [0;33mline:95:2[0m[0;1;36m operator!=[0m [0;32m'bool (const std::uniform_int_distribution::param_type &, const std::uniform_int_distribution::param_type &)'[0m
[0;34m  | |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71825e8[0m <[0;33mcol:13[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __p1[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7182660[0m <[0;33mcol:37[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __p2[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185910[0m <[0;33mline:96:2[0m, [0;33mcol:28[0m>
[0;34m  | |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185900[0m <[0;33mcol:4[0m, [0;33mcol:25[0m>
[0;34m  | |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x71858e8[0m <[0;33mcol:11[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | |         `-[0m[0;1;35mParenExpr[0m[0;33m 0x71858c8[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7185890[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |             |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71857c0[0m <[0;33mcol:18[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x66e6988[0m[0;33m 0x670c3e8[0m[0;33m 0x670e8d8[0m[0;33m 0x6731538[0m[0;33m 0x6731be8[0m[0;33m 0x67cdf70[0m[0;33m 0x67cff00[0m[0;33m 0x687aa88[0m[0;33m 0x6b2e338[0m[0;33m 0x6ce7d40[0m[0;33m 0x6ce89f0[0m[0;33m 0x6ce9508[0m[0;33m 0x6ce9ca8[0m[0;33m 0x6e79b60[0m[0;33m 0x6e7a4f0[0m[0;33m 0x6e7afc0[0m[0;33m 0x6e7b7a0[0m[0;33m 0x6f04d58[0m
[0;34m  | |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185780[0m <[0;33mcol:13[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71825e8[0m[0;1;36m '__p1'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71857a0[0m <[0;33mcol:21[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7182660[0m[0;1;36m '__p2'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x71827f8[0m <[0;33mline:98:7[0m, [0;33mcol:14[0m> [0;33mcol:7[0m private
[0;34m  | |-[0m[0;1;32mFieldDecl[0m[0;33m 0x7182830[0m <[0;33mline:99:2[0m, [0;33mcol:11[0m> [0;33mcol:11[0m referenced[0;1;36m _M_a[0m [0;32m'_IntType'[0m
[0;34m  | `-[0m[0;1;32mFieldDecl[0m[0;33m 0x7182890[0m <[0;33mline:100:2[0m, [0;33mcol:11[0m> [0;33mcol:11[0m referenced[0;1;36m _M_b[0m [0;32m'_IntType'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x71828f8[0m <[0;33mline:103:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x7182a80[0m <[0;33mline:107:7[0m, [0;33mline:111:9[0m> [0;33mline:108:7[0m[0;1;36m uniform_int_distribution<_IntType>[0m [0;32m'void (_IntType, _IntType)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7182930[0m <[0;33mcol:32[0m, [0;33mcol:47[0m> [0;33mcol:41[0m referenced[0;1;36m __a[0m [0;32m'_IntType'[0m cinit
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7185068[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71829a8[0m <[0;33mline:109:7[0m, [0;33mcol:57[0m> [0;33mcol:16[0m referenced[0;1;36m __b[0m [0;32m'_IntType'[0m cinit
[0;34m  | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7185198[0m <[0;33mcol:22[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x7185160[0m <[0;33mcol:22[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x7184ea0[0m[0;1;36m '_M_param'[0m [0;32m'std::uniform_int_distribution::param_type'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x7185968[0m <[0;33mline:110:17[0m, [0;33mcol:26[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185928[0m <[0;33mcol:18[0m> [0;32m'_IntType'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7182930[0m[0;1;36m '__a'[0m [0;32m'_IntType'[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185948[0m <[0;33mcol:23[0m> [0;32m'_IntType'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71829a8[0m[0;1;36m '__b'[0m [0;32m'_IntType'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71859c0[0m <[0;33mline:111:7[0m, [0;33mcol:9[0m>
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x7182c08[0m <[0;33mline:113:7[0m, [0;33mline:116:9[0m> [0;33mline:114:7[0m[0;1;36m uniform_int_distribution<_IntType>[0m [0;32m'void (const std::uniform_int_distribution::param_type &)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7182b48[0m <[0;33mcol:32[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __p[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x7184ea0[0m[0;1;36m '_M_param'[0m [0;32m'std::uniform_int_distribution::param_type'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x71859f0[0m <[0;33mline:115:17[0m, [0;33mcol:21[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71859d0[0m <[0;33mcol:18[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7182b48[0m[0;1;36m '__p'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185a40[0m <[0;33mline:116:7[0m, [0;33mcol:9[0m>
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7182cd8[0m <[0;33mline:123:7[0m, [0;33mline:124:17[0m> [0;33mcol:7[0m[0;1;36m reset[0m [0;32m'void ()'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185a50[0m <[0;33mcol:15[0m, [0;33mcol:17[0m>
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7182dc8[0m <[0;33mline:126:7[0m, [0;33mline:128:30[0m> [0;33mline:127:7[0m[0;1;36m a[0m [0;32m'std::uniform_int_distribution::result_type () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185b18[0m <[0;33mline:128:7[0m, [0;33mcol:30[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185b08[0m <[0;33mcol:9[0m, [0;33mcol:27[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7185ae8[0m <[0;33mcol:16[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7185aa0[0m <[0;33mcol:16[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .a
[0;34m  |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7185a70[0m <[0;33mcol:16[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_param[0;33m 0x7184ea0[0m
[0;34m  |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185a60[0m <[0;33mcol:16[0m> [0;32m'const uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7182e88[0m <[0;33mline:130:7[0m, [0;33mline:132:30[0m> [0;33mline:131:7[0m[0;1;36m b[0m [0;32m'std::uniform_int_distribution::result_type () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185be8[0m <[0;33mline:132:7[0m, [0;33mcol:30[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185bd8[0m <[0;33mcol:9[0m, [0;33mcol:27[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7185bb8[0m <[0;33mcol:16[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7185b70[0m <[0;33mcol:16[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .b
[0;34m  |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7185b40[0m <[0;33mcol:16[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_param[0;33m 0x7184ea0[0m
[0;34m  |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185b30[0m <[0;33mcol:16[0m> [0;32m'const uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7182f78[0m <[0;33mline:137:7[0m, [0;33mline:139:26[0m> [0;33mline:138:7[0m[0;1;36m param[0m [0;32m'std::uniform_int_distribution::param_type () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185c50[0m <[0;33mline:139:7[0m, [0;33mcol:26[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185c40[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7185c10[0m <[0;33mcol:16[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_param[0;33m 0x7184ea0[0m
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185c00[0m <[0;33mcol:16[0m> [0;32m'const uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x71830b8[0m <[0;33mline:145:7[0m, [0;33mline:147:29[0m> [0;33mline:146:7[0m[0;1;36m param[0m [0;32m'void (const std::uniform_int_distribution::param_type &)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7183028[0m <[0;33mcol:13[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __param[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185ce8[0m <[0;33mline:147:7[0m, [0;33mcol:29[0m>
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7185cc8[0m <[0;33mcol:9[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7185c78[0m <[0;33mcol:9[0m> [0;32m'std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_param[0;33m 0x7184ea0[0m
[0;34m  |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185c68[0m <[0;33mcol:9[0m> [0;32m'uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185ca8[0m <[0;33mcol:20[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7183028[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7183180[0m <[0;33mline:152:7[0m, [0;33mline:154:27[0m> [0;33mline:153:7[0m[0;1;36m min[0m [0;32m'std::uniform_int_distribution::result_type () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185d88[0m <[0;33mline:154:7[0m, [0;33mcol:27[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185d78[0m <[0;33mcol:9[0m, [0;33mcol:24[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7185d58[0m <[0;33mcol:16[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7185d10[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->a
[0;34m  |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185d00[0m <[0;33mcol:16[0m> [0;32m'const uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7183240[0m <[0;33mline:159:7[0m, [0;33mline:161:27[0m> [0;33mline:160:7[0m[0;1;36m max[0m [0;32m'std::uniform_int_distribution::result_type () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185e28[0m <[0;33mline:161:7[0m, [0;33mcol:27[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185e18[0m <[0;33mcol:9[0m, [0;33mcol:24[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7185df8[0m <[0;33mcol:16[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7185db0[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->b
[0;34m  |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185da0[0m <[0;33mcol:16[0m> [0;32m'const uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7183538[0m <[0;33mline:166:7[0m, [0;33mline:169:54[0m> [0;33mline:168:2[0m[0;1;36m operator()[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71832e0[0m <[0;33mline:166:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _UniformRandomNumberGenerator[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7183498[0m <[0;33mline:167:2[0m, [0;33mline:169:54[0m> [0;33mline:168:2[0m[0;1;36m operator()[0m [0;32m'std::uniform_int_distribution::result_type (_UniformRandomNumberGenerator &)'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71833a8[0m <[0;33mcol:13[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __urng[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7185f38[0m <[0;33mline:169:9[0m, [0;33mcol:54[0m>
[0;34m  |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7185f28[0m <[0;33mcol:11[0m, [0;33mcol:51[0m>
[0;34m  |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7185ef8[0m <[0;33mcol:18[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7185e50[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->operator()
[0;34m  |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185e40[0m <[0;33mcol:18[0m> [0;32m'uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185e98[0m <[0;33mcol:35[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71833a8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7185ec8[0m <[0;33mcol:43[0m> [0;32m'std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_param[0;33m 0x7184ea0[0m
[0;34m  |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185eb8[0m <[0;33mcol:43[0m> [0;32m'uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7183888[0m <[0;33mline:171:7[0m, [0;33mline:174:27[0m> [0;33mline:173:2[0m[0;1;36m operator()[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7183598[0m <[0;33mline:171:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _UniformRandomNumberGenerator[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x71837e8[0m <[0;33mline:172:2[0m, [0;33mline:174:27[0m> [0;33mline:173:2[0m[0;1;36m operator()[0m [0;32m'std::uniform_int_distribution::result_type (_UniformRandomNumberGenerator &, const std::uniform_int_distribution::param_type &)'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7183658[0m <[0;33mcol:13[0m, [0;33mcol:44[0m> [0;33mcol:44[0m[0;1;36m __urng[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71836d0[0m <[0;33mline:174:6[0m, [0;33mcol:24[0m> [0;33mcol:24[0m[0;1;36m __p[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7183ce8[0m <[0;33mline:176:7[0m, [0;33mline:181:50[0m> [0;33mline:179:2[0m[0;1;36m __generate[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71838f0[0m <[0;33mline:176:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _ForwardIterator[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7183968[0m <[0;33mline:177:9[0m, [0;33mcol:18[0m> [0;33mcol:18[0m referenced typename depth 1 index 1[0;1;36m _UniformRandomNumberGenerator[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7183c48[0m <[0;33mline:178:2[0m, [0;33mline:181:50[0m> [0;33mline:179:2[0m[0;1;36m __generate[0m [0;32m'void (_ForwardIterator, _ForwardIterator, _UniformRandomNumberGenerator &)'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7183a08[0m <[0;33mcol:13[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __f[0m [0;32m'_ForwardIterator'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7183a80[0m <[0;33mcol:35[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __t[0m [0;32m'_ForwardIterator'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7183b28[0m <[0;33mline:180:6[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __urng[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7186088[0m <[0;33mline:181:2[0m, [0;33mcol:50[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7186048[0m <[0;33mcol:4[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7185f60[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->__generate
[0;34m  |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7185f50[0m <[0;33mcol:4[0m> [0;32m'uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185fa8[0m <[0;33mcol:21[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7183a08[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185fc8[0m <[0;33mcol:26[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7183a80[0m[0;1;36m '__t'[0m [0;32m'_ForwardIterator'[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7185fe8[0m <[0;33mcol:31[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7183b28[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7186018[0m <[0;33mcol:39[0m> [0;32m'std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_param[0;33m 0x7184ea0[0m
[0;34m  |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x7186008[0m <[0;33mcol:39[0m> [0;32m'uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x71841e8[0m <[0;33mline:183:7[0m, [0;33mline:189:50[0m> [0;33mline:186:2[0m[0;1;36m __generate[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7183d58[0m <[0;33mline:183:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _ForwardIterator[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7183dc8[0m <[0;33mline:184:9[0m, [0;33mcol:18[0m> [0;33mcol:18[0m referenced typename depth 1 index 1[0;1;36m _UniformRandomNumberGenerator[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7184148[0m <[0;33mline:185:2[0m, [0;33mline:189:50[0m> [0;33mline:186:2[0m[0;1;36m __generate[0m [0;32m'void (_ForwardIterator, _ForwardIterator, _UniformRandomNumberGenerator &, const std::uniform_int_distribution::param_type &)'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7183e68[0m <[0;33mcol:13[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __f[0m [0;32m'_ForwardIterator'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7183ee0[0m <[0;33mcol:35[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __t[0m [0;32m'_ForwardIterator'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7183f88[0m <[0;33mline:187:6[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __urng[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7184000[0m <[0;33mline:188:6[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __p[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71861b8[0m <[0;33mline:189:2[0m, [0;33mcol:50[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7186178[0m <[0;33mcol:4[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71860b0[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->__generate_impl
[0;34m  |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x71860a0[0m <[0;33mcol:4[0m> [0;32m'uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71860f8[0m <[0;33mcol:26[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7183e68[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186118[0m <[0;33mcol:31[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7183ee0[0m[0;1;36m '__t'[0m [0;32m'_ForwardIterator'[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186138[0m <[0;33mcol:36[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7183f88[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186158[0m <[0;33mcol:44[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7184000[0m[0;1;36m '__p'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x71846a8[0m <[0;33mline:191:7[0m, [0;33mline:196:50[0m> [0;33mline:193:2[0m[0;1;36m __generate[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7184260[0m <[0;33mline:191:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _UniformRandomNumberGenerator[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7184608[0m <[0;33mline:192:2[0m, [0;33mline:196:50[0m> [0;33mline:193:2[0m[0;1;36m __generate[0m [0;32m'void (std::uniform_int_distribution::result_type *, std::uniform_int_distribution::result_type *, _UniformRandomNumberGenerator &, const std::uniform_int_distribution::param_type &)'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7184328[0m <[0;33mcol:13[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __f[0m [0;32m'std::uniform_int_distribution::result_type *'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71843a0[0m <[0;33mcol:31[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __t[0m [0;32m'std::uniform_int_distribution::result_type *'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7184448[0m <[0;33mline:194:6[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __urng[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71844c0[0m <[0;33mline:195:6[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __p[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71862e8[0m <[0;33mline:196:2[0m, [0;33mcol:50[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x71862a8[0m <[0;33mcol:4[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71861e0[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->__generate_impl
[0;34m  |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x71861d0[0m <[0;33mcol:4[0m> [0;32m'uniform_int_distribution<_IntType> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186228[0m <[0;33mcol:26[0m> [0;32m'std::uniform_int_distribution::result_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7184328[0m[0;1;36m '__f'[0m [0;32m'std::uniform_int_distribution::result_type *'[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186248[0m <[0;33mcol:31[0m> [0;32m'std::uniform_int_distribution::result_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71843a0[0m[0;1;36m '__t'[0m [0;32m'std::uniform_int_distribution::result_type *'[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186268[0m <[0;33mcol:36[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7184448[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186288[0m <[0;33mcol:44[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71844c0[0m[0;1;36m '__p'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  |-[0m[0;1;32mFriendDecl[0m[0;33m 0x7184968[0m <[0;33mline:202:7[0m, [0;33mline:205:48[0m> [0;33mline:203:7[0m
[0;34m  | `-[0m[0;1;32mFunctionDecl[0m[0;33m 0x71848a8[0m parent 0x7180ea0 <[0;33mline:202:7[0m, [0;33mline:205:48[0m> [0;33mline:203:7[0m[0;1;36m operator==[0m [0;32m'bool (const uniform_int_distribution<_IntType> &, const uniform_int_distribution<_IntType> &)'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7184758[0m <[0;33mcol:18[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __d1[0m [0;32m'const uniform_int_distribution<_IntType> &'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71847d0[0m <[0;33mline:204:4[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m __d2[0m [0;32m'const uniform_int_distribution<_IntType> &'[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71864e8[0m <[0;33mline:205:7[0m, [0;33mcol:48[0m>
[0;34m  |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x71864d8[0m <[0;33mcol:9[0m, [0;33mcol:38[0m>
[0;34m  |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x71864a0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71863d0[0m <[0;33mcol:30[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x66e6988[0m[0;33m 0x670c3e8[0m[0;33m 0x670e8d8[0m[0;33m 0x6731538[0m[0;33m 0x6731be8[0m[0;33m 0x67cdf70[0m[0;33m 0x67cff00[0m[0;33m 0x687aa88[0m[0;33m 0x6b2e338[0m[0;33m 0x6ce7d40[0m[0;33m 0x6ce89f0[0m[0;33m 0x6ce9508[0m[0;33m 0x6ce9ca8[0m[0;33m 0x6e79b60[0m[0;33m 0x6e7a4f0[0m[0;33m 0x6e7afc0[0m[0;33m 0x6e7b7a0[0m[0;33m 0x6f04d58[0m
[0;34m  |         |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7186320[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_param
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186300[0m <[0;33mcol:16[0m> [0;32m'const uniform_int_distribution<_IntType>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7184758[0m[0;1;36m '__d1'[0m [0;32m'const uniform_int_distribution<_IntType> &'[0m
[0;34m  |         `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7186388[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_param
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7186368[0m <[0;33mcol:33[0m> [0;32m'const uniform_int_distribution<_IntType>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71847d0[0m[0;1;36m '__d2'[0m [0;32m'const uniform_int_distribution<_IntType> &'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x71849a8[0m <[0;33mline:207:5[0m, [0;33mcol:12[0m> [0;33mcol:5[0m private
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7184e18[0m <[0;33mline:208:7[0m, [0;33mline:213:25[0m> [0;33mline:211:2[0m[0;1;36m __generate_impl[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71849d0[0m <[0;33mline:208:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _ForwardIterator[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7184a48[0m <[0;33mline:209:9[0m, [0;33mcol:18[0m> [0;33mcol:18[0m referenced typename depth 1 index 1[0;1;36m _UniformRandomNumberGenerator[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7184d78[0m <[0;33mline:210:2[0m, [0;33mline:213:25[0m> [0;33mline:211:2[0m[0;1;36m __generate_impl[0m [0;32m'void (_ForwardIterator, _ForwardIterator, _UniformRandomNumberGenerator &, const std::uniform_int_distribution::param_type &)'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7184ae8[0m <[0;33mcol:18[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m __f[0m [0;32m'_ForwardIterator'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7184b60[0m <[0;33mcol:40[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __t[0m [0;32m'_ForwardIterator'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7184c08[0m <[0;33mline:212:4[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m __urng[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7184c80[0m <[0;33mline:213:4[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m __p[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  `-[0m[0;1;32mFieldDecl[0m[0;33m 0x7184ea0[0m <[0;33mline:215:7[0m, [0;33mcol:18[0m> [0;33mcol:18[0m referenced[0;1;36m _M_param[0m [0;32m'std::uniform_int_distribution::param_type'[0m

Dumping std::uniform_int_distribution::operator():
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7186c20[0m parent 0x7181600 prev 0x7183888 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/uniform_int_dist.h:219:5[0m, [0;33mline:281:7[0m> [0;33mline:222:7[0m[0;1;36m operator()[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7186590[0m <[0;33mline:219:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 1 index 0[0;1;36m _UniformRandomNumberGenerator[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7186b48[0m parent 0x7181600 prev 0x71837e8 <[0;33mline:218:3[0m, [0;33mline:281:7[0m> [0;33mline:222:7[0m[0;1;36m operator()[0m [0;32m'typename uniform_int_distribution<_IntType>::result_type (_UniformRandomNumberGenerator &, const std::uniform_int_distribution::param_type &)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71868e8[0m <[0;33mcol:18[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __urng[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7186960[0m <[0;33mline:223:4[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __param[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7188f80[0m <[0;33mline:224:7[0m, [0;33mline:281:7[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7186dc8[0m <[0;33mline:225:2[0m, [0;33mline:226:17[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7186d70[0m <[0;33mline:225:2[0m, [0;33mline:226:4[0m> [0;33mcol:4[0m referenced[0;1;36m _Gresult_type[0m [0;32m'typename _UniformRandomNumberGenerator::result_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x7186d00[0m [0;32m'typename _UniformRandomNumberGenerator::result_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7186f78[0m <[0;33mline:227:2[0m, [0;33mcol:64[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7186f20[0m <[0;33mcol:2[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __utype[0m [0;32m'typename std::make_unsigned<result_type>::type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x7186eb0[0m [0;32m'typename std::make_unsigned<result_type>::type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7187288[0m <[0;33mline:228:2[0m, [0;33mline:229:12[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7187230[0m <[0;33mline:228:2[0m, [0;33mline:229:4[0m> [0;33mcol:4[0m referenced[0;1;36m __uctype[0m [0;32m'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x71871c0[0m [0;32m'typename std::common_type<_Gresult_type, __utype>::type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71873c0[0m <[0;33mline:231:2[0m, [0;33mcol:41[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x71872d0[0m <[0;33mcol:2[0m, [0;33mcol:40[0m> [0;33mcol:17[0m referenced[0;1;36m __urngmin[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x71873a0[0m <[0;33mcol:29[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7187358[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .min
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187338[0m <[0;33mcol:29[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71868e8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71874d8[0m <[0;33mline:232:2[0m, [0;33mcol:41[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x71873e8[0m <[0;33mcol:2[0m, [0;33mcol:40[0m> [0;33mcol:17[0m referenced[0;1;36m __urngmax[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x71874b8[0m <[0;33mcol:29[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7187470[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .max
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187450[0m <[0;33mcol:29[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71868e8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7187638[0m <[0;33mline:233:2[0m, [0;33mcol:52[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7187500[0m <[0;33mcol:2[0m, [0;33mcol:43[0m> [0;33mcol:17[0m referenced[0;1;36m __urngrange[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7187600[0m <[0;33mcol:31[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71875a8[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187568[0m <[0;33mcol:31[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71873e8[0m[0;1;36m '__urngmax'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187588[0m <[0;33mcol:43[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71872d0[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71878d8[0m <[0;33mline:234:2[0m, [0;33mline:235:51[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7187660[0m <[0;33mline:234:2[0m, [0;33mline:235:50[0m> [0;33mline:234:17[0m referenced[0;1;36m __urange[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x71878a0[0m <[0;33mline:235:6[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7187848[0m <[0;33mcol:28[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m    |     |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7187760[0m <[0;33mcol:6[0m, [0;33mcol:26[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7187740[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71876f8[0m <[0;33mcol:15[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .b
[0;34m    |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71876d8[0m <[0;33mcol:15[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7186960[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m    |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7187820[0m <[0;33mcol:30[0m, [0;33mcol:50[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7187800[0m <[0;33mcol:39[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71877b8[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .a
[0;34m    |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187798[0m <[0;33mcol:39[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7186960[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7187968[0m <[0;33mline:237:2[0m, [0;33mcol:16[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7187900[0m <[0;33mcol:2[0m, [0;33mcol:11[0m> [0;33mcol:11[0m referenced[0;1;36m __ret[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x7188da8[0m <[0;33mline:239:2[0m, [0;33mline:278:33[0m> has_else
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7187a48[0m <[0;33mline:239:6[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71879c0[0m <[0;33mcol:18[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x66e92c8[0m[0;33m 0x670d668[0m[0;33m 0x670fce8[0m[0;33m 0x67348f8[0m[0;33m 0x6734ec0[0m[0;33m 0x687c488[0m[0;33m 0x6ced340[0m[0;33m 0x6ceda78[0m[0;33m 0x6cee1b8[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187980[0m <[0;33mcol:6[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187500[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71879a0[0m <[0;33mcol:20[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187660[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7188120[0m <[0;33mline:240:4[0m, [0;33mline:249:4[0m>
[0;34m    | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7187c30[0m <[0;33mline:242:6[0m, [0;33mcol:45[0m>
[0;34m    | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7187a90[0m <[0;33mcol:6[0m, [0;33mcol:44[0m> [0;33mcol:21[0m referenced[0;1;36m __uerange[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7187bf8[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7187b38[0m <[0;33mcol:42[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m    | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187af8[0m <[0;33mcol:33[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187660[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7187b18[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7187d20[0m <[0;33mline:243:6[0m, [0;33mcol:56[0m>
[0;34m    | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7187c58[0m <[0;33mcol:6[0m, [0;33mcol:47[0m> [0;33mcol:21[0m referenced[0;1;36m __scaling[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7187d00[0m <[0;33mcol:33[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '/'
[0;34m    | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187cc0[0m <[0;33mcol:33[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187500[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187ce0[0m <[0;33mcol:47[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187a90[0m[0;1;36m '__uerange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7187e10[0m <[0;33mline:244:6[0m, [0;33mcol:51[0m>
[0;34m    | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7187d48[0m <[0;33mcol:6[0m, [0;33mcol:42[0m> [0;33mcol:21[0m referenced[0;1;36m __past[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7187df0[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '*'
[0;34m    | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187db0[0m <[0;33mcol:30[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187a90[0m[0;1;36m '__uerange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187dd0[0m <[0;33mcol:42[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187c58[0m[0;1;36m '__scaling'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | |-[0m[0;1;35mDoStmt[0m[0;33m 0x7188090[0m <[0;33mline:245:6[0m, [0;33mline:247:28[0m>
[0;34m    | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7187f70[0m <[0;33mline:246:8[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187e28[0m <[0;33mcol:8[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187900[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7187f38[0m <[0;33mcol:16[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7187ee0[0m <[0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m    | | | |   |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7187e98[0m <[0;33mcol:16[0m, [0;33mcol:33[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | | |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7187e78[0m <[0;33mcol:25[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187e58[0m <[0;33mcol:25[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71868e8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m    | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187ec0[0m <[0;33mcol:37[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71872d0[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188058[0m <[0;33mline:247:13[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7187fd0[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>='[0;33m 0x66ea098[0m[0;33m 0x670e1e8[0m[0;33m 0x6710978[0m[0;33m 0x67354e8[0m[0;33m 0x6735ac8[0m[0;33m 0x66d1788[0m[0;33m 0x6cf0170[0m[0;33m 0x6cf08a8[0m[0;33m 0x6cf0fe8[0m
[0;34m    | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187f90[0m <[0;33mcol:13[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187900[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7187fb0[0m <[0;33mcol:22[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187d48[0m[0;1;36m '__past'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | | `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x71880f0[0m <[0;33mline:248:6[0m, [0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '/=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71880b0[0m <[0;33mcol:6[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187900[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71880d0[0m <[0;33mcol:15[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187c58[0m[0;1;36m '__scaling'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    | `-[0m[0;1;35mIfStmt[0m[0;33m 0x7188d80[0m <[0;33mline:250:7[0m, [0;33mline:278:33[0m> has_else
[0;34m    |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188230[0m <[0;33mline:250:11[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7188198[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x66e8178[0m[0;33m 0x670ca48[0m[0;33m 0x670efb8[0m[0;33m 0x6732f58[0m[0;33m 0x67335c8[0m[0;33m 0x687b4c8[0m[0;33m 0x6cebc30[0m[0;33m 0x6cec368[0m[0;33m 0x6cecaa8[0m[0;33m 0x6e71500[0m[0;33m 0x6e78a90[0m
[0;34m    |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188158[0m <[0;33mcol:11[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187500[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188178[0m <[0;33mcol:25[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187660[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7188bf8[0m <[0;33mline:251:4[0m, [0;33mline:276:4[0m>
[0;34m    |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71882e0[0m <[0;33mline:267:6[0m, [0;33mcol:20[0m>
[0;34m    |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7188278[0m <[0;33mcol:6[0m, [0;33mcol:15[0m> [0;33mcol:15[0m referenced[0;1;36m __tmp[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   | `-[0m[0;1;35mDoStmt[0m[0;33m 0x7188bd8[0m <[0;33mline:268:6[0m, [0;33mline:275:46[0m>
[0;34m    |   |   |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7188980[0m <[0;33mline:269:8[0m, [0;33mline:274:8[0m>
[0;34m    |   |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71884a8[0m <[0;33mline:270:3[0m, [0;33mcol:48[0m>
[0;34m    |   |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7188308[0m <[0;33mcol:3[0m, [0;33mcol:47[0m> [0;33mcol:18[0m referenced[0;1;36m __uerngrange[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   |   | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188470[0m <[0;33mcol:33[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71883b0[0m <[0;33mcol:45[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m    |   |   | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188370[0m <[0;33mcol:33[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187500[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7188390[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x71886c0[0m <[0;33mline:271:3[0m, [0;33mline:272:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71884c0[0m <[0;33mline:271:3[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7188278[0m[0;1;36m '__tmp'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x71886a0[0m <[0;33mcol:11[0m, [0;33mline:272:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7188680[0m <[0;33mline:271:12[0m, [0;33mline:272:52[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '*'
[0;34m    |   |   | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71884e0[0m <[0;33mline:271:12[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7188308[0m[0;1;36m '__uerngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   | |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7188650[0m <[0;33mcol:27[0m, [0;33mline:272:52[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   | |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x7188510[0m <[0;33mline:271:27[0m, [0;33mcol:36[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |   |   | |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188570[0m <[0;33mline:272:6[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71868e8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m    |   |   | |       `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7188620[0m <[0;33mcol:14[0m, [0;33mcol:51[0m> [0;32m'std::uniform_int_distribution::param_type'[0m[0;36m[0m[0;36m[0m [0;32m'std::uniform_int_distribution::param_type'[0m
[0;34m    |   |   | |         |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x71885a0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |   |   | |         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7188600[0m <[0;33mcol:28[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '/'
[0;34m    |   |   | |           |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71885c0[0m <[0;33mcol:28[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187660[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71885e0[0m <[0;33mcol:39[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7188308[0m[0;1;36m '__uerngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7188960[0m <[0;33mline:273:3[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71886e0[0m <[0;33mcol:3[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187900[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188928[0m <[0;33mcol:11[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7188868[0m <[0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m    |   |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188700[0m <[0;33mcol:11[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7188278[0m[0;1;36m '__tmp'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x7188848[0m <[0;33mcol:19[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188810[0m <[0;33mcol:20[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71887b8[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m    |   |   |         |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7188770[0m <[0;33mcol:20[0m, [0;33mcol:37[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   |         | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7188750[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188730[0m <[0;33mcol:29[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71868e8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m    |   |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188798[0m <[0;33mcol:41[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71872d0[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7188bb8[0m <[0;33mline:275:13[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '||'
[0;34m    |   |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188a70[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71889e8[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x66e92c8[0m[0;33m 0x670d668[0m[0;33m 0x670fce8[0m[0;33m 0x67348f8[0m[0;33m 0x6734ec0[0m[0;33m 0x687c488[0m[0;33m 0x6ced340[0m[0;33m 0x6ceda78[0m[0;33m 0x6cee1b8[0m
[0;34m    |   |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71889a8[0m <[0;33mcol:13[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187900[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71889c8[0m <[0;33mcol:21[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187660[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188b80[0m <[0;33mcol:33[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7188ae8[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x66e8178[0m[0;33m 0x670ca48[0m[0;33m 0x670efb8[0m[0;33m 0x6732f58[0m[0;33m 0x67335c8[0m[0;33m 0x687b4c8[0m[0;33m 0x6cebc30[0m[0;33m 0x6cec368[0m[0;33m 0x6cecaa8[0m[0;33m 0x6e71500[0m[0;33m 0x6e78a90[0m
[0;34m    |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188aa8[0m <[0;33mcol:33[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187900[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188ac8[0m <[0;33mcol:41[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7188278[0m[0;1;36m '__tmp'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7188d60[0m <[0;33mline:278:4[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188c18[0m <[0;33mcol:4[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187900[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188d28[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7188cd0[0m <[0;33mcol:31[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m    |       |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7188c88[0m <[0;33mcol:12[0m, [0;33mcol:29[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |       | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7188c68[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188c48[0m <[0;33mcol:21[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71868e8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188cb0[0m <[0;33mcol:33[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71872d0[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7188f70[0m <[0;33mline:280:2[0m, [0;33mcol:27[0m>
[0;34m      `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7188f38[0m <[0;33mcol:9[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7188e78[0m <[0;33mcol:15[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188dd0[0m <[0;33mcol:9[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7187900[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x7188e58[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7188e10[0m <[0;33mcol:17[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .a
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7188df0[0m <[0;33mcol:17[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7186960[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m

Dumping std::uniform_int_distribution::__generate_impl:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7189640[0m parent 0x7181600 prev 0x7184e18 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/uniform_int_dist.h:285:5[0m, [0;33mline:368:7[0m> [0;33mline:289:7[0m[0;1;36m __generate_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7189070[0m <[0;33mline:285:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 1 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71890e8[0m <[0;33mline:286:7[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced typename depth 1 index 1[0;1;36m _UniformRandomNumberGenerator[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7189568[0m parent 0x7181600 prev 0x7184d78 <[0;33mline:284:3[0m, [0;33mline:368:7[0m> [0;33mline:289:7[0m[0;1;36m __generate_impl[0m [0;32m'void (_ForwardIterator, _ForwardIterator, _UniformRandomNumberGenerator &, const std::uniform_int_distribution::param_type &)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71892d8[0m <[0;33mcol:23[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __f[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7189350[0m <[0;33mcol:45[0m, [0;33mcol:62[0m> [0;33mcol:62[0m referenced[0;1;36m __t[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71893f8[0m <[0;33mline:290:9[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __urng[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7189470[0m <[0;33mline:291:9[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __param[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7193f10[0m <[0;33mline:292:7[0m, [0;33mline:368:7[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7189818[0m <[0;33mline:294:2[0m, [0;33mline:295:17[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x71897c0[0m <[0;33mline:294:2[0m, [0;33mline:295:4[0m> [0;33mcol:4[0m referenced[0;1;36m _Gresult_type[0m [0;32m'typename _UniformRandomNumberGenerator::result_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x7189750[0m [0;32m'typename _UniformRandomNumberGenerator::result_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7190e18[0m <[0;33mline:296:2[0m, [0;33mcol:64[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7190dc0[0m <[0;33mcol:2[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __utype[0m [0;32m'typename std::make_unsigned<result_type>::type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x71898e0[0m [0;32m'typename std::make_unsigned<result_type>::type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7191108[0m <[0;33mline:297:2[0m, [0;33mline:298:12[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x71910b0[0m <[0;33mline:297:2[0m, [0;33mline:298:4[0m> [0;33mcol:4[0m referenced[0;1;36m __uctype[0m [0;32m'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x7191040[0m [0;32m'typename std::common_type<_Gresult_type, __utype>::type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7191240[0m <[0;33mline:300:2[0m, [0;33mcol:41[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7191150[0m <[0;33mcol:2[0m, [0;33mcol:40[0m> [0;33mcol:17[0m referenced[0;1;36m __urngmin[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x7191220[0m <[0;33mcol:29[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71911d8[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .min
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71911b8[0m <[0;33mcol:29[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71893f8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7191358[0m <[0;33mline:301:2[0m, [0;33mcol:41[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7191268[0m <[0;33mcol:2[0m, [0;33mcol:40[0m> [0;33mcol:17[0m referenced[0;1;36m __urngmax[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x7191338[0m <[0;33mcol:29[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71912f0[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .max
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71912d0[0m <[0;33mcol:29[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71893f8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71914b8[0m <[0;33mline:302:2[0m, [0;33mcol:52[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7191380[0m <[0;33mcol:2[0m, [0;33mcol:43[0m> [0;33mcol:17[0m referenced[0;1;36m __urngrange[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7191480[0m <[0;33mcol:31[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7191428[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71913e8[0m <[0;33mcol:31[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191268[0m[0;1;36m '__urngmax'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191408[0m <[0;33mcol:43[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191150[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7191758[0m <[0;33mline:303:2[0m, [0;33mline:304:51[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x71914e0[0m <[0;33mline:303:2[0m, [0;33mline:304:50[0m> [0;33mline:303:17[0m referenced[0;1;36m __urange[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7191720[0m <[0;33mline:304:6[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71916c8[0m <[0;33mcol:28[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m    |     |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x71915e0[0m <[0;33mcol:6[0m, [0;33mcol:26[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x71915c0[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7191578[0m <[0;33mcol:15[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .b
[0;34m    |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191558[0m <[0;33mcol:15[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189470[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m    |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x71916a0[0m <[0;33mcol:30[0m, [0;33mcol:50[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7191680[0m <[0;33mcol:39[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7191638[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .a
[0;34m    |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191618[0m <[0;33mcol:39[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189470[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71917e8[0m <[0;33mline:306:2[0m, [0;33mcol:16[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7191780[0m <[0;33mcol:2[0m, [0;33mcol:11[0m> [0;33mcol:11[0m referenced[0;1;36m __ret[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m    `-[0m[0;1;35mIfStmt[0m[0;33m 0x7193ee8[0m <[0;33mline:308:2[0m, [0;33mline:367:58[0m> has_else
[0;34m      |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x71918c8[0m <[0;33mline:308:6[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7191840[0m <[0;33mcol:18[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x66e92c8[0m[0;33m 0x670d668[0m[0;33m 0x670fce8[0m[0;33m 0x67348f8[0m[0;33m 0x6734ec0[0m[0;33m 0x687c488[0m[0;33m 0x6ced340[0m[0;33m 0x6ceda78[0m[0;33m 0x6cee1b8[0m
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191800[0m <[0;33mcol:6[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191380[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191820[0m <[0;33mcol:20[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71914e0[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7192d30[0m <[0;33mline:309:4[0m, [0;33mline:333:4[0m>
[0;34m      | `-[0m[0;1;35mIfStmt[0m[0;33m 0x7192d08[0m <[0;33mline:310:6[0m, [0;33mline:332:8[0m> has_else
[0;34m      |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7191ca8[0m <[0;33mline:310:10[0m, [0;33mline:311:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m      |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x7191ab8[0m <[0;33mline:310:10[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7191938[0m <[0;33mcol:10[0m, [0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Power_of_2'[0;33m 0x71811c8[0m
[0;34m      |   | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7191a80[0m <[0;33mcol:32[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71919c0[0m <[0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m      |   | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191980[0m <[0;33mcol:32[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191380[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x71919a0[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7191c80[0m <[0;33mline:311:6[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7191b00[0m <[0;33mcol:6[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Power_of_2'[0;33m 0x71811c8[0m
[0;34m      |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7191c48[0m <[0;33mcol:28[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7191b88[0m <[0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m      |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191b48[0m <[0;33mcol:28[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71914e0[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7191b68[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |   |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71922a8[0m <[0;33mline:312:8[0m, [0;33mline:318:8[0m>
[0;34m      |   | `-[0m[0;1;35mWhileStmt[0m[0;33m 0x7192290[0m <[0;33mline:313:3[0m, [0;33mline:317:5[0m>
[0;34m      |   |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7191dd0[0m <[0;33mline:313:10[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7191d08[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x66e8be8[0m[0;33m 0x670d0a8[0m[0;33m 0x670f698[0m[0;33m 0x67322d8[0m[0;33m 0x67328b8[0m[0;33m 0x67d0460[0m[0;33m 0x67d0940[0m[0;33m 0x687bd78[0m[0;33m 0x6b2e8c8[0m[0;33m 0x6cea570[0m[0;33m 0x6ceaca8[0m[0;33m 0x6ceb3b8[0m[0;33m 0x6e7c6e0[0m[0;33m 0x6e7d530[0m[0;33m 0x6e7e380[0m[0;33m 0x6e7fae0[0m[0;33m 0x6f053e8[0m
[0;34m      |   |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191cc8[0m <[0;33mcol:10[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71892d8[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191ce8[0m <[0;33mcol:17[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189350[0m[0;1;36m '__t'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |   |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7192270[0m <[0;33mline:314:5[0m, [0;33mline:317:5[0m>
[0;34m      |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7191f50[0m <[0;33mline:315:7[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191e08[0m <[0;33mcol:7[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |   |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7191f18[0m <[0;33mcol:15[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |     |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7191ec0[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m      |   |     |   |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7191e78[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |   |     |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7191e58[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |     |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191e38[0m <[0;33mcol:24[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71893f8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m      |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191ea0[0m <[0;33mcol:36[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191150[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7192250[0m <[0;33mline:316:7[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |       |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7191fc8[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   |       | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7191fb0[0m <[0;33mcol:8[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m      |   |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191f70[0m <[0;33mcol:8[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71892d8[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |   |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7192218[0m <[0;33mcol:16[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7192158[0m <[0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m      |   |         |-[0m[0;1;35mParenExpr[0m[0;33m 0x71920b0[0m <[0;33mcol:16[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |         | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7192078[0m <[0;33mcol:17[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |         |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7192020[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator&'[0;33m 0x6e90268[0m[0;33m 0x6e92288[0m[0;33m 0x6e940a8[0m
[0;34m      |   |         |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7191fe0[0m <[0;33mcol:17[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192000[0m <[0;33mcol:25[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71914e0[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |   |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x7192138[0m <[0;33mcol:37[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |           `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x71920f0[0m <[0;33mcol:37[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .a
[0;34m      |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71920d0[0m <[0;33mcol:37[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189470[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m      |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7192cd8[0m <[0;33mline:320:8[0m, [0;33mline:332:8[0m>
[0;34m      |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7192470[0m <[0;33mline:322:3[0m, [0;33mcol:42[0m>
[0;34m      |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x71922d0[0m <[0;33mcol:3[0m, [0;33mcol:41[0m> [0;33mcol:18[0m referenced[0;1;36m __uerange[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m      |     |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7192438[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7192378[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m      |     |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192338[0m <[0;33mcol:30[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71914e0[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7192358[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7192560[0m <[0;33mline:323:3[0m, [0;33mcol:53[0m>
[0;34m      |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7192498[0m <[0;33mcol:3[0m, [0;33mcol:44[0m> [0;33mcol:18[0m referenced[0;1;36m __scaling[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m      |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7192540[0m <[0;33mcol:30[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '/'
[0;34m      |     |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192500[0m <[0;33mcol:30[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191380[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192520[0m <[0;33mcol:44[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71922d0[0m[0;1;36m '__uerange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7192650[0m <[0;33mline:324:3[0m, [0;33mcol:48[0m>
[0;34m      |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7192588[0m <[0;33mcol:3[0m, [0;33mcol:39[0m> [0;33mcol:18[0m referenced[0;1;36m __past[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m      |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7192630[0m <[0;33mcol:27[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '*'
[0;34m      |     |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71925f0[0m <[0;33mcol:27[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71922d0[0m[0;1;36m '__uerange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192610[0m <[0;33mcol:39[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7192498[0m[0;1;36m '__scaling'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |     `-[0m[0;1;35mWhileStmt[0m[0;33m 0x7192cc0[0m <[0;33mline:325:3[0m, [0;33mline:331:5[0m>
[0;34m      |       |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7192770[0m <[0;33mline:325:10[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71926a8[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x66e8be8[0m[0;33m 0x670d0a8[0m[0;33m 0x670f698[0m[0;33m 0x67322d8[0m[0;33m 0x67328b8[0m[0;33m 0x67d0460[0m[0;33m 0x67d0940[0m[0;33m 0x687bd78[0m[0;33m 0x6b2e8c8[0m[0;33m 0x6cea570[0m[0;33m 0x6ceaca8[0m[0;33m 0x6ceb3b8[0m[0;33m 0x6e7c6e0[0m[0;33m 0x6e7d530[0m[0;33m 0x6e7e380[0m[0;33m 0x6e7fae0[0m[0;33m 0x6f053e8[0m
[0;34m      |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192668[0m <[0;33mcol:10[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71892d8[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192688[0m <[0;33mcol:17[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189350[0m[0;1;36m '__t'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |       `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7192ca0[0m <[0;33mline:326:5[0m, [0;33mline:331:5[0m>
[0;34m      |         |-[0m[0;1;35mDoStmt[0m[0;33m 0x7192a10[0m <[0;33mline:327:7[0m, [0;33mline:329:29[0m>
[0;34m      |         | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x71928f0[0m <[0;33mline:328:9[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |         | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71927a8[0m <[0;33mcol:9[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |         | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x71928b8[0m <[0;33mcol:17[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |         | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7192860[0m <[0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m      |         | |   |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7192818[0m <[0;33mcol:17[0m, [0;33mcol:34[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |         | |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x71927f8[0m <[0;33mcol:26[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |         | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71927d8[0m <[0;33mcol:26[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71893f8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m      |         | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192840[0m <[0;33mcol:38[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191150[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |         | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x71929d8[0m <[0;33mline:329:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |         |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7192950[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>='[0;33m 0x66ea098[0m[0;33m 0x670e1e8[0m[0;33m 0x6710978[0m[0;33m 0x67354e8[0m[0;33m 0x6735ac8[0m[0;33m 0x66d1788[0m[0;33m 0x6cf0170[0m[0;33m 0x6cf08a8[0m[0;33m 0x6cf0fe8[0m
[0;34m      |         |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192910[0m <[0;33mcol:14[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192930[0m <[0;33mcol:23[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7192588[0m[0;1;36m '__past'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7192c80[0m <[0;33mline:330:7[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |           |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7192a88[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |           | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7192a70[0m <[0;33mcol:8[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m      |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192a30[0m <[0;33mcol:8[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71892d8[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7192c48[0m <[0;33mcol:16[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |             |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7192b88[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m      |             |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7192ae0[0m <[0;33mcol:16[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '/'
[0;34m      |             | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192aa0[0m <[0;33mcol:16[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192ac0[0m <[0;33mcol:24[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7192498[0m[0;1;36m '__scaling'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m      |             `-[0m[0;1;35mCallExpr[0m[0;33m 0x7192b68[0m <[0;33mcol:36[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |               `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7192b20[0m <[0;33mcol:36[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .a
[0;34m      |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192b00[0m <[0;33mcol:36[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189470[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m
[0;34m      `-[0m[0;1;35mIfStmt[0m[0;33m 0x7193ec0[0m <[0;33mline:334:7[0m, [0;33mline:367:58[0m> has_else
[0;34m        |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7192e20[0m <[0;33mline:334:11[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7192d88[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x66e8178[0m[0;33m 0x670ca48[0m[0;33m 0x670efb8[0m[0;33m 0x6732f58[0m[0;33m 0x67335c8[0m[0;33m 0x687b4c8[0m[0;33m 0x6cebc30[0m[0;33m 0x6cec368[0m[0;33m 0x6cecaa8[0m[0;33m 0x6e71500[0m[0;33m 0x6e78a90[0m
[0;34m        | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192d48[0m <[0;33mcol:11[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191380[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192d68[0m <[0;33mcol:25[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71914e0[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7193a10[0m <[0;33mline:335:4[0m, [0;33mline:364:4[0m>
[0;34m        | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7192ed0[0m <[0;33mline:351:6[0m, [0;33mcol:20[0m>
[0;34m        | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7192e68[0m <[0;33mcol:6[0m, [0;33mcol:15[0m> [0;33mcol:15[0m referenced[0;1;36m __tmp[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        | `-[0m[0;1;35mWhileStmt[0m[0;33m 0x71939f8[0m <[0;33mline:352:6[0m, [0;33mline:363:8[0m>
[0;34m        |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7192ff0[0m <[0;33mline:352:13[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7192f28[0m <[0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x66e8be8[0m[0;33m 0x670d0a8[0m[0;33m 0x670f698[0m[0;33m 0x67322d8[0m[0;33m 0x67328b8[0m[0;33m 0x67d0460[0m[0;33m 0x67d0940[0m[0;33m 0x687bd78[0m[0;33m 0x6b2e8c8[0m[0;33m 0x6cea570[0m[0;33m 0x6ceaca8[0m[0;33m 0x6ceb3b8[0m[0;33m 0x6e7c6e0[0m[0;33m 0x6e7d530[0m[0;33m 0x6e7e380[0m[0;33m 0x6e7fae0[0m[0;33m 0x6f053e8[0m
[0;34m        |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192ee8[0m <[0;33mcol:13[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71892d8[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m        |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7192f08[0m <[0;33mcol:20[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189350[0m[0;1;36m '__t'[0m [0;32m'_ForwardIterator'[0m
[0;34m        |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71939d8[0m <[0;33mline:353:8[0m, [0;33mline:363:8[0m>
[0;34m        |     |-[0m[0;1;35mDoStmt[0m[0;33m 0x7193908[0m <[0;33mline:354:3[0m, [0;33mline:361:43[0m>
[0;34m        |     | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71936b0[0m <[0;33mline:355:5[0m, [0;33mline:360:5[0m>
[0;34m        |     | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71931d8[0m <[0;33mline:356:7[0m, [0;33mcol:52[0m>
[0;34m        |     | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7193038[0m <[0;33mcol:7[0m, [0;33mcol:51[0m> [0;33mcol:22[0m referenced[0;1;36m __uerngrange[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m cinit
[0;34m        |     | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x71931a0[0m <[0;33mcol:37[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     | | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71930e0[0m <[0;33mcol:49[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m        |     | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71930a0[0m <[0;33mcol:37[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191380[0m[0;1;36m '__urngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x71930c0[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m        |     | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x71933f0[0m <[0;33mline:357:7[0m, [0;33mline:358:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m        |     | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71931f0[0m <[0;33mline:357:7[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7192e68[0m[0;1;36m '__tmp'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x71933d0[0m <[0;33mcol:15[0m, [0;33mline:358:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x71933b0[0m <[0;33mline:357:16[0m, [0;33mline:358:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '*'
[0;34m        |     | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193210[0m <[0;33mline:357:16[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7193038[0m[0;1;36m '__uerngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | | |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7193380[0m <[0;33mcol:31[0m, [0;33mline:358:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     | | |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x7193240[0m <[0;33mline:357:31[0m, [0;33mcol:40[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |     | | |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71932a0[0m <[0;33mline:358:10[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71893f8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m        |     | | |       `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7193350[0m <[0;33mcol:18[0m, [0;33mcol:55[0m> [0;32m'std::uniform_int_distribution::param_type'[0m[0;36m[0m[0;36m[0m [0;32m'std::uniform_int_distribution::param_type'[0m
[0;34m        |     | | |         |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x71932d0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m        |     | | |         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7193330[0m <[0;33mcol:32[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '/'
[0;34m        |     | | |           |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71932f0[0m <[0;33mcol:32[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71914e0[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193310[0m <[0;33mcol:43[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7193038[0m[0;1;36m '__uerngrange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7193690[0m <[0;33mline:359:7[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m        |     | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193410[0m <[0;33mcol:7[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7193658[0m <[0;33mcol:15[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7193598[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m        |     | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193430[0m <[0;33mcol:15[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7192e68[0m[0;1;36m '__tmp'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x7193578[0m <[0;33mcol:23[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7193540[0m <[0;33mcol:24[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     | |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x71934e8[0m <[0;33mcol:43[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m        |     | |         |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x71934a0[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | |         | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7193480[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     | |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193460[0m <[0;33mcol:33[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71893f8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m        |     | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71934c8[0m <[0;33mcol:45[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191150[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x71938e8[0m <[0;33mline:361:10[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '||'
[0;34m        |     |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x71937a0[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7193718[0m <[0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x66e92c8[0m[0;33m 0x670d668[0m[0;33m 0x670fce8[0m[0;33m 0x67348f8[0m[0;33m 0x6734ec0[0m[0;33m 0x687c488[0m[0;33m 0x6ced340[0m[0;33m 0x6ceda78[0m[0;33m 0x6cee1b8[0m
[0;34m        |     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71936d8[0m <[0;33mcol:10[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71936f8[0m <[0;33mcol:18[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71914e0[0m[0;1;36m '__urange'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x71938b0[0m <[0;33mcol:30[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7193818[0m <[0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x66e8178[0m[0;33m 0x670ca48[0m[0;33m 0x670efb8[0m[0;33m 0x6732f58[0m[0;33m 0x67335c8[0m[0;33m 0x687b4c8[0m[0;33m 0x6cebc30[0m[0;33m 0x6cec368[0m[0;33m 0x6cecaa8[0m[0;33m 0x6e71500[0m[0;33m 0x6e78a90[0m
[0;34m        |     |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71937d8[0m <[0;33mcol:30[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71937f8[0m <[0;33mcol:38[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7192e68[0m[0;1;36m '__tmp'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x71939b8[0m <[0;33mline:362:3[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m        |       |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7193980[0m <[0;33mcol:3[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m        |       | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7193968[0m <[0;33mcol:4[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m        |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193928[0m <[0;33mcol:4[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71892d8[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193998[0m <[0;33mcol:12[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191780[0m[0;1;36m '__ret'[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m        `-[0m[0;1;35mWhileStmt[0m[0;33m 0x7193ea8[0m <[0;33mline:366:4[0m, [0;33mline:367:58[0m>
[0;34m          |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7193b38[0m <[0;33mline:366:11[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7193a70[0m <[0;33mcol:15[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x66e8be8[0m[0;33m 0x670d0a8[0m[0;33m 0x670f698[0m[0;33m 0x67322d8[0m[0;33m 0x67328b8[0m[0;33m 0x67d0460[0m[0;33m 0x67d0940[0m[0;33m 0x687bd78[0m[0;33m 0x6b2e8c8[0m[0;33m 0x6cea570[0m[0;33m 0x6ceaca8[0m[0;33m 0x6ceb3b8[0m[0;33m 0x6e7c6e0[0m[0;33m 0x6e7d530[0m[0;33m 0x6e7e380[0m[0;33m 0x6e7fae0[0m[0;33m 0x6f053e8[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193a30[0m <[0;33mcol:11[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71892d8[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193a50[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189350[0m[0;1;36m '__t'[0m [0;32m'_ForwardIterator'[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7193e88[0m <[0;33mline:367:6[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m            |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7193bc8[0m <[0;33mcol:6[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m            | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7193bb0[0m <[0;33mcol:7[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193b70[0m <[0;33mcol:7[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71892d8[0m[0;1;36m '__f'[0m [0;32m'_ForwardIterator'[0m
[0;34m            `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7193e50[0m <[0;33mcol:15[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m              |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7193d90[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x6711988[0m[0;33m 0x6736b38[0m[0;33m 0x66d99f8[0m[0;33m 0x689d058[0m[0;33m 0x6cdffd8[0m[0;33m 0x6e01f88[0m[0;33m 0x6e02fa8[0m[0;33m 0x6ce1868[0m[0;33m 0x6ce22a8[0m[0;33m 0x6ce3648[0m[0;33m 0x6ce4038[0m[0;33m 0x6ce4a48[0m[0;33m 0x6ce5aa8[0m[0;33m 0x6ce6338[0m[0;33m 0x6ce6c18[0m[0;33m 0x6ce7478[0m
[0;34m              |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7193cd0[0m <[0;33mcol:15[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m              | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x7193c78[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x67111d8[0m[0;33m 0x6736378[0m[0;33m 0x66d5498[0m
[0;34m              | |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x7193c30[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m[0m[0;36m[0m [0;32m'__uctype':'typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m              | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7193c10[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m              | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193bf0[0m <[0;33mcol:24[0m> [0;32m'_UniformRandomNumberGenerator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71893f8[0m[0;1;36m '__urng'[0m [0;32m'_UniformRandomNumberGenerator &'[0m
[0;34m              | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193c58[0m <[0;33mcol:36[0m> [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7191150[0m[0;1;36m '__urngmin'[0m [0;32m'const __uctype':'const typename std::common_type<_Gresult_type, __utype>::type'[0m
[0;34m              `-[0m[0;1;35mCallExpr[0m[0;33m 0x7193d70[0m <[0;33mcol:48[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m                `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x7193d28[0m <[0;33mcol:48[0m, [0;33mcol:56[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .a
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7193d08[0m <[0;33mcol:48[0m> [0;32m'const std::uniform_int_distribution::param_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7189470[0m[0;1;36m '__param'[0m [0;32m'const std::uniform_int_distribution::param_type &'[0m

Dumping __distr_type:
[0;1;32mTypedefDecl[0m[0;33m 0x71f6658[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:3807:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m __distr_type[0m [0;32m'typename std::uniform_int_distribution<__ud_type>':'uniform_int_distribution<__ud_type>'[0m
[0;34m`-[0m[0;32mElaboratedType[0m[0;33m 0x71f65a0[0m [0;32m'typename std::uniform_int_distribution<__ud_type>'[0m sugar dependent
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x71f6560[0m [0;32m'uniform_int_distribution<__ud_type>'[0m dependent uniform_int_distribution
[0;34m    `-[0mTemplateArgument type [0;32m'__ud_type':'typename std::make_unsigned<_DistanceType>::type'[0m

Dumping __distrib_type:
[0;1;32mTypeAliasDecl[0m[0;33m 0x7217dd0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:5717:7[0m, [0;33mcol:60[0m> [0;33mcol:13[0m referenced[0;1;36m __distrib_type[0m [0;32m'uniform_int_distribution<_Size>'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x7217d30[0m [0;32m'uniform_int_distribution<_Size>'[0m dependent uniform_int_distribution
[0;34m  `-[0mTemplateArgument type [0;32m'_Size'[0m

Dumping __distrib_type:
[0;1;32mTypeAliasDecl[0m[0;33m 0x7219710[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:5745:7[0m, [0;33mcol:60[0m> [0;33mcol:13[0m referenced[0;1;36m __distrib_type[0m [0;32m'uniform_int_distribution<_Size>'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x7219670[0m [0;32m'uniform_int_distribution<_Size>'[0m dependent uniform_int_distribution
[0;34m  `-[0mTemplateArgument type [0;32m'_Size'[0m

Dumping dist1:
[0;1;32mVarDecl[0m[0;33m 0x721c278[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:15:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m dist1[0m [0;32m'double'[0m

Dumping dist2:
[0;1;32mVarDecl[0m[0;33m 0x721c2f8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:15:5[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m dist2[0m [0;32m'double'[0m

Dumping dist3:
[0;1;32mVarDecl[0m[0;33m 0x721c378[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:15:5[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m dist3[0m [0;32m'double'[0m

Dumping dist:
[0;1;32mFunctionDecl[0m[0;33m 0x721ddb0[0m prev 0x692b960 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:31:1[0m, [0;33mline:34:1[0m> [0;33mline:31:8[0m used[0;1;36m dist[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x721dc98[0m <[0;33mcol:14[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x721dd10[0m <[0;33mcol:30[0m, [0;33mcol:43[0m> [0;33mcol:43[0m used[0;1;36m b[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x721e478[0m <[0;33mline:32:1[0m, [0;33mline:34:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x721e468[0m <[0;33mline:33:5[0m, [0;33mcol:100[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x721e448[0m <[0;33mcol:12[0m, [0;33mcol:100[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x721e420[0m <[0;33mcol:13[0m, [0;33mcol:99[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x721e408[0m <[0;33mcol:13[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721e3e0[0m <[0;33mcol:13[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x721d2c8[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mUsingShadow[0m[0;33m 0x6ad7110[0m[0;1;36m 'sqrt'[0m)
[0;34m        `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x721e380[0m <[0;33mcol:18[0m, [0;33mcol:98[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m          |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x721e100[0m <[0;33mcol:18[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m          | |-[0m[0;1;35mParenExpr[0m[0;33m 0x721dfc0[0m <[0;33mcol:18[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x721dfa0[0m <[0;33mcol:19[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m          | |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x721df10[0m <[0;33mcol:19[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x721dee0[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x64d4480[0m
[0;34m          | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721dec0[0m <[0;33mcol:19[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x721dc98[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m          | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x721df80[0m <[0;33mcol:28[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x721df50[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x64d4480[0m
[0;34m          | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721df30[0m <[0;33mcol:28[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x721dd10[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m
[0;34m          | `-[0m[0;1;35mParenExpr[0m[0;33m 0x721e0e0[0m <[0;33mcol:38[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x721e0c0[0m <[0;33mcol:39[0m, [0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m          |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x721e030[0m <[0;33mcol:39[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x721e000[0m <[0;33mcol:39[0m, [0;33mcol:41[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x64d4480[0m
[0;34m          |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721dfe0[0m <[0;33mcol:39[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x721dc98[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m          |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x721e0a0[0m <[0;33mcol:48[0m, [0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x721e070[0m <[0;33mcol:48[0m, [0;33mcol:50[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x64d4480[0m
[0;34m          |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721e050[0m <[0;33mcol:48[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x721dd10[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x721e360[0m <[0;33mcol:60[0m, [0;33mcol:98[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m            |-[0m[0;1;35mParenExpr[0m[0;33m 0x721e220[0m <[0;33mcol:60[0m, [0;33mcol:78[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x721e200[0m <[0;33mcol:61[0m, [0;33mcol:77[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m            |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x721e170[0m <[0;33mcol:61[0m, [0;33mcol:68[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x721e140[0m <[0;33mcol:61[0m, [0;33mcol:63[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x64d4548[0m
[0;34m            |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721e120[0m <[0;33mcol:61[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x721dc98[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m            |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x721e1e0[0m <[0;33mcol:70[0m, [0;33mcol:77[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x721e1b0[0m <[0;33mcol:70[0m, [0;33mcol:72[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x64d4548[0m
[0;34m            |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721e190[0m <[0;33mcol:70[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x721dd10[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m
[0;34m            `-[0m[0;1;35mParenExpr[0m[0;33m 0x721e340[0m <[0;33mcol:80[0m, [0;33mcol:98[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x721e320[0m <[0;33mcol:81[0m, [0;33mcol:97[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m                |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x721e290[0m <[0;33mcol:81[0m, [0;33mcol:88[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x721e260[0m <[0;33mcol:81[0m, [0;33mcol:83[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x64d4548[0m
[0;34m                |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721e240[0m <[0;33mcol:81[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x721dc98[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m                `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x721e300[0m <[0;33mcol:90[0m, [0;33mcol:97[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                  `-[0m[0;1;35mMemberExpr[0m[0;33m 0x721e2d0[0m <[0;33mcol:90[0m, [0;33mcol:92[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x64d4548[0m
[0;34m                    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x721e2b0[0m <[0;33mcol:90[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x721dd10[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m

Dumping felvesz:
[0;1;32mFunctionDecl[0m[0;33m 0x5e44d28[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:11:1[0m, [0;33mcol:27[0m> [0;33mcol:15[0m[0;1;36m felvesz[0m [0;32m'vector<Pont> (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e44c18[0m <[0;33mcol:24[0m> [0;33mcol:27[0m [0;32m'int'[0m

Dumping felvesz:
[0;1;32mFunctionDecl[0m[0;33m 0x6737f28[0m prev 0x5e44d28 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:36:1[0m, [0;33mline:59:1[0m> [0;33mline:36:14[0m[0;1;36m felvesz[0m [0;32m'vector<Pont> (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6737e48[0m <[0;33mcol:23[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m N[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6760b68[0m <[0;33mline:37:1[0m, [0;33mline:59:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6759528[0m <[0;33mline:38:5[0m, [0;33mcol:32[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67593f8[0m <[0;33mcol:5[0m, [0;33mcol:31[0m> [0;33mcol:12[0m used[0;1;36m t[0m [0;32m'int **'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x67594e8[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'int **'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x5cd9730[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(std::size_t)'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6759498[0m <[0;33mcol:27[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6759460[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2001[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6759828[0m <[0;33mline:39:5[0m, [0;33mline:40:29[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67595e0[0m <[0;33mline:39:10[0m, [0;33mcol:20[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6759558[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67595c0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6759650[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6759638[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67595f8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759558[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6759618[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2001[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6759690[0m <[0;33mcol:31[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6759670[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759558[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6759808[0m <[0;33mline:40:9[0m, [0;33mcol:29[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6759718[0m <[0;33mcol:9[0m, [0;33mcol:12[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67596e8[0m <[0;33mcol:9[0m> [0;32m'int **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67596a8[0m <[0;33mcol:9[0m> [0;32m'int **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67593f8[0m[0;1;36m 't'[0m [0;32m'int **'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6759700[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67596c8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759558[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x67597c8[0m <[0;33mcol:16[0m, [0;33mcol:29[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x5cd9730[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(std::size_t)'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6759770[0m <[0;33mcol:25[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6759738[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2001[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6759a38[0m <[0;33mline:42:5[0m, [0;33mcol:20[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6759878[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m x[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x67598f8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m y[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6759978[0m <[0;33mcol:5[0m, [0;33mcol:19[0m> [0;33mcol:15[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6759a00[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67599e0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6737e48[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x675ee78[0m <[0;33mline:43:5[0m, [0;33mcol:24[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6759bc0[0m <[0;33mcol:5[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m pontok[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m nrvo callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x675ee50[0m <[0;33mcol:18[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<Pont> >::value)'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x675f0a0[0m <[0;33mline:44:5[0m, [0;33mcol:21[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f088[0m <[0;33mcol:5[0m> [0;32m'void (*)(unsigned int) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f010[0m <[0;33mcol:5[0m> [0;32m'void (unsigned int) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f680a8[0m[0;1;36m 'srand'[0m [0;32m'void (unsigned int) throw()'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f0c8[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x675efd0[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'time_t':'long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675efb8[0m <[0;33mcol:11[0m> [0;32m'time_t (*)(time_t *) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675ef38[0m <[0;33mcol:11[0m> [0;32m'time_t (time_t *) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60c2f40[0m[0;1;36m 'time'[0m [0;32m'time_t (time_t *) throw()'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675eff8[0m <[0;33m/home/tunde/Downloads/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/lib/clang/9.0.0/include/stddef.h:84:18[0m> [0;32m'time_t *'[0m[0;36m[0m[0;36m[0m <[0;31mNullToPointer[0m>
[0;34m  |       `-[0m[0;1;35mGNUNullExpr[0m[0;33m 0x675ef20[0m <[0;33mcol:18[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x675fc30[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:45:4[0m, [0;33mline:57:5[0m>
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f118[0m <[0;33mline:45:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f100[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f0e0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759978[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x675fc08[0m <[0;33mline:46:5[0m, [0;33mline:57:5[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x675f230[0m <[0;33mline:47:9[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f130[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759878[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x675f210[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '%'
[0;34m  |   |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x675f1d0[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f1b8[0m <[0;33mcol:13[0m> [0;32m'int (*)() throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f198[0m <[0;33mcol:13[0m> [0;32m'int () throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f67f58[0m[0;1;36m 'rand'[0m [0;32m'int () throw()'[0m
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x675f1f0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2001[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x675f350[0m <[0;33mline:48:9[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f250[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67598f8[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x675f330[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '%'
[0;34m  |   |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x675f2f0[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f2d8[0m <[0;33mcol:13[0m> [0;32m'int (*)() throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f2b8[0m <[0;33mcol:13[0m> [0;32m'int () throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f67f58[0m[0;1;36m 'rand'[0m [0;32m'int () throw()'[0m
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x675f310[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2001[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x675fbe0[0m <[0;33mline:49:9[0m, [0;33mline:56:13[0m> has_else
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x675f4a0[0m <[0;33mline:49:13[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f488[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f470[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x675f450[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f420[0m <[0;33mcol:14[0m, [0;33mcol:17[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |       | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x675f3e0[0m <[0;33mcol:14[0m, [0;33mcol:17[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f3b0[0m <[0;33mcol:14[0m> [0;32m'int **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f370[0m <[0;33mcol:14[0m> [0;32m'int **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67593f8[0m[0;1;36m 't'[0m [0;32m'int **'[0m
[0;34m  |     |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f3c8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f390[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759878[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f438[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f400[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67598f8[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x675fbb0[0m <[0;33mline:50:9[0m, [0;33mline:54:9[0m>
[0;34m  |     | |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x675fa20[0m <[0;33mline:51:13[0m, [0;33mcol:40[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x675f9b0[0m <[0;33mcol:13[0m, [0;33mcol:40[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x675f980[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x674cee8[0m
[0;34m  |     | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f4b8[0m <[0;33mcol:13[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759bc0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |     | |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x675fa08[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'Pont'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |     | |     `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x675f858[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m  |     | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f828[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f548[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759878[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |     | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675f840[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675f568[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67598f8[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x675fb58[0m <[0;33mline:52:13[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x675fb18[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675fae8[0m <[0;33mcol:13[0m, [0;33mcol:16[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x675faa8[0m <[0;33mcol:13[0m, [0;33mcol:16[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675fa78[0m <[0;33mcol:13[0m> [0;32m'int **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675fa38[0m <[0;33mcol:13[0m> [0;32m'int **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67593f8[0m[0;1;36m 't'[0m [0;32m'int **'[0m
[0;34m  |     | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675fa90[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675fa58[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759878[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |     | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x675fb00[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675fac8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67598f8[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x675fb38[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x675fb98[0m <[0;33mline:53:13[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675fb78[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759978[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mContinueStmt[0m[0;33m 0x675fbd8[0m <[0;33mline:56:13[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6760b50[0m <[0;33mline:58:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6760b20[0m <[0;33mcol:12[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<Pont, std::allocator<Pont> > &&) noexcept'[0m elidable
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6760b08[0m <[0;33mcol:12[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x675fc48[0m <[0;33mcol:12[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6759bc0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m

Dumping std::__lexicographical_compare_impl:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5241458[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:869:3[0m, [0;33mline:889:5[0m> [0;33mline:871:5[0m[0;1;36m __lexicographical_compare_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5240ef0[0m <[0;33mline:869:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _II1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5240f68[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _II2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5240fd8[0m <[0;33mcol:42[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced typename depth 0 index 2[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x52413b8[0m <[0;33mline:870:5[0m, [0;33mline:889:5[0m> [0;33mline:871:5[0m[0;1;36m __lexicographical_compare_impl[0m [0;32m'bool (_II1, _II1, _II2, _II2, _Compare)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5241080[0m <[0;33mcol:36[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __first1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x52410f8[0m <[0;33mcol:51[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced[0;1;36m __last1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5241170[0m <[0;33mline:872:8[0m, [0;33mcol:13[0m> [0;33mcol:13[0m referenced[0;1;36m __first2[0m [0;32m'_II2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x52411e8[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __last2[0m [0;32m'_II2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5241260[0m <[0;33mline:873:8[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x52422b8[0m <[0;33mline:874:5[0m, [0;33mline:889:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5241648[0m <[0;33mline:875:7[0m, [0;33mcol:75[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x52415f0[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m _Category1[0m [0;32m'typename iterator_traits<_II1>::iterator_category'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x5241580[0m [0;32m'typename iterator_traits<_II1>::iterator_category'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x52417c8[0m <[0;33mline:876:7[0m, [0;33mcol:75[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5241770[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m _Category2[0m [0;32m'typename iterator_traits<_II2>::iterator_category'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x5241700[0m [0;32m'typename iterator_traits<_II2>::iterator_category'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5241a70[0m <[0;33mline:877:7[0m, [0;33mcol:63[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5241a18[0m <[0;33mcol:7[0m, [0;33mcol:53[0m> [0;33mcol:53[0m referenced[0;1;36m __rai_type[0m [0;32m'std::__lc_rai<_Category1, _Category2>':'__lc_rai<_Category1, _Category2>'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x5241930[0m [0;32m'std::__lc_rai<_Category1, _Category2>'[0m sugar dependent
[0;34m    |     `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x52418d0[0m [0;32m'__lc_rai<_Category1, _Category2>'[0m dependent __lc_rai
[0;34m    |       |-[0mTemplateArgument type [0;32m'_Category1':'typename iterator_traits<_II1>::iterator_category'[0m
[0;34m    |       `-[0mTemplateArgument type [0;32m'_Category2':'typename iterator_traits<_II2>::iterator_category'[0m
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5241c18[0m <[0;33mline:879:7[0m, [0;33mcol:76[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241a88[0m <[0;33mcol:7[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52410f8[0m[0;1;36m '__last1'[0m [0;32m'_II1'[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5241bd8[0m <[0;33mcol:17[0m, [0;33mcol:76[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5241b20[0m <[0;33mcol:17[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241b58[0m <[0;33mcol:40[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241080[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241b78[0m <[0;33mcol:50[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52410f8[0m[0;1;36m '__last1'[0m [0;32m'_II1'[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241b98[0m <[0;33mcol:59[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241170[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241bb8[0m <[0;33mcol:69[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52411e8[0m[0;1;36m '__last2'[0m [0;32m'_II2'[0m
[0;34m    |-[0m[0;1;35mForStmt[0m[0;33m 0x5242090[0m <[0;33mline:880:7[0m, [0;33mline:887:2[0m>
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5241df8[0m <[0;33mline:880:14[0m, [0;33mcol:73[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5241ce0[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5241c78[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x51acbe8[0m[0;33m 0x51d10a8[0m[0;33m 0x51d3698[0m[0;33m 0x51f62d8[0m[0;33m 0x51f68b8[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241c38[0m <[0;33mcol:14[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241080[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241c58[0m <[0;33mcol:26[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52410f8[0m[0;1;36m '__last1'[0m [0;32m'_II1'[0m
[0;34m    | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5241dc8[0m <[0;33mcol:37[0m, [0;33mcol:73[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5241d50[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241d88[0m <[0;33mcol:56[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241170[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241da8[0m <[0;33mcol:66[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52411e8[0m[0;1;36m '__last2'[0m [0;32m'_II2'[0m
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5241ec0[0m <[0;33mline:881:5[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m ','
[0;34m    | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5241e38[0m <[0;33mcol:5[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241e18[0m <[0;33mcol:7[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241080[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m    | | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5241e98[0m <[0;33mcol:17[0m, [0;33mcol:25[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m <[0;31mToVoid[0m>
[0;34m    | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5241e70[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241e50[0m <[0;33mcol:25[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241170[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5242070[0m <[0;33mline:882:2[0m, [0;33mline:887:2[0m>
[0;34m    |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x5241f90[0m <[0;33mline:883:4[0m, [0;33mline:884:13[0m>
[0;34m    |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5241f40[0m <[0;33mline:883:8[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241ee0[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241260[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241f00[0m <[0;33mcol:15[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241080[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m    |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241f20[0m <[0;33mcol:25[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241170[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m    |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5241f80[0m <[0;33mline:884:6[0m, [0;33mcol:13[0m>
[0;34m    |   |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5241f70[0m <[0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5242058[0m <[0;33mline:885:4[0m, [0;33mline:886:13[0m>
[0;34m    |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x5242008[0m <[0;33mline:885:8[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241fa8[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241260[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m    |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241fc8[0m <[0;33mcol:15[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241170[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m    |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5241fe8[0m <[0;33mcol:25[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241080[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m    |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5242048[0m <[0;33mline:886:6[0m, [0;33mcol:13[0m>
[0;34m    |       `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5242038[0m <[0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x52422a8[0m <[0;33mline:888:7[0m, [0;33mcol:49[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5242288[0m <[0;33mcol:14[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m        |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5242170[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5242108[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x51aa988[0m[0;33m 0x51d03e8[0m[0;33m 0x51d28d8[0m[0;33m 0x51f5538[0m[0;33m 0x51f5be8[0m
[0;34m        | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52420c8[0m <[0;33mcol:14[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241080[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52420e8[0m <[0;33mcol:26[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52410f8[0m[0;1;36m '__last1'[0m [0;32m'_II1'[0m
[0;34m        `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5242250[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x52421e8[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x51acbe8[0m[0;33m 0x51d10a8[0m[0;33m 0x51d3698[0m[0;33m 0x51f62d8[0m[0;33m 0x51f68b8[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52421a8[0m <[0;33mcol:37[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5241170[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52421c8[0m <[0;33mcol:49[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52411e8[0m[0;1;36m '__last2'[0m [0;32m'_II2'[0m

Dumping std::__lexicographical_compare:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5242fd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:891:3[0m, [0;33mline:896:5[0m> [0;33mline:892:12[0m[0;1;36m __lexicographical_compare[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5242ed0[0m <[0;33mline:891:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _BoolType[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5242f48[0m <[0;33mline:892:5[0m, [0;33mline:896:5[0m> [0;33mline:892:12[0m struct[0;1;36m __lexicographical_compare[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5243250[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __lexicographical_compare[0m
[0;34m| `-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5243778[0m <[0;33mline:894:7[0m, [0;33mline:895:48[0m> [0;33mcol:21[0m[0;1;36m __lc[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x52432e0[0m <[0;33mline:894:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _II1[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5243358[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 1 index 1[0;1;36m _II2[0m
[0;34m|   `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x52436d8[0m <[0;33mline:895:9[0m, [0;33mcol:48[0m> [0;33mcol:21[0m[0;1;36m __lc[0m [0;32m'bool (_II1, _II1, _II2, _II2)'[0m static
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x52433f8[0m <[0;33mcol:26[0m> [0;33mcol:30[0m [0;32m'_II1'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5243470[0m <[0;33mcol:32[0m> [0;33mcol:36[0m [0;32m'_II1'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x52434e8[0m <[0;33mcol:38[0m> [0;33mcol:42[0m [0;32m'_II2'[0m
[0;34m|     `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5243560[0m <[0;33mcol:44[0m> [0;33mcol:48[0m [0;32m'_II2'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5244130[0m[0;1;36m '__lexicographical_compare'[0m

Dumping std::__lexicographical_compare::__lc:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5243e30[0m parent 0x5242f48 prev 0x5243778 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:899:5[0m, [0;33mline:907:7[0m> [0;33mline:902:7[0m[0;1;36m __lc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5243890[0m <[0;33mline:899:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 1 index 0[0;1;36m _II1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5243908[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 1 index 1[0;1;36m _II2[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5243d58[0m parent 0x5242f48 prev 0x52436d8 <[0;33mline:898:3[0m, [0;33mline:907:7[0m> [0;33mline:902:7[0m[0;1;36m __lc[0m [0;32m'bool (_II1, _II1, _II2, _II2)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5243af8[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __first1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5243b70[0m <[0;33mcol:27[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __last1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5243be8[0m <[0;33mcol:41[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __first2[0m [0;32m'_II2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5243c60[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __last2[0m [0;32m'_II2'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x52440d8[0m <[0;33mline:903:7[0m, [0;33mline:907:7[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x52440c8[0m <[0;33mline:904:2[0m, [0;33mline:906:42[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5244080[0m <[0;33mline:904:9[0m, [0;33mline:906:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5243ee0[0m <[0;33mline:904:9[0m, [0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__lexicographical_compare_impl'[0;33m 0x5241458[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5243f28[0m <[0;33mcol:45[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5243af8[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5243f48[0m <[0;33mcol:55[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5243b70[0m[0;1;36m '__last1'[0m [0;32m'_II1'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5243f68[0m <[0;33mline:905:10[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5243be8[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5243f88[0m <[0;33mcol:20[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5243c60[0m[0;1;36m '__last2'[0m [0;32m'_II2'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x5244060[0m <[0;33mline:906:6[0m, [0;33mcol:41[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5244048[0m <[0;33mcol:6[0m, [0;33mcol:24[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5243ff0[0m <[0;33mcol:6[0m, [0;33mcol:24[0m> [0;32m'__gnu_cxx::__ops::_Iter_less_iter ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x51fe068[0m[0;1;36m '__iter_less_iter'[0m [0;32m'__gnu_cxx::__ops::_Iter_less_iter ()'[0m

Dumping std::__lexicographical_compare:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5244130[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:909:3[0m, [0;33mline:924:5[0m> [0;33mline:910:12[0m struct[0;1;36m __lexicographical_compare[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5244348[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __lexicographical_compare[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x52448c8[0m <[0;33mline:912:7[0m, [0;33mline:923:2[0m> [0;33mline:914:9[0m[0;1;36m __lc[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x52443d8[0m <[0;33mline:912:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5244448[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5244828[0m <[0;33mline:913:9[0m, [0;33mline:923:2[0m> [0;33mline:914:9[0m[0;1;36m __lc[0m [0;32m'bool (const _Tp *, const _Tp *, const _Up *, const _Up *)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5244518[0m <[0;33mcol:14[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m __first1[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5244590[0m <[0;33mcol:35[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __last1[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5244638[0m <[0;33mline:915:7[0m, [0;33mcol:18[0m> [0;33mcol:18[0m referenced[0;1;36m __first2[0m [0;32m'const _Up *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x52446b0[0m <[0;33mcol:28[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced[0;1;36m __last2[0m [0;32m'const _Up *'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5245ed8[0m <[0;33mline:916:2[0m, [0;33mline:923:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5244a98[0m <[0;33mline:917:4[0m, [0;33mcol:44[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5244968[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:17[0m referenced[0;1;36m __len1[0m [0;32m'const std::size_t':'const unsigned long'[0m cinit
[0;34m      |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5244a60[0m <[0;33mcol:26[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5244a10[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x51d51d8[0m[0;33m 0x51fa378[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52449d0[0m <[0;33mcol:26[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5244590[0m[0;1;36m '__last1'[0m [0;32m'const _Tp *'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52449f0[0m <[0;33mcol:36[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5244518[0m[0;1;36m '__first1'[0m [0;32m'const _Tp *'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5244bf0[0m <[0;33mline:918:4[0m, [0;33mcol:44[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5244ac0[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:17[0m referenced[0;1;36m __len2[0m [0;32m'const std::size_t':'const unsigned long'[0m cinit
[0;34m      |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5244bb8[0m <[0;33mcol:26[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5244b68[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x51d51d8[0m[0;33m 0x51fa378[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5244b28[0m <[0;33mcol:26[0m> [0;32m'const _Up *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52446b0[0m[0;1;36m '__last2'[0m [0;32m'const _Up *'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5244b48[0m <[0;33mcol:36[0m> [0;32m'const _Up *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5244638[0m[0;1;36m '__first2'[0m [0;32m'const _Up *'[0m
[0;34m      |-[0m[0;1;35mIfStmt[0m[0;33m 0x5245e00[0m <[0;33mline:919:4[0m, [0;33mline:921:26[0m> has_var
[0;34m      | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5245e20[0m <[0;33mline:919:8[0m, [0;33mcol:52[0m>
[0;34m      | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5244c18[0m <[0;33mcol:8[0m, [0;33mcol:52[0m> [0;33mcol:21[0m referenced[0;1;36m __len[0m [0;32m'const std::size_t':'const unsigned long'[0m cinit
[0;34m      | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245b50[0m <[0;33mcol:29[0m, [0;33mcol:52[0m> [0;32m'unsigned long':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x5245b20[0m <[0;33mcol:29[0m, [0;33mcol:52[0m> [0;32m'const unsigned long':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245b08[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;32m'const unsigned long &(*)(const unsigned long &, const unsigned long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52458e0[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;32m'const unsigned long &(const unsigned long &, const unsigned long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x52457d8[0m[0;1;36m 'min'[0m [0;32m'const unsigned long &(const unsigned long &, const unsigned long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x521de98[0m[0;1;36m 'min'[0m)
[0;34m      | |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5244cf0[0m <[0;33mcol:38[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5244968[0m[0;1;36m '__len1'[0m [0;32m'const std::size_t':'const unsigned long'[0m
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5244d10[0m <[0;33mcol:46[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5244ac0[0m[0;1;36m '__len2'[0m [0;32m'const std::size_t':'const unsigned long'[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245ba0[0m <[0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245b88[0m <[0;33mcol:21[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245b68[0m <[0;33mcol:21[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5244c18[0m[0;1;36m '__len'[0m [0;32m'const std::size_t':'const unsigned long'[0m
[0;34m      | `-[0m[0;1;35mIfStmt[0m[0;33m 0x5245dc8[0m <[0;33mline:920:6[0m, [0;33mline:921:26[0m> has_var
[0;34m      |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5245de8[0m <[0;33mline:920:10[0m, [0;33mcol:67[0m>
[0;34m      |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5245bd0[0m <[0;33mcol:10[0m, [0;33mcol:67[0m> [0;33mcol:14[0m referenced[0;1;36m __result[0m [0;32m'int'[0m cinit
[0;34m      |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5245cb8[0m <[0;33mcol:25[0m, [0;33mcol:67[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245c38[0m <[0;33mcol:25[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x523ba40[0m[0;1;36m '__builtin_memcmp'[0m [0;32m'int (const void *, const void *, unsigned long) noexcept'[0m
[0;34m      |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245c58[0m <[0;33mcol:42[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5244518[0m[0;1;36m '__first1'[0m [0;32m'const _Tp *'[0m
[0;34m      |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245c78[0m <[0;33mcol:52[0m> [0;32m'const _Up *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5244638[0m[0;1;36m '__first2'[0m [0;32m'const _Up *'[0m
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245c98[0m <[0;33mcol:62[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5244c18[0m[0;1;36m '__len'[0m [0;32m'const std::size_t':'const unsigned long'[0m
[0;34m      |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245d28[0m <[0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245d10[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245cf0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5245bd0[0m[0;1;36m '__result'[0m [0;32m'int'[0m
[0;34m      |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5245db8[0m <[0;33mline:921:8[0m, [0;33mcol:26[0m>
[0;34m      |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5245d98[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m      |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245d80[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245d40[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5245bd0[0m[0;1;36m '__result'[0m [0;32m'int'[0m
[0;34m      |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5245d60[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5245ec8[0m <[0;33mline:922:4[0m, [0;33mcol:20[0m>
[0;34m        `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5245ea8[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245e78[0m <[0;33mcol:11[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245e38[0m <[0;33mcol:11[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5244968[0m[0;1;36m '__len1'[0m [0;32m'const std::size_t':'const unsigned long'[0m
[0;34m          `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5245e90[0m <[0;33mcol:20[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5245e58[0m <[0;33mcol:20[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5244ac0[0m[0;1;36m '__len2'[0m [0;32m'const std::size_t':'const unsigned long'[0m

Dumping std::__lexicographical_compare_aux:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5246368[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:926:3[0m, [0;33mline:942:5[0m> [0;33mline:928:5[0m[0;1;36m __lexicographical_compare_aux[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5245f08[0m <[0;33mline:926:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _II1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5245f78[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _II2[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x52462c8[0m <[0;33mline:927:5[0m, [0;33mline:942:5[0m> [0;33mline:928:5[0m[0;1;36m __lexicographical_compare_aux[0m [0;32m'bool (_II1, _II1, _II2, _II2)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5246018[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __first1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5246090[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5246108[0m <[0;33mline:929:7[0m, [0;33mcol:12[0m> [0;33mcol:12[0m referenced[0;1;36m __first2[0m [0;32m'_II2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5246180[0m <[0;33mcol:22[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __last2[0m [0;32m'_II2'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5247228[0m <[0;33mline:930:5[0m, [0;33mline:942:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5246548[0m <[0;33mline:931:7[0m, [0;33mcol:69[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x52464f0[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m _ValueType1[0m [0;32m'typename iterator_traits<_II1>::value_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x5246480[0m [0;32m'typename iterator_traits<_II1>::value_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x52466c8[0m <[0;33mline:932:7[0m, [0;33mcol:69[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5246670[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m _ValueType2[0m [0;32m'typename iterator_traits<_II2>::value_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x5246600[0m [0;32m'typename iterator_traits<_II2>::value_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5246fb8[0m <[0;33mline:933:7[0m, [0;33mline:938:34[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x52466f0[0m <[0;33mline:933:7[0m, [0;33mline:938:33[0m> [0;33mline:933:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m    |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x5246f98[0m <[0;33mline:934:2[0m, [0;33mline:938:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5246f78[0m <[0;33mline:934:3[0m, [0;33mline:938:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5246e58[0m <[0;33mline:934:3[0m, [0;33mline:937:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5246d40[0m <[0;33mline:934:3[0m, [0;33mline:936:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5246bc0[0m <[0;33mline:934:3[0m, [0;33mline:935:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5246a28[0m <[0;33mline:934:3[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | | | | |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5246898[0m <[0;33mcol:3[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |       | | | | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x52469f0[0m <[0;33mcol:38[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |       | | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5246ba8[0m <[0;33mline:935:6[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    |       | | |   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5246b70[0m <[0;33mcol:7[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |       | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5246d28[0m <[0;33mline:936:6[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    |       | |   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5246cf0[0m <[0;33mcol:7[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |       | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5246e20[0m <[0;33mline:937:6[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |       `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5246f40[0m <[0;33mline:938:6[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5247218[0m <[0;33mline:940:7[0m, [0;33mline:941:29[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x52471d8[0m <[0;33mline:940:14[0m, [0;33mline:941:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5247120[0m <[0;33mline:940:14[0m, [0;33mcol:56[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5247158[0m <[0;33mcol:61[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5246018[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5247178[0m <[0;33mcol:71[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5246090[0m[0;1;36m '__last1'[0m [0;32m'_II1'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5247198[0m <[0;33mline:941:12[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5246108[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52471b8[0m <[0;33mcol:22[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5246180[0m[0;1;36m '__last2'[0m [0;32m'_II2'[0m

Dumping std::lexicographical_compare:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x524f248[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:1201:3[0m, [0;33mline:1222:5[0m> [0;33mline:1203:5[0m[0;1;36m lexicographical_compare[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x524ee30[0m <[0;33mline:1201:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _II1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x524eea8[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _II2[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x524f1a8[0m <[0;33mline:1202:5[0m, [0;33mline:1222:5[0m> [0;33mline:1203:5[0m[0;1;36m lexicographical_compare[0m [0;32m'bool (_II1, _II1, _II2, _II2)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524ef48[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524efc0[0m <[0;33mcol:44[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __last1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524f038[0m <[0;33mline:1204:8[0m, [0;33mcol:13[0m> [0;33mcol:13[0m referenced[0;1;36m __first2[0m [0;32m'_II2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524f0b0[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __last2[0m [0;32m'_II2'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x524f6a8[0m <[0;33mline:1205:5[0m, [0;33mline:1222:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x524f2c0[0m <[0;33mline:1215:56[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x524f2c8[0m <[0;33mline:1216:56[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x524f698[0m <[0;33mline:1218:7[0m, [0;33mline:1221:33[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x524f658[0m <[0;33mline:1218:14[0m, [0;33mline:1221:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x524f2f0[0m <[0;33mline:1218:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__lexicographical_compare_aux'[0;33m 0x5246368[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x524f3d8[0m <[0;33mcol:49[0m, [0;33mcol:75[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x524f358[0m <[0;33mcol:49[0m, [0;33mcol:54[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x51d6978[0m[0;33m 0x51f0de8[0m[0;33m 0x51fc738[0m[0;33m 0x521f1e8[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524f3b8[0m <[0;33mcol:67[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524ef48[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x524f4a0[0m <[0;33mline:1219:7[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x524f420[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x51d6978[0m[0;33m 0x51f0de8[0m[0;33m 0x51fc738[0m[0;33m 0x521f1e8[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524f480[0m <[0;33mcol:25[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524efc0[0m[0;1;36m '__last1'[0m [0;32m'_II1'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x524f568[0m <[0;33mline:1220:7[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x524f4e8[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x51d6978[0m[0;33m 0x51f0de8[0m[0;33m 0x51fc738[0m[0;33m 0x521f1e8[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524f548[0m <[0;33mcol:25[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524f038[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x524f630[0m <[0;33mline:1221:7[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x524f5b0[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x51d6978[0m[0;33m 0x51f0de8[0m[0;33m 0x51fc738[0m[0;33m 0x521f1e8[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524f610[0m <[0;33mcol:25[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524f0b0[0m[0;1;36m '__last2'[0m [0;32m'_II2'[0m

Dumping std::lexicographical_compare:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x524fc10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:1237:3[0m, [0;33mline:1251:5[0m> [0;33mline:1239:5[0m[0;1;36m lexicographical_compare[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x524f6d0[0m <[0;33mline:1237:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _II1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x524f748[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _II2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x524f7b8[0m <[0;33mcol:42[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced typename depth 0 index 2[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x524fb70[0m <[0;33mline:1238:5[0m, [0;33mline:1251:5[0m> [0;33mline:1239:5[0m[0;1;36m lexicographical_compare[0m [0;32m'bool (_II1, _II1, _II2, _II2, _Compare)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524f860[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524f8d8[0m <[0;33mcol:44[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __last1[0m [0;32m'_II1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524f950[0m <[0;33mline:1240:8[0m, [0;33mcol:13[0m> [0;33mcol:13[0m referenced[0;1;36m __first2[0m [0;32m'_II2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524f9c8[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __last2[0m [0;32m'_II2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x524fa40[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x524feb0[0m <[0;33mline:1241:5[0m, [0;33mline:1251:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x524fc90[0m <[0;33mline:1245:56[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x524fc98[0m <[0;33mline:1246:56[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x524fea0[0m <[0;33mline:1248:7[0m, [0;33mline:1250:45[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x524fe58[0m <[0;33mline:1248:14[0m, [0;33mline:1250:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x524fcc0[0m <[0;33mline:1248:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__lexicographical_compare_impl'[0;33m 0x5241458[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524fd08[0m <[0;33mline:1249:3[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524f860[0m[0;1;36m '__first1'[0m [0;32m'_II1'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524fd28[0m <[0;33mcol:13[0m> [0;32m'_II1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524f8d8[0m[0;1;36m '__last1'[0m [0;32m'_II1'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524fd48[0m <[0;33mcol:22[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524f950[0m[0;1;36m '__first2'[0m [0;32m'_II2'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524fd68[0m <[0;33mcol:32[0m> [0;32m'_II2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524f9c8[0m[0;1;36m '__last2'[0m [0;32m'_II2'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x524fe30[0m <[0;33mline:1250:3[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x524fdb8[0m <[0;33mcol:3[0m, [0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iter_comp_iter'[0;33m 0x520c378[0m[0;33m 0x5214e18[0m[0;33m 0x521a330[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x524fe10[0m <[0;33mcol:38[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x524fa40[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m

Dumping compare:
[0;1;32mFunctionDecl[0m[0;33m 0x53f3cf0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:17:1[0m, [0;33mcol:41[0m> [0;33mcol:5[0m used[0;1;36m compare[0m [0;32m'int (const void *, const void *)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53f3b98[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:27[0m [0;32m'const void *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53f3c18[0m <[0;33mcol:29[0m, [0;33mcol:40[0m> [0;33mcol:41[0m [0;32m'const void *'[0m

Dumping compare2:
[0;1;32mFunctionDecl[0m[0;33m 0x53f3ed8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:18:1[0m, [0;33mcol:42[0m> [0;33mcol:5[0m used[0;1;36m compare2[0m [0;32m'int (const void *, const void *)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53f3db8[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'const void *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53f3e38[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;33mcol:42[0m [0;32m'const void *'[0m

Dumping __gnu_cxx::char_traits::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5603790[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:107:7[0m, [0;33mline:108:76[0m> [0;33mcol:7[0m constexpr[0;1;36m compare[0m [0;32m'int (const __gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56034f8[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m __s1[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5603570[0m <[0;33mcol:38[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __s2[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5603660[0m <[0;33mcol:61[0m, [0;33mcol:73[0m> [0;33mcol:73[0m[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping __gnu_cxx::char_traits::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x56059b0[0m parent 0x56023b0 prev 0x5603790 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:146:3[0m, [0;33mline:157:5[0m> [0;33mline:149:5[0m constexpr[0;1;36m compare[0m [0;32m'int (const __gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56057d8[0m <[0;33mcol:13[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __s1[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5605850[0m <[0;33mcol:36[0m, [0;33mcol:53[0m> [0;33mcol:53[0m referenced[0;1;36m __s2[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5605908[0m <[0;33mcol:59[0m, [0;33mcol:71[0m> [0;33mcol:71[0m referenced[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5610008[0m <[0;33mline:150:5[0m, [0;33mline:157:5[0m>
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x560ffa0[0m <[0;33mline:151:7[0m, [0;33mline:155:11[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5605b90[0m <[0;33mline:151:12[0m, [0;33mcol:31[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5605af0[0m <[0;33mcol:12[0m, [0;33mcol:30[0m> [0;33mcol:24[0m referenced[0;1;36m __i[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5605b78[0m <[0;33mcol:30[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5605b58[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5605c18[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5605be8[0m <[0;33mcol:33[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605ba8[0m <[0;33mcol:33[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5605af0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5605c00[0m <[0;33mcol:39[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605bc8[0m <[0;33mcol:39[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5605908[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5605c58[0m <[0;33mcol:44[0m, [0;33mcol:46[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605c38[0m <[0;33mcol:46[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5605af0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | `-[0m[0;1;35mIfStmt[0m[0;33m 0x560ff78[0m <[0;33mline:152:2[0m, [0;33mline:155:11[0m> has_else
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x5605d50[0m <[0;33mline:152:6[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605c70[0m <[0;33mcol:6[0m> [0;32m'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5603408[0m[0;1;36m 'lt'[0m [0;32m'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'[0m
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5605cd0[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605c90[0m <[0;33mcol:9[0m> [0;32m'const __gnu_cxx::char_traits::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56057d8[0m[0;1;36m '__s1'[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605cb0[0m <[0;33mcol:14[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5605af0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5605d30[0m <[0;33mcol:20[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605cf0[0m <[0;33mcol:20[0m> [0;32m'const __gnu_cxx::char_traits::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5605850[0m[0;1;36m '__s2'[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605d10[0m <[0;33mcol:25[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5605af0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |   |-[0m[0;1;35mReturnStmt[0m[0;33m 0x5605db8[0m <[0;33mline:153:4[0m, [0;33mcol:12[0m>
[0;34m  |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5605da0[0m <[0;33mcol:11[0m, [0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5605d80[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x560ff60[0m <[0;33mline:154:7[0m, [0;33mline:155:11[0m>
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x560ff00[0m <[0;33mline:154:11[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605dc8[0m <[0;33mcol:11[0m> [0;32m'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5603408[0m[0;1;36m 'lt'[0m [0;32m'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'[0m
[0;34m  |     | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5605e28[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605de8[0m <[0;33mcol:14[0m> [0;32m'const __gnu_cxx::char_traits::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5605850[0m[0;1;36m '__s2'[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5605e08[0m <[0;33mcol:19[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5605af0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x560fee0[0m <[0;33mcol:25[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x560fea0[0m <[0;33mcol:25[0m> [0;32m'const __gnu_cxx::char_traits::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56057d8[0m[0;1;36m '__s1'[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x560fec0[0m <[0;33mcol:30[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5605af0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x560ff50[0m <[0;33mline:155:4[0m, [0;33mcol:11[0m>
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x560ff30[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x560fff8[0m <[0;33mline:156:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x560ffd8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::char_traits<char>::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5613ec0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:299:7[0m, [0;33mline:311:7[0m> [0;33mline:300:7[0m[0;1;36m compare[0m [0;32m'int (const std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5613ce8[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m __s1[0m [0;32m'const std::char_traits<char>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5613d60[0m <[0;33mcol:38[0m, [0;33mcol:55[0m> [0;33mcol:55[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5613dd8[0m <[0;33mcol:61[0m, [0;33mcol:68[0m> [0;33mcol:68[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5615a90[0m <[0;33mline:301:7[0m, [0;33mline:311:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5615880[0m <[0;33mline:308:2[0m, [0;33mline:309:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5615830[0m <[0;33mline:308:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5615800[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56157c0[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5613dd8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5615818[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56157e0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5615870[0m <[0;33mline:309:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5615850[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5615a80[0m <[0;33mline:310:2[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x56159d0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56159b8[0m <[0;33mcol:9[0m> [0;32m'int (*)(const void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5615898[0m <[0;33mcol:9[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x523ba40[0m[0;1;36m '__builtin_memcmp'[0m [0;32m'int (const void *, const void *, unsigned long) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5615a20[0m <[0;33mcol:26[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5615a08[0m <[0;33mcol:26[0m> [0;32m'const std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56158b8[0m <[0;33mcol:26[0m> [0;32m'const std::char_traits<char>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5613ce8[0m[0;1;36m '__s1'[0m [0;32m'const std::char_traits<char>::char_type *'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5615a50[0m <[0;33mcol:32[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5615a38[0m <[0;33mcol:32[0m> [0;32m'const std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56158d8[0m <[0;33mcol:32[0m> [0;32m'const std::char_traits<char>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5613d60[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char>::char_type *'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5615a68[0m <[0;33mcol:38[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56158f8[0m <[0;33mcol:38[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5613dd8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::char_traits<wchar_t>::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5617d80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:408:7[0m, [0;33mline:421:7[0m> [0;33mline:409:7[0m[0;1;36m compare[0m [0;32m'int (const std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5617ba8[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m __s1[0m [0;32m'const std::char_traits<wchar_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5617c20[0m <[0;33mcol:38[0m, [0;33mcol:55[0m> [0;33mcol:55[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<wchar_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5617c98[0m <[0;33mcol:61[0m, [0;33mcol:68[0m> [0;33mcol:68[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5619c08[0m <[0;33mline:410:7[0m, [0;33mline:421:7[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5619be0[0m <[0;33mline:417:2[0m, [0;33mline:420:34[0m> has_else
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56199c0[0m <[0;33mline:417:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5619990[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5619950[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5617c98[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56199a8[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5619970[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |-[0m[0;1;35mReturnStmt[0m[0;33m 0x5619a00[0m <[0;33mline:418:4[0m, [0;33mcol:11[0m>
[0;34m    | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56199e0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5619bd0[0m <[0;33mline:420:4[0m, [0;33mcol:34[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5619b50[0m <[0;33mcol:11[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5619b38[0m <[0;33mcol:11[0m> [0;32m'int (*)(const wchar_t *, const wchar_t *, size_t) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5619ab8[0m <[0;33mcol:11[0m> [0;32m'int (const wchar_t *, const wchar_t *, size_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x55d1ee0[0m[0;1;36m 'wmemcmp'[0m [0;32m'int (const wchar_t *, const wchar_t *, size_t) throw()'[0m ([0;1;32mUsingShadow[0m[0;33m 0x55ecaa8[0m[0;1;36m 'wmemcmp'[0m)
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5619b88[0m <[0;33mcol:19[0m> [0;32m'const std::char_traits<wchar_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5619a58[0m <[0;33mcol:19[0m> [0;32m'const std::char_traits<wchar_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5617ba8[0m[0;1;36m '__s1'[0m [0;32m'const std::char_traits<wchar_t>::char_type *'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5619ba0[0m <[0;33mcol:25[0m> [0;32m'const std::char_traits<wchar_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5619a78[0m <[0;33mcol:25[0m> [0;32m'const std::char_traits<wchar_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5617c20[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<wchar_t>::char_type *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5619bb8[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5619a98[0m <[0;33mcol:31[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5617c98[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::char_traits<char16_t>::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x561dbc0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:528:7[0m, [0;33mline:537:7[0m> [0;33mline:529:7[0m[0;1;36m compare[0m [0;32m'int (const std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x561d9a8[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m __s1[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x561da20[0m <[0;33mcol:38[0m, [0;33mcol:55[0m> [0;33mcol:55[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x561da98[0m <[0;33mcol:61[0m, [0;33mcol:68[0m> [0;33mcol:68[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x561faf8[0m <[0;33mline:530:7[0m, [0;33mline:537:7[0m>
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x561fa90[0m <[0;33mline:531:2[0m, [0;33mline:535:13[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x561f590[0m <[0;33mline:531:7[0m, [0;33mcol:21[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x561f4f0[0m <[0;33mcol:7[0m, [0;33mcol:20[0m> [0;33mcol:14[0m used[0;1;36m __i[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f578[0m <[0;33mcol:20[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x561f558[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x561f618[0m <[0;33mcol:23[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f5e8[0m <[0;33mcol:23[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f5a8[0m <[0;33mcol:23[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x561f4f0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f600[0m <[0;33mcol:29[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f5c8[0m <[0;33mcol:29[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x561da98[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x561f658[0m <[0;33mcol:34[0m, [0;33mcol:36[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f638[0m <[0;33mcol:36[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x561f4f0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | `-[0m[0;1;35mIfStmt[0m[0;33m 0x561fa68[0m <[0;33mline:532:4[0m, [0;33mline:535:13[0m> has_else
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x561f820[0m <[0;33mline:532:8[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f808[0m <[0;33mcol:8[0m> [0;32m'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f670[0m <[0;33mcol:8[0m> [0;32m'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x561d888[0m[0;1;36m 'lt'[0m [0;32m'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'[0m
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x561f700[0m <[0;33mcol:11[0m, [0;33mcol:19[0m> [0;32m'const std::char_traits<char16_t>::char_type':'const char16_t'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f6d0[0m <[0;33mcol:11[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f690[0m <[0;33mcol:11[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x561d9a8[0m[0;1;36m '__s1'[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f6e8[0m <[0;33mcol:16[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f6b0[0m <[0;33mcol:16[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x561f4f0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x561f790[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'const std::char_traits<char16_t>::char_type':'const char16_t'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f760[0m <[0;33mcol:22[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f720[0m <[0;33mcol:22[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x561da20[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f778[0m <[0;33mcol:27[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f740[0m <[0;33mcol:27[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x561f4f0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |   |-[0m[0;1;35mReturnStmt[0m[0;33m 0x561f888[0m <[0;33mline:533:6[0m, [0;33mcol:14[0m>
[0;34m  |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x561f870[0m <[0;33mcol:13[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x561f850[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x561fa50[0m <[0;33mline:534:9[0m, [0;33mline:535:13[0m>
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x561f9f0[0m <[0;33mline:534:13[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f9d8[0m <[0;33mcol:13[0m> [0;32m'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f898[0m <[0;33mcol:13[0m> [0;32m'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x561d888[0m[0;1;36m 'lt'[0m [0;32m'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'[0m
[0;34m  |     | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x561f928[0m <[0;33mcol:16[0m, [0;33mcol:24[0m> [0;32m'const std::char_traits<char16_t>::char_type':'const char16_t'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f8f8[0m <[0;33mcol:16[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f8b8[0m <[0;33mcol:16[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x561da20[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f910[0m <[0;33mcol:21[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f8d8[0m <[0;33mcol:21[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x561f4f0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x561f9b8[0m <[0;33mcol:27[0m, [0;33mcol:35[0m> [0;32m'const std::char_traits<char16_t>::char_type':'const char16_t'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f988[0m <[0;33mcol:27[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f948[0m <[0;33mcol:27[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x561d9a8[0m[0;1;36m '__s1'[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561f9a0[0m <[0;33mcol:32[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x561f968[0m <[0;33mcol:32[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x561f4f0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x561fa40[0m <[0;33mline:535:6[0m, [0;33mcol:13[0m>
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x561fa20[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x561fae8[0m <[0;33mline:536:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x561fac8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::char_traits<char32_t>::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x563e380[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:625:7[0m, [0;33mline:634:7[0m> [0;33mline:626:7[0m[0;1;36m compare[0m [0;32m'int (const std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x563e168[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m __s1[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x563e1e0[0m <[0;33mcol:38[0m, [0;33mcol:55[0m> [0;33mcol:55[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x563e258[0m <[0;33mcol:61[0m, [0;33mcol:68[0m> [0;33mcol:68[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56401e8[0m <[0;33mline:627:7[0m, [0;33mline:634:7[0m>
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5640180[0m <[0;33mline:628:2[0m, [0;33mline:632:13[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x563fc80[0m <[0;33mline:628:7[0m, [0;33mcol:21[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x563fbe0[0m <[0;33mcol:7[0m, [0;33mcol:20[0m> [0;33mcol:14[0m used[0;1;36m __i[0m [0;32m'std::size_t':'unsigned long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563fc68[0m <[0;33mcol:20[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x563fc48[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x563fd08[0m <[0;33mcol:23[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563fcd8[0m <[0;33mcol:23[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563fc98[0m <[0;33mcol:23[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x563fbe0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563fcf0[0m <[0;33mcol:29[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563fcb8[0m <[0;33mcol:29[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x563e258[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x563fd48[0m <[0;33mcol:34[0m, [0;33mcol:36[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563fd28[0m <[0;33mcol:36[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x563fbe0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | `-[0m[0;1;35mIfStmt[0m[0;33m 0x5640158[0m <[0;33mline:629:4[0m, [0;33mline:632:13[0m> has_else
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x563ff10[0m <[0;33mline:629:8[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563fef8[0m <[0;33mcol:8[0m> [0;32m'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563fd60[0m <[0;33mcol:8[0m> [0;32m'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x563e048[0m[0;1;36m 'lt'[0m [0;32m'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'[0m
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x563fdf0[0m <[0;33mcol:11[0m, [0;33mcol:19[0m> [0;32m'const std::char_traits<char32_t>::char_type':'const char32_t'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563fdc0[0m <[0;33mcol:11[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563fd80[0m <[0;33mcol:11[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x563e168[0m[0;1;36m '__s1'[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563fdd8[0m <[0;33mcol:16[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563fda0[0m <[0;33mcol:16[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x563fbe0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x563fe80[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'const std::char_traits<char32_t>::char_type':'const char32_t'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563fe50[0m <[0;33mcol:22[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563fe10[0m <[0;33mcol:22[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x563e1e0[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563fe68[0m <[0;33mcol:27[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563fe30[0m <[0;33mcol:27[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x563fbe0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |   |-[0m[0;1;35mReturnStmt[0m[0;33m 0x563ff78[0m <[0;33mline:630:6[0m, [0;33mcol:14[0m>
[0;34m  |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x563ff60[0m <[0;33mcol:13[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x563ff40[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5640140[0m <[0;33mline:631:9[0m, [0;33mline:632:13[0m>
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x56400e0[0m <[0;33mline:631:13[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56400c8[0m <[0;33mcol:13[0m> [0;32m'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563ff88[0m <[0;33mcol:13[0m> [0;32m'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x563e048[0m[0;1;36m 'lt'[0m [0;32m'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'[0m
[0;34m  |     | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5640018[0m <[0;33mcol:16[0m, [0;33mcol:24[0m> [0;32m'const std::char_traits<char32_t>::char_type':'const char32_t'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x563ffe8[0m <[0;33mcol:16[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563ffa8[0m <[0;33mcol:16[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x563e1e0[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5640000[0m <[0;33mcol:21[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x563ffc8[0m <[0;33mcol:21[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x563fbe0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x56400a8[0m <[0;33mcol:27[0m, [0;33mcol:35[0m> [0;32m'const std::char_traits<char32_t>::char_type':'const char32_t'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5640078[0m <[0;33mcol:27[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5640038[0m <[0;33mcol:27[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x563e168[0m[0;1;36m '__s1'[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5640090[0m <[0;33mcol:32[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5640058[0m <[0;33mcol:32[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x563fbe0[0m[0;1;36m '__i'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5640130[0m <[0;33mline:632:6[0m, [0;33mcol:13[0m>
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5640110[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56401d8[0m <[0;33mline:633:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56401b8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::__cxx11::basic_string::_S_compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x57463b8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:389:7[0m, [0;33mline:400:7[0m> [0;33mline:390:7[0m referenced[0;1;36m _S_compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5746218[0m <[0;33mcol:18[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __n1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5746290[0m <[0;33mcol:34[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __n2[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x578b828[0m <[0;33mline:391:7[0m, [0;33mline:400:7[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5785d50[0m <[0;33mline:392:2[0m, [0;33mcol:58[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5785be0[0m <[0;33mcol:2[0m, [0;33mcol:57[0m> [0;33mcol:24[0m referenced[0;1;36m __d[0m [0;32m'const std::__cxx11::basic_string::difference_type':'const typename _Alloc_traits::difference_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x5785d28[0m <[0;33mcol:30[0m, [0;33mcol:57[0m> [0;32m'std::__cxx11::basic_string::difference_type':'typename _Alloc_traits::difference_type'[0m[0;36m[0m[0;36m[0m [0;32m'std::__cxx11::basic_string::difference_type':'typename _Alloc_traits::difference_type'[0m
[0;34m  |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5785cf0[0m <[0;33mcol:46[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5785c98[0m <[0;33mcol:51[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x51d51d8[0m[0;33m 0x51fa378[0m[0;33m 0x5199498[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5785c58[0m <[0;33mcol:46[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5746218[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5785c78[0m <[0;33mcol:53[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5746290[0m[0;1;36m '__n2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x578b800[0m <[0;33mline:394:2[0m, [0;33mline:399:18[0m> has_else
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5787890[0m <[0;33mline:394:6[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5787820[0m <[0;33mcol:10[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x51ad2c8[0m[0;33m 0x51d1668[0m[0;33m 0x51d3ce8[0m[0;33m 0x51f88f8[0m[0;33m 0x51f8ec0[0m[0;33m 0x53405d8[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5785d68[0m <[0;33mcol:6[0m> [0;32m'const std::__cxx11::basic_string::difference_type':'const typename _Alloc_traits::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5785be0[0m[0;1;36m '__d'[0m [0;32m'const std::__cxx11::basic_string::difference_type':'const typename _Alloc_traits::difference_type'[0m
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5787660[0m <[0;33mcol:12[0m, [0;33mcol:46[0m> [0;32m'const int':'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5786d18[0m[0;1;36m '__max'[0m [0;32m'const int':'const int'[0m
[0;34m    |-[0m[0;1;35mReturnStmt[0m[0;33m 0x5787a18[0m <[0;33mline:395:4[0m, [0;33mcol:45[0m>
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5787a00[0m <[0;33mcol:11[0m, [0;33mcol:45[0m> [0;32m'int':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57879d0[0m <[0;33mcol:11[0m, [0;33mcol:45[0m> [0;32m'const int':'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57876c8[0m[0;1;36m '__max'[0m [0;32m'const int':'const int'[0m non_odr_use_constant
[0;34m    `-[0m[0;1;35mIfStmt[0m[0;33m 0x578b7d8[0m <[0;33mline:396:7[0m, [0;33mline:399:18[0m> has_else
[0;34m      |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5787d50[0m <[0;33mline:396:11[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5787ce0[0m <[0;33mcol:15[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x51ac178[0m[0;33m 0x51d0a48[0m[0;33m 0x51d2fb8[0m[0;33m 0x51f6f58[0m[0;33m 0x51f75c8[0m[0;33m 0x533f618[0m
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5787a28[0m <[0;33mcol:11[0m> [0;32m'const std::__cxx11::basic_string::difference_type':'const typename _Alloc_traits::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5785be0[0m[0;1;36m '__d'[0m [0;32m'const std::__cxx11::basic_string::difference_type':'const typename _Alloc_traits::difference_type'[0m
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5787b20[0m <[0;33mcol:17[0m, [0;33mcol:51[0m> [0;32m'const int':'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57869a8[0m[0;1;36m '__min'[0m [0;32m'const int':'const int'[0m
[0;34m      |-[0m[0;1;35mReturnStmt[0m[0;33m 0x578b758[0m <[0;33mline:397:4[0m, [0;33mcol:45[0m>
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x578b740[0m <[0;33mcol:11[0m, [0;33mcol:45[0m> [0;32m'int':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x578b710[0m <[0;33mcol:11[0m, [0;33mcol:45[0m> [0;32m'const int':'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5787b88[0m[0;1;36m '__min'[0m [0;32m'const int':'const int'[0m non_odr_use_constant
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x578b7c8[0m <[0;33mline:399:4[0m, [0;33mcol:18[0m>
[0;34m        `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x578b7a0[0m <[0;33mcol:11[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m [0;32m'int'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x578b780[0m <[0;33mcol:15[0m> [0;32m'const std::__cxx11::basic_string::difference_type':'const typename _Alloc_traits::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5785be0[0m[0;1;36m '__d'[0m [0;32m'const std::__cxx11::basic_string::difference_type':'const typename _Alloc_traits::difference_type'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x57741e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:2832:7[0m, [0;33mline:2843:7[0m> [0;33mline:2833:7[0m[0;1;36m compare[0m [0;32m'int (const basic_string<_CharT, _Traits, _Alloc> &) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5774118[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __str[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57a5240[0m <[0;33mline:2834:7[0m, [0;33mline:2843:7[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57a4b80[0m <[0;33mline:2835:2[0m, [0;33mcol:39[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57a4aa0[0m <[0;33mcol:2[0m, [0;33mcol:38[0m> [0;33mcol:18[0m referenced[0;1;36m __size[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x57a4b60[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x57a4b18[0m <[0;33mcol:27[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->size
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x57a4b08[0m <[0;33mcol:27[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57a4c98[0m <[0;33mline:2836:2[0m, [0;33mcol:40[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57a4ba8[0m <[0;33mcol:2[0m, [0;33mcol:39[0m> [0;33mcol:18[0m referenced[0;1;36m __osize[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x57a4c78[0m <[0;33mcol:28[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x57a4c30[0m <[0;33mcol:28[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a4c10[0m <[0;33mcol:28[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5774118[0m[0;1;36m '__str'[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57a4e08[0m <[0;33mline:2837:2[0m, [0;33mcol:51[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57a4cc0[0m <[0;33mcol:2[0m, [0;33mcol:50[0m> [0;33mcol:18[0m referenced[0;1;36m __len[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x57a4dd8[0m <[0;33mcol:26[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x57a4d48[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'min'[0;33m 0x521de98[0m[0;33m 0x521e8f8[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a4d98[0m <[0;33mcol:35[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57a4aa0[0m[0;1;36m '__size'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a4db8[0m <[0;33mcol:43[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57a4ba8[0m[0;1;36m '__osize'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57a5090[0m <[0;33mline:2839:2[0m, [0;33mcol:64[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57a4e38[0m <[0;33mcol:2[0m, [0;33mcol:63[0m> [0;33mcol:6[0m referenced[0;1;36m __r[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x57a5058[0m <[0;33mcol:12[0m, [0;33mcol:63[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x57a4ed8[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->compare
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x57a4f90[0m <[0;33mcol:33[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x57a4f30[0m <[0;33mcol:33[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x57a5018[0m <[0;33mcol:44[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x57a4fd0[0m <[0;33mcol:44[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .data
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a4fb0[0m <[0;33mcol:44[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5774118[0m[0;1;36m '__str'[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a5038[0m <[0;33mcol:58[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57a4cc0[0m[0;1;36m '__len'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x57a51e0[0m <[0;33mline:2840:2[0m, [0;33mline:2841:36[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57a50f8[0m <[0;33mline:2840:6[0m, [0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57a50e0[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57a50c8[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a50a8[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57a4e38[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57a51c0[0m <[0;33mline:2841:4[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a5110[0m <[0;33mcol:4[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57a4e38[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x57a5190[0m <[0;33mcol:10[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a5130[0m <[0;33mcol:10[0m> [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x57463b8[0m[0;1;36m '_S_compare'[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a5150[0m <[0;33mcol:21[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57a4aa0[0m[0;1;36m '__size'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a5170[0m <[0;33mcol:29[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57a4ba8[0m[0;1;36m '__osize'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x57a5230[0m <[0;33mline:2842:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57a5218[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57a51f8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57a4e38[0m[0;1;36m '__r'[0m [0;32m'int'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x57744b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:2925:7[0m, [0;33mline:2926:74[0m> [0;33mcol:7[0m[0;1;36m compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type, const basic_string<_CharT, _Traits, _Alloc> &) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5774298[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __pos[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5774310[0m <[0;33mcol:32[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __n[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5774388[0m <[0;33mcol:47[0m, [0;33mcol:67[0m> [0;33mcol:67[0m[0;1;36m __str[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5780100[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:2951:7[0m, [0;33mline:2953:49[0m> [0;33mline:2952:7[0m[0;1;36m compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type, const basic_string<_CharT, _Traits, _Alloc> &, std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x577fdc0[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __pos1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x577fe38[0m <[0;33mcol:33[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __n1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x577feb0[0m <[0;33mcol:49[0m, [0;33mcol:69[0m> [0;33mcol:69[0m[0;1;36m __str[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x577ff28[0m <[0;33mline:2953:8[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __pos2[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x577ffa0[0m <[0;33mcol:26[0m, [0;33mcol:43[0m> [0;33mcol:36[0m[0;1;36m __n2[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m cinit
[0;34m  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5781898[0m <[0;33mcol:43[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x572bd50[0m[0;1;36m 'npos'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x57802d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:2969:7[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:136:29[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:2970:7[0m[0;1;36m compare[0m [0;32m'int (const _CharT *) const noexcept'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57801d8[0m <[0;33mcol:15[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m __s[0m [0;32m'const _CharT *'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x57805b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:2993:7[0m, [0;33mline:2994:67[0m> [0;33mcol:7[0m[0;1;36m compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type, const _CharT *) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5780390[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __pos[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5780408[0m <[0;33mcol:32[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __n1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5780480[0m <[0;33mcol:48[0m, [0;33mcol:62[0m> [0;33mcol:62[0m[0;1;36m __s[0m [0;32m'const _CharT *'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5780930[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:3020:7[0m, [0;33mline:3022:24[0m> [0;33mline:3021:7[0m[0;1;36m compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type, const _CharT *, std::__cxx11::basic_string::size_type) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5780678[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __pos[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57806f0[0m <[0;33mcol:32[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __n1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5780768[0m <[0;33mcol:48[0m, [0;33mcol:62[0m> [0;33mcol:62[0m[0;1;36m __s[0m [0;32m'const _CharT *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57807e0[0m <[0;33mline:3022:8[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __n2[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58d4890[0m parent 0x572a4a0 prev 0x57744b0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.tcc:1382:3[0m, [0;33mline:1395:5[0m> [0;33mline:1385:5[0m[0;1;36m compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type, const basic_string<_CharT, _Traits, _Alloc> &) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d46f8[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __pos[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d4770[0m <[0;33mcol:30[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __n[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d47e8[0m <[0;33mcol:45[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m __str[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d52f8[0m <[0;33mline:1386:5[0m, [0;33mline:1395:5[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d4a18[0m <[0;33mline:1387:7[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d4998[0m <[0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_check[0;33m 0x57442c8[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d4988[0m <[0;33mcol:7[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d49c8[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d46f8[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x58d49e8[0m <[0;33mcol:23[0m> [0;32m'const char [22]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "basic_string::compare"[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d4b18[0m <[0;33mline:1388:7[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d4a48[0m <[0;33mcol:7[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d4770[0m[0;1;36m '__n'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d4ae8[0m <[0;33mcol:13[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d4a78[0m <[0;33mcol:13[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_limit[0;33m 0x5744800[0m
[0;34m  |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d4a68[0m <[0;33mcol:13[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d4aa8[0m <[0;33mcol:22[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d46f8[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d4ac8[0m <[0;33mcol:29[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d4770[0m[0;1;36m '__n'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d4c38[0m <[0;33mline:1389:7[0m, [0;33mcol:45[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d4b48[0m <[0;33mcol:7[0m, [0;33mcol:44[0m> [0;33mcol:23[0m referenced[0;1;36m __osize[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d4c18[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d4bd0[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d4bb0[0m <[0;33mcol:33[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d47e8[0m[0;1;36m '__str'[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d4da8[0m <[0;33mline:1390:7[0m, [0;33mcol:53[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d4c60[0m <[0;33mcol:7[0m, [0;33mcol:52[0m> [0;33mcol:23[0m referenced[0;1;36m __len[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d4d78[0m <[0;33mcol:31[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d4ce8[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'min'[0;33m 0x521de98[0m[0;33m 0x521e8f8[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d4d38[0m <[0;33mcol:40[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d4770[0m[0;1;36m '__n'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d4d58[0m <[0;33mcol:45[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d4b48[0m[0;1;36m '__osize'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d5148[0m <[0;33mline:1391:7[0m, [0;33mcol:77[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d4dd8[0m <[0;33mcol:7[0m, [0;33mcol:76[0m> [0;33mcol:11[0m referenced[0;1;36m __r[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d5110[0m <[0;33mcol:17[0m, [0;33mcol:76[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d4e78[0m <[0;33mcol:17[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->compare
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x58d5030[0m <[0;33mcol:38[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d4f70[0m <[0;33mcol:48[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x58c8768[0m[0;33m 0x58c7748[0m[0;33m 0x51d5988[0m[0;33m 0x51fab38[0m[0;33m 0x519d9f8[0m[0;33m 0x53611a8[0m[0;33m 0x57a5ac8[0m[0;33m 0x57acf68[0m[0;33m 0x57ac708[0m[0;33m 0x57a7358[0m[0;33m 0x57a7d98[0m[0;33m 0x57a9138[0m[0;33m 0x57a9b28[0m[0;33m 0x57aa538[0m[0;33m 0x57ab598[0m[0;33m 0x57abe28[0m
[0;34m  |     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d4f30[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x58d4ed0[0m <[0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d4f50[0m <[0;33mcol:50[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d46f8[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d50d0[0m <[0;33mcol:57[0m, [0;33mcol:68[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d5088[0m <[0;33mcol:57[0m, [0;33mcol:63[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .data
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5068[0m <[0;33mcol:57[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d47e8[0m[0;1;36m '__str'[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d50f0[0m <[0;33mcol:71[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d4c60[0m[0;1;36m '__len'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x58d5298[0m <[0;33mline:1392:7[0m, [0;33mline:1393:31[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x58d51b0[0m <[0;33mline:1392:11[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d5198[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d5180[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5160[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d4dd8[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d5278[0m <[0;33mline:1393:2[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d51c8[0m <[0;33mcol:2[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d4dd8[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d5248[0m <[0;33mcol:8[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d51e8[0m <[0;33mcol:8[0m> [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x57463b8[0m[0;1;36m '_S_compare'[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5208[0m <[0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d4770[0m[0;1;36m '__n'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5228[0m <[0;33mcol:24[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d4b48[0m[0;1;36m '__osize'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58d52e8[0m <[0;33mline:1394:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d52d0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d52b0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d4dd8[0m[0;1;36m '__r'[0m [0;32m'int'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58d59b0[0m parent 0x572a4a0 prev 0x5780100 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.tcc:1397:3[0m, [0;33mline:1413:5[0m> [0;33mline:1400:5[0m[0;1;36m compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type, const basic_string<_CharT, _Traits, _Alloc> &, std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d5718[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __pos1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d5790[0m <[0;33mcol:31[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __n1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d5808[0m <[0;33mcol:47[0m, [0;33mcol:67[0m> [0;33mcol:67[0m referenced[0;1;36m __str[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d5880[0m <[0;33mline:1401:6[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __pos2[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d58f8[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n2[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m cinit
[0;34m| `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5781898[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:2953:43[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x572bd50[0m[0;1;36m 'npos'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d6628[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.tcc:1402:5[0m, [0;33mline:1413:5[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d5b48[0m <[0;33mline:1403:7[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d5ac8[0m <[0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_check[0;33m 0x57442c8[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d5ab8[0m <[0;33mcol:7[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5af8[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5718[0m[0;1;36m '__pos1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x58d5b18[0m <[0;33mcol:24[0m> [0;32m'const char [22]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "basic_string::compare"[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d5c30[0m <[0;33mline:1404:7[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d5b98[0m <[0;33mcol:7[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_check
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5b78[0m <[0;33mcol:7[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5808[0m[0;1;36m '__str'[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5be0[0m <[0;33mcol:22[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5880[0m[0;1;36m '__pos2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x58d5c00[0m <[0;33mcol:30[0m> [0;32m'const char [22]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "basic_string::compare"[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d5d30[0m <[0;33mline:1405:7[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5c60[0m <[0;33mcol:7[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5790[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d5d00[0m <[0;33mcol:14[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d5c90[0m <[0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_limit[0;33m 0x5744800[0m
[0;34m  |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d5c80[0m <[0;33mcol:14[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5cc0[0m <[0;33mcol:23[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5718[0m[0;1;36m '__pos1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5ce0[0m <[0;33mcol:31[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5790[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d5e48[0m <[0;33mline:1406:7[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5d50[0m <[0;33mcol:7[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d58f8[0m[0;1;36m '__n2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d5e18[0m <[0;33mcol:14[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d5d90[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_limit
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5d70[0m <[0;33mcol:14[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5808[0m[0;1;36m '__str'[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5dd8[0m <[0;33mcol:29[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5880[0m[0;1;36m '__pos2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5df8[0m <[0;33mcol:37[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d58f8[0m[0;1;36m '__n2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d5fc0[0m <[0;33mline:1407:7[0m, [0;33mcol:51[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d5e78[0m <[0;33mcol:7[0m, [0;33mcol:50[0m> [0;33mcol:23[0m referenced[0;1;36m __len[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d5f90[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d5f00[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'min'[0;33m 0x521de98[0m[0;33m 0x521e8f8[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5f50[0m <[0;33mcol:40[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5790[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d5f70[0m <[0;33mcol:46[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d58f8[0m[0;1;36m '__n2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d6478[0m <[0;33mline:1408:7[0m, [0;33mline:1409:39[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d5ff0[0m <[0;33mline:1408:7[0m, [0;33mline:1409:38[0m> [0;33mline:1408:11[0m referenced[0;1;36m __r[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d6440[0m <[0;33mcol:17[0m, [0;33mline:1409:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d6090[0m <[0;33mline:1408:17[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->compare
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x58d6248[0m <[0;33mcol:38[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d6188[0m <[0;33mcol:48[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x58c8768[0m[0;33m 0x58c7748[0m[0;33m 0x51d5988[0m[0;33m 0x51fab38[0m[0;33m 0x519d9f8[0m[0;33m 0x53611a8[0m[0;33m 0x57a5ac8[0m[0;33m 0x57acf68[0m[0;33m 0x57ac708[0m[0;33m 0x57a7358[0m[0;33m 0x57a7d98[0m[0;33m 0x57a9138[0m[0;33m 0x57a9b28[0m[0;33m 0x57aa538[0m[0;33m 0x57ab598[0m[0;33m 0x57abe28[0m
[0;34m  |     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d6148[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x58d60e8[0m <[0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6168[0m <[0;33mcol:50[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5718[0m[0;1;36m '__pos1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x58d63e8[0m <[0;33mline:1409:10[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d6328[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x58c8768[0m[0;33m 0x58c7748[0m[0;33m 0x51d5988[0m[0;33m 0x51fab38[0m[0;33m 0x519d9f8[0m[0;33m 0x53611a8[0m[0;33m 0x57a5ac8[0m[0;33m 0x57acf68[0m[0;33m 0x57ac708[0m[0;33m 0x57a7358[0m[0;33m 0x57a7d98[0m[0;33m 0x57a9138[0m[0;33m 0x57a9b28[0m[0;33m 0x57aa538[0m[0;33m 0x57ab598[0m[0;33m 0x57abe28[0m
[0;34m  |     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d62e8[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d62a0[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .data
[0;34m  |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6280[0m <[0;33mcol:10[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5808[0m[0;1;36m '__str'[0m [0;32m'const basic_string<_CharT, _Traits, _Alloc> &'[0m
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6308[0m <[0;33mcol:25[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5880[0m[0;1;36m '__pos2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6420[0m <[0;33mcol:33[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d5e78[0m[0;1;36m '__len'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x58d65c8[0m <[0;33mline:1410:7[0m, [0;33mline:1411:29[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x58d64e0[0m <[0;33mline:1410:11[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d64c8[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d64b0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6490[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d5ff0[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d65a8[0m <[0;33mline:1411:2[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d64f8[0m <[0;33mcol:2[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d5ff0[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d6578[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6518[0m <[0;33mcol:8[0m> [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x57463b8[0m[0;1;36m '_S_compare'[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6538[0m <[0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d5790[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6558[0m <[0;33mcol:25[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d58f8[0m[0;1;36m '__n2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58d6618[0m <[0;33mline:1412:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d6600[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d65e0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d5ff0[0m[0;1;36m '__r'[0m [0;32m'int'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58d6b48[0m parent 0x572a4a0 prev 0x57802d8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.tcc:1415:3[0m, [0;33mline:1428:5[0m> [0;33mline:1418:5[0m[0;1;36m compare[0m [0;32m'int (const _CharT *) const noexcept'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d6a78[0m <[0;33mcol:13[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __s[0m [0;32m'const _CharT *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d73c0[0m <[0;33mline:1419:5[0m, [0;33mline:1428:5[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x58d6c30[0m <[0;33mline:1420:37[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d6d28[0m <[0;33mline:1421:7[0m, [0;33mcol:44[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d6c48[0m <[0;33mcol:7[0m, [0;33mcol:43[0m> [0;33mcol:23[0m referenced[0;1;36m __size[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d6d08[0m <[0;33mcol:32[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d6cc0[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->size
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d6cb0[0m <[0;33mcol:32[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d6e80[0m <[0;33mline:1422:7[0m, [0;33mcol:57[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d6d50[0m <[0;33mcol:7[0m, [0;33mcol:56[0m> [0;33mcol:23[0m referenced[0;1;36m __osize[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d6e58[0m <[0;33mcol:33[0m, [0;33mcol:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d6df0[0m <[0;33mcol:33[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->length
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6e38[0m <[0;33mcol:53[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d6a78[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d6ff0[0m <[0;33mline:1423:7[0m, [0;33mcol:56[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d6ea8[0m <[0;33mcol:7[0m, [0;33mcol:55[0m> [0;33mcol:23[0m referenced[0;1;36m __len[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d6fc0[0m <[0;33mcol:31[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d6f30[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'min'[0;33m 0x521de98[0m[0;33m 0x521e8f8[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6f80[0m <[0;33mcol:40[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d6c48[0m[0;1;36m '__size'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d6fa0[0m <[0;33mcol:48[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d6d50[0m[0;1;36m '__osize'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d7210[0m <[0;33mline:1424:7[0m, [0;33mcol:60[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d7020[0m <[0;33mcol:7[0m, [0;33mcol:59[0m> [0;33mcol:11[0m referenced[0;1;36m __r[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d71d8[0m <[0;33mcol:17[0m, [0;33mcol:59[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d70c0[0m <[0;33mcol:17[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->compare
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d7178[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x58d7118[0m <[0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7198[0m <[0;33mcol:49[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d6a78[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d71b8[0m <[0;33mcol:54[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d6ea8[0m[0;1;36m '__len'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x58d7360[0m <[0;33mline:1425:7[0m, [0;33mline:1426:34[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x58d7278[0m <[0;33mline:1425:11[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d7260[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d7248[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7228[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7020[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d7340[0m <[0;33mline:1426:2[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7290[0m <[0;33mcol:2[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7020[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d7310[0m <[0;33mcol:8[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d72b0[0m <[0;33mcol:8[0m> [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x57463b8[0m[0;1;36m '_S_compare'[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d72d0[0m <[0;33mcol:19[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d6c48[0m[0;1;36m '__size'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d72f0[0m <[0;33mcol:27[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d6d50[0m[0;1;36m '__osize'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58d73b0[0m <[0;33mline:1427:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d7398[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7378[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7020[0m[0;1;36m '__r'[0m [0;32m'int'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58d79e0[0m parent 0x572a4a0 prev 0x57805b0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.tcc:1430:3[0m, [0;33mline:1444:5[0m> [0;33mline:1433:5[0m[0;1;36m compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type, const _CharT *) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d77d8[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __pos[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d7850[0m <[0;33mcol:30[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __n1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d78f8[0m <[0;33mcol:46[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __s[0m [0;32m'const _CharT *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d8428[0m <[0;33mline:1434:5[0m, [0;33mline:1444:5[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x58d7ad8[0m <[0;33mline:1435:37[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d7b70[0m <[0;33mline:1436:7[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d7af0[0m <[0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_check[0;33m 0x57442c8[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d7ae0[0m <[0;33mcol:7[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7b20[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d77d8[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x58d7b40[0m <[0;33mcol:23[0m> [0;32m'const char [22]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "basic_string::compare"[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d7c70[0m <[0;33mline:1437:7[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7ba0[0m <[0;33mcol:7[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d7850[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d7c40[0m <[0;33mcol:14[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d7bd0[0m <[0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_limit[0;33m 0x5744800[0m
[0;34m  |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d7bc0[0m <[0;33mcol:14[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7c00[0m <[0;33mcol:23[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d77d8[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7c20[0m <[0;33mcol:30[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d7850[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d7dd0[0m <[0;33mline:1438:7[0m, [0;33mcol:57[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d7ca0[0m <[0;33mcol:7[0m, [0;33mcol:56[0m> [0;33mcol:23[0m referenced[0;1;36m __osize[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d7da8[0m <[0;33mcol:33[0m, [0;33mcol:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d7d40[0m <[0;33mcol:33[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->length
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7d88[0m <[0;33mcol:53[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d78f8[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d7f40[0m <[0;33mline:1439:7[0m, [0;33mcol:54[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d7df8[0m <[0;33mcol:7[0m, [0;33mcol:53[0m> [0;33mcol:23[0m referenced[0;1;36m __len[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d7f10[0m <[0;33mcol:31[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d7e80[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'min'[0;33m 0x521de98[0m[0;33m 0x521e8f8[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7ed0[0m <[0;33mcol:40[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d7850[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d7ef0[0m <[0;33mcol:46[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7ca0[0m[0;1;36m '__osize'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d8278[0m <[0;33mline:1440:7[0m, [0;33mcol:68[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d7f70[0m <[0;33mcol:7[0m, [0;33mcol:67[0m> [0;33mcol:11[0m referenced[0;1;36m __r[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d8240[0m <[0;33mcol:17[0m, [0;33mcol:67[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d8010[0m <[0;33mcol:17[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->compare
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x58d81c8[0m <[0;33mcol:38[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d8108[0m <[0;33mcol:48[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x58c8768[0m[0;33m 0x58c7748[0m[0;33m 0x51d5988[0m[0;33m 0x51fab38[0m[0;33m 0x519d9f8[0m[0;33m 0x53611a8[0m[0;33m 0x57a5ac8[0m[0;33m 0x57acf68[0m[0;33m 0x57ac708[0m[0;33m 0x57a7358[0m[0;33m 0x57a7d98[0m[0;33m 0x57a9138[0m[0;33m 0x57a9b28[0m[0;33m 0x57aa538[0m[0;33m 0x57ab598[0m[0;33m 0x57abe28[0m
[0;34m  |     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d80c8[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x58d8068[0m <[0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d80e8[0m <[0;33mcol:50[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d77d8[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8200[0m <[0;33mcol:57[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d78f8[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8220[0m <[0;33mcol:62[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7df8[0m[0;1;36m '__len'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x58d83c8[0m <[0;33mline:1441:7[0m, [0;33mline:1442:32[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x58d82e0[0m <[0;33mline:1441:11[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d82c8[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d82b0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8290[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7f70[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d83a8[0m <[0;33mline:1442:2[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d82f8[0m <[0;33mcol:2[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7f70[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d8378[0m <[0;33mcol:8[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8318[0m <[0;33mcol:8[0m> [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x57463b8[0m[0;1;36m '_S_compare'[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8338[0m <[0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d7850[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8358[0m <[0;33mcol:25[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7ca0[0m[0;1;36m '__osize'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58d8418[0m <[0;33mline:1443:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d8400[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d83e0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d7f70[0m[0;1;36m '__r'[0m [0;32m'int'[0m

Dumping std::__cxx11::basic_string::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58d8ae0[0m parent 0x572a4a0 prev 0x5780930 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.tcc:1446:3[0m, [0;33mline:1460:5[0m> [0;33mline:1449:5[0m[0;1;36m compare[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type, const _CharT *, std::__cxx11::basic_string::size_type) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8848[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __pos[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d88c0[0m <[0;33mcol:30[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __n1[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8968[0m <[0;33mcol:46[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __s[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d89e0[0m <[0;33mline:1450:6[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __n2[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d93d8[0m <[0;33mline:1451:5[0m, [0;33mline:1460:5[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x58d8be0[0m <[0;33mline:1452:47[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d8c78[0m <[0;33mline:1453:7[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d8bf8[0m <[0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_check[0;33m 0x57442c8[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d8be8[0m <[0;33mcol:7[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8c28[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8848[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x58d8c48[0m <[0;33mcol:23[0m> [0;32m'const char [22]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "basic_string::compare"[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d8d78[0m <[0;33mline:1454:7[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8ca8[0m <[0;33mcol:7[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d88c0[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d8d48[0m <[0;33mcol:14[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x58d8cd8[0m <[0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_limit[0;33m 0x5744800[0m
[0;34m  |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58d8cc8[0m <[0;33mcol:14[0m> [0;32m'const basic_string<_CharT, _Traits, _Alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8d08[0m <[0;33mcol:23[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8848[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8d28[0m <[0;33mcol:30[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d88c0[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d8ef0[0m <[0;33mline:1455:7[0m, [0;33mcol:51[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d8da8[0m <[0;33mcol:7[0m, [0;33mcol:50[0m> [0;33mcol:23[0m referenced[0;1;36m __len[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d8ec0[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d8e30[0m <[0;33mcol:31[0m, [0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'min'[0;33m 0x521de98[0m[0;33m 0x521e8f8[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8e80[0m <[0;33mcol:40[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d88c0[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8ea0[0m <[0;33mcol:46[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d89e0[0m[0;1;36m '__n2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d9228[0m <[0;33mline:1456:7[0m, [0;33mcol:68[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x58d8f20[0m <[0;33mcol:7[0m, [0;33mcol:67[0m> [0;33mcol:11[0m referenced[0;1;36m __r[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d91f0[0m <[0;33mcol:17[0m, [0;33mcol:67[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58d8fc0[0m <[0;33mcol:17[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->compare
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x58d9178[0m <[0;33mcol:38[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d90b8[0m <[0;33mcol:48[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x58c8768[0m[0;33m 0x58c7748[0m[0;33m 0x51d5988[0m[0;33m 0x51fab38[0m[0;33m 0x519d9f8[0m[0;33m 0x53611a8[0m[0;33m 0x57a5ac8[0m[0;33m 0x57acf68[0m[0;33m 0x57ac708[0m[0;33m 0x57a7358[0m[0;33m 0x57a7d98[0m[0;33m 0x57a9138[0m[0;33m 0x57a9b28[0m[0;33m 0x57aa538[0m[0;33m 0x57ab598[0m[0;33m 0x57abe28[0m
[0;34m  |     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x58d9078[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x58d9018[0m <[0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d9098[0m <[0;33mcol:50[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8848[0m[0;1;36m '__pos'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d91b0[0m <[0;33mcol:57[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8968[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d91d0[0m <[0;33mcol:62[0m> [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d8da8[0m[0;1;36m '__len'[0m [0;32m'const std::__cxx11::basic_string::size_type':'const typename _Alloc_traits::size_type'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x58d9378[0m <[0;33mline:1457:7[0m, [0;33mline:1458:29[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x58d9290[0m <[0;33mline:1457:11[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d9278[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d9260[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d9240[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d8f20[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d9358[0m <[0;33mline:1458:2[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d92a8[0m <[0;33mcol:2[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d8f20[0m[0;1;36m '__r'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d9328[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d92c8[0m <[0;33mcol:8[0m> [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x57463b8[0m[0;1;36m '_S_compare'[0m [0;32m'int (std::__cxx11::basic_string::size_type, std::__cxx11::basic_string::size_type) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d92e8[0m <[0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d88c0[0m[0;1;36m '__n1'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d9308[0m <[0;33mcol:25[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d89e0[0m[0;1;36m '__n2'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58d93c8[0m <[0;33mline:1459:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58d93b0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d9390[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x58d8f20[0m[0;1;36m '__r'[0m [0;32m'int'[0m

Dumping std::__cxx11::collate::compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58f6d80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:699:7[0m, [0;33mline:702:62[0m> [0;33mline:700:7[0m[0;1;36m compare[0m [0;32m'int (const _CharT *, const _CharT *, const _CharT *, const _CharT *) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f6a98[0m <[0;33mcol:15[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __lo1[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f6b10[0m <[0;33mcol:36[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __hi1[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f6b88[0m <[0;33mline:701:8[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __lo2[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f6c00[0m <[0;33mcol:29[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __hi2[0m [0;32m'const _CharT *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58f8618[0m <[0;33mline:702:7[0m, [0;33mcol:62[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58f8608[0m <[0;33mcol:9[0m, [0;33mcol:59[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x58f85c8[0m <[0;33mcol:16[0m, [0;33mcol:59[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x58f8500[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->do_compare
[0;34m      | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x58f84f0[0m <[0;33mcol:16[0m> [0;32m'const collate<_CharT> *'[0m[0;36m[0m[0;36m[0m this
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58f8548[0m <[0;33mcol:33[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58f6a98[0m[0;1;36m '__lo1'[0m [0;32m'const _CharT *'[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58f8568[0m <[0;33mcol:40[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58f6b10[0m[0;1;36m '__hi1'[0m [0;32m'const _CharT *'[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58f8588[0m <[0;33mcol:47[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58f6b88[0m[0;1;36m '__lo2'[0m [0;32m'const _CharT *'[0m
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58f85a8[0m <[0;33mcol:54[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58f6c00[0m[0;1;36m '__hi2'[0m [0;32m'const _CharT *'[0m

Dumping std::__cxx11::collate::_M_compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58f74a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:737:7[0m, [0;33mline:738:60[0m> [0;33mcol:7[0m[0;1;36m _M_compare[0m [0;32m'int (const _CharT *, const _CharT *) const throw()'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f7310[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const _CharT *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f7388[0m <[0;33mcol:33[0m, [0;33mcol:45[0m> [0;33mcol:46[0m [0;32m'const _CharT *'[0m

Dumping std::__cxx11::collate::do_compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58f7bb0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:761:7[0m, [0;33mline:763:46[0m> [0;33mline:762:7[0m[0;1;36m do_compare[0m [0;32m'int (const _CharT *, const _CharT *, const _CharT *, const _CharT *) const'[0m virtual
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f7998[0m <[0;33mcol:18[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m __lo1[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f7a10[0m <[0;33mcol:39[0m, [0;33mcol:53[0m> [0;33mcol:53[0m[0;1;36m __hi1[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f7a88[0m <[0;33mline:763:4[0m, [0;33mcol:18[0m> [0;33mcol:18[0m[0;1;36m __lo2[0m [0;32m'const _CharT *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f7b00[0m <[0;33mcol:25[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __hi2[0m [0;32m'const _CharT *'[0m

Dumping std::__cxx11::collate<char>::_M_compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58fe548[0m parent 0x58f8bd8 prev 0x58fd468 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:796:3[0m, [0;33mline:798:69[0m> [0;33mcol:20[0m[0;1;36m _M_compare[0m [0;32m'int (const char *, const char *) const throw()'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58fe3b0[0m <[0;33mcol:31[0m, [0;33mcol:41[0m> [0;33mcol:42[0m [0;32m'const char *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58fe430[0m <[0;33mcol:44[0m, [0;33mcol:54[0m> [0;33mcol:55[0m [0;32m'const char *'[0m

Dumping std::__cxx11::collate<wchar_t>::_M_compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5900f38[0m parent 0x58fea38 prev 0x58ffe58 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:805:3[0m, [0;33mline:807:78[0m> [0;33mcol:23[0m[0;1;36m _M_compare[0m [0;32m'int (const wchar_t *, const wchar_t *) const throw()'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5900da0[0m <[0;33mcol:34[0m, [0;33mcol:47[0m> [0;33mcol:48[0m [0;32m'const wchar_t *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5900e20[0m <[0;33mcol:50[0m, [0;33mcol:63[0m> [0;33mcol:64[0m [0;32m'const wchar_t *'[0m

Dumping std::__cxx11::collate::_M_compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5909da8[0m parent 0x58f5f78 prev 0x58f74a8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.tcc:147:3[0m, [0;33mline:150:17[0m> [0;33mline:149:22[0m referenced[0;1;36m _M_compare[0m [0;32m'int (const _CharT *, const _CharT *) const throw()'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5909c48[0m <[0;33mcol:33[0m, [0;33mcol:45[0m> [0;33mcol:46[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5909cc0[0m <[0;33mcol:48[0m, [0;33mcol:60[0m> [0;33mcol:61[0m [0;32m'const _CharT *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5909ec8[0m <[0;33mline:150:5[0m, [0;33mcol:17[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5909eb8[0m <[0;33mcol:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5909e98[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::__cxx11::collate::do_compare:
[0;1;32mCXXMethodDecl[0m[0;33m 0x590a8d0[0m parent 0x58f5f78 prev 0x58f7bb0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.tcc:158:3[0m, [0;33mline:195:5[0m> [0;33mline:161:5[0m[0;1;36m do_compare[0m [0;32m'int (const _CharT *, const _CharT *, const _CharT *, const _CharT *) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x590a668[0m <[0;33mcol:16[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __lo1[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x590a6e0[0m <[0;33mcol:37[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m __hi1[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x590a758[0m <[0;33mline:162:9[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __lo2[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x590a7d0[0m <[0;33mcol:30[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __hi2[0m [0;32m'const _CharT *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x590bf90[0m <[0;33mline:163:5[0m, [0;33mline:195:5[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x590aad8[0m <[0;33mline:166:7[0m, [0;33mcol:44[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x590aa00[0m <[0;33mcol:7[0m, [0;33mcol:43[0m> [0;33mcol:25[0m referenced[0;1;36m __one[0m [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m callinit
[0;34m  |   `-[0m[0;1;35mParenListExpr[0m[0;33m 0x590aab0[0m <[0;33mcol:30[0m, [0;33mcol:43[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590a9d0[0m <[0;33mcol:31[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x590a668[0m[0;1;36m '__lo1'[0m [0;32m'const _CharT *'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590aa68[0m <[0;33mcol:38[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x590a6e0[0m[0;1;36m '__hi1'[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x590abf8[0m <[0;33mline:167:7[0m, [0;33mcol:44[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x590ab20[0m <[0;33mcol:7[0m, [0;33mcol:43[0m> [0;33mcol:25[0m referenced[0;1;36m __two[0m [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m callinit
[0;34m  |   `-[0m[0;1;35mParenListExpr[0m[0;33m 0x590abd0[0m <[0;33mcol:30[0m, [0;33mcol:43[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590aaf0[0m <[0;33mcol:31[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x590a758[0m[0;1;36m '__lo2'[0m [0;32m'const _CharT *'[0m
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590ab88[0m <[0;33mcol:38[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x590a7d0[0m[0;1;36m '__hi2'[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x590ad10[0m <[0;33mline:169:7[0m, [0;33mcol:40[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x590ac20[0m <[0;33mcol:7[0m, [0;33mcol:39[0m> [0;33mcol:21[0m referenced[0;1;36m __p[0m [0;32m'const _CharT *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x590acf0[0m <[0;33mcol:27[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x590aca8[0m <[0;33mcol:27[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .c_str
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590ac88[0m <[0;33mcol:27[0m> [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590aa00[0m[0;1;36m '__one'[0m [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x590afa8[0m <[0;33mline:170:7[0m, [0;33mcol:59[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x590ad38[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:21[0m referenced[0;1;36m __pend[0m [0;32m'const _CharT *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x590af70[0m <[0;33mcol:30[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x590aeb0[0m <[0;33mcol:43[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x51d5988[0m[0;33m 0x51fab38[0m[0;33m 0x519d9f8[0m[0;33m 0x53611a8[0m[0;33m 0x57a5ac8[0m[0;33m 0x58c7748[0m[0;33m 0x58c8768[0m[0;33m 0x57a7358[0m[0;33m 0x57a7d98[0m[0;33m 0x57a9138[0m[0;33m 0x57a9b28[0m[0;33m 0x57aa538[0m[0;33m 0x57ab598[0m[0;33m 0x57abe28[0m[0;33m 0x57ac708[0m[0;33m 0x57acf68[0m
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x590ae08[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x590adc0[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .data
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590ada0[0m <[0;33mcol:30[0m> [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590aa00[0m[0;1;36m '__one'[0m [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x590ae90[0m <[0;33mcol:45[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x590ae48[0m <[0;33mcol:45[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .length
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590ae28[0m <[0;33mcol:45[0m> [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590aa00[0m[0;1;36m '__one'[0m [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x590b0c0[0m <[0;33mline:171:7[0m, [0;33mcol:40[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x590afd0[0m <[0;33mcol:7[0m, [0;33mcol:39[0m> [0;33mcol:21[0m referenced[0;1;36m __q[0m [0;32m'const _CharT *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x590b0a0[0m <[0;33mcol:27[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x590b058[0m <[0;33mcol:27[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .c_str
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b038[0m <[0;33mcol:27[0m> [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ab20[0m[0;1;36m '__two'[0m [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x590b358[0m <[0;33mline:172:7[0m, [0;33mcol:59[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x590b0e8[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:21[0m referenced[0;1;36m __qend[0m [0;32m'const _CharT *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x590b320[0m <[0;33mcol:30[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x590b260[0m <[0;33mcol:43[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x51d5988[0m[0;33m 0x51fab38[0m[0;33m 0x519d9f8[0m[0;33m 0x53611a8[0m[0;33m 0x57a5ac8[0m[0;33m 0x58c7748[0m[0;33m 0x58c8768[0m[0;33m 0x57a7358[0m[0;33m 0x57a7d98[0m[0;33m 0x57a9138[0m[0;33m 0x57a9b28[0m[0;33m 0x57aa538[0m[0;33m 0x57ab598[0m[0;33m 0x57abe28[0m[0;33m 0x57ac708[0m[0;33m 0x57acf68[0m
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x590b1b8[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x590b170[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .data
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b150[0m <[0;33mcol:30[0m> [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ab20[0m[0;1;36m '__two'[0m [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x590b240[0m <[0;33mcol:45[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x590b1f8[0m <[0;33mcol:45[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .length
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b1d8[0m <[0;33mcol:45[0m> [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ab20[0m[0;1;36m '__two'[0m [0;32m'const std::__cxx11::collate::string_type':'const basic_string<_CharT>'[0m
[0;34m  `-[0m[0;1;35mForStmt[0m[0;33m 0x590bf58[0m <[0;33mline:177:7[0m, [0;33mline:194:2[0m>
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x590bf10[0m <[0;33mline:178:2[0m, [0;33mline:194:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x590b4a0[0m <[0;33mline:179:4[0m, [0;33mcol:42[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x590b388[0m <[0;33mcol:4[0m, [0;33mcol:41[0m> [0;33mcol:14[0m referenced[0;1;36m __res[0m [0;32m'const int'[0m cinit
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x590b470[0m <[0;33mcol:22[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x590b400[0m <[0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_compare[0;33m 0x5909da8[0m
[0;34m      |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x590b3f0[0m <[0;33mcol:22[0m> [0;32m'const collate<_CharT> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b430[0m <[0;33mcol:33[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ac20[0m[0;1;36m '__p'[0m [0;32m'const _CharT *'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b450[0m <[0;33mcol:38[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590afd0[0m[0;1;36m '__q'[0m [0;32m'const _CharT *'[0m
[0;34m      |-[0m[0;1;35mIfStmt[0m[0;33m 0x590b550[0m <[0;33mline:180:4[0m, [0;33mline:181:13[0m>
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x590b4f0[0m <[0;33mline:180:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x590b4d8[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b4b8[0m <[0;33mcol:8[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590b388[0m[0;1;36m '__res'[0m [0;32m'const int'[0m
[0;34m      | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x590b540[0m <[0;33mline:181:6[0m, [0;33mcol:13[0m>
[0;34m      |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x590b528[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b508[0m <[0;33mcol:13[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590b388[0m[0;1;36m '__res'[0m [0;32m'const int'[0m
[0;34m      |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x590b6e0[0m <[0;33mline:183:4[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b568[0m <[0;33mcol:4[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ac20[0m[0;1;36m '__p'[0m [0;32m'const _CharT *'[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x590b6b8[0m <[0;33mcol:11[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x590b650[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->length
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b698[0m <[0;33mcol:39[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ac20[0m[0;1;36m '__p'[0m [0;32m'const _CharT *'[0m
[0;34m      |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x590b880[0m <[0;33mline:184:4[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b710[0m <[0;33mcol:4[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590afd0[0m[0;1;36m '__q'[0m [0;32m'const _CharT *'[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x590b858[0m <[0;33mcol:11[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x590b7f0[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->length
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b838[0m <[0;33mcol:39[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590afd0[0m[0;1;36m '__q'[0m [0;32m'const _CharT *'[0m
[0;34m      |-[0m[0;1;35mIfStmt[0m[0;33m 0x590be38[0m <[0;33mline:185:4[0m, [0;33mline:190:13[0m> has_else
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x590baf0[0m <[0;33mline:185:8[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m      | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x590b998[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x590b8f0[0m <[0;33mcol:12[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x51aa988[0m[0;33m 0x51d03e8[0m[0;33m 0x51d28d8[0m[0;33m 0x51f5538[0m[0;33m 0x51f5be8[0m[0;33m 0x5291f70[0m[0;33m 0x5293f00[0m[0;33m 0x533ebd8[0m[0;33m 0x55f3ad8[0m[0;33m 0x57ad830[0m[0;33m 0x57ae4e0[0m[0;33m 0x57aeff8[0m[0;33m 0x57af798[0m
[0;34m      | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b8b0[0m <[0;33mcol:8[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ac20[0m[0;1;36m '__p'[0m [0;32m'const _CharT *'[0m
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b8d0[0m <[0;33mcol:15[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ad38[0m[0;1;36m '__pend'[0m [0;32m'const _CharT *'[0m
[0;34m      | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x590bab8[0m <[0;33mcol:25[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x590ba10[0m <[0;33mcol:29[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x51aa988[0m[0;33m 0x51d03e8[0m[0;33m 0x51d28d8[0m[0;33m 0x51f5538[0m[0;33m 0x51f5be8[0m[0;33m 0x5291f70[0m[0;33m 0x5293f00[0m[0;33m 0x533ebd8[0m[0;33m 0x55f3ad8[0m[0;33m 0x57ad830[0m[0;33m 0x57ae4e0[0m[0;33m 0x57aeff8[0m[0;33m 0x57af798[0m
[0;34m      | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b9d0[0m <[0;33mcol:25[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590afd0[0m[0;1;36m '__q'[0m [0;32m'const _CharT *'[0m
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590b9f0[0m <[0;33mcol:32[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590b0e8[0m[0;1;36m '__qend'[0m [0;32m'const _CharT *'[0m
[0;34m      | |-[0m[0;1;35mReturnStmt[0m[0;33m 0x590bb30[0m <[0;33mline:186:6[0m, [0;33mcol:13[0m>
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x590bb10[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | `-[0m[0;1;35mIfStmt[0m[0;33m 0x590be10[0m <[0;33mline:187:9[0m, [0;33mline:190:13[0m> has_else
[0;34m      |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x590bc28[0m <[0;33mline:187:13[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x590bb80[0m <[0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x51aa988[0m[0;33m 0x51d03e8[0m[0;33m 0x51d28d8[0m[0;33m 0x51f5538[0m[0;33m 0x51f5be8[0m[0;33m 0x5291f70[0m[0;33m 0x5293f00[0m[0;33m 0x533ebd8[0m[0;33m 0x55f3ad8[0m[0;33m 0x57ad830[0m[0;33m 0x57ae4e0[0m[0;33m 0x57aeff8[0m[0;33m 0x57af798[0m
[0;34m      |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590bb40[0m <[0;33mcol:13[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ac20[0m[0;1;36m '__p'[0m [0;32m'const _CharT *'[0m
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590bb60[0m <[0;33mcol:20[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ad38[0m[0;1;36m '__pend'[0m [0;32m'const _CharT *'[0m
[0;34m      |   |-[0m[0;1;35mReturnStmt[0m[0;33m 0x590bc98[0m <[0;33mline:188:6[0m, [0;33mcol:14[0m>
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x590bc80[0m <[0;33mcol:13[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m      |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x590bc60[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x590bdf8[0m <[0;33mline:189:9[0m, [0;33mline:190:13[0m>
[0;34m      |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x590bd90[0m <[0;33mline:189:13[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x590bce8[0m <[0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x51aa988[0m[0;33m 0x51d03e8[0m[0;33m 0x51d28d8[0m[0;33m 0x51f5538[0m[0;33m 0x51f5be8[0m[0;33m 0x5291f70[0m[0;33m 0x5293f00[0m[0;33m 0x533ebd8[0m[0;33m 0x55f3ad8[0m[0;33m 0x57ad830[0m[0;33m 0x57ae4e0[0m[0;33m 0x57aeff8[0m[0;33m 0x57af798[0m
[0;34m      |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590bca8[0m <[0;33mcol:13[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590afd0[0m[0;1;36m '__q'[0m [0;32m'const _CharT *'[0m
[0;34m      |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590bcc8[0m <[0;33mcol:20[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590b0e8[0m[0;1;36m '__qend'[0m [0;32m'const _CharT *'[0m
[0;34m      |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x590bde8[0m <[0;33mline:190:6[0m, [0;33mcol:13[0m>
[0;34m      |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x590bdc8[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x590bea0[0m <[0;33mline:192:4[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590be60[0m <[0;33mcol:4[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590ac20[0m[0;1;36m '__p'[0m [0;32m'const _CharT *'[0m
[0;34m      `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x590bef8[0m <[0;33mline:193:4[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x590beb8[0m <[0;33mcol:4[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x590afd0[0m[0;1;36m '__q'[0m [0;32m'const _CharT *'[0m

Dumping std::lexicographical_compare:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5bb8b78[0m prev 0x524f248 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:674:3[0m, [0;33mline:676:63[0m> [0;33mcol:5[0m[0;1;36m lexicographical_compare[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5bb8768[0m <[0;33mline:674:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _IIter1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5bb87d8[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _IIter2[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5bb8ad8[0m prev 0x524f1a8 <[0;33mline:675:5[0m, [0;33mline:676:63[0m> [0;33mcol:5[0m[0;1;36m lexicographical_compare[0m [0;32m'bool (_IIter1, _IIter1, _IIter2, _IIter2)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb8878[0m <[0;33mcol:29[0m> [0;33mcol:36[0m [0;32m'_IIter1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb88f0[0m <[0;33mcol:38[0m> [0;33mcol:45[0m [0;32m'_IIter1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb8968[0m <[0;33mcol:47[0m> [0;33mcol:54[0m [0;32m'_IIter2'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb89e0[0m <[0;33mcol:56[0m> [0;33mcol:63[0m [0;32m'_IIter2'[0m

Dumping std::lexicographical_compare:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5bb9108[0m prev 0x524fc10 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:678:3[0m, [0;33mline:680:73[0m> [0;33mcol:5[0m[0;1;36m lexicographical_compare[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5bb8bf0[0m <[0;33mline:678:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _IIter1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5bb8c68[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _IIter2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5bb8cd8[0m <[0;33mcol:48[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced typename depth 0 index 2[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5bb9068[0m prev 0x524fb70 <[0;33mline:679:5[0m, [0;33mline:680:73[0m> [0;33mcol:5[0m[0;1;36m lexicographical_compare[0m [0;32m'bool (_IIter1, _IIter1, _IIter2, _IIter2, _Compare)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb8d80[0m <[0;33mcol:29[0m> [0;33mcol:36[0m [0;32m'_IIter1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb8df8[0m <[0;33mcol:38[0m> [0;33mcol:45[0m [0;32m'_IIter1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb8e70[0m <[0;33mcol:47[0m> [0;33mcol:54[0m [0;32m'_IIter2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb8ee8[0m <[0;33mcol:56[0m> [0;33mcol:63[0m [0;32m'_IIter2'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bb8f60[0m <[0;33mcol:65[0m> [0;33mcol:73[0m [0;32m'_Compare'[0m

Dumping compare:
[0;1;32mFunctionDecl[0m[0;33m 0x5d0b980[0m prev 0x53f3cf0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:61:1[0m, [0;33mline:66:1[0m> [0;33mline:61:5[0m used[0;1;36m compare[0m [0;32m'int (const void *, const void *)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d0b860[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m used[0;1;36m a[0m [0;32m'const void *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d0b8e0[0m <[0;33mcol:29[0m, [0;33mcol:41[0m> [0;33mcol:41[0m used[0;1;36m b[0m [0;32m'const void *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d0c030[0m <[0;33mline:62:1[0m, [0;33mline:66:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5d0bb18[0m <[0;33mline:63:5[0m, [0;33mcol:37[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5d0ba40[0m <[0;33mcol:5[0m, [0;33mcol:36[0m> [0;33mcol:18[0m used[0;1;36m x[0m [0;32m'const Pont *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5d0baf0[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bad8[0m <[0;33mcol:36[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d0baa8[0m <[0;33mcol:36[0m> [0;32m'const void *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d0b860[0m[0;1;36m 'a'[0m [0;32m'const void *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5d0bc18[0m <[0;33mline:64:5[0m, [0;33mcol:37[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5d0bb40[0m <[0;33mcol:5[0m, [0;33mcol:36[0m> [0;33mcol:18[0m used[0;1;36m y[0m [0;32m'const Pont *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5d0bbf0[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bbd8[0m <[0;33mcol:36[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d0bba8[0m <[0;33mcol:36[0m> [0;32m'const void *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d0b8e0[0m[0;1;36m 'b'[0m [0;32m'const void *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d0c020[0m <[0;33mline:65:5[0m, [0;33mcol:53[0m>
[0;34m    `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5d0c008[0m <[0;33mcol:12[0m, [0;33mcol:53[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bff0[0m <[0;33mcol:12[0m, [0;33mcol:53[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingToIntegral[0m>
[0;34m        `-[0m[0;1;35mParenExpr[0m[0;33m 0x5d0bfd0[0m <[0;33mcol:12[0m, [0;33mcol:53[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d0bfb0[0m <[0;33mcol:13[0m, [0;33mcol:52[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m            |-[0m[0;1;35mCallExpr[0m[0;33m 0x5d0bd90[0m <[0;33mcol:13[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m            | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bd78[0m <[0;33mcol:13[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d0bd58[0m <[0;33mcol:13[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5ce2280[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m            | |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5d0bdd8[0m <[0;33mcol:18[0m, [0;33mcol:27[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m            | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bdc0[0m <[0;33mcol:18[0m, [0;33mcol:27[0m> [0;32m'const Pont'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            | |   `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x5d0bcc8[0m <[0;33mcol:18[0m, [0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m            | |     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5d0bc88[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m            | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5d0bca8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m            | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5d0bd40[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m            |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bd28[0m <[0;33mcol:30[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d0bd08[0m <[0;33mcol:30[0m> [0;32m'const Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d0ba40[0m[0;1;36m 'x'[0m [0;32m'const Pont *'[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x5d0bf50[0m <[0;33mcol:35[0m, [0;33mcol:52[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m              |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bf38[0m <[0;33mcol:35[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d0bf18[0m <[0;33mcol:35[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5ce2280[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m              |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5d0bf98[0m <[0;33mcol:40[0m, [0;33mcol:48[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bf80[0m <[0;33mcol:40[0m, [0;33mcol:48[0m> [0;32m'const Pont'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m              |   `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x5d0be88[0m <[0;33mcol:40[0m, [0;33mcol:48[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m              |     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5d0be48[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m              |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5d0be68[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m              `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5d0bf00[0m <[0;33mcol:50[0m, [0;33mcol:51[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0bee8[0m <[0;33mcol:51[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d0bec8[0m <[0;33mcol:51[0m> [0;32m'const Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d0bb40[0m[0;1;36m 'y'[0m [0;32m'const Pont *'[0m

Dumping compare2:
[0;1;32mFunctionDecl[0m[0;33m 0x5d0c190[0m prev 0x53f3ed8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:68:1[0m, [0;33mline:71:1[0m> [0;33mline:68:5[0m used[0;1;36m compare2[0m [0;32m'int (const void *, const void *)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d0c070[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'const void *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d0c0f0[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;33mcol:42[0m used[0;1;36m b[0m [0;32m'const void *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d0c3d8[0m <[0;33mline:69:1[0m, [0;33mline:71:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d0c3c8[0m <[0;33mline:70:5[0m, [0;33mcol:38[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0c3b0[0m <[0;33mcol:12[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingToIntegral[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d0c390[0m <[0;33mcol:12[0m, [0;33mcol:38[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0c360[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5d0c2b8[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m        |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5d0c290[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0c278[0m <[0;33mcol:23[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d0c240[0m <[0;33mcol:23[0m> [0;32m'const void *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d0c070[0m[0;1;36m 'a'[0m [0;32m'const void *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0c378[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5d0c348[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m            `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5d0c320[0m <[0;33mcol:28[0m, [0;33mcol:38[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d0c308[0m <[0;33mcol:38[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d0c2d0[0m <[0;33mcol:38[0m> [0;32m'const void *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d0c0f0[0m[0;1;36m 'b'[0m [0;32m'const void *'[0m

Dumping compare2:
[0;1;32mFunctionDecl[0m[0;33m 0x5554048[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:18:1[0m, [0;33mcol:42[0m> [0;33mcol:5[0m used[0;1;36m compare2[0m [0;32m'int (const void *, const void *)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5553f28[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'const void *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5553fa8[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;33mcol:42[0m [0;32m'const void *'[0m

Dumping compare2:
[0;1;32mFunctionDecl[0m[0;33m 0x5e6e5c0[0m prev 0x5554048 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:68:1[0m, [0;33mline:71:1[0m> [0;33mline:68:5[0m used[0;1;36m compare2[0m [0;32m'int (const void *, const void *)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e6e4a0[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'const void *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e6e520[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;33mcol:42[0m used[0;1;36m b[0m [0;32m'const void *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5e6e808[0m <[0;33mline:69:1[0m, [0;33mline:71:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5e6e7f8[0m <[0;33mline:70:5[0m, [0;33mcol:38[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e6e7e0[0m <[0;33mcol:12[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mFloatingToIntegral[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5e6e7c0[0m <[0;33mcol:12[0m, [0;33mcol:38[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e6e790[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5e6e6e8[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m        |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5e6e6c0[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e6e6a8[0m <[0;33mcol:23[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e6e670[0m <[0;33mcol:23[0m> [0;32m'const void *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e6e4a0[0m[0;1;36m 'a'[0m [0;32m'const void *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e6e7a8[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5e6e778[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m            `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5e6e750[0m <[0;33mcol:28[0m, [0;33mcol:38[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e6e738[0m <[0;33mcol:38[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e6e700[0m <[0;33mcol:38[0m> [0;32m'const void *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e6e520[0m[0;1;36m 'b'[0m [0;32m'const void *'[0m

Dumping myfunction:
[0;1;32mFunctionDecl[0m[0;33m 0x6abc168[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:14:1[0m, [0;33mcol:44[0m> [0;33mcol:6[0m used[0;1;36m myfunction[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6abc020[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:30[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6abc098[0m <[0;33mcol:32[0m, [0;33mcol:43[0m> [0;33mcol:44[0m [0;32m'const Pont &'[0m

Dumping myfunction2:
[0;1;32mFunctionDecl[0m[0;33m 0x6abc338[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:15:1[0m, [0;33mcol:45[0m> [0;33mcol:6[0m used[0;1;36m myfunction2[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6abc228[0m <[0;33mcol:19[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6abc2a0[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'const Pont &'[0m

Dumping myfunction:
[0;1;32mFunctionDecl[0m[0;33m 0x73d6a70[0m prev 0x6abc168 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:74:1[0m, [0;33mline:77:1[0m> [0;33mline:74:6[0m used[0;1;36m myfunction[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d6960[0m <[0;33mcol:18[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d69d8[0m <[0;33mcol:33[0m, [0;33mcol:47[0m> [0;33mcol:47[0m used[0;1;36m b[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73d6c50[0m <[0;33mline:75:1[0m, [0;33mline:77:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x73d6c40[0m <[0;33mline:76:5[0m, [0;33mcol:30[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x73d6c20[0m <[0;33mcol:12[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73d6c00[0m <[0;33mcol:13[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m        |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73d6b70[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73d6b40[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x6662480[0m
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d6b20[0m <[0;33mcol:13[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73d6960[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m        `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73d6be0[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73d6bb0[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x6662480[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d6b90[0m <[0;33mcol:22[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73d69d8[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m

Dumping myfunction2:
[0;1;32mFunctionDecl[0m[0;33m 0x73d6d88[0m prev 0x6abc338 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:79:1[0m, [0;33mline:82:1[0m> [0;33mline:79:6[0m used[0;1;36m myfunction2[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d6c78[0m <[0;33mcol:19[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73d6cf0[0m <[0;33mcol:34[0m, [0;33mcol:48[0m> [0;33mcol:48[0m used[0;1;36m b[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73d6f68[0m <[0;33mline:80:1[0m, [0;33mline:82:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x73d6f58[0m <[0;33mline:81:5[0m, [0;33mcol:30[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x73d6f38[0m <[0;33mcol:12[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73d6f18[0m <[0;33mcol:13[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m        |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73d6e88[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73d6e58[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x6662548[0m
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d6e38[0m <[0;33mcol:13[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73d6c78[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m        `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73d6ef8[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73d6ec8[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x6662548[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73d6ea8[0m <[0;33mcol:22[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x73d6cf0[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m

Dumping myfunction2:
[0;1;32mFunctionDecl[0m[0;33m 0x53c8888[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:15:1[0m, [0;33mcol:45[0m> [0;33mcol:6[0m used[0;1;36m myfunction2[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53c8778[0m <[0;33mcol:19[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x53c87f0[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'const Pont &'[0m

Dumping myfunction2:
[0;1;32mFunctionDecl[0m[0;33m 0x5ce43f8[0m prev 0x53c8888 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:79:1[0m, [0;33mline:82:1[0m> [0;33mline:79:6[0m used[0;1;36m myfunction2[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ce42e8[0m <[0;33mcol:19[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ce4360[0m <[0;33mcol:34[0m, [0;33mcol:48[0m> [0;33mcol:48[0m used[0;1;36m b[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5ce45d8[0m <[0;33mline:80:1[0m, [0;33mline:82:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5ce45c8[0m <[0;33mline:81:5[0m, [0;33mcol:30[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x5ce45a8[0m <[0;33mcol:12[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ce4588[0m <[0;33mcol:13[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m        |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5ce44f8[0m <[0;33mcol:13[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5ce44c8[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x4f70548[0m
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ce44a8[0m <[0;33mcol:13[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ce42e8[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m        `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5ce4568[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5ce4538[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x4f70548[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ce4518[0m <[0;33mcol:22[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ce4360[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m

Dumping rendez:
[0;1;32mFunctionDecl[0m[0;33m 0x5fdd908[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:12:1[0m, [0;33mcol:27[0m> [0;33mcol:6[0m[0;1;36m rendez[0m [0;32m'void (vector<Pont>)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fdd810[0m <[0;33mcol:14[0m, [0;33mcol:25[0m> [0;33mcol:27[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m

Dumping rendez2:
[0;1;32mFunctionDecl[0m[0;33m 0x5fddbe8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:13:1[0m, [0;33mcol:28[0m> [0;33mcol:6[0m[0;1;36m rendez2[0m [0;32m'void (vector<Pont>)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fddb20[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:28[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m

Dumping rendez:
[0;1;32mFunctionDecl[0m[0;33m 0x68f9518[0m prev 0x5fdd908 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:84:1[0m, [0;33mline:88:1[0m> [0;33mline:84:6[0m[0;1;36m rendez[0m [0;32m'void (vector<Pont>)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x68f9450[0m <[0;33mcol:14[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m pontok[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6901290[0m <[0;33mline:85:1[0m, [0;33mline:88:1[0m>
[0;34m  `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6901278[0m <[0;33mline:86:5[0m, [0;33mcol:48[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x68fff70[0m <[0;33mcol:5[0m, [0;33mcol:48[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68fff58[0m <[0;33mcol:5[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68ffed0[0m <[0;33mcol:5[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x68ffda8[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x68b9ff8[0m[0;1;36m 'sort'[0m)
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x69011b0[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6901068[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x68f96c0[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x68f9690[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x68e1eb0[0m
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68f9610[0m <[0;33mcol:10[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x68f9450[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6901230[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6901218[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x68ff9c0[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x68ff990[0m <[0;33mcol:25[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x68e20b8[0m
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68ff910[0m <[0;33mcol:25[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x68f9450[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6901260[0m <[0;33mcol:38[0m> [0;32m'bool (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68ff9e0[0m <[0;33mcol:38[0m> [0;32m'bool (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x68f8dd0[0m[0;1;36m 'myfunction'[0m [0;32m'bool (const Pont &, const Pont &)'[0m

Dumping rendez2:
[0;1;32mFunctionDecl[0m[0;33m 0x6943148[0m prev 0x5fddbe8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:159:1[0m, [0;33mline:163:1[0m> [0;33mline:159:6[0m[0;1;36m rendez2[0m [0;32m'void (vector<Pont>)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6943080[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m pontok[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6943630[0m <[0;33mline:160:1[0m, [0;33mline:163:1[0m>
[0;34m  `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6943618[0m <[0;33mline:161:5[0m, [0;33mcol:49[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x69434c8[0m <[0;33mcol:5[0m, [0;33mcol:49[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69434b0[0m <[0;33mcol:5[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6943488[0m <[0;33mcol:5[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x68ffda8[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x68b9ff8[0m[0;1;36m 'sort'[0m)
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6943550[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6943538[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x69432f0[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x69432c0[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x68e1eb0[0m
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6943240[0m <[0;33mcol:10[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6943080[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x69435d0[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x69435b8[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x69433c0[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6943390[0m <[0;33mcol:25[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x68e20b8[0m
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6943310[0m <[0;33mcol:25[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6943080[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6943600[0m <[0;33mcol:38[0m> [0;32m'bool (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69433e0[0m <[0;33mcol:38[0m> [0;32m'bool (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x68f90e8[0m[0;1;36m 'myfunction2'[0m [0;32m'bool (const Pont &, const Pont &)'[0m

Dumping kiir:
[0;1;32mFunctionDecl[0m[0;33m 0x6395308[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:16:1[0m, [0;33mcol:24[0m> [0;33mcol:6[0m[0;1;36m kiir[0m [0;32m'void (vector<Pont>)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6395240[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:24[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m

Dumping kiir:
[0;1;32mFunctionDecl[0m[0;33m 0x6cbab78[0m prev 0x6395308 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:90:1[0m, [0;33mline:97:1[0m> [0;33mline:90:6[0m[0;1;36m kiir[0m [0;32m'void (vector<Pont>)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cbaab0[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m pontok[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd23e0[0m <[0;33mline:91:1[0m, [0;33mline:97:1[0m>
[0;34m  |-[0m[0;1;35mCXXForRangeStmt[0m[0;33m 0x6cbd4b0[0m <[0;33mline:92:5[0m, [0;33mline:95:5[0m>
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6cbaf20[0m <[0;33mline:92:21[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6cbad38[0m <[0;33mcol:21[0m> [0;33mcol:21[0m implicit used[0;1;36m __range1[0m [0;32m'std::vector<Pont, std::allocator<Pont> > &'[0m cinit
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbac20[0m <[0;33mcol:21[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6cbaab0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6cbb420[0m <[0;33mcol:19[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6cbaf88[0m <[0;33mcol:19[0m> [0;33mcol:19[0m implicit used[0;1;36m __begin1[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m cinit
[0;34m  | |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6cbb240[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cbb210[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m  | |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6cbb1f8[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  | |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6cbb0f8[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6cbb0c8[0m <[0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x6c99940[0m
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbaf38[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cbad38[0m[0;1;36m '__range1'[0m [0;32m'std::vector<Pont, std::allocator<Pont> > &'[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6cbb438[0m <[0;33mcol:19[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6cbb000[0m <[0;33mcol:19[0m> [0;33mcol:19[0m implicit used[0;1;36m __end1[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m cinit
[0;34m  | |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6cbb408[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6cbb3d8[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m  | |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6cbb3c0[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  | |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6cbb2e8[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6cbb2b8[0m <[0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x6c99b48[0m
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbaf58[0m <[0;33mcol:19[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cbad38[0m[0;1;36m '__range1'[0m [0;32m'std::vector<Pont, std::allocator<Pont> > &'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cbd0f0[0m <[0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbd0d8[0m <[0;33mcol:19[0m> [0;32m'bool (*)(const __normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &, const __normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbd060[0m <[0;33mcol:19[0m> [0;32m'bool (const __normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &, const __normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6cbcee0[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &, const __normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbd030[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb450[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cbaf88[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbd048[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbb470[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cbb000[0m[0;1;36m '__end1'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cbd210[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbd1f8[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbd178[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6cb80b0[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &() noexcept'[0m
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbd128[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cbaf88[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6cbace0[0m <[0;33mcol:10[0m, [0;33mcol:27[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6cbac78[0m <[0;33mcol:10[0m, [0;33mcol:19[0m> [0;33mcol:17[0m used[0;1;36m v[0m [0;32m'Pont &'[0m cinit
[0;34m  | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cbd330[0m <[0;33mcol:19[0m> [0;32m'Pont':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbd318[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbd2a0[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6cb7e00[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >::reference () const noexcept'[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cbd288[0m <[0;33mcol:19[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbd240[0m <[0;33mcol:19[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cbaf88[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cd1048[0m <[0;33mline:93:5[0m, [0;33mline:95:5[0m>
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cd1010[0m <[0;33mline:94:9[0m, [0;33mcol:54[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd0ff8[0m <[0;33mcol:52[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd0f78[0m <[0;33mcol:52[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a7b578[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cd05d8[0m <[0;33mcol:9[0m, [0;33mcol:48[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd05c0[0m <[0;33mcol:46[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd05a0[0m <[0;33mcol:46[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a85cf8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6ccf7f0[0m <[0;33mcol:9[0m, [0;33mcol:45[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ccf7d8[0m <[0;33mcol:36[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ccf7b8[0m <[0;33mcol:36[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a7c4d8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  |     | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cce998[0m <[0;33mcol:9[0m, [0;33mcol:31[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cce980[0m <[0;33mcol:29[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cce960[0m <[0;33mcol:29[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a85cf8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cccd10[0m <[0;33mcol:9[0m, [0;33mcol:28[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ccccf8[0m <[0;33mcol:19[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cccc78[0m <[0;33mcol:19[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a7c4d8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  |     | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6ccafe0[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ccafc8[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ccaf48[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a85cf8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     | | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cbd510[0m <[0;33mcol:9[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b19d70[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |     | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ccaf30[0m <[0;33mcol:15[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6cbd530[0m <[0;33mcol:15[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "( "[0m
[0;34m  |     | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ccb068[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ccb038[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5f3c480[0m
[0;34m  |     | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ccb088[0m <[0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ccb018[0m <[0;33mcol:21[0m> [0;32m'Pont':'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cbac78[0m[0;1;36m 'v'[0m [0;32m'Pont &'[0m
[0;34m  |     | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cce948[0m <[0;33mcol:31[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6cccd48[0m <[0;33mcol:31[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " , "[0m
[0;34m  |     | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6ccea20[0m <[0;33mcol:38[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6cce9f0[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5f3c548[0m
[0;34m  |     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ccea40[0m <[0;33mcol:38[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cce9d0[0m <[0;33mcol:38[0m> [0;32m'Pont':'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cbac78[0m[0;1;36m 'v'[0m [0;32m'Pont &'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd0588[0m <[0;33mcol:48[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6ccf828[0m <[0;33mcol:48[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " )"[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd0f60[0m <[0;33mcol:54[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd0f38[0m <[0;33mcol:54[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a818b8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6a5d688[0m[0;1;36m 'endl'[0m)
[0;34m  `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cd23a8[0m <[0;33mline:96:5[0m, [0;33mcol:17[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd2390[0m <[0;33mcol:15[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd2370[0m <[0;33mcol:15[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a7b578[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cd19f8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd19e0[0m <[0;33mcol:9[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd19c0[0m <[0;33mcol:9[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a7b578[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd1060[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b19d70[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd19a8[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd1980[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a818b8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6a5d688[0m[0;1;36m 'endl'[0m)
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cd2358[0m <[0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cd2330[0m <[0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a818b8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6a5d688[0m[0;1;36m 'endl'[0m)

Dumping legtavolabbiak:
[0;1;32mFunctionDecl[0m[0;33m 0x6119cf8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:19:1[0m, [0;33mcol:34[0m> [0;33mcol:6[0m[0;1;36m legtavolabbiak[0m [0;32m'void (vector<Pont>)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6119c30[0m <[0;33mcol:22[0m, [0;33mcol:33[0m> [0;33mcol:34[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m

Dumping legtavolabbiak:
[0;1;32mFunctionDecl[0m[0;33m 0x6a549b8[0m prev 0x6119cf8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:99:1[0m, [0;33mline:121:1[0m> [0;33mline:99:6[0m[0;1;36m legtavolabbiak[0m [0;32m'void (vector<Pont>)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a548f0[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m pontok[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6a61500[0m <[0;33mline:100:1[0m, [0;33mline:121:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6a54be8[0m <[0;33mline:102:5[0m, [0;33mcol:52[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6a54a78[0m <[0;33mcol:5[0m, [0;33mcol:51[0m> [0;33mcol:14[0m used[0;1;36m tavolsagok[0m [0;32m'double *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x6a54ba8[0m <[0;33mcol:27[0m, [0;33mcol:51[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x5faa730[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(std::size_t)'[0m
[0;34m  |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a54b30[0m <[0;33mcol:38[0m, [0;33mcol:50[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a54b00[0m <[0;33mcol:38[0m, [0;33mcol:45[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6a1c660[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a54b78[0m <[0;33mcol:38[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54ae0[0m <[0;33mcol:38[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6a55188[0m <[0;33mline:103:5[0m, [0;33mline:106:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6a54ca0[0m <[0;33mline:103:10[0m, [0;33mcol:20[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6a54c18[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a54c80[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a54d90[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a54d78[0m <[0;33mcol:22[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a54d60[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54cb8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a54c18[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a54d28[0m <[0;33mcol:24[0m, [0;33mcol:36[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a54cf8[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6a1c660[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a54d48[0m <[0;33mcol:24[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54cd8[0m <[0;33mcol:24[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6a54dd0[0m <[0;33mcol:39[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54db0[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a54c18[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6a55170[0m <[0;33mline:104:5[0m, [0;33mline:106:5[0m>
[0;34m  |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6a55158[0m <[0;33mline:105:9[0m, [0;33mcol:49[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a55138[0m <[0;33mcol:9[0m, [0;33mcol:49[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6a54e58[0m <[0;33mcol:9[0m, [0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a54e28[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54de8[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a54a78[0m[0;1;36m 'tavolsagok'[0m [0;32m'double *'[0m
[0;34m  |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a54e40[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54e08[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a54c18[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6a550c0[0m <[0;33mcol:25[0m, [0;33mcol:49[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a550a8[0m <[0;33mcol:25[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55088[0m <[0;33mcol:25[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a08790[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |         |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6a55108[0m <[0;33mcol:30[0m, [0;33mcol:38[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a550f0[0m <[0;33mcol:30[0m, [0;33mcol:38[0m> [0;32m'const Pont'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         |   `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x6a54f10[0m <[0;33mcol:30[0m, [0;33mcol:38[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m  |         |     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a54ed0[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |         |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a54ef0[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55120[0m <[0;33mcol:40[0m, [0;33mcol:48[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a55050[0m <[0;33mcol:40[0m, [0;33mcol:48[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55038[0m <[0;33mcol:46[0m, [0;33mcol:48[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54fc0[0m <[0;33mcol:46[0m, [0;33mcol:48[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a1cf50[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54f50[0m <[0;33mcol:40[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a54fa8[0m <[0;33mcol:47[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a54f90[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a54f70[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a54c18[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6a553a0[0m <[0;33mline:108:5[0m, [0;33mcol:59[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55388[0m <[0;33mcol:5[0m> [0;32m'void (*)(void *, size_t, size_t, __compar_fn_t)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55308[0m <[0;33mcol:5[0m> [0;32m'void (void *, size_t, size_t, __compar_fn_t)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6248d28[0m[0;1;36m 'qsort'[0m [0;32m'void (void *, size_t, size_t, __compar_fn_t)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a553f8[0m <[0;33mcol:11[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a553e0[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55208[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a54a78[0m[0;1;36m 'tavolsagok'[0m [0;32m'double *'[0m
[0;34m  | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a55278[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a55248[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6a1c660[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55298[0m <[0;33mcol:22[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55228[0m <[0;33mcol:22[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6a552c8[0m <[0;33mcol:36[0m, [0;33mcol:49[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55410[0m <[0;33mcol:51[0m> [0;32m'int (*)(const void *, const void *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a552e8[0m <[0;33mcol:51[0m> [0;32m'int (const void *, const void *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a32620[0m[0;1;36m 'compare2'[0m [0;32m'int (const void *, const void *)'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6a55690[0m <[0;33mline:110:5[0m, [0;33mcol:56[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55678[0m <[0;33mcol:5[0m> [0;32m'void (*)(void *, size_t, size_t, __compar_fn_t)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55658[0m <[0;33mcol:5[0m> [0;32m'void (void *, size_t, size_t, __compar_fn_t)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6248d28[0m[0;1;36m 'qsort'[0m [0;32m'void (void *, size_t, size_t, __compar_fn_t)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a556d0[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m  | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6a55568[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a55500[0m <[0;33mcol:12[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a554e8[0m <[0;33mcol:18[0m, [0;33mcol:20[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a554c8[0m <[0;33mcol:18[0m, [0;33mcol:20[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a1cf50[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55470[0m <[0;33mcol:12[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a554b0[0m <[0;33mcol:19[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a55490[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a555d0[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a555a0[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6a1c660[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a555f0[0m <[0;33mcol:22[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55580[0m <[0;33mcol:22[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6a55618[0m <[0;33mcol:36[0m, [0;33mcol:47[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'Pont'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a556e8[0m <[0;33mcol:49[0m> [0;32m'int (*)(const void *, const void *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55638[0m <[0;33mcol:49[0m> [0;32m'int (const void *, const void *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a31e10[0m[0;1;36m 'compare'[0m [0;32m'int (const void *, const void *)'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6a5e590[0m <[0;33mline:111:5[0m, [0;33mline:112:111[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6a55878[0m <[0;33mline:111:10[0m, [0;33mcol:33[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6a55718[0m <[0;33mcol:10[0m, [0;33mcol:32[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55860[0m <[0;33mcol:18[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a55840[0m <[0;33mcol:18[0m, [0;33mcol:32[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  | |       |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a557d0[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |       | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a557a0[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6a1c660[0m
[0;34m  | |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a557f0[0m <[0;33mcol:18[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55780[0m <[0;33mcol:18[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55828[0m <[0;33mcol:32[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a55808[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a559c0[0m <[0;33mcol:35[0m, [0;33mcol:52[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a559a8[0m <[0;33mcol:35[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55990[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55890[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a55718[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a55970[0m <[0;33mcol:38[0m, [0;33mcol:52[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  | |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a55900[0m <[0;33mcol:38[0m, [0;33mcol:50[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a558d0[0m <[0;33mcol:38[0m, [0;33mcol:45[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6a1c660[0m
[0;34m  | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55920[0m <[0;33mcol:38[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a558b0[0m <[0;33mcol:38[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a55958[0m <[0;33mcol:52[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a55938[0m <[0;33mcol:52[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 10[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6a55a00[0m <[0;33mcol:56[0m, [0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a559e0[0m <[0;33mcol:56[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a55718[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6a5e578[0m <[0;33mline:112:9[0m, [0;33mcol:111[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a5e540[0m <[0;33mcol:9[0m, [0;33mcol:111[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5e528[0m <[0;33mcol:109[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5e508[0m <[0;33mcol:109[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67fdd68[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a5db90[0m <[0;33mcol:9[0m, [0;33mcol:108[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5db78[0m <[0;33mcol:82[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(double)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5daf8[0m <[0;33mcol:82[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67ff388[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m
[0;34m  |     | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a5ba18[0m <[0;33mcol:9[0m, [0;33mcol:64[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5ba00[0m <[0;33mcol:62[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5b9e0[0m <[0;33mcol:62[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x68078b8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a59400[0m <[0;33mcol:9[0m, [0;33mcol:61[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a593e8[0m <[0;33mcol:44[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a593c8[0m <[0;33mcol:44[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67fecc8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  |     | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a584e8[0m <[0;33mcol:9[0m, [0;33mcol:39[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a584d0[0m <[0;33mcol:37[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a584b0[0m <[0;33mcol:37[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x68078b8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a57700[0m <[0;33mcol:9[0m, [0;33mcol:36[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a576e8[0m <[0;33mcol:19[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a576c8[0m <[0;33mcol:19[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67fecc8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  |     | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a567e8[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a567d0[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a567b0[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x68078b8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     | | | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a55a18[0m <[0;33mcol:9[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x689c2d0[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |     | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a56798[0m <[0;33mcol:15[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6a55a38[0m <[0;33mcol:15[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "( "[0m
[0;34m  |     | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a56930[0m <[0;33mcol:21[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a56900[0m <[0;33mcol:21[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5cbe480[0m
[0;34m  |     | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a56950[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     | | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a568c8[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a568b0[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a56890[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a1cf50[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |     | | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a56820[0m <[0;33mcol:21[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |     | | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a56878[0m <[0;33mcol:28[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a56860[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a56840[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a55718[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a58498[0m <[0;33mcol:39[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6a57738[0m <[0;33mcol:39[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " , "[0m
[0;34m  |     | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a58630[0m <[0;33mcol:46[0m, [0;33mcol:61[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a58600[0m <[0;33mcol:46[0m, [0;33mcol:56[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5cbe548[0m
[0;34m  |     | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a58650[0m <[0;33mcol:46[0m, [0;33mcol:54[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a585c8[0m <[0;33mcol:46[0m, [0;33mcol:54[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a585b0[0m <[0;33mcol:52[0m, [0;33mcol:54[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a58590[0m <[0;33mcol:52[0m, [0;33mcol:54[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a1cf50[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |     | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a58520[0m <[0;33mcol:46[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |     | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a58578[0m <[0;33mcol:53[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a58560[0m <[0;33mcol:53[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a58540[0m <[0;33mcol:53[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a55718[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5b9c8[0m <[0;33mcol:64[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6a59438[0m <[0;33mcol:64[0m> [0;32m'const char [17]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " )   tavolsag = "[0m
[0;34m  |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6a5bc40[0m <[0;33mcol:84[0m, [0;33mcol:108[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5bc28[0m <[0;33mcol:84[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5bc08[0m <[0;33mcol:84[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a08790[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |     |   |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6a5bc88[0m <[0;33mcol:89[0m, [0;33mcol:97[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5bc70[0m <[0;33mcol:89[0m, [0;33mcol:97[0m> [0;32m'const Pont'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |   |   `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x6a5bae8[0m <[0;33mcol:89[0m, [0;33mcol:97[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m  |     |   |     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a5baa8[0m <[0;33mcol:94[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a5bac8[0m <[0;33mcol:96[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5bca0[0m <[0;33mcol:99[0m, [0;33mcol:107[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a5bbd0[0m <[0;33mcol:99[0m, [0;33mcol:107[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5bbb8[0m <[0;33mcol:105[0m, [0;33mcol:107[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5bb98[0m <[0;33mcol:105[0m, [0;33mcol:107[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a1cf50[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |     |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5bb28[0m <[0;33mcol:99[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5bb80[0m <[0;33mcol:106[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5bb68[0m <[0;33mcol:106[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5bb48[0m <[0;33mcol:106[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a55718[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5e4f0[0m <[0;33mcol:111[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5e4c8[0m <[0;33mcol:111[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6803478[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x67dfe78[0m[0;1;36m 'endl'[0m)
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a5f910[0m <[0;33mline:114:5[0m, [0;33mcol:17[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5f8f8[0m <[0;33mcol:15[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5f8d8[0m <[0;33mcol:15[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67fdd68[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a5ef60[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5ef48[0m <[0;33mcol:9[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5ef28[0m <[0;33mcol:9[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67fdd68[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5e5c8[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x689c2d0[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5ef10[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5eee8[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6803478[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x67dfe78[0m[0;1;36m 'endl'[0m)
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5f8c0[0m <[0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5f898[0m <[0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6803478[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x67dfe78[0m[0;1;36m 'endl'[0m)
[0;34m  `-[0m[0;1;35mForStmt[0m[0;33m 0x6a614c8[0m <[0;33mline:116:5[0m, [0;33mline:119:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6a5fac0[0m <[0;33mline:116:10[0m, [0;33mcol:33[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6a5f960[0m <[0;33mcol:10[0m, [0;33mcol:32[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5faa8[0m <[0;33mcol:18[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a5fa88[0m <[0;33mcol:18[0m, [0;33mcol:32[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m    |       |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a5fa18[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m    |       | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a5f9e8[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6a1c660[0m
[0;34m    |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5fa38[0m <[0;33mcol:18[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5f9c8[0m <[0;33mcol:18[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m    |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5fa70[0m <[0;33mcol:32[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a5fa50[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a5fc08[0m <[0;33mcol:35[0m, [0;33mcol:52[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5fbf0[0m <[0;33mcol:35[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5fbd8[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5fad8[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a5f960[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a5fbb8[0m <[0;33mcol:38[0m, [0;33mcol:52[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m    |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a5fb48[0m <[0;33mcol:38[0m, [0;33mcol:50[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a5fb18[0m <[0;33mcol:38[0m, [0;33mcol:45[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6a1c660[0m
[0;34m    |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5fb68[0m <[0;33mcol:38[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5faf8[0m <[0;33mcol:38[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a548f0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5fba0[0m <[0;33mcol:52[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6a5fb80[0m <[0;33mcol:52[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 10[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6a5fc48[0m <[0;33mcol:56[0m, [0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5fc28[0m <[0;33mcol:56[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a5f960[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6a614b0[0m <[0;33mline:117:5[0m, [0;33mline:119:5[0m>
[0;34m      `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a61478[0m <[0;33mline:118:9[0m, [0;33mcol:30[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a61460[0m <[0;33mcol:28[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a61440[0m <[0;33mcol:28[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67fdd68[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m        |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6a60ac8[0m <[0;33mcol:9[0m, [0;33mcol:27[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a60ab0[0m <[0;33mcol:13[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(double)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a60a90[0m <[0;33mcol:13[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67ff388[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m
[0;34m        | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5fc60[0m <[0;33mcol:9[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x689c2d0[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a60a78[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6a5fcf0[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5fcc0[0m <[0;33mcol:15[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5fc80[0m <[0;33mcol:15[0m> [0;32m'double *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a54a78[0m[0;1;36m 'tavolsagok'[0m [0;32m'double *'[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a5fcd8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a5fca0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a5f960[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a61428[0m <[0;33mcol:30[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a61400[0m <[0;33mcol:30[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6803478[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x67dfe78[0m[0;1;36m 'endl'[0m)

Dumping legk:
[0;1;32mFunctionDecl[0m[0;33m 0x57aae28[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:20:1[0m, [0;33mcol:23[0m> [0;33mcol:6[0m[0;1;36m legk[0m [0;32m'void (vector<Pont>)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57aad60[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m

Dumping legk:
[0;1;32mFunctionDecl[0m[0;33m 0x60f3d38[0m prev 0x57aae28 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:123:1[0m, [0;33mline:157:1[0m> [0;33mline:123:6[0m[0;1;36m legk[0m [0;32m'void (vector<Pont>)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f3c70[0m <[0;33mcol:11[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m pontok[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x610eec0[0m <[0;33mline:124:1[0m, [0;33mline:157:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60f3f38[0m <[0;33mline:125:5[0m, [0;33mcol:27[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x60f3df8[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;33mcol:9[0m used[0;1;36m poz1[0m [0;32m'int'[0m cinit
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60f3e60[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60f3e98[0m <[0;33mcol:5[0m, [0;33mcol:26[0m> [0;33mcol:19[0m used[0;1;36m poz2[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60f3f00[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60f40d8[0m <[0;33mline:126:5[0m, [0;33mcol:35[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x60f3f68[0m <[0;33mcol:5[0m, [0;33mcol:19[0m> [0;33mcol:12[0m used[0;1;36m maxi[0m [0;32m'double'[0m cinit
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f3ff0[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60f3fd0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60f4020[0m <[0;33mcol:5[0m, [0;33mcol:28[0m> [0;33mcol:22[0m used[0;1;36m mini[0m [0;32m'double'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f40a8[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60f4088[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1000000[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x60f4c30[0m <[0;33mline:127:5[0m, [0;33mline:138:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60f4190[0m <[0;33mline:127:10[0m, [0;33mcol:20[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60f4108[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60f4170[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60f4280[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4268[0m <[0;33mcol:22[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4250[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f41a8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f4108[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60f4218[0m <[0;33mcol:24[0m, [0;33mcol:36[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60f41e8[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x60aec90[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4238[0m <[0;33mcol:24[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f41c8[0m <[0;33mcol:24[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60f42c0[0m <[0;33mcol:39[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f42a0[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f4108[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60f4c18[0m <[0;33mline:128:5[0m, [0;33mline:138:5[0m>
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x60f4be0[0m <[0;33mline:129:9[0m, [0;33mline:137:9[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60f4378[0m <[0;33mline:129:14[0m, [0;33mcol:24[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60f42f0[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60f4358[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60f4468[0m <[0;33mcol:26[0m, [0;33mcol:40[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4450[0m <[0;33mcol:26[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4438[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4390[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f42f0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60f4400[0m <[0;33mcol:28[0m, [0;33mcol:40[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60f43d0[0m <[0;33mcol:28[0m, [0;33mcol:35[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x60aec90[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4420[0m <[0;33mcol:28[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f43b0[0m <[0;33mcol:28[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60f44a8[0m <[0;33mcol:43[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4488[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f42f0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60f4bc8[0m <[0;33mline:130:9[0m, [0;33mline:137:9[0m>
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x60f4bb0[0m <[0;33mline:131:13[0m, [0;33mline:136:13[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60f4798[0m <[0;33mline:131:17[0m, [0;33mcol:43[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |         | |-[0m[0;1;35mCallExpr[0m[0;33m 0x60f4700[0m <[0;33mcol:17[0m, [0;33mcol:41[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |         | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f46e8[0m <[0;33mcol:17[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f46c8[0m <[0;33mcol:17[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x609abb0[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |         | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4730[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         | | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f45b0[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4598[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4578[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |         | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4508[0m <[0;33mcol:22[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |         | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4560[0m <[0;33mcol:29[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4548[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4528[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f4108[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4748[0m <[0;33mcol:32[0m, [0;33mcol:40[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f4690[0m <[0;33mcol:32[0m, [0;33mcol:40[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4678[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4658[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |         | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f45e8[0m <[0;33mcol:32[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |         | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4640[0m <[0;33mcol:39[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4628[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4608[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f42f0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4780[0m <[0;33mcol:43[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4760[0m <[0;33mcol:43[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3f68[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60f4b88[0m <[0;33mline:132:13[0m, [0;33mline:136:13[0m>
[0;34m  |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60f4a78[0m <[0;33mline:133:17[0m, [0;33mcol:48[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f47b8[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3f68[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  |           | `-[0m[0;1;35mCallExpr[0m[0;33m 0x60f4a18[0m <[0;33mcol:24[0m, [0;33mcol:48[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4a00[0m <[0;33mcol:24[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f49e0[0m <[0;33mcol:24[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x609abb0[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4a48[0m <[0;33mcol:29[0m, [0;33mcol:37[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f48c8[0m <[0;33mcol:29[0m, [0;33mcol:37[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f48b0[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4890[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |           |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4820[0m <[0;33mcol:29[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |           |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4878[0m <[0;33mcol:36[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4860[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4840[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f4108[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |           |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4a60[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f49a8[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4990[0m <[0;33mcol:45[0m, [0;33mcol:47[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4970[0m <[0;33mcol:45[0m, [0;33mcol:47[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |           |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4900[0m <[0;33mcol:39[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |           |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4958[0m <[0;33mcol:46[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4940[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4920[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f42f0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60f4af0[0m <[0;33mline:134:17[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4a98[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3df8[0m[0;1;36m 'poz1'[0m [0;32m'int'[0m
[0;34m  |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4ad8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4ab8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f4108[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60f4b68[0m <[0;33mline:135:17[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4b10[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3e98[0m[0;1;36m 'poz2'[0m [0;32m'int'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f4b50[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4b30[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f42f0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6102f38[0m <[0;33mline:139:5[0m, [0;33mcol:184[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6102f20[0m <[0;33mcol:182[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6102f00[0m <[0;33mcol:182[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e904c8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6102588[0m <[0;33mcol:5[0m, [0;33mcol:178[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6102570[0m <[0;33mcol:176[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(double)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6102550[0m <[0;33mcol:176[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91ae8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m
[0;34m  | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6101778[0m <[0;33mcol:5[0m, [0;33mcol:160[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6101760[0m <[0;33mcol:158[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6101740[0m <[0;33mcol:158[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60ffae0[0m <[0;33mcol:5[0m, [0;33mcol:157[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ffac8[0m <[0;33mcol:137[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ffaa8[0m <[0;33mcol:137[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91428[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60febc8[0m <[0;33mcol:5[0m, [0;33mcol:132[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60febb0[0m <[0;33mcol:130[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60feb90[0m <[0;33mcol:130[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60fdde0[0m <[0;33mcol:5[0m, [0;33mcol:129[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fddc8[0m <[0;33mcol:109[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fdda8[0m <[0;33mcol:109[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91428[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60fc9a8[0m <[0;33mcol:5[0m, [0;33mcol:99[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fc990[0m <[0;33mcol:97[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fc970[0m <[0;33mcol:97[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60faca0[0m <[0;33mcol:5[0m, [0;33mcol:96[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fac88[0m <[0;33mcol:76[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fac68[0m <[0;33mcol:76[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91428[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f9d88[0m <[0;33mcol:5[0m, [0;33mcol:71[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f9d70[0m <[0;33mcol:69[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f9d50[0m <[0;33mcol:69[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f8fa0[0m <[0;33mcol:5[0m, [0;33mcol:68[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f8f88[0m <[0;33mcol:48[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f8f68[0m <[0;33mcol:48[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91428[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f8088[0m <[0;33mcol:5[0m, [0;33mcol:43[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f8070[0m <[0;33mcol:41[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f8050[0m <[0;33mcol:41[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  | | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f7298[0m <[0;33mcol:5[0m, [0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f7280[0m <[0;33mcol:15[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f7260[0m <[0;33mcol:15[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  | | | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f5600[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f55e8[0m <[0;33mcol:9[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f55c8[0m <[0;33mcol:9[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e904c8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m  | | | | | | | | | | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f4c68[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5f2e640[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  | | | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f55b0[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | | | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f5588[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e95bd8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e725d8[0m[0;1;36m 'endl'[0m)
[0;34m  | | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f7248[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60f5638[0m <[0;33mcol:17[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Legtavolabbi pontok : "[0m
[0;34m  | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f8038[0m <[0;33mcol:43[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60f72d0[0m <[0;33mcol:43[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " ( "[0m
[0;34m  | | | | | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60f81d0[0m <[0;33mcol:50[0m, [0;33mcol:68[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | | | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60f81a0[0m <[0;33mcol:50[0m, [0;33mcol:63[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5351480[0m
[0;34m  | | | | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f81f0[0m <[0;33mcol:50[0m, [0;33mcol:61[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | | | | | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f8168[0m <[0;33mcol:50[0m, [0;33mcol:61[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f8150[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f8130[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  | | | | | | | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f80c0[0m <[0;33mcol:50[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | | | | | | | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f8118[0m <[0;33mcol:57[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | | | | | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f8100[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | | | | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f80e0[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3df8[0m[0;1;36m 'poz1'[0m [0;32m'int'[0m
[0;34m  | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f9d38[0m <[0;33mcol:71[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60f8fd8[0m <[0;33mcol:71[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " , "[0m
[0;34m  | | | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60f9ed0[0m <[0;33mcol:78[0m, [0;33mcol:96[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60f9ea0[0m <[0;33mcol:78[0m, [0;33mcol:91[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5351548[0m
[0;34m  | | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f9ef0[0m <[0;33mcol:78[0m, [0;33mcol:89[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | | | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60f9e68[0m <[0;33mcol:78[0m, [0;33mcol:89[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f9e50[0m <[0;33mcol:84[0m, [0;33mcol:89[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f9e30[0m <[0;33mcol:84[0m, [0;33mcol:89[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  | | | | | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f9dc0[0m <[0;33mcol:78[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | | | | | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f9e18[0m <[0;33mcol:85[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | | | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60f9e00[0m <[0;33mcol:85[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60f9de0[0m <[0;33mcol:85[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3df8[0m[0;1;36m 'poz1'[0m [0;32m'int'[0m
[0;34m  | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fc958[0m <[0;33mcol:99[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60fad58[0m <[0;33mcol:99[0m> [0;32m'const char [9]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " ) es ( "[0m
[0;34m  | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60fcaf0[0m <[0;33mcol:111[0m, [0;33mcol:129[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60fcac0[0m <[0;33mcol:111[0m, [0;33mcol:124[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5351480[0m
[0;34m  | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fcb10[0m <[0;33mcol:111[0m, [0;33mcol:122[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60fca88[0m <[0;33mcol:111[0m, [0;33mcol:122[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fca70[0m <[0;33mcol:117[0m, [0;33mcol:122[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fca50[0m <[0;33mcol:117[0m, [0;33mcol:122[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  | | | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fc9e0[0m <[0;33mcol:111[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | | | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fca38[0m <[0;33mcol:118[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fca20[0m <[0;33mcol:118[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fca00[0m <[0;33mcol:118[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3e98[0m[0;1;36m 'poz2'[0m [0;32m'int'[0m
[0;34m  | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60feb78[0m <[0;33mcol:132[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60fde18[0m <[0;33mcol:132[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " , "[0m
[0;34m  | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60fed10[0m <[0;33mcol:139[0m, [0;33mcol:157[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60fece0[0m <[0;33mcol:139[0m, [0;33mcol:152[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5351548[0m
[0;34m  | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fed30[0m <[0;33mcol:139[0m, [0;33mcol:150[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60feca8[0m <[0;33mcol:139[0m, [0;33mcol:150[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fec90[0m <[0;33mcol:145[0m, [0;33mcol:150[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fec70[0m <[0;33mcol:145[0m, [0;33mcol:150[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fec00[0m <[0;33mcol:139[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fec58[0m <[0;33mcol:146[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60fec40[0m <[0;33mcol:146[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60fec20[0m <[0;33mcol:146[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3e98[0m[0;1;36m 'poz2'[0m [0;32m'int'[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6101728[0m <[0;33mcol:160[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x60ffb18[0m <[0;33mcol:160[0m> [0;32m'const char [15]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " ) tavolsag = "[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6102538[0m <[0;33mcol:178[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61017b0[0m <[0;33mcol:178[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3f68[0m[0;1;36m 'maxi'[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6102ee8[0m <[0;33mcol:184[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6102ec0[0m <[0;33mcol:184[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e95bd8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e725d8[0m[0;1;36m 'endl'[0m)
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6103008[0m <[0;33mline:141:5[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6102f70[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3df8[0m[0;1;36m 'poz1'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6102ff0[0m <[0;33mcol:10[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6102fd0[0m <[0;33mcol:10[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6102f90[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3e98[0m[0;1;36m 'poz2'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6102fb0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6103c18[0m <[0;33mline:142:5[0m, [0;33mline:153:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61030c8[0m <[0;33mline:142:10[0m, [0;33mcol:20[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6103040[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;33mcol:14[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x61030a8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61031b8[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61031a0[0m <[0;33mcol:22[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103188[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61030e0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103040[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6103150[0m <[0;33mcol:24[0m, [0;33mcol:36[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6103120[0m <[0;33mcol:24[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x60aec90[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103170[0m <[0;33mcol:24[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103100[0m <[0;33mcol:24[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61031f8[0m <[0;33mcol:39[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61031d8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103040[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6103c00[0m <[0;33mline:143:5[0m, [0;33mline:153:5[0m>
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x6103bc8[0m <[0;33mline:144:9[0m, [0;33mline:152:9[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61032b0[0m <[0;33mline:144:14[0m, [0;33mcol:24[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6103228[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6103290[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61033a0[0m <[0;33mcol:26[0m, [0;33mcol:40[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103388[0m <[0;33mcol:26[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103370[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61032c8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103228[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6103338[0m <[0;33mcol:28[0m, [0;33mcol:40[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6103308[0m <[0;33mcol:28[0m, [0;33mcol:35[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x60aec90[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103358[0m <[0;33mcol:28[0m> [0;32m'const std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61032e8[0m <[0;33mcol:28[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61033e0[0m <[0;33mcol:43[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61033c0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103228[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6103bb0[0m <[0;33mline:145:9[0m, [0;33mline:152:9[0m>
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x6103b98[0m <[0;33mline:146:13[0m, [0;33mline:151:13[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6103780[0m <[0;33mline:146:17[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |         | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61036d0[0m <[0;33mcol:17[0m, [0;33mcol:43[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |         | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6103638[0m <[0;33mcol:17[0m, [0;33mcol:41[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |         | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103620[0m <[0;33mcol:17[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103600[0m <[0;33mcol:17[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x609abb0[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |         | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103668[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         | | | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61034e8[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61034d0[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61034b0[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |         | | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103440[0m <[0;33mcol:22[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |         | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103498[0m <[0;33mcol:29[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103480[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103460[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103040[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103680[0m <[0;33mcol:32[0m, [0;33mcol:40[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61035c8[0m <[0;33mcol:32[0m, [0;33mcol:40[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61035b0[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103590[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |         | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103520[0m <[0;33mcol:32[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |         | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103578[0m <[0;33mcol:39[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103560[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103540[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103228[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |         | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61036b8[0m <[0;33mcol:43[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103698[0m <[0;33mcol:43[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f4020[0m[0;1;36m 'mini'[0m [0;32m'double'[0m
[0;34m  |         | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6103760[0m <[0;33mcol:51[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |         |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103730[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61036f0[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103040[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103748[0m <[0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103710[0m <[0;33mcol:54[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103228[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6103b70[0m <[0;33mline:147:13[0m, [0;33mline:151:13[0m>
[0;34m  |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6103a60[0m <[0;33mline:148:17[0m, [0;33mcol:48[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61037a0[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f4020[0m[0;1;36m 'mini'[0m [0;32m'double'[0m
[0;34m  |           | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6103a00[0m <[0;33mcol:24[0m, [0;33mcol:48[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61039e8[0m <[0;33mcol:24[0m> [0;32m'double (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61039c8[0m <[0;33mcol:24[0m> [0;32m'double (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x609abb0[0m[0;1;36m 'dist'[0m [0;32m'double (const Pont &, const Pont &)'[0m
[0;34m  |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103a30[0m <[0;33mcol:29[0m, [0;33mcol:37[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61038b0[0m <[0;33mcol:29[0m, [0;33mcol:37[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103898[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103878[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |           |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103808[0m <[0;33mcol:29[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |           |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103860[0m <[0;33mcol:36[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103848[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103828[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103040[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |           |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103a48[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6103990[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103978[0m <[0;33mcol:45[0m, [0;33mcol:47[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103958[0m <[0;33mcol:45[0m, [0;33mcol:47[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |           |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61038e8[0m <[0;33mcol:39[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m  |           |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103940[0m <[0;33mcol:46[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103928[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103908[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103228[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6103ad8[0m <[0;33mline:149:17[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103a80[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3df8[0m[0;1;36m 'poz1'[0m [0;32m'int'[0m
[0;34m  |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103ac0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103aa0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103040[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6103b50[0m <[0;33mline:150:17[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103af8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3e98[0m[0;1;36m 'poz2'[0m [0;32m'int'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6103b38[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103b18[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6103228[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x610ee88[0m <[0;33mline:155:5[0m, [0;33mcol:184[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610ee70[0m <[0;33mcol:182[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610ee50[0m <[0;33mcol:182[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e904c8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x610e4d8[0m <[0;33mcol:5[0m, [0;33mcol:178[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610e4c0[0m <[0;33mcol:176[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(double)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610e4a0[0m <[0;33mcol:176[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91ae8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(double)'[0m
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x610d5e8[0m <[0;33mcol:5[0m, [0;33mcol:160[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610d5d0[0m <[0;33mcol:158[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610d5b0[0m <[0;33mcol:158[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x610c7f0[0m <[0;33mcol:5[0m, [0;33mcol:157[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610c7d8[0m <[0;33mcol:137[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610c7b8[0m <[0;33mcol:137[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91428[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m    | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x610b8d8[0m <[0;33mcol:5[0m, [0;33mcol:132[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610b8c0[0m <[0;33mcol:130[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b8a0[0m <[0;33mcol:130[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x610aaf0[0m <[0;33mcol:5[0m, [0;33mcol:129[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610aad8[0m <[0;33mcol:109[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610aab8[0m <[0;33mcol:109[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91428[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m    | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6109bd8[0m <[0;33mcol:5[0m, [0;33mcol:99[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6109bc0[0m <[0;33mcol:97[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6109ba0[0m <[0;33mcol:97[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6108df0[0m <[0;33mcol:5[0m, [0;33mcol:96[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6108dd8[0m <[0;33mcol:76[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6108db8[0m <[0;33mcol:76[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91428[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m    | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6107ed8[0m <[0;33mcol:5[0m, [0;33mcol:71[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6107ec0[0m <[0;33mcol:69[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6107ea0[0m <[0;33mcol:69[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61070f0[0m <[0;33mcol:5[0m, [0;33mcol:68[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61070d8[0m <[0;33mcol:48[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61070b8[0m <[0;33mcol:48[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e91428[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m    | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61061d8[0m <[0;33mcol:5[0m, [0;33mcol:43[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61061c0[0m <[0;33mcol:41[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61061a0[0m <[0;33mcol:41[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61053e8[0m <[0;33mcol:5[0m, [0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61053d0[0m <[0;33mcol:15[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61053b0[0m <[0;33mcol:15[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e9a018[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    | | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61045e8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61045d0[0m <[0;33mcol:9[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61045b0[0m <[0;33mcol:9[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e904c8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m    | | | | | | | | | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6103c50[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5f2e640[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m    | | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6104598[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | | | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6104570[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e95bd8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e725d8[0m[0;1;36m 'endl'[0m)
[0;34m    | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6105398[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    | | | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6104620[0m <[0;33mcol:17[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Legkozelebbi pontok : "[0m
[0;34m    | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6106188[0m <[0;33mcol:43[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    | | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6105420[0m <[0;33mcol:43[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " ( "[0m
[0;34m    | | | | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6106320[0m <[0;33mcol:50[0m, [0;33mcol:68[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x61062f0[0m <[0;33mcol:50[0m, [0;33mcol:63[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5351480[0m
[0;34m    | | | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6106340[0m <[0;33mcol:50[0m, [0;33mcol:61[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    | | | | | | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61062b8[0m <[0;33mcol:50[0m, [0;33mcol:61[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61062a0[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6106280[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m    | | | | | | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6106210[0m <[0;33mcol:50[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m    | | | | | | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6106268[0m <[0;33mcol:57[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | | | | | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6106250[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | | | | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6106230[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3df8[0m[0;1;36m 'poz1'[0m [0;32m'int'[0m
[0;34m    | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6107e88[0m <[0;33mcol:71[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6107128[0m <[0;33mcol:71[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " , "[0m
[0;34m    | | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6108020[0m <[0;33mcol:78[0m, [0;33mcol:96[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6107ff0[0m <[0;33mcol:78[0m, [0;33mcol:91[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5351548[0m
[0;34m    | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6108040[0m <[0;33mcol:78[0m, [0;33mcol:89[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    | | | | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6107fb8[0m <[0;33mcol:78[0m, [0;33mcol:89[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6107fa0[0m <[0;33mcol:84[0m, [0;33mcol:89[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6107f80[0m <[0;33mcol:84[0m, [0;33mcol:89[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m    | | | | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6107f10[0m <[0;33mcol:78[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m    | | | | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6107f68[0m <[0;33mcol:85[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | | | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6107f50[0m <[0;33mcol:85[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6107f30[0m <[0;33mcol:85[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3df8[0m[0;1;36m 'poz1'[0m [0;32m'int'[0m
[0;34m    | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6109b88[0m <[0;33mcol:99[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6108e28[0m <[0;33mcol:99[0m> [0;32m'const char [9]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " ) es ( "[0m
[0;34m    | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6109d20[0m <[0;33mcol:111[0m, [0;33mcol:129[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6109cf0[0m <[0;33mcol:111[0m, [0;33mcol:124[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5351480[0m
[0;34m    | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6109d40[0m <[0;33mcol:111[0m, [0;33mcol:122[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    | | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6109cb8[0m <[0;33mcol:111[0m, [0;33mcol:122[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6109ca0[0m <[0;33mcol:117[0m, [0;33mcol:122[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6109c80[0m <[0;33mcol:117[0m, [0;33mcol:122[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m    | | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6109c10[0m <[0;33mcol:111[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m    | | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6109c68[0m <[0;33mcol:118[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6109c50[0m <[0;33mcol:118[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6109c30[0m <[0;33mcol:118[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3e98[0m[0;1;36m 'poz2'[0m [0;32m'int'[0m
[0;34m    | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610b888[0m <[0;33mcol:132[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x610ab28[0m <[0;33mcol:132[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " , "[0m
[0;34m    | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x610ba20[0m <[0;33mcol:139[0m, [0;33mcol:157[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x610b9f0[0m <[0;33mcol:139[0m, [0;33mcol:152[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x5351548[0m
[0;34m    | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610ba40[0m <[0;33mcol:139[0m, [0;33mcol:150[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x610b9b8[0m <[0;33mcol:139[0m, [0;33mcol:150[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610b9a0[0m <[0;33mcol:145[0m, [0;33mcol:150[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b980[0m <[0;33mcol:145[0m, [0;33mcol:150[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x60af580[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m    | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b910[0m <[0;33mcol:139[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60f3c70[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m    | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610b968[0m <[0;33mcol:146[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610b950[0m <[0;33mcol:146[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b930[0m <[0;33mcol:146[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f3e98[0m[0;1;36m 'poz2'[0m [0;32m'int'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610d598[0m <[0;33mcol:160[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x610c828[0m <[0;33mcol:160[0m> [0;32m'const char [15]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " ) tavolsag = "[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610e488[0m <[0;33mcol:178[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610d620[0m <[0;33mcol:178[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60f4020[0m[0;1;36m 'mini'[0m [0;32m'double'[0m
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610ee38[0m <[0;33mcol:184[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610ee10[0m <[0;33mcol:184[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e95bd8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e725d8[0m[0;1;36m 'endl'[0m)

Dumping rendez2:
[0;1;32mFunctionDecl[0m[0;33m 0x536eaa8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.h:13:1[0m, [0;33mcol:28[0m> [0;33mcol:6[0m[0;1;36m rendez2[0m [0;32m'void (vector<Pont>)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x536e9e0[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:28[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m

Dumping rendez2:
[0;1;32mFunctionDecl[0m[0;33m 0x5cd38a8[0m prev 0x536eaa8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user16/labor2/feladat1/functions.cpp:159:1[0m, [0;33mline:163:1[0m> [0;33mline:159:6[0m[0;1;36m rendez2[0m [0;32m'void (vector<Pont>)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5cd37e0[0m <[0;33mcol:15[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m pontok[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cd3d90[0m <[0;33mline:160:1[0m, [0;33mline:163:1[0m>
[0;34m  `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5cd3d78[0m <[0;33mline:161:5[0m, [0;33mcol:49[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5cd3c28[0m <[0;33mcol:5[0m, [0;33mcol:49[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cd3c10[0m <[0;33mcol:5[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cd3be8[0m <[0;33mcol:5[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5c92468[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5c4a798[0m[0;1;36m 'sort'[0m)
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5cd3cb0[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5cd3c98[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5cd3a50[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5cd3a20[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x5c72860[0m
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cd39a0[0m <[0;33mcol:10[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cd37e0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m      |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5cd3d30[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m      | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5cd3d18[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5cd3b20[0m <[0;33mcol:25[0m, [0;33mcol:36[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5cd3af0[0m <[0;33mcol:25[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x5c72a68[0m
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cd3a70[0m <[0;33mcol:25[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cd37e0[0m[0;1;36m 'pontok'[0m [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cd3d60[0m <[0;33mcol:38[0m> [0;32m'bool (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cd3b40[0m <[0;33mcol:38[0m> [0;32m'bool (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5c89858[0m[0;1;36m 'myfunction2'[0m [0;32m'bool (const Pont &, const Pont &)'[0m

