Dumping Pont::getX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5489d60[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:18:5[0m, [0;33mcol:16[0m> [0;33mcol:9[0m used[0;1;36m getX[0m [0;32m'int () const'[0m

Dumping Pont::getX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x57de308[0m parent 0x54897c8 prev 0x5489d60 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:20:1[0m, [0;33mline:23:1[0m> [0;33mline:20:11[0m used[0;1;36m getX[0m [0;32m'int () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57de458[0m <[0;33mline:21:1[0m, [0;33mline:23:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x57de448[0m <[0;33mline:22:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57de430[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57de400[0m <[0;33mcol:12[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->x[0;33m 0x54899b8[0m
[0;34m        `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x57de3f0[0m <[0;33mcol:12[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping Pont::getY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x65f0ba8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:19:5[0m, [0;33mcol:16[0m> [0;33mcol:9[0m used[0;1;36m getY[0m [0;32m'int () const'[0m

Dumping Pont::getY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6945100[0m parent 0x65f0548 prev 0x65f0ba8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:24:1[0m, [0;33mline:27:1[0m> [0;33mline:24:11[0m used[0;1;36m getY[0m [0;32m'int () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6945250[0m <[0;33mline:25:1[0m, [0;33mline:27:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6945240[0m <[0;33mline:26:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6945228[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mMemberExpr[0m[0;33m 0x69451f8[0m <[0;33mcol:12[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m ->y[0;33m 0x65f07a0[0m
[0;34m        `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x69451e8[0m <[0;33mcol:12[0m> [0;32m'const Pont *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping Pont::setX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x55cdd70[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:20:5[0m, [0;33mcol:22[0m> [0;33mcol:10[0m used[0;1;36m setX[0m [0;32m'void (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x55cdce0[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m x[0m [0;32m'int'[0m

Dumping Pont::setX:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5922b78[0m parent 0x55cd5c8 prev 0x55cdd70 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:28:1[0m, [0;33mline:31:1[0m> [0;33mline:28:12[0m used[0;1;36m setX[0m [0;32m'void (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5922ae8[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;33mcol:21[0m used[0;1;36m x[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5922e28[0m <[0;33mline:29:1[0m, [0;33mline:31:1[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5922e10[0m <[0;33mline:30:5[0m, [0;33mcol:40[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5922d58[0m <[0;33mcol:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5922cc0[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5922ca8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5922c68[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5922ae8[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m    | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5922c88[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5922d38[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5922d20[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5922ce0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5922ae8[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5922d00[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2000[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5922df0[0m <[0;33mcol:30[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5922d88[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->x[0;33m 0x55cd7b8[0m
[0;34m      | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5922d78[0m <[0;33mcol:30[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m this
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5922dd8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5922db8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5922ae8[0m[0;1;36m 'x'[0m [0;32m'int'[0m

Dumping Pont::setY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5b82da0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:21:5[0m, [0;33mcol:22[0m> [0;33mcol:10[0m used[0;1;36m setY[0m [0;32m'void (int)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5b82d10[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m y[0m [0;32m'int'[0m

Dumping Pont::setY:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5ed6ef0[0m parent 0x5b824a8 prev 0x5b82da0 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:32:1[0m, [0;33mline:35:1[0m> [0;33mline:32:12[0m used[0;1;36m setY[0m [0;32m'void (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ed6e60[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;33mcol:21[0m used[0;1;36m y[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5ed71a0[0m <[0;33mline:33:1[0m, [0;33mline:35:1[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5ed7188[0m <[0;33mline:34:5[0m, [0;33mcol:40[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ed70d0[0m <[0;33mcol:9[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ed7038[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed7020[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ed6fe0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ed6e60[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m    | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ed7000[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ed70b0[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed7098[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ed7058[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ed6e60[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ed7078[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2000[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ed7168[0m <[0;33mcol:30[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5ed7100[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->y[0;33m 0x5b82700[0m
[0;34m      | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5ed70f0[0m <[0;33mcol:30[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m this
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed7150[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ed7130[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ed6e60[0m[0;1;36m 'y'[0m [0;32m'int'[0m

Dumping wmemmove:
[0;1;32mFunctionDecl[0m[0;33m 0x5467658[0m <[0;33m/usr/include/wchar.h:267:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/wchar.h:267:17[0m used[0;1;36m wmemmove[0m [0;32m'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5467468[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __s1[0m [0;32m'wchar_t *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x54674e8[0m <[0;33mcol:42[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m __s2[0m [0;32m'const wchar_t *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5467560[0m <[0;33mcol:63[0m, [0;33mcol:70[0m> [0;33mcol:70[0m[0;1;36m __n[0m [0;32m'size_t':'unsigned long'[0m

Dumping std::wmemmove:
[0;1;32mUsingDecl[0m[0;33m 0x547e418[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cwchar:200:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::wmemmove

Dumping std::wmemmove:
[0;1;32mUsingShadowDecl[0m[0;33m 0x547e470[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cwchar:200:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5467658[0m[0;1;36m 'wmemmove'[0m [0;32m'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'[0m

Dumping std::remove_cv:
[0;1;32mClassTemplateDecl[0m[0;33m 0x54d0ae0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:201:3[0m, [0;33mline:202:12[0m> [0;33mcol:12[0m[0;1;36m remove_cv[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x54d09c0[0m <[0;33mline:201:12[0m> [0;33mcol:12[0m typename depth 0 index 0
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x54d0a50[0m <[0;33mline:202:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m remove_cv[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c76a58[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c76c60[0m prev 0x5c76a58 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c77510[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<allocator<char> >::type>::type':'std::allocator<char>'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x5c774c0[0m [0;32m'typename remove_const<typename remove_volatile<allocator<char> >::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5c774a0[0m [0;32m'std::remove_const<std::allocator<char> >::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5c77428[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5c773f0[0m [0;32m'std::allocator<char>'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x543fda0[0m [0;32m'std::allocator<char>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x543fcc0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d7f038[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d7f240[0m prev 0x5d7f038 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d7faf0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<char> *>::type>::type':'std::basic_istream<char> *'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x5d7faa0[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<char> *>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5d7fa80[0m [0;32m'std::remove_const<std::basic_istream<char> *>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5d7fa08[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d7f9d0[0m [0;32m'std::basic_istream<char> *'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mPointerType[0m[0;33m 0x5d2c880[0m [0;32m'std::basic_istream<char> *'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5490eb0[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5490db0[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d82e08[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d83010[0m prev 0x5d82e08 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d838c0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<char> &>::type>::type':'std::basic_istream<char> &'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x5d83870[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<char> &>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5d83850[0m [0;32m'std::remove_const<std::basic_istream<char> &>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5d837d8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d837a0[0m [0;32m'std::basic_istream<char> &'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x59645b0[0m [0;32m'std::basic_istream<char> &'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5490eb0[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5490db0[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d99e98[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d9a0a0[0m prev 0x5d99e98 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d9a950[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<wchar_t> *>::type>::type':'std::basic_istream<wchar_t> *'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x5d9a900[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<wchar_t> *>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5d9a8e0[0m [0;32m'std::remove_const<std::basic_istream<wchar_t> *>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5d9a868[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d9a830[0m [0;32m'std::basic_istream<wchar_t> *'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mPointerType[0m[0;33m 0x5d33d70[0m [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5495980[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5495880[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d9db68[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d9dd70[0m prev 0x5d9db68 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d9e620[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<wchar_t> &>::type>::type':'std::basic_istream<wchar_t> &'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x5d9e5d0[0m [0;32m'typename remove_const<typename remove_volatile<basic_istream<wchar_t> &>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5d9e5b0[0m [0;32m'std::remove_const<std::basic_istream<wchar_t> &>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5d9e538[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d9e500[0m [0;32m'std::basic_istream<wchar_t> &'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x59693b0[0m [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5495980[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5495880[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x61e18f8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x61e1b00[0m prev 0x61e18f8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61e23b0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_ostream<char> *>::type>::type':'std::basic_ostream<char> *'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x61e2360[0m [0;32m'typename remove_const<typename remove_volatile<basic_ostream<char> *>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x61e2340[0m [0;32m'std::remove_const<std::basic_ostream<char> *>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x61e22c8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x61e2290[0m [0;32m'std::basic_ostream<char> *'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mPointerType[0m[0;33m 0x5cce750[0m [0;32m'std::basic_ostream<char> *'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5491190[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5491090[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x61e5648[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x61e5850[0m prev 0x61e5648 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61e6100[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<basic_ostream<char> &>::type>::type':'std::basic_ostream<char> &'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x61e60b0[0m [0;32m'typename remove_const<typename remove_volatile<basic_ostream<char> &>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x61e6090[0m [0;32m'std::remove_const<std::basic_ostream<char> &>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x61e6018[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x61e5fe0[0m [0;32m'std::basic_ostream<char> &'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x584b780[0m [0;32m'std::basic_ostream<char> &'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5491190[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5491090[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62524a8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62526b0[0m prev 0x62524a8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6252f60[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<random_access_iterator_tag>::type>::type':'std::random_access_iterator_tag'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6252f10[0m [0;32m'typename remove_const<typename remove_volatile<random_access_iterator_tag>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6252ef0[0m [0;32m'std::remove_const<std::random_access_iterator_tag>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6252e78[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6252e40[0m [0;32m'std::random_access_iterator_tag'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x566e3b0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m|           `-[0m[0;1;32mCXXRecord[0m[0;33m 0x566e320[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6261e38[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6262040[0m prev 0x6261e38 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62628f0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<char>::type>::type':'char'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x62628a0[0m [0;32m'typename remove_const<typename remove_volatile<char>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6262880[0m [0;32m'std::remove_const<char>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6262808[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62627d0[0m [0;32m'char'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x538c960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6276b08[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6276d10[0m prev 0x6276b08 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62775d0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<const char>::type>::type':'char'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x6277580[0m [0;32m'typename remove_const<typename remove_volatile<const char>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x6277560[0m [0;32m'std::remove_const<const char>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x62774f0[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62773a0[0m [0;32m'char'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x538c960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x628fe88[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6290090[0m prev 0x628fe88 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6290940[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<wchar_t>::type>::type':'wchar_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x62908f0[0m [0;32m'typename remove_const<typename remove_volatile<wchar_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x62908d0[0m [0;32m'std::remove_const<wchar_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x6290858[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6290820[0m [0;32m'wchar_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x538cea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x629fdc8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x629ffd0[0m prev 0x629fdc8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62a0890[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<const wchar_t>::type>::type':'wchar_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x62a0840[0m [0;32m'typename remove_const<typename remove_volatile<const wchar_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x62a0820[0m [0;32m'std::remove_const<const wchar_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x62a07b0[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62a0660[0m [0;32m'wchar_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x538cea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62b44a8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62b46b0[0m prev 0x62b44a8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62b4f60[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<char16_t>::type>::type':'char16_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x62b4f10[0m [0;32m'typename remove_const<typename remove_volatile<char16_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x62b4ef0[0m [0;32m'std::remove_const<char16_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x62b4e78[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62b4e40[0m [0;32m'char16_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x538cee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62c3f18[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62c4120[0m prev 0x62c3f18 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62c49e0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<const char16_t>::type>::type':'char16_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x62c4990[0m [0;32m'typename remove_const<typename remove_volatile<const char16_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x62c4970[0m [0;32m'std::remove_const<const char16_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x62c4900[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62c47b0[0m [0;32m'char16_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x538cee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62c96e8[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62c98f0[0m prev 0x62c96e8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62ca1a0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<char32_t>::type>::type':'char32_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x62ca150[0m [0;32m'typename remove_const<typename remove_volatile<char32_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x62ca130[0m [0;32m'std::remove_const<char32_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x62ca0b8[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62ca080[0m [0;32m'char32_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x538cf00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62db268[0m <[0;33mline:201:3[0m, [0;33mline:202:12[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62db470[0m prev 0x62db268 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62dbd30[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<const char32_t>::type>::type':'char32_t'[0m
[0;34m|   `-[0m[0;32mElaboratedType[0m[0;33m 0x62dbce0[0m [0;32m'typename remove_const<typename remove_volatile<const char32_t>::type>::type'[0m sugar
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x62dbcc0[0m [0;32m'std::remove_const<const char32_t>::type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x62dbc50[0m[0;1;36m 'type'[0m
[0;34m|       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62dbb00[0m [0;32m'char32_t'[0m sugar
[0;34m|         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m
[0;34m|         `-[0m[0;32mBuiltinType[0m[0;33m 0x538cf00[0m [0;32m'char32_t'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6316450[0m <[0;33mline:1570:3[0m, [0;33mline:1575:5[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6316650[0m prev 0x6316450 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6316f00[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m referenced[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<Pont>::type>::type':'Pont'[0m
[0;34m    `-[0m[0;32mElaboratedType[0m[0;33m 0x6316eb0[0m [0;32m'typename remove_const<typename remove_volatile<Pont>::type>::type'[0m sugar
[0;34m      `-[0m[0;32mTypedefType[0m[0;33m 0x6316e90[0m [0;32m'std::remove_const<Pont>::type'[0m sugar
[0;34m        |-[0m[0;1;32mTypedef[0m[0;33m 0x6316e18[0m[0;1;36m 'type'[0m
[0;34m        `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6316de0[0m [0;32m'Pont'[0m sugar
[0;34m          |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m          | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m          `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m            `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m

Dumping std::remove_all_extents:
[0;1;32mClassTemplateDecl[0m[0;33m 0x550c3c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:767:3[0m, [0;33mline:768:12[0m> [0;33mcol:12[0m[0;1;36m remove_all_extents[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x550c2a8[0m <[0;33mline:767:12[0m> [0;33mcol:12[0m typename depth 0 index 0
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x550c330[0m <[0;33mline:768:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m remove_all_extents[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x632bfd0[0m <[0;33mline:767:3[0m, [0;33mline:768:12[0m> [0;33mline:1954:12[0m struct[0;1;36m remove_all_extents[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x632c230[0m prev 0x632bfd0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_all_extents[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x632c2f8[0m <[0;33mline:1955:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m    `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x632c2c0[0m [0;32m'Pont'[0m sugar
[0;34m      |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5587580[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5587538[0m[0;1;36m '_Tp'[0m
[0;34m      `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m        `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m

Dumping std::remove_reference:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5523d00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:999:3[0m, [0;33mline:1000:12[0m> [0;33mcol:12[0m[0;1;36m remove_reference[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5523be8[0m <[0;33mline:999:12[0m> [0;33mcol:12[0m typename depth 0 index 0
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5523c70[0m <[0;33mline:1000:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m remove_reference[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d7a738[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d7aa20[0m prev 0x5d7a738 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d7aac0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char>':'std::basic_istream<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d7a910[0m [0;32m'std::basic_istream<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5490eb0[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5490db0[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d94118[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d94400[0m prev 0x5d94118 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d944a0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t>':'std::basic_istream<wchar_t>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d942f0[0m [0;32m'std::basic_istream<wchar_t>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5495980[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5495880[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x61dd018[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x61dd300[0m prev 0x61dd018 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61dd3a0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char>':'std::basic_ostream<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x61dd1f0[0m [0;32m'std::basic_ostream<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5491190[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5491090[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6279978[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6279c70[0m prev 0x6279978 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6279d10[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char>':'std::allocator<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6279b60[0m [0;32m'std::allocator<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x543fda0[0m [0;32m'std::allocator<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x543fcc0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62a2bb8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62a2eb0[0m prev 0x62a2bb8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62a2f50[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<wchar_t>':'std::allocator<wchar_t>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62a2da0[0m [0;32m'std::allocator<wchar_t>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5440210[0m [0;32m'std::allocator<wchar_t>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5440130[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62c6c58[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char16_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62c6f50[0m prev 0x62c6c58 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62c6ff0[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char16_t>':'std::allocator<char16_t>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62c6e40[0m [0;32m'std::allocator<char16_t>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5440680[0m [0;32m'std::allocator<char16_t>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x54405a0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62ddfa8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char32_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62de2a0[0m prev 0x62ddfa8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62de340[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char32_t>':'std::allocator<char32_t>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62de190[0m [0;32m'std::allocator<char32_t>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5441f50[0m [0;32m'std::allocator<char32_t>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5441e70[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62e7888[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62e7b80[0m prev 0x62e7888 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62e7c20[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'std::__cxx11::basic_string<char>':'std::__cxx11::basic_string<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62e7a70[0m [0;32m'std::__cxx11::basic_string<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x543ff40[0m [0;32m'std::__cxx11::basic_string<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x543fe30[0m[0;1;36m 'basic_string'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62f0458[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'bool (*&)(const Pont &, const Pont &)'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62f0770[0m prev 0x62f0458 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62f0810[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'bool (*)(const Pont &, const Pont &)':'bool (*)(const Pont &, const Pont &)'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62f0660[0m [0;32m'bool (*)(const Pont &, const Pont &)'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x6229c00[0m [0;32m'bool (*)(const Pont &, const Pont &)'[0m
[0;34m|       `-[0m[0;32mFunctionProtoType[0m[0;33m 0x61d7990[0m [0;32m'bool (const Pont &, const Pont &)'[0m cdecl
[0;34m|         |-[0m[0;32mBuiltinType[0m[0;33m 0x538c940[0m [0;32m'bool'[0m
[0;34m|         |-[0m[0;32mLValueReferenceType[0m[0;33m 0x61d5540[0m [0;32m'const Pont &'[0m
[0;34m|         | `-[0mQualType[0;33m 0x5e80d81[0m [0;32m'const Pont'[0m const
[0;34m|         |   `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m|         |     `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m
[0;34m|         `-[0m[0;32mLValueReferenceType[0m[0;33m 0x61d5540[0m [0;32m'const Pont &'[0m
[0;34m|           `-[0mQualType[0;33m 0x5e80d81[0m [0;32m'const Pont'[0m const
[0;34m|             `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m|               `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62ff3b8[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'Pont &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62ff6b0[0m prev 0x62ff3b8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62ff750[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62ff5a0[0m [0;32m'Pont'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6304988[0m <[0;33mline:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6304c80[0m prev 0x6304988 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6304d20[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6304b70[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x62ef820[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62ef738[0m[0;1;36m '_Iter_comp_iter'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6316038[0m <[0;33mline:1627:3[0m, [0;33mline:1629:27[0m> [0;33mline:1628:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63162a0[0m prev 0x6316038 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6316368[0m <[0;33mline:1629:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m    `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6316330[0m [0;32m'Pont'[0m sugar
[0;34m      |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556df00[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556deb8[0m[0;1;36m '_Tp'[0m
[0;34m      `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m        `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m

Dumping std::__is_move_constructible_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x553ae20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1151:3[0m, [0;33mline:1152:12[0m> [0;33mcol:12[0m[0;1;36m __is_move_constructible_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x553ab78[0m <[0;33mline:1151:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x553acf8[0m <[0;33mcol:26[0m, [0;33mcol:58[0m> [0;33mcol:31[0m [0;32m'bool'[0m depth 0 index 1
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x553ad58[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x553acb0[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x553ad90[0m <[0;33mline:1152:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m __is_move_constructible_impl[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x631ef50[0m <[0;33mline:1158:3[0m, [0;33mline:1161:7[0m> [0;33mline:1159:12[0m struct[0;1;36m __is_move_constructible_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'is_constructible<Pont, Pont &&>':'std::is_constructible<Pont, Pont &&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x633f9e8[0m prev 0x631ef50 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_constructible_impl[0m

Dumping std::__is_move_constructible_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x553bd10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1154:3[0m, [0;33mline:1156:27[0m> [0;33mline:1155:12[0m struct[0;1;36m __is_move_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x553b068[0m <[0;33mline:1154:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x553bfe8[0m <[0;33mline:1155:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_constructible_impl[0m

Dumping std::__is_move_constructible_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x553c288[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1158:3[0m, [0;33mline:1161:7[0m> [0;33mline:1159:12[0m struct[0;1;36m __is_move_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'is_constructible<_Tp, _Tp &&>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x553c090[0m <[0;33mline:1158:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x553c6e0[0m <[0;33mline:1159:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_constructible_impl[0m

Dumping std::is_move_constructible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x553c8a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1164:3[0m, [0;33mline:1167:7[0m> [0;33mline:1165:12[0m[0;1;36m is_move_constructible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x553c788[0m <[0;33mline:1164:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x553c810[0m <[0;33mline:1165:5[0m, [0;33mline:1167:7[0m> [0;33mline:1165:12[0m struct[0;1;36m is_move_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_move_constructible_impl<_Tp>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x553cd30[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_constructible[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6315530[0m <[0;33mline:1164:3[0m, [0;33mline:1167:7[0m> [0;33mline:1165:12[0m struct[0;1;36m is_move_constructible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_move_constructible_impl<Pont>':'std::__is_move_constructible_impl<Pont, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x633fac0[0m prev 0x6315530 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_constructible[0m

Dumping std::__is_nothrow_move_constructible_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5545a10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1237:3[0m, [0;33mline:1238:12[0m> [0;33mcol:12[0m[0;1;36m __is_nothrow_move_constructible_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5545768[0m <[0;33mline:1237:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x55458e8[0m <[0;33mcol:26[0m, [0;33mcol:58[0m> [0;33mcol:31[0m [0;32m'bool'[0m depth 0 index 1
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5545948[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x55458a0[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5545980[0m <[0;33mline:1238:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6343600[0m <[0;33mline:1244:3[0m, [0;33mline:1247:7[0m> [0;33mline:1245:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'is_nothrow_constructible<Pont, Pont &&>':'std::is_nothrow_constructible<Pont, Pont &&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63491a8[0m prev 0x6343600 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nothrow_move_constructible_impl[0m

Dumping std::__is_nothrow_move_constructible_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5545e48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1240:3[0m, [0;33mline:1242:27[0m> [0;33mline:1241:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5545c58[0m <[0;33mline:1240:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5546128[0m <[0;33mline:1241:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nothrow_move_constructible_impl[0m

Dumping std::__is_nothrow_move_constructible_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x55463c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1244:3[0m, [0;33mline:1247:7[0m> [0;33mline:1245:12[0m struct[0;1;36m __is_nothrow_move_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'is_nothrow_constructible<_Tp, _Tp &&>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55461d0[0m <[0;33mline:1244:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5546820[0m <[0;33mline:1245:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nothrow_move_constructible_impl[0m

Dumping std::is_nothrow_move_constructible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x55469e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1250:3[0m, [0;33mline:1253:7[0m> [0;33mline:1251:12[0m[0;1;36m is_nothrow_move_constructible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55468c8[0m <[0;33mline:1250:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5546950[0m <[0;33mline:1251:5[0m, [0;33mline:1253:7[0m> [0;33mline:1251:12[0m struct[0;1;36m is_nothrow_move_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_nothrow_move_constructible_impl<_Tp>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5547c70[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_constructible[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6342c68[0m <[0;33mline:1250:3[0m, [0;33mline:1253:7[0m> [0;33mline:1251:12[0m struct[0;1;36m is_nothrow_move_constructible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_nothrow_move_constructible_impl<Pont>':'std::__is_nothrow_move_constructible_impl<Pont, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6349280[0m prev 0x6342c68 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_constructible[0m

Dumping std::__is_move_assignable_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x554bae0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1295:3[0m, [0;33mline:1296:12[0m> [0;33mcol:12[0m[0;1;36m __is_move_assignable_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x554b838[0m <[0;33mline:1295:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x554b9b8[0m <[0;33mcol:26[0m, [0;33mcol:58[0m> [0;33mcol:31[0m [0;32m'bool'[0m depth 0 index 1
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x554ba18[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x554b970[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x554ba50[0m <[0;33mline:1296:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m __is_move_assignable_impl[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x63402b0[0m <[0;33mline:1302:3[0m, [0;33mline:1305:7[0m> [0;33mline:1303:12[0m struct[0;1;36m __is_move_assignable_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'is_assignable<Pont &, Pont &&>':'std::is_assignable<Pont &, Pont &&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6342428[0m prev 0x63402b0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_assignable_impl[0m

Dumping std::__is_move_assignable_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x554bf18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1298:3[0m, [0;33mline:1300:27[0m> [0;33mline:1299:12[0m struct[0;1;36m __is_move_assignable_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x554bd28[0m <[0;33mline:1298:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x554c1f8[0m <[0;33mline:1299:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_assignable_impl[0m

Dumping std::__is_move_assignable_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x554c498[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1302:3[0m, [0;33mline:1305:7[0m> [0;33mline:1303:12[0m struct[0;1;36m __is_move_assignable_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'is_assignable<_Tp &, _Tp &&>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x554c2a0[0m <[0;33mline:1302:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x554d2c0[0m <[0;33mline:1303:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_assignable_impl[0m

Dumping std::is_move_assignable:
[0;1;32mClassTemplateDecl[0m[0;33m 0x554d480[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1308:3[0m, [0;33mline:1311:7[0m> [0;33mline:1309:12[0m[0;1;36m is_move_assignable[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x554d368[0m <[0;33mline:1308:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x554d3f0[0m <[0;33mline:1309:5[0m, [0;33mline:1311:7[0m> [0;33mline:1309:12[0m struct[0;1;36m is_move_assignable[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_move_assignable_impl<_Tp>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x554d910[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_assignable[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x63156b0[0m <[0;33mline:1308:3[0m, [0;33mline:1311:7[0m> [0;33mline:1309:12[0m struct[0;1;36m is_move_assignable[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_move_assignable_impl<Pont>':'std::__is_move_assignable_impl<Pont, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6342500[0m prev 0x63156b0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_move_assignable[0m

Dumping std::__is_nt_move_assignable_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5551660[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1343:3[0m, [0;33mline:1344:12[0m> [0;33mcol:12[0m[0;1;36m __is_nt_move_assignable_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55513b8[0m <[0;33mline:1343:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5551538[0m <[0;33mcol:26[0m, [0;33mcol:58[0m> [0;33mcol:31[0m [0;32m'bool'[0m depth 0 index 1
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5551598[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x55514f0[0m <[0;33mcol:33[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x55515d0[0m <[0;33mline:1344:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6349a70[0m <[0;33mline:1350:3[0m, [0;33mline:1353:7[0m> [0;33mline:1351:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'is_nothrow_assignable<Pont &, Pont &&>':'std::is_nothrow_assignable<Pont &, Pont &&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x634b768[0m prev 0x6349a70 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nt_move_assignable_impl[0m

Dumping std::__is_nt_move_assignable_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5551a98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1346:3[0m, [0;33mline:1348:27[0m> [0;33mline:1347:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55518a8[0m <[0;33mline:1346:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5551d78[0m <[0;33mline:1347:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nt_move_assignable_impl[0m

Dumping std::__is_nt_move_assignable_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5552018[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1350:3[0m, [0;33mline:1353:7[0m> [0;33mline:1351:12[0m struct[0;1;36m __is_nt_move_assignable_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'is_nothrow_assignable<_Tp &, _Tp &&>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5551e20[0m <[0;33mline:1350:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5553e50[0m <[0;33mline:1351:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_nt_move_assignable_impl[0m

Dumping std::is_nothrow_move_assignable:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5554010[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1356:3[0m, [0;33mline:1359:7[0m> [0;33mline:1357:12[0m[0;1;36m is_nothrow_move_assignable[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5553ef8[0m <[0;33mline:1356:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5553f80[0m <[0;33mline:1357:5[0m, [0;33mline:1359:7[0m> [0;33mline:1357:12[0m struct[0;1;36m is_nothrow_move_assignable[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_nt_move_assignable_impl<_Tp>'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x55544a0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_assignable[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6342df0[0m <[0;33mline:1356:3[0m, [0;33mline:1359:7[0m> [0;33mline:1357:12[0m struct[0;1;36m is_nothrow_move_assignable[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_nt_move_assignable_impl<Pont>':'std::__is_nt_move_assignable_impl<Pont, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x634b840[0m prev 0x6342df0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_nothrow_move_assignable[0m

Dumping std::is_trivially_move_constructible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5558260[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1413:3[0m, [0;33mline:1418:7[0m> [0;33mline:1414:12[0m[0;1;36m is_trivially_move_constructible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5558148[0m <[0;33mline:1413:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x55581d0[0m <[0;33mline:1414:5[0m, [0;33mline:1418:7[0m> [0;33mline:1414:12[0m struct[0;1;36m is_trivially_move_constructible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__and_<is_move_constructible<_Tp>, integral_constant<bool, __is_trivially_constructible(_Tp, _Tp &&)> >'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x555b380[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_trivially_move_constructible[0m

Dumping std::is_trivially_move_assignable:
[0;1;32mClassTemplateDecl[0m[0;33m 0x555c6a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1437:3[0m, [0;33mline:1442:7[0m> [0;33mline:1438:12[0m[0;1;36m is_trivially_move_assignable[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x555c588[0m <[0;33mline:1437:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x555c610[0m <[0;33mline:1438:5[0m, [0;33mline:1442:7[0m> [0;33mline:1438:12[0m struct[0;1;36m is_trivially_move_assignable[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__and_<is_move_assignable<_Tp>, integral_constant<bool, __is_trivially_assignable(_Tp &, _Tp &&)> >'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x555cd30[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_trivially_move_assignable[0m

Dumping std::remove_const:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5569570[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m[0;1;36m remove_const[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5568ae8[0m <[0;33mline:1552:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x55694e0[0m <[0;33mline:1553:5[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x55697c0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5569860[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m|   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c77120[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c77358[0m prev 0x5c77120 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c77428[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char>':'std::allocator<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5c773f0[0m [0;32m'std::allocator<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x543fda0[0m [0;32m'std::allocator<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x543fcc0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d7f700[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d7f938[0m prev 0x5d7f700 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d7fa08[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d7f9d0[0m [0;32m'std::basic_istream<char> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5d2c880[0m [0;32m'std::basic_istream<char> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5490eb0[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5490db0[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d834d0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d83708[0m prev 0x5d834d0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d837d8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char> &':'std::basic_istream<char> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d837a0[0m [0;32m'std::basic_istream<char> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x59645b0[0m [0;32m'std::basic_istream<char> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5490eb0[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5490db0[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d9a560[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d9a798[0m prev 0x5d9a560 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d9a868[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d9a830[0m [0;32m'std::basic_istream<wchar_t> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5d33d70[0m [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5495980[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5495880[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d9e230[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d9e468[0m prev 0x5d9e230 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d9e538[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d9e500[0m [0;32m'std::basic_istream<wchar_t> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x59693b0[0m [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5495980[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5495880[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x61e1fc0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x61e21f8[0m prev 0x61e1fc0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61e22c8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x61e2290[0m [0;32m'std::basic_ostream<char> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5cce750[0m [0;32m'std::basic_ostream<char> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5491190[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5491090[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x61e5d10[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x61e5f48[0m prev 0x61e5d10 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61e6018[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char> &':'std::basic_ostream<char> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x61e5fe0[0m [0;32m'std::basic_ostream<char> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x584b780[0m [0;32m'std::basic_ostream<char> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5491190[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5491090[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6252b70[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6252da8[0m prev 0x6252b70 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6252e78[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::random_access_iterator_tag':'std::random_access_iterator_tag'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6252e40[0m [0;32m'std::random_access_iterator_tag'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x566e3b0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x566e320[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6262500[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6262738[0m prev 0x6262500 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6262808[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char':'char'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62627d0[0m [0;32m'char'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538c960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62771d0[0m <[0;33mline:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6277450[0m prev 0x62771d0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62774f0[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char':'char'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62773a0[0m [0;32m'char'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538c960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6290550[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6290788[0m prev 0x6290550 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6290858[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'wchar_t':'wchar_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6290820[0m [0;32m'wchar_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62a0490[0m <[0;33mline:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62a0710[0m prev 0x62a0490 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62a07b0[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'wchar_t':'wchar_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62a0660[0m [0;32m'wchar_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62b4b70[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62b4da8[0m prev 0x62b4b70 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62b4e78[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char16_t':'char16_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62b4e40[0m [0;32m'char16_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62c45e0[0m <[0;33mline:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62c4860[0m prev 0x62c45e0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62c4900[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char16_t':'char16_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62c47b0[0m [0;32m'char16_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62c9db0[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62c9fe8[0m prev 0x62c9db0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62ca0b8[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char32_t':'char32_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62ca080[0m [0;32m'char32_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cf00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62db930[0m <[0;33mline:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62dbbb0[0m prev 0x62db930 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62dbc50[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char32_t':'char32_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62dbb00[0m [0;32m'char32_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cf00[0m [0;32m'char32_t'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6316b10[0m <[0;33mline:1552:3[0m, [0;33mline:1554:29[0m> [0;33mline:1553:12[0m struct[0;1;36m remove_const[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6316d48[0m prev 0x6316b10 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6316e18[0m <[0;33mline:1554:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m    `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6316de0[0m [0;32m'Pont'[0m sugar
[0;34m      |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5568b30[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5568ae8[0m[0;1;36m '_Tp'[0m
[0;34m      `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m        `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m

Dumping std::remove_const:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5569a30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1556:3[0m, [0;33mline:1558:29[0m> [0;33mline:1557:12[0m struct[0;1;36m remove_const[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'const type-parameter-0-0'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55698d0[0m <[0;33mline:1556:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5569c58[0m <[0;33mline:1557:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_const[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5569cf8[0m <[0;33mline:1558:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569920[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x55698d0[0m[0;1;36m '_Tp'[0m

Dumping std::remove_volatile:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5569e80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m[0;1;36m remove_volatile[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5569d68[0m <[0;33mline:1561:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5569df0[0m <[0;33mline:1562:5[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x556a0d0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x556a170[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m|   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c76d28[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c76f68[0m prev 0x5c76d28 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c77038[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::allocator<char>':'std::allocator<char>'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5c77000[0m [0;32m'std::allocator<char>'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x543fda0[0m [0;32m'std::allocator<char>'[0m
[0;34m|       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x543fcc0[0m[0;1;36m 'allocator'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d7f308[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d7f548[0m prev 0x5d7f308 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d7f618[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d7f5e0[0m [0;32m'std::basic_istream<char> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5d2c880[0m [0;32m'std::basic_istream<char> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5490eb0[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5490db0[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d830d8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d83318[0m prev 0x5d830d8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d833e8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<char> &':'std::basic_istream<char> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d833b0[0m [0;32m'std::basic_istream<char> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x59645b0[0m [0;32m'std::basic_istream<char> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5490eb0[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5490db0[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d9a168[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d9a3a8[0m prev 0x5d9a168 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d9a478[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d9a440[0m [0;32m'std::basic_istream<wchar_t> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5d33d70[0m [0;32m'std::basic_istream<wchar_t> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5495980[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5495880[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d9de38[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d9e078[0m prev 0x5d9de38 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d9e148[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x5d9e110[0m [0;32m'std::basic_istream<wchar_t> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x59693b0[0m [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5495980[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5495880[0m[0;1;36m 'basic_istream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x61e1bc8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> *'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x61e1e08[0m prev 0x61e1bc8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61e1ed8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x61e1ea0[0m [0;32m'std::basic_ostream<char> *'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mPointerType[0m[0;33m 0x5cce750[0m [0;32m'std::basic_ostream<char> *'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5491190[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5491090[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x61e5918[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x61e5b58[0m prev 0x61e5918 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61e5c28[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::basic_ostream<char> &':'std::basic_ostream<char> &'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x61e5bf0[0m [0;32m'std::basic_ostream<char> &'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x584b780[0m [0;32m'std::basic_ostream<char> &'[0m
[0;34m|       `-[0m[0;32mRecordType[0m[0;33m 0x5491190[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m|         `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5491090[0m[0;1;36m 'basic_ostream'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6252778[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62529b8[0m prev 0x6252778 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6252a88[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'std::random_access_iterator_tag':'std::random_access_iterator_tag'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6252a50[0m [0;32m'std::random_access_iterator_tag'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mRecordType[0m[0;33m 0x566e3b0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m|       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x566e320[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6262108[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6262348[0m prev 0x6262108 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6262418[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char':'char'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62623e0[0m [0;32m'char'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538c960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6276dd8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6277018[0m prev 0x6276dd8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62770e8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'const char':'const char'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62770b0[0m [0;32m'const char'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x538c961[0m [0;32m'const char'[0m const
[0;34m|       `-[0m[0;32mBuiltinType[0m[0;33m 0x538c960[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6290158[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6290398[0m prev 0x6290158 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6290468[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'wchar_t':'wchar_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6290430[0m [0;32m'wchar_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62a0098[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62a02d8[0m prev 0x62a0098 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62a03a8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'const wchar_t':'const wchar_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62a0370[0m [0;32m'const wchar_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x538cea1[0m [0;32m'const wchar_t'[0m const
[0;34m|       `-[0m[0;32mBuiltinType[0m[0;33m 0x538cea0[0m [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62b4778[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62b49b8[0m prev 0x62b4778 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62b4a88[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char16_t':'char16_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62b4a50[0m [0;32m'char16_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62c41e8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62c4428[0m prev 0x62c41e8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62c44f8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'const char16_t':'const char16_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62c44c0[0m [0;32m'const char16_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x538cee1[0m [0;32m'const char16_t'[0m const
[0;34m|       `-[0m[0;32mBuiltinType[0m[0;33m 0x538cee0[0m [0;32m'char16_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62c99b8[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62c9bf8[0m prev 0x62c99b8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62c9cc8[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'char32_t':'char32_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62c9c90[0m [0;32m'char32_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0m[0;32mBuiltinType[0m[0;33m 0x538cf00[0m [0;32m'char32_t'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x62db538[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x62db778[0m prev 0x62db538 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x62db848[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'const char32_t':'const char32_t'[0m
[0;34m|   `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x62db810[0m [0;32m'const char32_t'[0m sugar
[0;34m|     |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m|     `-[0mQualType[0;33m 0x538cf01[0m [0;32m'const char32_t'[0m const
[0;34m|       `-[0m[0;32mBuiltinType[0m[0;33m 0x538cf00[0m [0;32m'char32_t'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6316718[0m <[0;33mline:1561:3[0m, [0;33mline:1563:29[0m> [0;33mline:1562:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'Pont'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6316958[0m prev 0x6316718 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6316a28[0m <[0;33mline:1563:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m type[0m [0;32m'Pont':'Pont'[0m
[0;34m    `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x63169f0[0m [0;32m'Pont'[0m sugar
[0;34m      |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5569db0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5569d68[0m[0;1;36m '_Tp'[0m
[0;34m      `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m        `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m

Dumping std::remove_volatile:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x556a340[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1565:3[0m, [0;33mline:1567:29[0m> [0;33mline:1566:12[0m struct[0;1;36m remove_volatile[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'volatile type-parameter-0-0'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x556a1e0[0m <[0;33mline:1565:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x556a568[0m <[0;33mline:1566:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_volatile[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x556a608[0m <[0;33mline:1567:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556a230[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556a1e0[0m[0;1;36m '_Tp'[0m

Dumping std::remove_cv:
[0;1;32mClassTemplateDecl[0m[0;33m 0x556a790[0m prev 0x54d0ae0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1570:3[0m, [0;33mline:1575:5[0m> [0;33mline:1571:12[0m[0;1;36m remove_cv[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x556a678[0m <[0;33mline:1570:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x556a700[0m prev 0x54d0a50 <[0;33mline:1571:5[0m, [0;33mline:1575:5[0m> [0;33mline:1571:12[0m struct[0;1;36m remove_cv[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x556a850[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_cv[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x556abd0[0m <[0;33mline:1573:7[0m, [0;33mline:1574:67[0m> [0;33mcol:67[0m[0;1;36m type[0m [0;32m'typename remove_const<typename remove_volatile<_Tp>::type>::type'[0m
[0;34m|   `-[0m[0;32mDependentNameType[0m[0;33m 0x556ab60[0m [0;32m'typename remove_const<typename remove_volatile<_Tp>::type>::type'[0m dependent
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5c76a58[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d7f038[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d82e08[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d99e98[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d9db68[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x61e18f8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x61e5648[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62524a8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6261e38[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6276b08[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x628fe88[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x629fdc8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62b44a8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62c3f18[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62c96e8[0m[0;1;36m 'remove_cv'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62db268[0m[0;1;36m 'remove_cv'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6316450[0m[0;1;36m 'remove_cv'[0m

Dumping std::remove_const_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x556d230[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1600:3[0m, [0;33mline:1601:56[0m> [0;33mcol:5[0m[0;1;36m remove_const_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x556cfe0[0m <[0;33mline:1600:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x556d1d0[0m <[0;33mline:1601:5[0m, [0;33mcol:56[0m> [0;33mcol:11[0m[0;1;36m remove_const_t[0m [0;32m'typename remove_const<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x556d160[0m [0;32m'typename remove_const<_Tp>::type'[0m dependent

Dumping std::remove_volatile_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x556d480[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1604:3[0m, [0;33mline:1605:62[0m> [0;33mcol:5[0m[0;1;36m remove_volatile_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x556d288[0m <[0;33mline:1604:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x556d420[0m <[0;33mline:1605:5[0m, [0;33mcol:62[0m> [0;33mcol:11[0m[0;1;36m remove_volatile_t[0m [0;32m'typename remove_volatile<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x556d3b0[0m [0;32m'typename remove_volatile<_Tp>::type'[0m dependent

Dumping std::remove_cv_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x556d6d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1608:3[0m, [0;33mline:1609:50[0m> [0;33mcol:5[0m[0;1;36m remove_cv_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x556d4d8[0m <[0;33mline:1608:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x556d670[0m <[0;33mline:1609:5[0m, [0;33mcol:50[0m> [0;33mcol:11[0m[0;1;36m remove_cv_t[0m [0;32m'typename remove_cv<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x556d600[0m [0;32m'typename remove_cv<_Tp>::type'[0m dependent

Dumping std::remove_reference:
[0;1;32mClassTemplateDecl[0m[0;33m 0x556dfd0[0m prev 0x5523d00 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1627:3[0m, [0;33mline:1629:27[0m> [0;33mline:1628:12[0m[0;1;36m remove_reference[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x556deb8[0m <[0;33mline:1627:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x556df40[0m prev 0x5523c70 <[0;33mline:1628:5[0m, [0;33mline:1629:27[0m> [0;33mline:1628:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x556e090[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x556e130[0m <[0;33mline:1629:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m|   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556df00[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556deb8[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d7a738[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d94118[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x61dd018[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6279978[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62a2bb8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62c6c58[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62ddfa8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62e7888[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62f0458[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x62ff3b8[0m[0;1;36m 'remove_reference'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6304988[0m[0;1;36m 'remove_reference'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6316038[0m[0;1;36m 'remove_reference'[0m

Dumping std::remove_reference:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x556e330[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1631:3[0m, [0;33mline:1633:27[0m> [0;33mline:1632:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 &'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x556e1a0[0m <[0;33mline:1631:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x556e558[0m <[0;33mline:1632:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x556e5f8[0m <[0;33mline:1633:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e1f0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e1a0[0m[0;1;36m '_Tp'[0m

Dumping std::remove_reference:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x556fe10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1635:3[0m, [0;33mline:1637:27[0m> [0;33mline:1636:12[0m struct[0;1;36m remove_reference[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 &&'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x556e668[0m <[0;33mline:1635:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5570038[0m <[0;33mline:1636:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_reference[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x55700d8[0m <[0;33mline:1637:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x556e6b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x556e668[0m[0;1;36m '_Tp'[0m

Dumping std::remove_reference_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x5573570[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1669:3[0m, [0;33mline:1670:64[0m> [0;33mcol:5[0m[0;1;36m remove_reference_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5573378[0m <[0;33mline:1669:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x5573510[0m <[0;33mline:1670:5[0m, [0;33mcol:64[0m> [0;33mcol:11[0m[0;1;36m remove_reference_t[0m [0;32m'typename remove_reference<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x55734a0[0m [0;32m'typename remove_reference<_Tp>::type'[0m dependent

Dumping std::remove_extent:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5586720[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1940:3[0m, [0;33mline:1942:29[0m> [0;33mline:1941:12[0m[0;1;36m remove_extent[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5586608[0m <[0;33mline:1940:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5586690[0m <[0;33mline:1941:5[0m, [0;33mline:1942:29[0m> [0;33mline:1941:12[0m struct[0;1;36m remove_extent[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5586970[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_extent[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5586a10[0m <[0;33mline:1942:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m    `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5586650[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5586608[0m[0;1;36m '_Tp'[0m

Dumping std::remove_extent:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5586d10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1944:3[0m, [0;33mline:1946:29[0m> [0;33mline:1945:12[0m struct[0;1;36m remove_extent[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 [_Size]'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5586a80[0m <[0;33mline:1944:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5586b48[0m <[0;33mcol:26[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced [0;32m'std::size_t':'unsigned long'[0m depth 0 index 1[0;1;36m _Size[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5586f48[0m <[0;33mline:1945:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_extent[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5586fe8[0m <[0;33mline:1946:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5586ad0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5586a80[0m[0;1;36m '_Tp'[0m

Dumping std::remove_extent:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x55871f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1948:3[0m, [0;33mline:1950:29[0m> [0;33mline:1949:12[0m struct[0;1;36m remove_extent[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 []'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5587058[0m <[0;33mline:1948:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5587428[0m <[0;33mline:1949:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_extent[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x55874c8[0m <[0;33mline:1950:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x55870a0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5587058[0m[0;1;36m '_Tp'[0m

Dumping std::remove_all_extents:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5587650[0m prev 0x550c3c0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1953:3[0m, [0;33mline:1955:29[0m> [0;33mline:1954:12[0m[0;1;36m remove_all_extents[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5587538[0m <[0;33mline:1953:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x55875c0[0m prev 0x550c330 <[0;33mline:1954:5[0m, [0;33mline:1955:29[0m> [0;33mline:1954:12[0m struct[0;1;36m remove_all_extents[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5587710[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_all_extents[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5589230[0m <[0;33mline:1955:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m|   `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5587580[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m|     `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5587538[0m[0;1;36m '_Tp'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x632bfd0[0m[0;1;36m 'remove_all_extents'[0m

Dumping std::remove_all_extents:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5589530[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1957:3[0m, [0;33mline:1959:64[0m> [0;33mline:1958:12[0m struct[0;1;36m remove_all_extents[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 [_Size]'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55892a0[0m <[0;33mline:1957:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5589368[0m <[0;33mcol:26[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced [0;32m'std::size_t':'unsigned long'[0m depth 0 index 1[0;1;36m _Size[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5589768[0m <[0;33mline:1958:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_all_extents[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5589910[0m <[0;33mline:1959:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m type[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x55898a0[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m dependent

Dumping std::remove_all_extents:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5589b20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1961:3[0m, [0;33mline:1963:64[0m> [0;33mline:1962:12[0m struct[0;1;36m remove_all_extents[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0 []'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5589980[0m <[0;33mline:1961:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5589d58[0m <[0;33mline:1962:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_all_extents[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5589f00[0m <[0;33mline:1963:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m type[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x5589e90[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m dependent

Dumping std::remove_extent_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x558a1c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1967:3[0m, [0;33mline:1968:58[0m> [0;33mcol:5[0m[0;1;36m remove_extent_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5589f70[0m <[0;33mline:1967:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x558a160[0m <[0;33mline:1968:5[0m, [0;33mcol:58[0m> [0;33mcol:11[0m[0;1;36m remove_extent_t[0m [0;32m'typename remove_extent<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x558a0f0[0m [0;32m'typename remove_extent<_Tp>::type'[0m dependent

Dumping std::remove_all_extents_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x558a410[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1971:3[0m, [0;33mline:1972:68[0m> [0;33mcol:5[0m[0;1;36m remove_all_extents_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x558a218[0m <[0;33mline:1971:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x558a3b0[0m <[0;33mline:1972:5[0m, [0;33mcol:68[0m> [0;33mcol:11[0m[0;1;36m remove_all_extents_t[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x558a340[0m [0;32m'typename remove_all_extents<_Tp>::type'[0m dependent

Dumping std::__remove_pointer_helper:
[0;1;32mClassTemplateDecl[0m[0;33m 0x558a5f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1977:3[0m, [0;33mline:1979:29[0m> [0;33mline:1978:12[0m[0;1;36m __remove_pointer_helper[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x558a468[0m <[0;33mline:1977:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x558a4d8[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x558a568[0m <[0;33mline:1978:5[0m, [0;33mline:1979:29[0m> [0;33mline:1978:12[0m struct[0;1;36m __remove_pointer_helper[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x558a890[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_pointer_helper[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x558a930[0m <[0;33mline:1979:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Tp'[0m
[0;34m    `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x558a4b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m      `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x558a468[0m[0;1;36m '_Tp'[0m

Dumping std::__remove_pointer_helper:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x558ac58[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1981:3[0m, [0;33mline:1983:29[0m> [0;33mline:1982:12[0m struct[0;1;36m __remove_pointer_helper[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-1 *'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x558a9a0[0m <[0;33mline:1981:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x558aa18[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x558aed8[0m <[0;33mline:1982:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_pointer_helper[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x558af78[0m <[0;33mline:1983:7[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m type[0m [0;32m'_Up'[0m
[0;34m  `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x558aa60[0m [0;32m'_Up'[0m dependent depth 0 index 1
[0;34m    `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x558aa18[0m[0;1;36m '_Up'[0m

Dumping std::remove_pointer:
[0;1;32mClassTemplateDecl[0m[0;33m 0x558b100[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1986:3[0m, [0;33mline:1989:7[0m> [0;33mline:1987:12[0m[0;1;36m remove_pointer[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x558afe8[0m <[0;33mline:1986:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x558b070[0m <[0;33mline:1987:5[0m, [0;33mline:1989:7[0m> [0;33mline:1987:12[0m struct[0;1;36m remove_pointer[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__remove_pointer_helper<_Tp, typename remove_cv<_Tp>::type>'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x558cc40[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m remove_pointer[0m

Dumping std::remove_pointer_t:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x558e6b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2008:3[0m, [0;33mline:2009:60[0m> [0;33mcol:5[0m[0;1;36m remove_pointer_t[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x558e468[0m <[0;33mline:2008:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x558e650[0m <[0;33mline:2009:5[0m, [0;33mcol:60[0m> [0;33mcol:11[0m[0;1;36m remove_pointer_t[0m [0;32m'typename remove_pointer<_Tp>::type'[0m
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x558e5e0[0m [0;32m'typename remove_pointer<_Tp>::type'[0m dependent

Dumping std::decay::__remove_type:
[0;1;32mTypedefDecl[0m[0;33m 0x5599850[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2118:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __remove_type[0m [0;32m'typename remove_reference<_Tp>::type'[0m
[0;34m`-[0m[0;32mDependentNameType[0m[0;33m 0x55997e0[0m [0;32m'typename remove_reference<_Tp>::type'[0m dependent

Dumping std::move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x55d77d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:96:3[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m[0;1;36m move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55d7430[0m <[0;33mline:96:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x55d7738[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<_Tp>::type &&(_Tp &&) noexcept'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x55d75f8[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x55d79f0[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x55d79e0[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x55d79b0[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<_Tp>::type'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<_Tp>::type &&> <Dependent>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x55d7940[0m <[0;33mcol:71[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x55d75f8[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6279f48[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<char> &>::type &&(std::allocator<char> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6279e38[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<char> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x627a210[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x627a200[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x627a1d0[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<char> &>::type':'std::allocator<char>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<char> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x627a1b0[0m <[0;33mcol:71[0m> [0;32m'std::allocator<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6279e38[0m[0;1;36m '__t'[0m [0;32m'std::allocator<char> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62a3188[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<wchar_t> &>::type &&(std::allocator<wchar_t> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<wchar_t> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62a3078[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<wchar_t> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x62a3450[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x62a3440[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x62a3410[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<wchar_t> &>::type':'std::allocator<wchar_t>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<wchar_t> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x62a33f0[0m <[0;33mcol:71[0m> [0;32m'std::allocator<wchar_t>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x62a3078[0m[0;1;36m '__t'[0m [0;32m'std::allocator<wchar_t> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62c7228[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<char16_t> &>::type &&(std::allocator<char16_t> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char16_t> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62c7118[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<char16_t> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x62c74f0[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x62c74e0[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x62c74b0[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<char16_t> &>::type':'std::allocator<char16_t>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<char16_t> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x62c7490[0m <[0;33mcol:71[0m> [0;32m'std::allocator<char16_t>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x62c7118[0m[0;1;36m '__t'[0m [0;32m'std::allocator<char16_t> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62de578[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<allocator<char32_t> &>::type &&(std::allocator<char32_t> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::allocator<char32_t> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62de468[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::allocator<char32_t> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x62de840[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x62de830[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x62de800[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<allocator<char32_t> &>::type':'std::allocator<char32_t>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class allocator<char32_t> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x62de7e0[0m <[0;33mcol:71[0m> [0;32m'std::allocator<char32_t>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x62de468[0m[0;1;36m '__t'[0m [0;32m'std::allocator<char32_t> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62e7e58[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<basic_string<char> &>::type &&(std::__cxx11::basic_string<char> &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char> &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62e7d48[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'std::__cxx11::basic_string<char> &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x62e8120[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x62e8110[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x62e80e0[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<basic_string<char> &>::type':'std::__cxx11::basic_string<char>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class basic_string<char> &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x62e80c0[0m <[0;33mcol:71[0m> [0;32m'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x62e7d48[0m[0;1;36m '__t'[0m [0;32m'std::__cxx11::basic_string<char> &'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62f0a78[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<bool (*&)(const Pont &, const Pont &)>::type &&(bool (*&)(const Pont &, const Pont &)) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'bool (*&)(const Pont &, const Pont &)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f0968[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'bool (*&)(const Pont &, const Pont &)'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x62f0d40[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x62f0d30[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x62f0d00[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<bool (*&)(const Pont &, const Pont &)>::type':'bool (*)(const Pont &, const Pont &)'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<_Bool (*&)(const class Pont &, const class Pont &)>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x62f0ce0[0m <[0;33mcol:71[0m> [0;32m'bool (*)(const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x62f0968[0m[0;1;36m '__t'[0m [0;32m'bool (*&)(const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62ff988[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<Pont &>::type &&(Pont &) noexcept'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'Pont &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62ff878[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'Pont &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x62ffc50[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x62ffc40[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m|     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x62ffc10[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<Pont &>::type':'Pont'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<class Pont &>::type &&> <NoOp>
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x62ffbf0[0m <[0;33mcol:71[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x62ff878[0m[0;1;36m '__t'[0m [0;32m'Pont &'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6304f58[0m <[0;33mline:97:5[0m, [0;33mline:99:77[0m> [0;33mline:98:5[0m used constexpr[0;1;36m move[0m [0;32m'typename std::remove_reference<_Iter_comp_iter<bool (*)(const Pont &, const Pont &)> &>::type &&(__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)> &) noexcept'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)> &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6304e48[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __t[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)> &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6305ef0[0m <[0;33mline:99:5[0m, [0;33mcol:77[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6305ee0[0m <[0;33mcol:7[0m, [0;33mcol:74[0m>
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6305eb0[0m <[0;33mcol:14[0m, [0;33mcol:74[0m> [0;32m'typename std::remove_reference<_Iter_comp_iter<bool (*)(const Pont &, const Pont &)> &>::type':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m[0;36m xvalue[0m[0;36m[0m static_cast<typename std::remove_reference<struct _Iter_comp_iter<_Bool (*)(const class Pont &, const class Pont &)> &>::type &&> <NoOp>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6305e90[0m <[0;33mcol:71[0m> [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6304e48[0m[0;1;36m '__t'[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)> &'[0m

Dumping std::__move_if_noexcept_cond:
[0;1;32mClassTemplateDecl[0m[0;33m 0x55d7b20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:102:3[0m, [0;33mline:105:57[0m> [0;33mline:103:12[0m[0;1;36m __move_if_noexcept_cond[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55d7a08[0m <[0;33mline:102:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x55d7a90[0m <[0;33mline:103:5[0m, [0;33mline:105:57[0m> [0;33mline:103:12[0m struct[0;1;36m __move_if_noexcept_cond[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__and_<__not_<is_nothrow_move_constructible<_Tp> >, is_copy_constructible<_Tp> >::type'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x55d86d0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __move_if_noexcept_cond[0m

Dumping std::move_if_noexcept:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x55d8da0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:115:3[0m, [0;33mline:119:30[0m> [0;33mline:118:5[0m[0;1;36m move_if_noexcept[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x55d8778[0m <[0;33mline:115:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x55d8d00[0m <[0;33mline:116:5[0m, [0;33mline:119:30[0m> [0;33mline:118:5[0m constexpr[0;1;36m move_if_noexcept[0m [0;32m'typename conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp &, _Tp &&>::type (_Tp &) noexcept'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x55d8bf8[0m <[0;33mcol:22[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __x[0m [0;32m'_Tp &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x55d8ec0[0m <[0;33mline:119:5[0m, [0;33mcol:30[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x55d8eb0[0m <[0;33mcol:7[0m, [0;33mcol:27[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x55d8e88[0m <[0;33mcol:14[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x55d8e20[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x55d8e68[0m <[0;33mcol:24[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x55d8bf8[0m[0;1;36m '__x'[0m [0;32m'_Tp &'[0m

Dumping std::__is_move_iterator:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5614f80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:397:3[0m, [0;33mline:402:5[0m> [0;33mline:398:12[0m[0;1;36m __is_move_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5614e68[0m <[0;33mline:397:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5614ef0[0m <[0;33mline:398:5[0m, [0;33mline:402:5[0m> [0;33mline:398:12[0m struct[0;1;36m __is_move_iterator[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56151d0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_iterator[0m
[0;34m  |-[0m[0;1;32mEnumDecl[0m[0;33m 0x5615260[0m <[0;33mline:400:7[0m, [0;33mcol:26[0m> [0;33mcol:7[0m
[0;34m  | `-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x5615340[0m <[0;33mcol:14[0m, [0;33mcol:24[0m> [0;33mcol:14[0m[0;1;36m __value[0m [0;32m'std::__is_move_iterator::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:400:7)'[0m
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5615320[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56153a0[0m <[0;33mline:401:7[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m __type[0m [0;32m'std::__false_type'[0m
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x55e93d0[0m [0;32m'std::__false_type'[0m
[0;34m      `-[0m[0;1;32mCXXRecord[0m[0;33m 0x55e9340[0m[0;1;36m '__false_type'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateDecl[0m[0;33m 0x561f860[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:107:3[0m, [0;33mline:115:5[0m> [0;33mline:108:12[0m[0;1;36m __remove_unsigned[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x561f740[0m <[0;33mline:107:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x561f7d0[0m <[0;33mline:108:5[0m, [0;33mline:115:5[0m> [0;33mline:108:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x561fab0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x561fb40[0m <[0;33mline:110:5[0m, [0;33mcol:12[0m> [0;33mcol:5[0m private
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x561fda8[0m <[0;33mline:111:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m __if_type[0m [0;32m'__enable_if<std::__is_integer<_Tp>::__value, _Tp>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x561fcc0[0m [0;32m'__enable_if<std::__is_integer<_Tp>::__value, _Tp>'[0m dependent __enable_if
[0;34m| |   |-[0mTemplateArgument expr
[0;34m| |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x561fca8[0m <[0;33mcol:27[0m, [0;33mcol:51[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m| |   |   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x561fc60[0m <[0;33mcol:27[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'_Tp'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x561fe00[0m <[0;33mline:113:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x561fef0[0m <[0;33mline:114:7[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __type[0m [0;32m'typename __if_type::__type'[0m
[0;34m|   `-[0m[0;32mDependentNameType[0m[0;33m 0x561fe80[0m [0;32m'typename __if_type::__type'[0m dependent
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x561ff80[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5620dc8[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5621128[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5621488[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x56217e8[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5621b48[0m[0;1;36m '__remove_unsigned'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5621ea0[0m[0;1;36m '__remove_unsigned'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5622070[0m[0;1;36m '__remove_unsigned'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x561ff80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:117:3[0m, [0;33mline:119:35[0m> [0;33mline:118:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'char'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5620198[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5620d30[0m <[0;33mline:119:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __type[0m [0;32m'signed char'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x538c980[0m [0;32m'signed char'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5620dc8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:121:3[0m, [0;33mline:123:35[0m> [0;33mline:122:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned char'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5620fe8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5621090[0m <[0;33mline:123:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __type[0m [0;32m'signed char'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x538c980[0m [0;32m'signed char'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5621128[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:125:3[0m, [0;33mline:127:29[0m> [0;33mline:126:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned short'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5621348[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56213f0[0m <[0;33mline:127:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __type[0m [0;32m'short'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x538c9a0[0m [0;32m'short'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5621488[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:129:3[0m, [0;33mline:131:27[0m> [0;33mline:130:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned int'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56216a8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5621750[0m <[0;33mline:131:7[0m, [0;33mcol:19[0m> [0;33mcol:19[0m[0;1;36m __type[0m [0;32m'int'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x538c9c0[0m [0;32m'int'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x56217e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:133:3[0m, [0;33mline:135:28[0m> [0;33mline:134:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5621a08[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5621ab0[0m <[0;33mline:135:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m __type[0m [0;32m'long'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x538c9e0[0m [0;32m'long'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5621b48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:137:3[0m, [0;33mline:139:33[0m> [0;33mline:138:12[0m struct[0;1;36m __remove_unsigned[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'unsigned long long'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5621d68[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5621e10[0m <[0;33mline:139:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __type[0m [0;32m'long long'[0m
[0;34m  `-[0m[0;32mBuiltinType[0m[0;33m 0x538ca00[0m [0;32m'long long'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5621ea0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:142:3[0m, [0;33mline:143:34[0m> [0;33mcol:12[0m struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0mTemplateArgument type [0;32m'bool'[0m

Dumping __gnu_cxx::__remove_unsigned:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5622070[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/type_traits.h:145:3[0m, [0;33mline:146:37[0m> [0;33mcol:12[0m struct[0;1;36m __remove_unsigned[0m
[0;34m`-[0mTemplateArgument type [0;32m'wchar_t'[0m

Dumping std::__is_move_iterator:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5693bf0[0m parent 0x55e90d0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:431:3[0m, [0;33mline:434:7[0m> [0;33mline:432:12[0m struct[0;1;36m __is_move_iterator[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mpublic [0;32m'__is_move_iterator<_Iterator>'[0m
[0;34m|-[0mTemplateArgument type [0;32m'reverse_iterator<type-parameter-0-0>'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56939f8[0m <[0;33mline:431:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5693f10[0m <[0;33mline:432:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_iterator[0m

Dumping std::move_iterator:
[0;1;32mClassTemplateDecl[0m[0;33m 0x56aa030[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1012:3[0m, [0;33mline:1114:5[0m> [0;33mline:1013:11[0m[0;1;36m move_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56a9f18[0m <[0;33mline:1012:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56a9fa0[0m <[0;33mline:1013:5[0m, [0;33mline:1114:5[0m> [0;33mline:1013:11[0m class[0;1;36m move_iterator[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56aa280[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m move_iterator[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x56aa310[0m <[0;33mline:1015:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x56aa348[0m <[0;33mline:1016:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_current[0m [0;32m'_Iterator'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56aa450[0m <[0;33mline:1018:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __traits_type[0m [0;32m'iterator_traits<_Iterator>'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x56aa3b0[0m [0;32m'iterator_traits<_Iterator>'[0m dependent iterator_traits
[0;34m  |   `-[0mTemplateArgument type [0;32m'_Iterator'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56aa570[0m <[0;33mline:1019:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __base_ref[0m [0;32m'typename __traits_type::reference'[0m
[0;34m  | `-[0m[0;32mDependentNameType[0m[0;33m 0x56aa500[0m [0;32m'typename __traits_type::reference'[0m dependent
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x56aa5c8[0m <[0;33mline:1021:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56aa600[0m <[0;33mline:1022:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m iterator_type[0m [0;32m'_Iterator'[0m
[0;34m  | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x56a9f60[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m  |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x56a9f18[0m[0;1;36m '_Iterator'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56aa6e0[0m <[0;33mline:1023:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category'[0m
[0;34m  | `-[0m[0;32mDependentNameType[0m[0;33m 0x56aa670[0m [0;32m'typename __traits_type::iterator_category'[0m dependent
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56aa7d0[0m <[0;33mline:1024:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type'[0m
[0;34m  | `-[0m[0;32mDependentNameType[0m[0;33m 0x56aa750[0m [0;32m'typename __traits_type::value_type'[0m dependent
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56aa8b0[0m <[0;33mline:1025:7[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type'[0m
[0;34m  | `-[0m[0;32mDependentNameType[0m[0;33m 0x56aa840[0m [0;32m'typename __traits_type::difference_type'[0m dependent
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56aa918[0m <[0;33mline:1027:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m pointer[0m [0;32m'_Iterator'[0m
[0;34m  | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x56a9f60[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m  |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x56a9f18[0m[0;1;36m '_Iterator'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56aaf40[0m <[0;33mline:1030:7[0m, [0;33mline:1032:24[0m> [0;33mcol:24[0m referenced[0;1;36m reference[0m [0;32m'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'[0m
[0;34m  | `-[0m[0;32mDependentNameType[0m[0;33m 0x56aaed0[0m [0;32m'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'[0m dependent
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x56ab000[0m <[0;33mline:1035:7[0m, [0;33mline:1036:24[0m> [0;33mline:1035:7[0m[0;1;36m move_iterator<_Iterator>[0m [0;32m'void ()'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x56aa348[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x56ac628[0m <[0;33mline:1036:19[0m, [0;33mcol:20[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ac670[0m <[0;33mcol:22[0m, [0;33mcol:24[0m>
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x56ab1a8[0m <[0;33mline:1038:7[0m, [0;33mline:1040:27[0m> [0;33mline:1039:7[0m[0;1;36m move_iterator<_Iterator>[0m [0;32m'void (std::move_iterator::iterator_type)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ab0e0[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __i[0m [0;32m'std::move_iterator::iterator_type':'_Iterator'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x56aa348[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x56ac6a0[0m <[0;33mline:1040:19[0m, [0;33mcol:23[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ac680[0m <[0;33mcol:20[0m> [0;32m'std::move_iterator::iterator_type':'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ab0e0[0m[0;1;36m '__i'[0m [0;32m'std::move_iterator::iterator_type':'_Iterator'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ac6f0[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56ab5d0[0m <[0;33mline:1042:7[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator<_Iterator>[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56ab258[0m <[0;33mline:1042:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _Iter[0m
[0;34m  | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x56ab528[0m <[0;33mline:1044:2[0m, [0;33mline:1045:29[0m> [0;33mline:1044:2[0m[0;1;36m move_iterator<_Iterator>[0m [0;32m'void (const move_iterator<_Iter> &)'[0m
[0;34m  |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ab430[0m <[0;33mcol:16[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __i[0m [0;32m'const move_iterator<_Iter> &'[0m
[0;34m  |   |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x56aa348[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m  |   | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x56ad6a0[0m <[0;33mline:1045:14[0m, [0;33mcol:25[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x56ac768[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x56ac720[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .base
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ac700[0m <[0;33mcol:15[0m> [0;32m'const move_iterator<_Iter>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ab430[0m[0;1;36m '__i'[0m [0;32m'const move_iterator<_Iter> &'[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ad6f0[0m <[0;33mcol:27[0m, [0;33mcol:29[0m>
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ab6a8[0m <[0;33mline:1047:28[0m, [0;33mline:1049:28[0m> [0;33mline:1048:7[0m[0;1;36m base[0m [0;32m'std::move_iterator::iterator_type () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ad750[0m <[0;33mline:1049:7[0m, [0;33mcol:28[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ad740[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ad710[0m <[0;33mcol:16[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ad700[0m <[0;33mcol:16[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ab7e8[0m <[0;33mline:1051:28[0m, [0;33mline:1053:53[0m> [0;33mline:1052:7[0m[0;1;36m operator*[0m [0;32m'std::move_iterator::reference () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ad810[0m <[0;33mline:1053:7[0m, [0;33mcol:53[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ad800[0m <[0;33mcol:9[0m, [0;33mcol:50[0m>
[0;34m  |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x56ad7d0[0m <[0;33mcol:16[0m, [0;33mcol:50[0m> [0;32m'std::move_iterator::reference':'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'[0m[0;36m[0m[0;36m[0m static_cast<std::move_iterator::reference> <Dependent>
[0;34m  |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ad7a8[0m <[0;33mcol:39[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ad778[0m <[0;33mcol:40[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ad768[0m <[0;33mcol:40[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ab8f8[0m <[0;33mline:1055:28[0m, [0;33mline:1057:28[0m> [0;33mline:1056:7[0m[0;1;36m operator->[0m [0;32m'std::move_iterator::pointer () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ad878[0m <[0;33mline:1057:7[0m, [0;33mcol:28[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ad868[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ad838[0m <[0;33mcol:16[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ad828[0m <[0;33mcol:16[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56aba18[0m <[0;33mline:1059:28[0m, [0;33mline:1064:7[0m> [0;33mline:1060:7[0m[0;1;36m operator++[0m [0;32m'move_iterator<_Iterator> &()'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ad920[0m <[0;33mline:1061:7[0m, [0;33mline:1064:7[0m>
[0;34m  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ad8d0[0m <[0;33mline:1062:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ad8a0[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ad890[0m <[0;33mcol:4[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ad910[0m <[0;33mline:1063:2[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ad8f8[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ad8e8[0m <[0;33mcol:10[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56abb98[0m <[0;33mline:1066:28[0m, [0;33mline:1072:7[0m> [0;33mline:1067:7[0m[0;1;36m operator++[0m [0;32m'move_iterator<_Iterator> (int)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56abad0[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ada88[0m <[0;33mline:1068:7[0m, [0;33mline:1072:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56ad9e0[0m <[0;33mline:1069:2[0m, [0;33mcol:29[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56ad950[0m <[0;33mcol:2[0m, [0;33mcol:25[0m> [0;33mcol:16[0m referenced[0;1;36m __tmp[0m [0;32m'move_iterator<_Iterator>'[0m nrvo cinit
[0;34m  |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ad9c8[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ad9b8[0m <[0;33mcol:25[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ada38[0m <[0;33mline:1070:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ada08[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ad9f8[0m <[0;33mcol:4[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ada70[0m <[0;33mline:1071:2[0m, [0;33mcol:9[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ada50[0m <[0;33mcol:9[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56ad950[0m[0;1;36m '__tmp'[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56abc60[0m <[0;33mline:1074:28[0m, [0;33mline:1079:7[0m> [0;33mline:1075:7[0m[0;1;36m operator--[0m [0;32m'move_iterator<_Iterator> &()'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56adb40[0m <[0;33mline:1076:7[0m, [0;33mline:1079:7[0m>
[0;34m  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56adaf0[0m <[0;33mline:1077:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56adac0[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56adab0[0m <[0;33mcol:4[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56adb30[0m <[0;33mline:1078:2[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56adb18[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56adb08[0m <[0;33mcol:10[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56abda8[0m <[0;33mline:1081:28[0m, [0;33mline:1087:7[0m> [0;33mline:1082:7[0m[0;1;36m operator--[0m [0;32m'move_iterator<_Iterator> (int)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56abd18[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56adca8[0m <[0;33mline:1083:7[0m, [0;33mline:1087:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56adc00[0m <[0;33mline:1084:2[0m, [0;33mcol:29[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56adb70[0m <[0;33mcol:2[0m, [0;33mcol:25[0m> [0;33mcol:16[0m referenced[0;1;36m __tmp[0m [0;32m'move_iterator<_Iterator>'[0m nrvo cinit
[0;34m  |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56adbe8[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56adbd8[0m <[0;33mcol:25[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56adc58[0m <[0;33mline:1085:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56adc28[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56adc18[0m <[0;33mcol:4[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56adc90[0m <[0;33mline:1086:2[0m, [0;33mcol:9[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56adc70[0m <[0;33mcol:9[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56adb70[0m[0;1;36m '__tmp'[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56abf78[0m <[0;33mline:1089:28[0m, [0;33mline:1091:49[0m> [0;33mline:1090:7[0m[0;1;36m operator+[0m [0;32m'move_iterator<_Iterator> (std::move_iterator::difference_type) const'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56abe80[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56addf8[0m <[0;33mline:1091:7[0m, [0;33mcol:49[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56adde8[0m <[0;33mcol:9[0m, [0;33mcol:46[0m>
[0;34m  |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x56addc0[0m <[0;33mcol:16[0m, [0;33mcol:46[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m[0m[0;36m[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m  |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56add88[0m <[0;33mcol:30[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56add40[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5692838[0m
[0;34m  |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x56adcf0[0m <[0;33mcol:30[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56adce0[0m <[0;33mcol:30[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56add20[0m <[0;33mcol:43[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56abe80[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ac128[0m <[0;33mline:1093:28[0m, [0;33mline:1098:7[0m> [0;33mline:1094:7[0m[0;1;36m operator+=[0m [0;32m'move_iterator<_Iterator> &(std::move_iterator::difference_type)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ac030[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56aded8[0m <[0;33mline:1095:7[0m, [0;33mline:1098:7[0m>
[0;34m  |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x56ade70[0m <[0;33mline:1096:2[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ade20[0m <[0;33mcol:2[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ade10[0m <[0;33mcol:2[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ade50[0m <[0;33mcol:16[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ac030[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56adec8[0m <[0;33mline:1097:2[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56adeb0[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56adea0[0m <[0;33mcol:10[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ac270[0m <[0;33mline:1100:28[0m, [0;33mline:1102:49[0m> [0;33mline:1101:7[0m[0;1;36m operator-[0m [0;32m'move_iterator<_Iterator> (std::move_iterator::difference_type) const'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ac1e0[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ae020[0m <[0;33mline:1102:7[0m, [0;33mcol:49[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ae010[0m <[0;33mcol:9[0m, [0;33mcol:46[0m>
[0;34m  |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x56adfe8[0m <[0;33mcol:16[0m, [0;33mcol:46[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m[0m[0;36m[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m  |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56adfb0[0m <[0;33mcol:30[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56adf68[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m
[0;34m  |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x56adf18[0m <[0;33mcol:30[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56adf08[0m <[0;33mcol:30[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56adf48[0m <[0;33mcol:43[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ac1e0[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ac3b8[0m <[0;33mline:1104:28[0m, [0;33mline:1109:7[0m> [0;33mline:1105:7[0m[0;1;36m operator-=[0m [0;32m'move_iterator<_Iterator> &(std::move_iterator::difference_type)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ac328[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ae100[0m <[0;33mline:1106:7[0m, [0;33mline:1109:7[0m>
[0;34m  |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x56ae098[0m <[0;33mline:1107:2[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '-=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ae048[0m <[0;33mcol:2[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ae038[0m <[0;33mcol:2[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ae078[0m <[0;33mcol:16[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ac328[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ae0f0[0m <[0;33mline:1108:2[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ae0d8[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ae0c8[0m <[0;33mcol:10[0m> [0;32m'move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ac568[0m <[0;33mline:1111:28[0m, [0;33mline:1113:44[0m> [0;33mline:1112:7[0m[0;1;36m operator[][0m [0;32m'std::move_iterator::reference (std::move_iterator::difference_type) const'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ac470[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ae258[0m <[0;33mline:1113:7[0m, [0;33mcol:44[0m>
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ae248[0m <[0;33mcol:9[0m, [0;33mcol:41[0m>
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x56ae220[0m <[0;33mcol:16[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56ae158[0m <[0;33mcol:16[0m, [0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m
[0;34m          `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x56ae200[0m <[0;33mcol:26[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ae1b0[0m <[0;33mcol:26[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x56aa348[0m
[0;34m            | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x56ae1a0[0m <[0;33mcol:26[0m> [0;32m'const move_iterator<_Iterator> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ae1e0[0m <[0;33mcol:37[0m> [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ac470[0m[0;1;36m '__n'[0m [0;32m'std::move_iterator::difference_type':'typename __traits_type::difference_type'[0m

Dumping std::make_move_iterator:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56b4258[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1205:3[0m, [0;33mline:1208:45[0m> [0;33mline:1207:5[0m[0;1;36m make_move_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56b3f80[0m <[0;33mline:1205:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x56b41b8[0m <[0;33mline:1206:5[0m, [0;33mline:1208:45[0m> [0;33mline:1207:5[0m[0;1;36m make_move_iterator[0m [0;32m'move_iterator<_Iterator> (_Iterator)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56b40a0[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __i[0m [0;32m'_Iterator'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56b43c8[0m <[0;33mline:1208:5[0m, [0;33mcol:45[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56b43b8[0m <[0;33mcol:7[0m, [0;33mcol:42[0m>
[0;34m      `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x56b4390[0m <[0;33mcol:14[0m, [0;33mcol:42[0m> [0;32m'move_iterator<_Iterator>'[0m[0;36m[0m[0;36m[0m [0;32m'move_iterator<_Iterator>'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56b4370[0m <[0;33mcol:39[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56b40a0[0m[0;1;36m '__i'[0m [0;32m'_Iterator'[0m

Dumping std::__make_move_if_noexcept_iterator:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56b4bf8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1210:3[0m, [0;33mline:1216:32[0m> [0;33mline:1215:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56b43e0[0m <[0;33mline:1210:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56b49c0[0m <[0;33mcol:32[0m, [0;33mline:1213:55[0m> [0;33mline:1210:41[0m referenced typename depth 0 index 1[0;1;36m _ReturnType[0m
[0;34m| `-[0mTemplateArgument type [0;32m'typename conditional<__move_if_noexcept_cond<typename iterator_traits<_Iterator>::value_type>::value, _Iterator, move_iterator<_Iterator> >::type'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x56b4b58[0m <[0;33mline:1214:5[0m, [0;33mline:1216:32[0m> [0;33mline:1215:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m [0;32m'_ReturnType (_Iterator)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56b4a68[0m <[0;33mcol:38[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __i[0m [0;32m'_Iterator'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56b4cc0[0m <[0;33mline:1216:5[0m, [0;33mcol:32[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56b4cb0[0m <[0;33mcol:7[0m, [0;33mcol:29[0m>
[0;34m      `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x56b4c88[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'_ReturnType'[0m[0;36m[0m[0;36m[0m [0;32m'_ReturnType'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56b4c68[0m <[0;33mcol:26[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56b4a68[0m[0;1;36m '__i'[0m [0;32m'_Iterator'[0m

Dumping std::__make_move_if_noexcept_iterator:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56b5438[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1220:3[0m, [0;33mline:1225:32[0m> [0;33mline:1224:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56b4cd8[0m <[0;33mline:1220:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56b5200[0m <[0;33mcol:26[0m, [0;33mline:1222:41[0m> [0;33mline:1220:35[0m referenced typename depth 0 index 1[0;1;36m _ReturnType[0m
[0;34m| `-[0mTemplateArgument type [0;32m'typename conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp *, move_iterator<_Tp *> >::type'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x56b5398[0m <[0;33mline:1223:5[0m, [0;33mline:1225:32[0m> [0;33mline:1224:5[0m[0;1;36m __make_move_if_noexcept_iterator[0m [0;32m'_ReturnType (_Tp *)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56b52a8[0m <[0;33mcol:38[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __i[0m [0;32m'_Tp *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56b5500[0m <[0;33mline:1225:5[0m, [0;33mcol:32[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56b54f0[0m <[0;33mcol:7[0m, [0;33mcol:29[0m>
[0;34m      `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x56b54c8[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;32m'_ReturnType'[0m[0;36m[0m[0;36m[0m [0;32m'_ReturnType'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56b54a8[0m <[0;33mcol:26[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56b52a8[0m[0;1;36m '__i'[0m [0;32m'_Tp *'[0m

Dumping std::__is_move_iterator:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x56b6e00[0m parent 0x55e90d0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1235:3[0m, [0;33mline:1240:5[0m> [0;33mline:1236:12[0m struct[0;1;36m __is_move_iterator[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'move_iterator<type-parameter-0-0>'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56b6c08[0m <[0;33mline:1235:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56b7068[0m <[0;33mline:1236:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_move_iterator[0m
[0;34m|-[0m[0;1;32mEnumDecl[0m[0;33m 0x56b70f8[0m <[0;33mline:1238:7[0m, [0;33mcol:26[0m> [0;33mcol:7[0m
[0;34m| `-[0m[0;1;32mEnumConstantDecl[0m[0;33m 0x56b71e0[0m <[0;33mcol:14[0m, [0;33mcol:24[0m> [0;33mcol:14[0m[0;1;36m __value[0m [0;32m'std::__is_move_iterator<move_iterator<type-parameter-0-0> >::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1238:7)'[0m
[0;34m|   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56b71c0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56b7240[0m <[0;33mline:1239:7[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __type[0m [0;32m'std::__true_type'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x55e9210[0m [0;32m'std::__true_type'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x55e9180[0m[0;1;36m '__true_type'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplateDecl[0m[0;33m 0x56da0e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:286:3[0m, [0;33mline:297:5[0m> [0;33mline:287:12[0m[0;1;36m __copy_move[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56d9ee0[0m <[0;33mline:286:12[0m> [0;33mcol:16[0m [0;32m'bool'[0m depth 0 index 0
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56d9f50[0m <[0;33mcol:18[0m> [0;33mcol:22[0m [0;32m'bool'[0m depth 0 index 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56d9fb0[0m <[0;33mcol:24[0m> [0;33mcol:24[0m typename depth 0 index 2
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56da050[0m <[0;33mline:287:5[0m, [0;33mline:297:5[0m> [0;33mline:287:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56da3d0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m| `-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56da858[0m <[0;33mline:289:7[0m, [0;33mline:296:2[0m> [0;33mline:291:9[0m[0;1;36m __copy_m[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56da460[0m <[0;33mline:289:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _II[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56da4d8[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 1 index 1[0;1;36m _OI[0m
[0;34m|   `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56da7b8[0m <[0;33mline:290:9[0m, [0;33mline:296:2[0m> [0;33mline:291:9[0m[0;1;36m __copy_m[0m [0;32m'_OI (_II, _II, _OI)'[0m static
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56da578[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56da5f0[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56da668[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m|     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56dab88[0m <[0;33mline:292:9[0m, [0;33mline:296:2[0m>
[0;34m|       |-[0m[0;1;35mForStmt[0m[0;33m 0x56dab20[0m <[0;33mline:293:4[0m, [0;33mline:294:19[0m>
[0;34m|       | |-[0m[0;34m<<<NULL>>>[0m
[0;34m|       | |-[0m[0;34m<<<NULL>>>[0m
[0;34m|       | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56da990[0m <[0;33mline:293:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56da920[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m
[0;34m|       | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56da8e0[0m <[0;33mcol:11[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56da578[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m|       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56da900[0m <[0;33mcol:22[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56da5f0[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m|       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56daa70[0m <[0;33mcol:30[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m ','
[0;34m|       | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56da9e8[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|       | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56da9c8[0m <[0;33mcol:32[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56da668[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m|       | | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x56daa48[0m <[0;33mcol:42[0m, [0;33mcol:50[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m <[0;31mToVoid[0m>
[0;34m|       | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56daa20[0m <[0;33mcol:48[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56daa00[0m <[0;33mcol:50[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56da578[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m|       | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56dab00[0m <[0;33mline:294:6[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m|       |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56daab0[0m <[0;33mcol:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56daa90[0m <[0;33mcol:7[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56da668[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m|       |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56daae8[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56daac8[0m <[0;33mcol:19[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56da578[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m|       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56dab78[0m <[0;33mline:295:4[0m, [0;33mcol:11[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56dab58[0m <[0;33mcol:11[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56da668[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x56db9d8[0m[0;1;36m '__copy_move'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x56de7d8[0m[0;1;36m '__copy_move'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x56dae20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:300:3[0m, [0;33mline:311:5[0m> [0;33mline:301:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56daba8[0m <[0;33mline:300:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Category[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56db138[0m <[0;33mline:301:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56db578[0m <[0;33mline:303:7[0m, [0;33mline:310:2[0m> [0;33mline:305:9[0m[0;1;36m __copy_m[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56db1c8[0m <[0;33mline:303:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _II[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56db238[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 1 index 1[0;1;36m _OI[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56db4d8[0m <[0;33mline:304:9[0m, [0;33mline:310:2[0m> [0;33mline:305:9[0m[0;1;36m __copy_m[0m [0;32m'_OI (_II, _II, _OI)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56db2d8[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56db350[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56db3c8[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56db938[0m <[0;33mline:306:9[0m, [0;33mline:310:2[0m>
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x56db8d0[0m <[0;33mline:307:4[0m, [0;33mline:308:36[0m>
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56db6b0[0m <[0;33mline:307:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56db640[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56db600[0m <[0;33mcol:11[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56db2d8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56db620[0m <[0;33mcol:22[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56db350[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56db790[0m <[0;33mcol:30[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m ','
[0;34m      | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56db708[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56db6e8[0m <[0;33mcol:32[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56db3c8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      | | `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x56db768[0m <[0;33mcol:42[0m, [0;33mcol:50[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m <[0;31mToVoid[0m>
[0;34m      | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56db740[0m <[0;33mcol:48[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56db720[0m <[0;33mcol:50[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56db2d8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56db8b0[0m <[0;33mline:308:6[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56db7d0[0m <[0;33mcol:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56db7b0[0m <[0;33mcol:7[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56db3c8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x56db888[0m <[0;33mcol:18[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56db808[0m <[0;33mcol:18[0m, [0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56db870[0m <[0;33mcol:28[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56db850[0m <[0;33mcol:29[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56db2d8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56db928[0m <[0;33mline:309:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56db908[0m <[0;33mcol:11[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56db3c8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x56db9d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:314:3[0m, [0;33mline:330:5[0m> [0;33mline:315:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56dbc88[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56de108[0m <[0;33mline:317:7[0m, [0;33mline:329:2[0m> [0;33mline:319:9[0m[0;1;36m __copy_m[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56dbd18[0m <[0;33mline:317:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _II[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56dbd88[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _OI[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56de068[0m <[0;33mline:318:9[0m, [0;33mline:329:2[0m> [0;33mline:319:9[0m[0;1;36m __copy_m[0m [0;32m'_OI (_II, _II, _OI)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56dde68[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ddee0[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ddf58[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56de730[0m <[0;33mline:320:9[0m, [0;33mline:329:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56de2f8[0m <[0;33mline:321:4[0m, [0;33mcol:68[0m>
[0;34m      | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56de2a0[0m <[0;33mcol:4[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced[0;1;36m _Distance[0m [0;32m'typename iterator_traits<_II>::difference_type'[0m
[0;34m      |   `-[0m[0;32mDependentNameType[0m[0;33m 0x56de230[0m [0;32m'typename iterator_traits<_II>::difference_type'[0m dependent
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x56de6c8[0m <[0;33mline:322:4[0m, [0;33mline:327:6[0m>
[0;34m      | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56de470[0m <[0;33mline:322:8[0m, [0;33mcol:40[0m>
[0;34m      | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56de340[0m <[0;33mcol:8[0m, [0;33mcol:33[0m> [0;33mcol:18[0m referenced[0;1;36m __n[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m cinit
[0;34m      | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56de438[0m <[0;33mcol:24[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56de3e8[0m <[0;33mcol:31[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m      | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de3a8[0m <[0;33mcol:24[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ddee0[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de3c8[0m <[0;33mcol:33[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dde68[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56de530[0m <[0;33mcol:42[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56de4c8[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x566a3e8[0m[0;33m 0x568e568[0m[0;33m 0x5690bd8[0m[0;33m 0x56b1c08[0m[0;33m 0x56b21a8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de488[0m <[0;33mcol:42[0m> [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56de340[0m[0;1;36m '__n'[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56de4a8[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56de588[0m <[0;33mcol:51[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de568[0m <[0;33mcol:53[0m> [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56de340[0m[0;1;36m '__n'[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m
[0;34m      | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56de6a0[0m <[0;33mline:323:6[0m, [0;33mline:327:6[0m>
[0;34m      |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56de610[0m <[0;33mline:324:8[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56de5c0[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de5a0[0m <[0;33mcol:9[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ddf58[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56de5f8[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de5d8[0m <[0;33mcol:21[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dde68[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56de650[0m <[0;33mline:325:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de630[0m <[0;33mcol:10[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dde68[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56de688[0m <[0;33mline:326:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de668[0m <[0;33mcol:10[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ddf58[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56de720[0m <[0;33mline:328:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56de700[0m <[0;33mcol:11[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ddf58[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x56de7d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:333:3[0m, [0;33mline:349:5[0m> [0;33mline:334:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56dea88[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56deec8[0m <[0;33mline:336:7[0m, [0;33mline:348:2[0m> [0;33mline:338:9[0m[0;1;36m __copy_m[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56deb18[0m <[0;33mline:336:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _II[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56deb88[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 0 index 1[0;1;36m _OI[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56dee28[0m <[0;33mline:337:9[0m, [0;33mline:348:2[0m> [0;33mline:338:9[0m[0;1;36m __copy_m[0m [0;32m'_OI (_II, _II, _OI)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56dec28[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56deca0[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ded18[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56df580[0m <[0;33mline:339:9[0m, [0;33mline:348:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56df0b8[0m <[0;33mline:340:4[0m, [0;33mcol:68[0m>
[0;34m      | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56df060[0m <[0;33mcol:4[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced[0;1;36m _Distance[0m [0;32m'typename iterator_traits<_II>::difference_type'[0m
[0;34m      |   `-[0m[0;32mDependentNameType[0m[0;33m 0x56deff0[0m [0;32m'typename iterator_traits<_II>::difference_type'[0m dependent
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x56df518[0m <[0;33mline:341:4[0m, [0;33mline:346:6[0m>
[0;34m      | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56df230[0m <[0;33mline:341:8[0m, [0;33mcol:40[0m>
[0;34m      | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56df100[0m <[0;33mcol:8[0m, [0;33mcol:33[0m> [0;33mcol:18[0m referenced[0;1;36m __n[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m cinit
[0;34m      | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56df1f8[0m <[0;33mcol:24[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56df1a8[0m <[0;33mcol:31[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m      | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df168[0m <[0;33mcol:24[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56deca0[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df188[0m <[0;33mcol:33[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dec28[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56df2f0[0m <[0;33mcol:42[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56df288[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x566a3e8[0m[0;33m 0x568e568[0m[0;33m 0x5690bd8[0m[0;33m 0x56b1c08[0m[0;33m 0x56b21a8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df248[0m <[0;33mcol:42[0m> [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56df100[0m[0;1;36m '__n'[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56df268[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56df348[0m <[0;33mcol:51[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df328[0m <[0;33mcol:53[0m> [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56df100[0m[0;1;36m '__n'[0m [0;32m'_Distance':'typename iterator_traits<_II>::difference_type'[0m
[0;34m      | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56df4f0[0m <[0;33mline:342:6[0m, [0;33mline:346:6[0m>
[0;34m      |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56df460[0m <[0;33mline:343:8[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56df380[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df360[0m <[0;33mcol:9[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ded18[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x56df438[0m <[0;33mcol:20[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56df3b8[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m
[0;34m      |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56df420[0m <[0;33mcol:30[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df400[0m <[0;33mcol:31[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dec28[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56df4a0[0m <[0;33mline:344:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df480[0m <[0;33mcol:10[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dec28[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m      |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56df4d8[0m <[0;33mline:345:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df4b8[0m <[0;33mcol:10[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ded18[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56df570[0m <[0;33mline:347:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df550[0m <[0;33mcol:11[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ded18[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x56df810[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:352:3[0m, [0;33mline:371:5[0m> [0;33mline:353:12[0m struct[0;1;36m __copy_move[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument expr
[0;34m| `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56df630[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m [0;1;32mNonTypeTemplateParm[0m[0;33m 0x56df5b8[0m[0;1;36m '_IsMove'[0m [0;32m'bool'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56df5b8[0m <[0;33mline:352:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56dfaf8[0m <[0;33mline:353:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56dff88[0m <[0;33mline:355:7[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m[0;1;36m __copy_m[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56dfb88[0m <[0;33mline:355:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _Tp[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56dfee8[0m <[0;33mline:356:9[0m, [0;33mline:370:2[0m> [0;33mline:357:9[0m[0;1;36m __copy_m[0m [0;32m'_Tp *(const _Tp *, const _Tp *, _Tp *)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56dfc78[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56dfcf0[0m <[0;33mcol:38[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __last[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56dfd98[0m <[0;33mcol:57[0m, [0;33mcol:62[0m> [0;33mcol:62[0m referenced[0;1;36m __result[0m [0;32m'_Tp *'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56e0cd8[0m <[0;33mline:358:9[0m, [0;33mline:370:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56e0410[0m <[0;33mline:360:4[0m, [0;33mline:362:33[0m>
[0;34m      | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x56e03b0[0m <[0;33mline:360:4[0m, [0;33mline:362:32[0m> [0;33mline:360:10[0m referenced[0;1;36m __assignable[0m [0;32m'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x56e0280[0m [0;32m'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'[0m dependent conditional
[0;34m      |     |-[0mTemplateArgument expr
[0;34m      |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0010[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m [0;1;32mNonTypeTemplateParm[0m[0;33m 0x56df5b8[0m[0;1;36m '_IsMove'[0m [0;32m'bool'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'is_move_assignable<_Tp>'[0m
[0;34m      |     `-[0mTemplateArgument type [0;32m'is_copy_assignable<_Tp>'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56e05e8[0m <[0;33mline:364:4[0m, [0;33mcol:72[0m>
[0;34m      | `-[0m[0;1;32mStaticAssertDecl[0m[0;33m 0x56e05a8[0m <[0;33mcol:4[0m, [0;33mcol:71[0m> [0;33mcol:4[0m
[0;34m      |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56e04c8[0m <[0;33mcol:19[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56e0578[0m <[0;33mcol:46[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "type is not assignable"[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56e0740[0m <[0;33mline:366:4[0m, [0;33mcol:43[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56e0610[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:20[0m referenced[0;1;36m _Num[0m [0;32m'const std::ptrdiff_t':'const long'[0m cinit
[0;34m      |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56e0708[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56e06b8[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0678[0m <[0;33mcol:27[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dfcf0[0m[0;1;36m '__last'[0m [0;32m'const _Tp *'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0698[0m <[0;33mcol:36[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dfc78[0m[0;1;36m '__first'[0m [0;32m'const _Tp *'[0m
[0;34m      |-[0m[0;1;35mIfStmt[0m[0;33m 0x56e0be8[0m <[0;33mline:367:4[0m, [0;33mline:368:61[0m>
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56e0790[0m <[0;33mline:367:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56e0778[0m <[0;33mcol:8[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0758[0m <[0;33mcol:8[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56e0610[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x56e0bb0[0m <[0;33mline:368:6[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0ab0[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e0880[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0ad0[0m <[0;33mcol:24[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dfd98[0m[0;1;36m '__result'[0m [0;32m'_Tp *'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0af0[0m <[0;33mcol:34[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dfc78[0m[0;1;36m '__first'[0m [0;32m'const _Tp *'[0m
[0;34m      |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56e0b90[0m <[0;33mcol:43[0m, [0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m      |     |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x56e0b20[0m <[0;33mcol:43[0m, [0;33mcol:53[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'_Tp'[0m
[0;34m      |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56e0b78[0m <[0;33mcol:57[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56e0b60[0m <[0;33mcol:57[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0b40[0m <[0;33mcol:57[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56e0610[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56e0cc8[0m <[0;33mline:369:4[0m, [0;33mcol:22[0m>
[0;34m        `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56e0c90[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56e0c40[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5692838[0m[0;33m 0x56b3e28[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0c00[0m <[0;33mcol:11[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56dfd98[0m[0;1;36m '__result'[0m [0;32m'_Tp *'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56e0c20[0m <[0;33mcol:22[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56e0610[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m

Dumping std::__copy_move_a:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56e1158[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:373:3[0m, [0;33mline:387:5[0m> [0;33mline:375:5[0m[0;1;36m __copy_move_a[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56e0d20[0m <[0;33mline:373:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56e0d80[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _II[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56e0df8[0m <[0;33mcol:40[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced typename depth 0 index 2[0;1;36m _OI[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x56e10b8[0m <[0;33mline:374:5[0m, [0;33mline:387:5[0m> [0;33mline:375:5[0m[0;1;36m __copy_move_a[0m [0;32m'_OI (_II, _II, _OI)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56e0ea0[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56e0f18[0m <[0;33mcol:32[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56e0f90[0m <[0;33mcol:44[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x54725e0[0m <[0;33mline:376:5[0m, [0;33mline:387:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56e13c8[0m <[0;33mline:377:7[0m, [0;33mcol:68[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56e1370[0m <[0;33mcol:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m _ValueTypeI[0m [0;32m'typename iterator_traits<_II>::value_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x56e1300[0m [0;32m'typename iterator_traits<_II>::value_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56e15d8[0m <[0;33mline:378:7[0m, [0;33mcol:68[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56e1580[0m <[0;33mcol:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m _ValueTypeO[0m [0;32m'typename iterator_traits<_OI>::value_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x56e1510[0m [0;32m'typename iterator_traits<_OI>::value_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56e1788[0m <[0;33mline:379:7[0m, [0;33mcol:73[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56e1730[0m <[0;33mcol:7[0m, [0;33mcol:64[0m> [0;33mcol:64[0m referenced[0;1;36m _Category[0m [0;32m'typename iterator_traits<_II>::iterator_category'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x56e16c0[0m [0;32m'typename iterator_traits<_II>::iterator_category'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56e1d28[0m <[0;33mline:380:7[0m, [0;33mline:383:58[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56e17b0[0m <[0;33mline:380:7[0m, [0;33mline:383:57[0m> [0;33mline:380:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m    |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x56e1d08[0m <[0;33mcol:29[0m, [0;33mline:383:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56e1ce8[0m <[0;33mline:380:30[0m, [0;33mline:383:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56e1b08[0m <[0;33mline:380:30[0m, [0;33mline:382:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56e19a8[0m <[0;33mline:380:30[0m, [0;33mline:381:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | | |-[0m[0;1;35mTypeTraitExpr[0m[0;33m 0x56e1850[0m <[0;33mline:380:30[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    |       | | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56e1970[0m <[0;33mline:381:26[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |       | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56e1ad0[0m <[0;33mline:382:26[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |       `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56e1cb0[0m <[0;33mline:383:12[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x54725d0[0m <[0;33mline:385:7[0m, [0;33mline:386:70[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5472598[0m <[0;33mline:385:14[0m, [0;33mline:386:70[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5472500[0m <[0;33mline:385:14[0m, [0;33mline:386:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5472538[0m <[0;33mcol:45[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56e0ea0[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5472558[0m <[0;33mcol:54[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56e0f18[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5472578[0m <[0;33mcol:62[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56e0f90[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x54736c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:400:3[0m, [0;33mline:404:55[0m> [0;33mline:403:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5472b70[0m <[0;33mline:400:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5472bd0[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5473628[0m <[0;33mline:401:5[0m, [0;33mline:404:55[0m> [0;33mline:403:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5473268[0m <[0;33mcol:20[0m, [0;33mcol:26[0m> [0;33mcol:27[0m [0;32m'_CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x54732e0[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;33mcol:36[0m [0;32m'_CharT *'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x54734f8[0m <[0;33mline:404:6[0m, [0;33mcol:54[0m> [0;33mcol:55[0m [0;32m'ostreambuf_iterator<_CharT, char_traits<_CharT> >'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x54740f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:406:3[0m, [0;33mline:410:55[0m> [0;33mline:409:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5473748[0m <[0;33mline:406:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x54737a8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5474058[0m <[0;33mline:407:5[0m, [0;33mline:410:55[0m> [0;33mline:409:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5473c98[0m <[0;33mcol:20[0m, [0;33mcol:32[0m> [0;33mcol:33[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5473d10[0m <[0;33mcol:35[0m, [0;33mcol:47[0m> [0;33mcol:48[0m [0;32m'const _CharT *'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5473f28[0m <[0;33mline:410:6[0m, [0;33mcol:54[0m> [0;33mcol:55[0m [0;32m'ostreambuf_iterator<_CharT, char_traits<_CharT> >'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5474bf8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:412:3[0m, [0;33mline:416:64[0m> [0;33mline:415:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5474178[0m <[0;33mline:412:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x54741d8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5474b58[0m <[0;33mline:413:5[0m, [0;33mline:416:64[0m> [0;33mline:415:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type (istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5474798[0m <[0;33mcol:20[0m, [0;33mcol:68[0m> [0;33mcol:69[0m [0;32m'istreambuf_iterator<_CharT, char_traits<_CharT> >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x54749a8[0m <[0;33mline:416:6[0m, [0;33mcol:54[0m> [0;33mcol:55[0m [0;32m'istreambuf_iterator<_CharT, char_traits<_CharT> >'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5474a20[0m <[0;33mcol:57[0m, [0;33mcol:63[0m> [0;33mcol:64[0m [0;32m'_CharT *'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5475068[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:418:3[0m, [0;33mline:425:5[0m> [0;33mline:420:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5474c78[0m <[0;33mline:418:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5474cd8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _II[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5474d48[0m <[0;33mcol:40[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced typename depth 0 index 2[0;1;36m _OI[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5474fc8[0m <[0;33mline:419:5[0m, [0;33mline:425:5[0m> [0;33mline:420:5[0m[0;1;36m __copy_move_a2[0m [0;32m'_OI (_II, _II, _OI)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5474df0[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5474e68[0m <[0;33mcol:33[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5474ee0[0m <[0;33mcol:45[0m, [0;33mcol:49[0m> [0;33mcol:49[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5475490[0m <[0;33mline:421:5[0m, [0;33mline:425:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5475480[0m <[0;33mline:422:7[0m, [0;33mline:424:39[0m>
[0;34m      `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x5475458[0m <[0;33mline:422:14[0m, [0;33mline:424:39[0m> [0;32m'_OI'[0m[0;36m[0m[0;36m[0m [0;32m'_OI'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x5475420[0m <[0;33mline:422:18[0m, [0;33mline:424:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5475140[0m <[0;33mline:422:18[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__copy_move_a'[0;33m 0x56e1158[0m
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x5475268[0m <[0;33mcol:46[0m, [0;33mcol:71[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x54751e8[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x5693808[0m[0;33m 0x56a9d38[0m[0;33m 0x56b6a08[0m[0;33m 0x56d9e28[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5475248[0m <[0;33mcol:64[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5474df0[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x5475330[0m <[0;33mline:423:11[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x54752b0[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x5693808[0m[0;33m 0x56a9d38[0m[0;33m 0x56b6a08[0m[0;33m 0x56d9e28[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5475310[0m <[0;33mcol:29[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5474e68[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m          `-[0m[0;1;35mCallExpr[0m[0;33m 0x54753f8[0m <[0;33mline:424:11[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5475378[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x5693808[0m[0;33m 0x56a9d38[0m[0;33m 0x56b6a08[0m[0;33m 0x56d9e28[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x54753d8[0m <[0;33mcol:29[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5474ee0[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5476058[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:477:3[0m, [0;33mline:489:5[0m> [0;33mline:479:5[0m[0;1;36m move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5475cd8[0m <[0;33mline:477:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _II[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5475d48[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _OI[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5475fb8[0m <[0;33mline:478:5[0m, [0;33mline:489:5[0m> [0;33mline:479:5[0m[0;1;36m move[0m [0;32m'_OI (_II, _II, _OI)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5475de8[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m __first[0m [0;32m'_II'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5475e60[0m <[0;33mcol:23[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __last[0m [0;32m'_II'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5475ed8[0m <[0;33mcol:35[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced[0;1;36m __result[0m [0;32m'_OI'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ede58[0m <[0;33mline:480:5[0m, [0;33mline:489:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x54760c8[0m <[0;33mline:485:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ede48[0m <[0;33mline:487:7[0m, [0;33mline:488:47[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x56ede10[0m <[0;33mline:487:14[0m, [0;33mline:488:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5476128[0m <[0;33mline:487:14[0m, [0;33mcol:38[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__copy_move_a2'[0;33m 0x54736c8[0m[0;33m 0x54740f8[0m[0;33m 0x5474bf8[0m[0;33m 0x5475068[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x5476260[0m <[0;33mcol:40[0m, [0;33mcol:65[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x54761e8[0m <[0;33mcol:40[0m, [0;33mcol:45[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__miter_base'[0;33m 0x5615648[0m[0;33m 0x5695488[0m[0;33m 0x56b7708[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5476240[0m <[0;33mcol:58[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5475de8[0m[0;1;36m '__first'[0m [0;32m'_II'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x5476320[0m <[0;33mline:488:12[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x54762a8[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__miter_base'[0;33m 0x5615648[0m[0;33m 0x5695488[0m[0;33m 0x56b7708[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5476300[0m <[0;33mcol:30[0m> [0;32m'_II'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5475e60[0m[0;1;36m '__last'[0m [0;32m'_II'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5476348[0m <[0;33mcol:39[0m> [0;32m'_OI'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5475ed8[0m[0;1;36m '__result'[0m [0;32m'_OI'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplateDecl[0m[0;33m 0x56ee080[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:496:3[0m, [0;33mline:507:5[0m> [0;33mline:497:12[0m[0;1;36m __copy_move_backward[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56ede88[0m <[0;33mline:496:12[0m> [0;33mcol:16[0m [0;32m'bool'[0m depth 0 index 0
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56edef8[0m <[0;33mcol:18[0m> [0;33mcol:22[0m [0;32m'bool'[0m depth 0 index 1
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56edf58[0m <[0;33mcol:24[0m> [0;33mcol:24[0m typename depth 0 index 2
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56edff0[0m <[0;33mline:497:5[0m, [0;33mline:507:5[0m> [0;33mline:497:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56ee370[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m| `-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56ee7b8[0m <[0;33mline:499:7[0m, [0;33mline:506:2[0m> [0;33mline:501:9[0m[0;1;36m __copy_move_b[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56ee400[0m <[0;33mline:499:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _BI1[0m
[0;34m|   |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56ee478[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 1 index 1[0;1;36m _BI2[0m
[0;34m|   `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ee718[0m <[0;33mline:500:9[0m, [0;33mline:506:2[0m> [0;33mline:501:9[0m[0;1;36m __copy_move_b[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m static
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ee518[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ee590[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m|     |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ee608[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m|     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56eea30[0m <[0;33mline:502:9[0m, [0;33mline:506:2[0m>
[0;34m|       |-[0m[0;1;35mWhileStmt[0m[0;33m 0x56ee9e8[0m <[0;33mline:503:4[0m, [0;33mline:504:23[0m>
[0;34m|       | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56ee8f0[0m <[0;33mline:503:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56ee880[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m
[0;34m|       | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ee840[0m <[0;33mcol:11[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ee518[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m|       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ee860[0m <[0;33mcol:22[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ee590[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|       | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56ee9c8[0m <[0;33mline:504:6[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m|       |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ee960[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ee948[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m|       |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ee928[0m <[0;33mcol:9[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ee608[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m|       |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ee9b0[0m <[0;33mcol:20[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m|       |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ee998[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m|       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ee978[0m <[0;33mcol:23[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ee590[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56eea20[0m <[0;33mline:505:4[0m, [0;33mcol:11[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56eea00[0m <[0;33mcol:11[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ee608[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x56ef7d8[0m[0;1;36m '__copy_move_backward'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x56f04d0[0m[0;1;36m '__copy_move_backward'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x56eecd0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:510:3[0m, [0;33mline:521:5[0m> [0;33mline:511:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56eea50[0m <[0;33mline:510:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Category[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56eefe8[0m <[0;33mline:511:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56ef428[0m <[0;33mline:513:7[0m, [0;33mline:520:2[0m> [0;33mline:515:9[0m[0;1;36m __copy_move_b[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56ef078[0m <[0;33mline:513:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _BI1[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56ef0e8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 1 index 1[0;1;36m _BI2[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56ef388[0m <[0;33mline:514:9[0m, [0;33mline:520:2[0m> [0;33mline:515:9[0m[0;1;36m __copy_move_b[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ef188[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ef200[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56ef278[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56ef738[0m <[0;33mline:516:9[0m, [0;33mline:520:2[0m>
[0;34m      |-[0m[0;1;35mWhileStmt[0m[0;33m 0x56ef6f0[0m <[0;33mline:517:4[0m, [0;33mline:518:39[0m>
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56ef560[0m <[0;33mline:517:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56ef4f0[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ef4b0[0m <[0;33mcol:11[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ef188[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ef4d0[0m <[0;33mcol:22[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ef200[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56ef6d0[0m <[0;33mline:518:6[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ef5d0[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ef5b8[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ef598[0m <[0;33mcol:9[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ef278[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x56ef6a8[0m <[0;33mcol:20[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56ef608[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ef690[0m <[0;33mcol:30[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56ef678[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ef658[0m <[0;33mcol:33[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ef200[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56ef728[0m <[0;33mline:519:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ef708[0m <[0;33mcol:11[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ef278[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x56ef7d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:524:3[0m, [0;33mline:536:5[0m> [0;33mline:525:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56efa88[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56efec8[0m <[0;33mline:527:7[0m, [0;33mline:535:2[0m> [0;33mline:529:9[0m[0;1;36m __copy_move_b[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56efb18[0m <[0;33mline:527:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _BI1[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56efb88[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _BI2[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56efe28[0m <[0;33mline:528:9[0m, [0;33mline:535:2[0m> [0;33mline:529:9[0m[0;1;36m __copy_move_b[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56efc28[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56efca0[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56efd18[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56f0428[0m <[0;33mline:530:9[0m, [0;33mline:535:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f00c8[0m <[0;33mline:531:4[0m, [0;33mcol:55[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f0060[0m <[0;33mcol:4[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __n[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x56f03c0[0m <[0;33mline:532:4[0m, [0;33mline:533:23[0m>
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f01c8[0m <[0;33mline:532:9[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f00e0[0m <[0;33mcol:9[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f0060[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56f0190[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f0140[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m      | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0100[0m <[0;33mcol:15[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56efca0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0120[0m <[0;33mcol:24[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56efc28[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56f0290[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f0228[0m <[0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x566a3e8[0m[0;33m 0x568e568[0m[0;33m 0x5690bd8[0m[0;33m 0x56b1c08[0m[0;33m 0x56b21a8[0m
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f01e8[0m <[0;33mcol:33[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f0060[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56f0208[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f02e8[0m <[0;33mcol:42[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f02c8[0m <[0;33mcol:44[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f0060[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f03a0[0m <[0;33mline:533:6[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f0338[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f0320[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0300[0m <[0;33mcol:9[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56efd18[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m      |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f0388[0m <[0;33mcol:20[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f0370[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0350[0m <[0;33mcol:23[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56efca0[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56f0418[0m <[0;33mline:534:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f03f8[0m <[0;33mcol:11[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56efd18[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x56f04d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:539:3[0m, [0;33mline:551:5[0m> [0;33mline:540:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56f0778[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56f0bb8[0m <[0;33mline:542:7[0m, [0;33mline:550:2[0m> [0;33mline:544:9[0m[0;1;36m __copy_move_b[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f0808[0m <[0;33mline:542:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _BI1[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f0878[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _BI2[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56f0b18[0m <[0;33mline:543:9[0m, [0;33mline:550:2[0m> [0;33mline:544:9[0m[0;1;36m __copy_move_b[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m static
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f0918[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f0990[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f0a08[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56f11b0[0m <[0;33mline:545:9[0m, [0;33mline:550:2[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f0db8[0m <[0;33mline:546:4[0m, [0;33mcol:55[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f0d50[0m <[0;33mcol:4[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __n[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x56f1148[0m <[0;33mline:547:4[0m, [0;33mline:548:39[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f0eb8[0m <[0;33mline:547:9[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0dd0[0m <[0;33mcol:9[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f0d50[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m  |   | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56f0e80[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f0e30[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m  |   | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0df0[0m <[0;33mcol:15[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f0990[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0e10[0m <[0;33mcol:24[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f0918[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56f0f80[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f0f18[0m <[0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator>'[0;33m 0x566a3e8[0m[0;33m 0x568e568[0m[0;33m 0x5690bd8[0m[0;33m 0x56b1c08[0m[0;33m 0x56b21a8[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0ed8[0m <[0;33mcol:33[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f0d50[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56f0ef8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f0fd8[0m <[0;33mcol:42[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0fb8[0m <[0;33mcol:44[0m> [0;32m'typename iterator_traits<_BI1>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f0d50[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_BI1>::difference_type'[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f1128[0m <[0;33mline:548:6[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f1028[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |   |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f1010[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m  |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f0ff0[0m <[0;33mcol:9[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f0a08[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x56f1100[0m <[0;33mcol:20[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f1060[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m  |   |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f10e8[0m <[0;33mcol:30[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f10d0[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f10b0[0m <[0;33mcol:33[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f0990[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56f11a0[0m <[0;33mline:549:4[0m, [0;33mcol:11[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f1180[0m <[0;33mcol:11[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f0a08[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635ac38[0m <[0;33mline:543:9[0m, [0;33mline:550:2[0m> [0;33mline:544:9[0m used[0;1;36m __copy_move_b[0m [0;32m'Pont *(Pont *, Pont *, Pont *)'[0m static
[0;34m    |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m    |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635aa68[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m __first[0m [0;32m'Pont *':'Pont *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635aae0[0m <[0;33mcol:37[0m, [0;33mcol:42[0m> [0;33mcol:42[0m used[0;1;36m __last[0m [0;32m'Pont *':'Pont *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ab58[0m <[0;33mcol:50[0m, [0;33mcol:55[0m> [0;33mcol:55[0m used[0;1;36m __result[0m [0;32m'Pont *':'Pont *'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635b520[0m <[0;33mline:545:9[0m, [0;33mline:550:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x635b018[0m <[0;33mline:546:4[0m, [0;33mcol:55[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x635afb0[0m <[0;33mcol:4[0m, [0;33mcol:52[0m> [0;33mcol:52[0m used[0;1;36m __n[0m [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x635b4a0[0m <[0;33mline:547:4[0m, [0;33mline:548:39[0m>
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635b130[0m <[0;33mline:547:9[0m, [0;33mcol:24[0m> [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b030[0m <[0;33mcol:9[0m> [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x635afb0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m
[0;34m      | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635b110[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m      | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b0e0[0m <[0;33mcol:15[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b0a0[0m <[0;33mcol:15[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635aae0[0m[0;1;36m '__last'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m      | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b0f8[0m <[0;33mcol:24[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b0c0[0m <[0;33mcol:24[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635aa68[0m[0;1;36m '__first'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635b208[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b1d8[0m <[0;33mcol:33[0m> [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b1b8[0m <[0;33mcol:33[0m> [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x635afb0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b1f0[0m <[0;33mcol:39[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56f0ef8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635b248[0m <[0;33mcol:42[0m, [0;33mcol:44[0m> [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b228[0m <[0;33mcol:44[0m> [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x635afb0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<Pont *>::difference_type':'long'[0m
[0;34m      | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x635b468[0m <[0;33mline:548:6[0m, [0;33mcol:39[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b450[0m <[0;33mcol:18[0m> [0;32m'Pont &(*)(Pont &&) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b430[0m <[0;33mcol:18[0m> [0;32m'Pont &(Pont &&) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6302e58[0m[0;1;36m 'operator='[0m [0;32m'Pont &(Pont &&) noexcept'[0m
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635b2b0[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b298[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635b280[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b260[0m <[0;33mcol:9[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ab58[0m[0;1;36m '__result'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x635b408[0m <[0;33mcol:20[0m, [0;33mcol:39[0m> [0;32m'typename std::remove_reference<Pont &>::type':'Pont'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b3f0[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'typename std::remove_reference<Pont &>::type &&(*)(Pont &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b3b8[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'typename std::remove_reference<Pont &>::type &&(Pont &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x62ff988[0m[0;1;36m 'move'[0m [0;32m'typename std::remove_reference<Pont &>::type &&(Pont &) noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x55d77d8[0m[0;1;36m 'move'[0m)
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635b368[0m <[0;33mcol:30[0m, [0;33mcol:33[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m prefix '*' cannot overflow
[0;34m      |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b350[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |         `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635b338[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m      |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b318[0m <[0;33mcol:33[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635aae0[0m[0;1;36m '__last'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635b510[0m <[0;33mline:549:4[0m, [0;33mcol:11[0m>
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635b4f8[0m <[0;33mcol:11[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635b4d8[0m <[0;33mcol:11[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ab58[0m[0;1;36m '__result'[0m [0;32m'Pont *':'Pont *'[0m

Dumping std::__copy_move_backward:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x56f1440[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:554:3[0m, [0;33mline:573:5[0m> [0;33mline:555:12[0m struct[0;1;36m __copy_move_backward[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument expr
[0;34m| `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f1260[0m <[0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m [0;1;32mNonTypeTemplateParm[0m[0;33m 0x56f11e8[0m[0;1;36m '_IsMove'[0m [0;32m'bool'[0m
[0;34m|-[0mTemplateArgument integral 1
[0;34m|-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56f11e8[0m <[0;33mline:554:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x56f1728[0m <[0;33mline:555:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __copy_move_backward[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56f1b48[0m <[0;33mline:557:7[0m, [0;33mline:572:2[0m> [0;33mline:559:9[0m[0;1;36m __copy_move_b[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f17b8[0m <[0;33mline:557:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _Tp[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x56f1aa8[0m <[0;33mline:558:9[0m, [0;33mline:572:2[0m> [0;33mline:559:9[0m[0;1;36m __copy_move_b[0m [0;32m'_Tp *(const _Tp *, const _Tp *, _Tp *)'[0m static
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f1878[0m <[0;33mcol:23[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f18f0[0m <[0;33mcol:43[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced[0;1;36m __last[0m [0;32m'const _Tp *'[0m
[0;34m    |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f1998[0m <[0;33mcol:62[0m, [0;33mcol:67[0m> [0;33mcol:67[0m referenced[0;1;36m __result[0m [0;32m'_Tp *'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56f2530[0m <[0;33mline:560:9[0m, [0;33mline:572:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f1f40[0m <[0;33mline:562:4[0m, [0;33mline:564:33[0m>
[0;34m      | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x56f1ee0[0m <[0;33mline:562:4[0m, [0;33mline:564:32[0m> [0;33mline:562:10[0m referenced[0;1;36m __assignable[0m [0;32m'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x56f1d50[0m [0;32m'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'[0m dependent conditional
[0;34m      |     |-[0mTemplateArgument expr
[0;34m      |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f1bd0[0m <[0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m [0;1;32mNonTypeTemplateParm[0m[0;33m 0x56f11e8[0m[0;1;36m '_IsMove'[0m [0;32m'bool'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'is_move_assignable<_Tp>'[0m
[0;34m      |     `-[0mTemplateArgument type [0;32m'is_copy_assignable<_Tp>'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f20a0[0m <[0;33mline:566:4[0m, [0;33mcol:72[0m>
[0;34m      | `-[0m[0;1;32mStaticAssertDecl[0m[0;33m 0x56f2060[0m <[0;33mcol:4[0m, [0;33mcol:71[0m> [0;33mcol:4[0m
[0;34m      |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56f1ff8[0m <[0;33mcol:19[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56f2030[0m <[0;33mcol:46[0m> [0;32m'const char [23]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "type is not assignable"[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f21f8[0m <[0;33mline:568:4[0m, [0;33mcol:43[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f20c8[0m <[0;33mcol:4[0m, [0;33mcol:36[0m> [0;33mcol:20[0m referenced[0;1;36m _Num[0m [0;32m'const std::ptrdiff_t':'const long'[0m cinit
[0;34m      |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56f21c0[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f2170[0m <[0;33mcol:34[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2130[0m <[0;33mcol:27[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f18f0[0m[0;1;36m '__last'[0m [0;32m'const _Tp *'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2150[0m <[0;33mcol:36[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f1878[0m[0;1;36m '__first'[0m [0;32m'const _Tp *'[0m
[0;34m      |-[0m[0;1;35mIfStmt[0m[0;33m 0x56f2440[0m <[0;33mline:569:4[0m, [0;33mline:570:68[0m>
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f2248[0m <[0;33mline:569:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f2230[0m <[0;33mcol:8[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2210[0m <[0;33mcol:8[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f20c8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x56f2408[0m <[0;33mline:570:6[0m, [0;33mcol:68[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2260[0m <[0;33mcol:6[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e0880[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m      |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56f2310[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f22c0[0m <[0;33mcol:33[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m      |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2280[0m <[0;33mcol:24[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f1998[0m[0;1;36m '__result'[0m [0;32m'_Tp *'[0m
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f22a0[0m <[0;33mcol:35[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f20c8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2348[0m <[0;33mcol:41[0m> [0;32m'const _Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f1878[0m[0;1;36m '__first'[0m [0;32m'const _Tp *'[0m
[0;34m      |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f23e8[0m <[0;33mcol:50[0m, [0;33mcol:64[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m      |     |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x56f2378[0m <[0;33mcol:50[0m, [0;33mcol:60[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'_Tp'[0m
[0;34m      |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f23d0[0m <[0;33mcol:64[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f23b8[0m <[0;33mcol:64[0m> [0;32m'std::ptrdiff_t':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2398[0m <[0;33mcol:64[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f20c8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m
[0;34m      `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56f2520[0m <[0;33mline:571:4[0m, [0;33mcol:22[0m>
[0;34m        `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56f24e8[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f2498[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2458[0m <[0;33mcol:11[0m> [0;32m'_Tp *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f1998[0m[0;1;36m '__result'[0m [0;32m'_Tp *'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f2478[0m <[0;33mcol:22[0m> [0;32m'const std::ptrdiff_t':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f20c8[0m[0;1;36m '_Num'[0m [0;32m'const std::ptrdiff_t':'const long'[0m

Dumping std::__copy_move_backward_a:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56f2968[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:575:3[0m, [0;33mline:591:5[0m> [0;33mline:577:5[0m[0;1;36m __copy_move_backward_a[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56f2578[0m <[0;33mline:575:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f25d8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _BI1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f2648[0m <[0;33mcol:41[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced typename depth 0 index 2[0;1;36m _BI2[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x56f28c8[0m <[0;33mline:576:5[0m, [0;33mline:591:5[0m> [0;33mline:577:5[0m[0;1;36m __copy_move_backward_a[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f26f0[0m <[0;33mcol:28[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f2768[0m <[0;33mcol:42[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f27e0[0m <[0;33mcol:55[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56f3640[0m <[0;33mline:578:5[0m, [0;33mline:591:5[0m>
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f2b48[0m <[0;33mline:579:7[0m, [0;33mcol:69[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56f2af0[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m _ValueType1[0m [0;32m'typename iterator_traits<_BI1>::value_type'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x56f2a80[0m [0;32m'typename iterator_traits<_BI1>::value_type'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f2cc8[0m <[0;33mline:580:7[0m, [0;33mcol:69[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56f2c70[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m _ValueType2[0m [0;32m'typename iterator_traits<_BI2>::value_type'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x56f2c00[0m [0;32m'typename iterator_traits<_BI2>::value_type'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f2e48[0m <[0;33mline:581:7[0m, [0;33mcol:74[0m>
[0;34m|   | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x56f2df0[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m _Category[0m [0;32m'typename iterator_traits<_BI1>::iterator_category'[0m
[0;34m|   |   `-[0m[0;32mDependentNameType[0m[0;33m 0x56f2d80[0m [0;32m'typename iterator_traits<_BI1>::iterator_category'[0m dependent
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f3308[0m <[0;33mline:582:7[0m, [0;33mline:585:58[0m>
[0;34m|   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f2e70[0m <[0;33mline:582:7[0m, [0;33mline:585:57[0m> [0;33mline:582:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m|   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x56f32e8[0m <[0;33mcol:29[0m, [0;33mline:585:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f32c8[0m <[0;33mline:582:30[0m, [0;33mline:585:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f3148[0m <[0;33mline:582:30[0m, [0;33mline:584:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f3028[0m <[0;33mline:582:30[0m, [0;33mline:583:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m|   |       | | |-[0m[0;1;35mTypeTraitExpr[0m[0;33m 0x56f2f10[0m <[0;33mline:582:30[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m|   |       | | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56f2ff0[0m <[0;33mline:583:26[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   |       | `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56f3110[0m <[0;33mline:584:26[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   |       `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56f3290[0m <[0;33mline:585:12[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56f3630[0m <[0;33mline:587:7[0m, [0;33mline:590:18[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x56f35f8[0m <[0;33mline:587:14[0m, [0;33mline:590:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x56f3560[0m <[0;33mline:587:14[0m, [0;33mline:588:45[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f3598[0m <[0;33mcol:59[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f26f0[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f35b8[0m <[0;33mline:589:10[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f2768[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f35d8[0m <[0;33mline:590:10[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f27e0[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6357bc8[0m <[0;33mline:576:5[0m, [0;33mline:591:5[0m> [0;33mline:577:5[0m used[0;1;36m __copy_move_backward_a[0m [0;32m'Pont *(Pont *, Pont *, Pont *)'[0m inline
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'Pont *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63579b8[0m <[0;33mcol:28[0m, [0;33mcol:33[0m> [0;33mcol:33[0m used[0;1;36m __first[0m [0;32m'Pont *':'Pont *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357a30[0m <[0;33mcol:42[0m, [0;33mcol:47[0m> [0;33mcol:47[0m used[0;1;36m __last[0m [0;32m'Pont *':'Pont *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6357aa8[0m <[0;33mcol:55[0m, [0;33mcol:60[0m> [0;33mcol:60[0m used[0;1;36m __result[0m [0;32m'Pont *':'Pont *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635ae70[0m <[0;33mline:578:5[0m, [0;33mline:591:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6358208[0m <[0;33mline:579:7[0m, [0;33mcol:69[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x63581b0[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m _ValueType1[0m [0;32m'typename iterator_traits<Pont *>::value_type':'Pont'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x6358160[0m [0;32m'typename iterator_traits<Pont *>::value_type'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x62278d0[0m [0;32m'std::iterator_traits<Pont *>::value_type'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x6227610[0m[0;1;36m 'value_type'[0m
[0;34m    |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6227400[0m [0;32m'Pont'[0m sugar
[0;34m    |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x56739e0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5673998[0m[0;1;36m '_Tp'[0m
[0;34m    |         `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m    |           `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6359728[0m <[0;33mline:580:7[0m, [0;33mcol:69[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x63596d0[0m <[0;33mcol:7[0m, [0;33mcol:58[0m> [0;33mcol:58[0m[0;1;36m _ValueType2[0m [0;32m'typename iterator_traits<Pont *>::value_type':'Pont'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x63582d0[0m [0;32m'typename iterator_traits<Pont *>::value_type'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x62278d0[0m [0;32m'std::iterator_traits<Pont *>::value_type'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x6227610[0m[0;1;36m 'value_type'[0m
[0;34m    |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6227400[0m [0;32m'Pont'[0m sugar
[0;34m    |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x56739e0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m    |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x5673998[0m[0;1;36m '_Tp'[0m
[0;34m    |         `-[0m[0;32mRecordType[0m[0;33m 0x5e80d80[0m [0;32m'Pont'[0m
[0;34m    |           `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e80ce8[0m[0;1;36m 'Pont'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6359898[0m <[0;33mline:581:7[0m, [0;33mcol:74[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6359840[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m[0;1;36m _Category[0m [0;32m'typename iterator_traits<Pont *>::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m    |   `-[0m[0;32mElaboratedType[0m[0;33m 0x63597f0[0m [0;32m'typename iterator_traits<Pont *>::iterator_category'[0m sugar
[0;34m    |     `-[0m[0;32mTypedefType[0m[0;33m 0x62277e0[0m [0;32m'std::iterator_traits<Pont *>::iterator_category'[0m sugar
[0;34m    |       |-[0m[0;1;32mTypedef[0m[0;33m 0x62275a8[0m[0;1;36m 'iterator_category'[0m
[0;34m    |       `-[0m[0;32mRecordType[0m[0;33m 0x566e3b0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m    |         `-[0m[0;1;32mCXXRecord[0m[0;33m 0x566e320[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x635a658[0m <[0;33mline:582:7[0m, [0;33mline:585:58[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x63598b0[0m <[0;33mline:582:7[0m, [0;33mline:585:57[0m> [0;33mline:582:18[0m referenced[0;1;36m __simple[0m [0;32m'const bool'[0m cinit
[0;34m    |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x635a5e0[0m <[0;33mcol:29[0m, [0;33mline:585:57[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635a5c0[0m <[0;33mline:582:30[0m, [0;33mline:585:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6359fe0[0m <[0;33mline:582:30[0m, [0;33mline:584:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6359ed0[0m <[0;33mline:582:30[0m, [0;33mline:583:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    |       | | |-[0m[0;1;35mTypeTraitExpr[0m[0;33m 0x6359950[0m <[0;33mline:582:30[0m, [0;33mcol:54[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6359eb8[0m <[0;33mline:583:26[0m, [0;33mcol:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |       | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6359e88[0m <[0;33mcol:26[0m, [0;33mcol:46[0m> [0;32m'std::__is_pointer<Pont *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6359db0[0m[0;1;36m '__value'[0m [0;32m'std::__is_pointer<Pont *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m
[0;34m    |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6359fc8[0m <[0;33mline:584:26[0m, [0;33mcol:46[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6359f98[0m <[0;33mcol:26[0m, [0;33mcol:46[0m> [0;32m'std::__is_pointer<Pont *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6359db0[0m[0;1;36m '__value'[0m [0;32m'std::__is_pointer<Pont *>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:320:7)'[0m
[0;34m    |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635a5a8[0m <[0;33mline:585:12[0m, [0;33mcol:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m    |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635a578[0m <[0;33mcol:12[0m, [0;33mcol:50[0m> [0;32m'std::__are_same<Pont, Pont>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:104:7)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x635a4a0[0m[0;1;36m '__value'[0m [0;32m'std::__are_same<Pont, Pont>::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/cpp_type_traits.h:104:7)'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635ae60[0m <[0;33mline:587:7[0m, [0;33mline:590:18[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x635ade0[0m <[0;33mline:587:14[0m, [0;33mline:590:18[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635adc8[0m <[0;33mline:587:14[0m, [0;33mline:588:45[0m> [0;32m'Pont *(*)(Pont *, Pont *, Pont *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635ad60[0m <[0;33mline:587:14[0m, [0;33mline:588:45[0m> [0;32m'Pont *(Pont *, Pont *, Pont *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x635ac38[0m[0;1;36m '__copy_move_b'[0m [0;32m'Pont *(Pont *, Pont *, Pont *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x56f0bb8[0m[0;1;36m '__copy_move_b'[0m)
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635ae18[0m <[0;33mcol:59[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635a8b8[0m <[0;33mcol:59[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63579b8[0m[0;1;36m '__first'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635ae30[0m <[0;33mline:589:10[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635a8d8[0m <[0;33mcol:10[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6357a30[0m[0;1;36m '__last'[0m [0;32m'Pont *':'Pont *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x635ae48[0m <[0;33mline:590:10[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635a8f8[0m <[0;33mcol:10[0m> [0;32m'Pont *':'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6357aa8[0m[0;1;36m '__result'[0m [0;32m'Pont *':'Pont *'[0m

Dumping std::__copy_move_backward_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56f3a78[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:593:3[0m, [0;33mline:600:5[0m> [0;33mline:595:5[0m[0;1;36m __copy_move_backward_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x56f3688[0m <[0;33mline:593:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f36e8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _BI1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f3758[0m <[0;33mcol:41[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced typename depth 0 index 2[0;1;36m _BI2[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x56f39d8[0m <[0;33mline:594:5[0m, [0;33mline:600:5[0m> [0;33mline:595:5[0m[0;1;36m __copy_move_backward_a2[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f3800[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f3878[0m <[0;33mcol:43[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f38f0[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56f3ea0[0m <[0;33mline:596:5[0m, [0;33mline:600:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56f3e90[0m <[0;33mline:597:7[0m, [0;33mline:599:34[0m>
[0;34m|     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x56f3e68[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'_BI2'[0m[0;36m[0m[0;36m[0m [0;32m'_BI2'[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x56f3e30[0m <[0;33mline:597:19[0m, [0;33mline:599:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f3b50[0m <[0;33mline:597:19[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__copy_move_backward_a'[0;33m 0x56f2968[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f3c78[0m <[0;33mline:598:6[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f3bf8[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x5693808[0m[0;33m 0x56a9d38[0m[0;33m 0x56b6a08[0m[0;33m 0x56d9e28[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f3c58[0m <[0;33mcol:24[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f3800[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f3d40[0m <[0;33mcol:34[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f3cc0[0m <[0;33mcol:34[0m, [0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x5693808[0m[0;33m 0x56a9d38[0m[0;33m 0x56b6a08[0m[0;33m 0x56d9e28[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f3d20[0m <[0;33mcol:52[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f3878[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x56f3e08[0m <[0;33mline:599:6[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f3d88[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__niter_base'[0;33m 0x5693808[0m[0;33m 0x56a9d38[0m[0;33m 0x56b6a08[0m[0;33m 0x56d9e28[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f3de8[0m <[0;33mcol:24[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f38f0[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63562e8[0m <[0;33mline:594:5[0m, [0;33mline:600:5[0m> [0;33mline:595:5[0m used[0;1;36m __copy_move_backward_a2[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m inline
[0;34m  |-[0mTemplateArgument integral 1
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6356118[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mcol:34[0m used[0;1;36m __first[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6356190[0m <[0;33mcol:43[0m, [0;33mcol:48[0m> [0;33mcol:48[0m used[0;1;36m __last[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6356208[0m <[0;33mcol:56[0m, [0;33mcol:61[0m> [0;33mcol:61[0m used[0;1;36m __result[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6357fd0[0m <[0;33mline:596:5[0m, [0;33mline:600:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6357fc0[0m <[0;33mline:597:7[0m, [0;33mline:599:34[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6357fa8[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6357f78[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m          `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6357f60[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x6357f00[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m functional cast to class __gnu_cxx::__normal_iterator<class Pont *, class std::vector<class Pont, class std::allocator<class Pont> > > <ConstructorConversion>
[0;34m              `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6357ed0[0m <[0;33mline:597:14[0m, [0;33mline:599:34[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (Pont *const &) noexcept'[0m
[0;34m                `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6357eb8[0m <[0;33mline:597:19[0m, [0;33mline:599:33[0m> [0;32m'Pont *const':'Pont *const'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  `-[0m[0;1;35mCallExpr[0m[0;33m 0x6357df0[0m <[0;33mline:597:19[0m, [0;33mline:599:33[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m
[0;34m                    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6357dd8[0m <[0;33mline:597:19[0m, [0;33mcol:54[0m> [0;32m'Pont *(*)(Pont *, Pont *, Pont *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357d08[0m <[0;33mcol:19[0m, [0;33mcol:54[0m> [0;32m'Pont *(Pont *, Pont *, Pont *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6357bc8[0m[0;1;36m '__copy_move_backward_a'[0m [0;32m'Pont *(Pont *, Pont *, Pont *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x56f2968[0m[0;1;36m '__copy_move_backward_a'[0m)
[0;34m                    |-[0m[0;1;35mCallExpr[0m[0;33m 0x6357100[0m <[0;33mline:598:6[0m, [0;33mcol:31[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m
[0;34m                    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63570e8[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'Pont *(*)(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357058[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'Pont *(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6356cd8[0m[0;1;36m '__niter_base'[0m [0;32m'Pont *(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x56a9d38[0m[0;1;36m '__niter_base'[0m)
[0;34m                    | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6357178[0m <[0;33mcol:24[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m                    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6357160[0m <[0;33mcol:24[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6356950[0m <[0;33mcol:24[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6356118[0m[0;1;36m '__first'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m                    |-[0m[0;1;35mCallExpr[0m[0;33m 0x6357370[0m <[0;33mcol:34[0m, [0;33mcol:58[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m
[0;34m                    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6357358[0m <[0;33mcol:34[0m, [0;33mcol:39[0m> [0;32m'Pont *(*)(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357320[0m <[0;33mcol:34[0m, [0;33mcol:39[0m> [0;32m'Pont *(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6356cd8[0m[0;1;36m '__niter_base'[0m [0;32m'Pont *(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x56a9d38[0m[0;1;36m '__niter_base'[0m)
[0;34m                    | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63573e8[0m <[0;33mcol:52[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m                    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63573d0[0m <[0;33mcol:52[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357208[0m <[0;33mcol:52[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6356190[0m[0;1;36m '__last'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m                    `-[0m[0;1;35mCallExpr[0m[0;33m 0x63575e0[0m <[0;33mline:599:6[0m, [0;33mcol:32[0m> [0;32m'Pont *':'Pont *'[0m[0;36m[0m[0;36m[0m
[0;34m                      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63575c8[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'Pont *(*)(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357590[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'Pont *(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6356cd8[0m[0;1;36m '__niter_base'[0m [0;32m'Pont *(__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x56a9d38[0m[0;1;36m '__niter_base'[0m)
[0;34m                      `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6357658[0m <[0;33mcol:24[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, vector<Pont, allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m                        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6357640[0m <[0;33mcol:24[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6357478[0m <[0;33mcol:24[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6356208[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m

Dumping std::move_backward:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x56f4a48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:656:3[0m, [0;33mline:671:5[0m> [0;33mline:658:5[0m[0;1;36m move_backward[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f46c0[0m <[0;33mline:656:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BI1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x56f4738[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _BI2[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x56f49a8[0m <[0;33mline:657:5[0m, [0;33mline:671:5[0m> [0;33mline:658:5[0m[0;1;36m move_backward[0m [0;32m'_BI2 (_BI1, _BI1, _BI2)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f47d8[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __first[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f4850[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced[0;1;36m __last[0m [0;32m'_BI1'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x56f48c8[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m __result[0m [0;32m'_BI2'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56f4d60[0m <[0;33mline:659:5[0m, [0;33mline:671:5[0m>
[0;34m|   |-[0m[0;1;35mNullStmt[0m[0;33m 0x56f4ab8[0m <[0;33mline:666:54[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x56f4d50[0m <[0;33mline:668:7[0m, [0;33mline:670:15[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x56f4d18[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f4af0[0m <[0;33mline:668:14[0m, [0;33mcol:47[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__copy_move_backward_a2'[0;33m 0x56f3a78[0m
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f4c10[0m <[0;33mcol:49[0m, [0;33mcol:74[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f4b98[0m <[0;33mcol:49[0m, [0;33mcol:54[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__miter_base'[0;33m 0x5615648[0m[0;33m 0x5695488[0m[0;33m 0x56b7708[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f4bf0[0m <[0;33mcol:67[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f47d8[0m[0;1;36m '__first'[0m [0;32m'_BI1'[0m
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f4cd0[0m <[0;33mline:669:7[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x56f4c58[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__miter_base'[0;33m 0x5615648[0m[0;33m 0x5695488[0m[0;33m 0x56b7708[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f4cb0[0m <[0;33mcol:25[0m> [0;32m'_BI1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f4850[0m[0;1;36m '__last'[0m [0;32m'_BI1'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f4cf8[0m <[0;33mline:670:7[0m> [0;32m'_BI2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56f48c8[0m[0;1;36m '__result'[0m [0;32m'_BI2'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6352b28[0m <[0;33mline:657:5[0m, [0;33mline:671:5[0m> [0;33mline:658:5[0m used[0;1;36m move_backward[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352918[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m __first[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352990[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __last[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6352a08[0m <[0;33mcol:46[0m, [0;33mcol:51[0m> [0;33mcol:51[0m used[0;1;36m __result[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6356740[0m <[0;33mline:659:5[0m, [0;33mline:671:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x56f4ab8[0m <[0;33mline:666:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6356730[0m <[0;33mline:668:7[0m, [0;33mline:670:15[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6356718[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63566e8[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m          `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x63566d0[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mCallExpr[0m[0;33m 0x63564e0[0m <[0;33mline:668:14[0m, [0;33mline:670:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m              |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63564c8[0m <[0;33mline:668:14[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6356428[0m <[0;33mcol:14[0m, [0;33mcol:47[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63562e8[0m[0;1;36m '__copy_move_backward_a2'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x56f3a78[0m[0;1;36m '__copy_move_backward_a2'[0m)
[0;34m              |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6356568[0m <[0;33mcol:49[0m, [0;33mcol:74[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m              | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6356550[0m <[0;33mcol:49[0m, [0;33mcol:74[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m              |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6355b10[0m <[0;33mcol:49[0m, [0;33mcol:74[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m              |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6355af8[0m <[0;33mcol:49[0m, [0;33mcol:54[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6355a68[0m <[0;33mcol:49[0m, [0;33mcol:54[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6355908[0m[0;1;36m '__miter_base'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5615648[0m[0;1;36m '__miter_base'[0m)
[0;34m              |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6355b88[0m <[0;33mcol:67[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m              |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6355b70[0m <[0;33mcol:67[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m              |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6355730[0m <[0;33mcol:67[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6352918[0m[0;1;36m '__first'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m              |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63565e8[0m <[0;33mline:669:7[0m, [0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m              | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x63565d0[0m <[0;33mcol:7[0m, [0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m              |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6355d18[0m <[0;33mcol:7[0m, [0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m              |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6355d00[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6355cc8[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6355908[0m[0;1;36m '__miter_base'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5615648[0m[0;1;36m '__miter_base'[0m)
[0;34m              |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6355d90[0m <[0;33mcol:25[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m              |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6355d78[0m <[0;33mcol:25[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m              |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6355c10[0m <[0;33mcol:25[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6352990[0m[0;1;36m '__last'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m              `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6356668[0m <[0;33mline:670:7[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6356650[0m <[0;33mcol:7[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6355dc0[0m <[0;33mcol:7[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6352a08[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m

Dumping __gnu_cxx::char_traits::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x57163f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:116:7[0m, [0;33mline:117:67[0m> [0;33mcol:7[0m[0;1;36m move[0m [0;32m'__gnu_cxx::char_traits::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57161a8[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __s1[0m [0;32m'__gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5716220[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m[0;1;36m __s2[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57162d8[0m <[0;33mcol:52[0m, [0;33mcol:64[0m> [0;33mcol:64[0m[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping __gnu_cxx::char_traits::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5719be0[0m parent 0x57130c0 prev 0x57163f8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:181:3[0m, [0;33mline:188:5[0m> [0;33mline:184:5[0m[0;1;36m move[0m [0;32m'typename char_traits<_CharT>::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5719888[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m __s1[0m [0;32m'__gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5719900[0m <[0;33mcol:27[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __s2[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57199b8[0m <[0;33mcol:50[0m, [0;33mcol:62[0m> [0;33mcol:62[0m referenced[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5719e78[0m <[0;33mline:185:5[0m, [0;33mline:188:5[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5719e68[0m <[0;33mline:186:7[0m, [0;33mline:187:35[0m>
[0;34m    `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5719e38[0m <[0;33mline:186:14[0m, [0;33mline:187:35[0m> [0;32m'_CharT *'[0m[0;36m[0m[0;36m[0m static_cast<_CharT *> <Dependent>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5719dc0[0m <[0;33mline:186:35[0m, [0;33mline:187:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5719cd8[0m <[0;33mline:186:35[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e0880[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5719cf8[0m <[0;33mcol:53[0m> [0;32m'__gnu_cxx::char_traits::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5719888[0m[0;1;36m '__s1'[0m [0;32m'__gnu_cxx::char_traits::char_type *'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5719d18[0m <[0;33mcol:59[0m> [0;32m'const __gnu_cxx::char_traits::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5719900[0m[0;1;36m '__s2'[0m [0;32m'const __gnu_cxx::char_traits::char_type *'[0m
[0;34m        `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5719da0[0m <[0;33mline:187:11[0m, [0;33mcol:33[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5719d88[0m <[0;33mcol:11[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5719d38[0m <[0;33mcol:11[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57199b8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m          `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x5719d68[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'__gnu_cxx::char_traits::char_type':'_CharT'[0m

Dumping std::char_traits<char>::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x571ca88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:337:7[0m, [0;33mline:343:7[0m> [0;33mline:338:7[0m[0;1;36m move[0m [0;32m'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x571c878[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __s1[0m [0;32m'std::char_traits<char>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x571c8f0[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x571c968[0m <[0;33mcol:52[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5720f50[0m <[0;33mline:339:7[0m, [0;33mline:343:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5720cf8[0m <[0;33mline:340:2[0m, [0;33mline:341:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5720c90[0m <[0;33mline:340:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720c60[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5720c20[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x571c968[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720c78[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5720c40[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5720ce8[0m <[0;33mline:341:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720cd0[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5720cb0[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x571c878[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char>::char_type *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5720f40[0m <[0;33mline:342:2[0m, [0;33mcol:67[0m>
[0;34m    `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5720f10[0m <[0;33mcol:9[0m, [0;33mcol:67[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m static_cast<std::char_traits<char>::char_type *> <BitCast>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5720e50[0m <[0;33mcol:33[0m, [0;33mcol:66[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720e38[0m <[0;33mcol:33[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5720d10[0m <[0;33mcol:33[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e0880[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720ea0[0m <[0;33mcol:51[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720e88[0m <[0;33mcol:51[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5720d30[0m <[0;33mcol:51[0m> [0;32m'std::char_traits<char>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x571c878[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char>::char_type *'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720ed0[0m <[0;33mcol:57[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720eb8[0m <[0;33mcol:57[0m> [0;32m'const std::char_traits<char>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5720d50[0m <[0;33mcol:57[0m> [0;32m'const std::char_traits<char>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x571c8f0[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char>::char_type *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5720ee8[0m <[0;33mcol:63[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5720d70[0m <[0;33mcol:63[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x571c968[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::char_traits<wchar_t>::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x57232a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:449:7[0m, [0;33mline:455:7[0m> [0;33mline:450:7[0m[0;1;36m move[0m [0;32m'std::char_traits<wchar_t>::char_type *(std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57230d8[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __s1[0m [0;32m'std::char_traits<wchar_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5723150[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<wchar_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57231c8[0m <[0;33mcol:52[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5724ea0[0m <[0;33mline:451:7[0m, [0;33mline:455:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5724cb0[0m <[0;33mline:452:2[0m, [0;33mline:453:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5724c48[0m <[0;33mline:452:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5724c18[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5724bd8[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57231c8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5724c30[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5724bf8[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5724ca0[0m <[0;33mline:453:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5724c88[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<wchar_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5724c68[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<wchar_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57230d8[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<wchar_t>::char_type *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5724e90[0m <[0;33mline:454:2[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5724e10[0m <[0;33mcol:9[0m, [0;33mcol:33[0m> [0;32m'wchar_t *'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5724df8[0m <[0;33mcol:9[0m> [0;32m'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5724d70[0m <[0;33mcol:9[0m> [0;32m'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5467658[0m[0;1;36m 'wmemmove'[0m [0;32m'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'[0m ([0;1;32mUsingShadow[0m[0;33m 0x547e470[0m[0;1;36m 'wmemmove'[0m)
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5724e48[0m <[0;33mcol:18[0m> [0;32m'std::char_traits<wchar_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5724d10[0m <[0;33mcol:18[0m> [0;32m'std::char_traits<wchar_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57230d8[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<wchar_t>::char_type *'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5724e60[0m <[0;33mcol:24[0m> [0;32m'const std::char_traits<wchar_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5724d30[0m <[0;33mcol:24[0m> [0;32m'const std::char_traits<wchar_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5723150[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<wchar_t>::char_type *'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5724e78[0m <[0;33mcol:30[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5724d50[0m <[0;33mcol:30[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57231c8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m

Dumping std::char_traits<char16_t>::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5745f68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:557:7[0m, [0;33mline:564:7[0m> [0;33mline:558:7[0m[0;1;36m move[0m [0;32m'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5745d58[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __s1[0m [0;32m'std::char_traits<char16_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5745dd0[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5745e48[0m <[0;33mcol:52[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x574a710[0m <[0;33mline:559:7[0m, [0;33mline:564:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x574a4c0[0m <[0;33mline:560:2[0m, [0;33mline:561:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x574a458[0m <[0;33mline:560:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a428[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574a3e8[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745e48[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a440[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x574a408[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x574a4b0[0m <[0;33mline:561:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a498[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574a478[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745d58[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char16_t>::char_type *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x574a700[0m <[0;33mline:562:2[0m, [0;33mline:563:59[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x574a6e0[0m <[0;33mline:562:9[0m, [0;33mline:563:59[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x574a6b0[0m <[0;33mline:562:10[0m, [0;33mline:563:58[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m static_cast<std::char_traits<char16_t>::char_type *> <BitCast>
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x574a608[0m <[0;33mcol:4[0m, [0;33mcol:57[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a5f0[0m <[0;33mcol:4[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574a4d8[0m <[0;33mcol:4[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e0880[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a658[0m <[0;33mcol:22[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a640[0m <[0;33mcol:22[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574a4f8[0m <[0;33mcol:22[0m> [0;32m'std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745d58[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char16_t>::char_type *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a688[0m <[0;33mcol:28[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a670[0m <[0;33mcol:28[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574a518[0m <[0;33mcol:28[0m> [0;32m'const std::char_traits<char16_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745dd0[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char16_t>::char_type *'[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x574a5a0[0m <[0;33mcol:34[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574a588[0m <[0;33mcol:34[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574a538[0m <[0;33mcol:34[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5745e48[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m            `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x574a568[0m <[0;33mcol:40[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'std::char_traits<char16_t>::char_type':'char16_t'[0m

Dumping std::char_traits<char32_t>::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x574cae8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/char_traits.h:654:7[0m, [0;33mline:661:7[0m> [0;33mline:655:7[0m[0;1;36m move[0m [0;32m'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x574c8d8[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __s1[0m [0;32m'std::char_traits<char32_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x574c950[0m <[0;33mcol:29[0m, [0;33mcol:46[0m> [0;33mcol:46[0m used[0;1;36m __s2[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x574c9c8[0m <[0;33mcol:52[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m __n[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x574f828[0m <[0;33mline:656:7[0m, [0;33mline:661:7[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x574f5d8[0m <[0;33mline:657:2[0m, [0;33mline:658:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x574f570[0m <[0;33mline:657:6[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f540[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574f500[0m <[0;33mcol:6[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x574c9c8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f558[0m <[0;33mcol:13[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x574f520[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x574f5c8[0m <[0;33mline:658:4[0m, [0;33mcol:11[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f5b0[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574f590[0m <[0;33mcol:11[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x574c8d8[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char32_t>::char_type *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x574f818[0m <[0;33mline:659:2[0m, [0;33mline:660:59[0m>
[0;34m    `-[0m[0;1;35mParenExpr[0m[0;33m 0x574f7f8[0m <[0;33mline:659:9[0m, [0;33mline:660:59[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x574f7c8[0m <[0;33mline:659:10[0m, [0;33mline:660:58[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m static_cast<std::char_traits<char32_t>::char_type *> <BitCast>
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x574f720[0m <[0;33mcol:4[0m, [0;33mcol:57[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f708[0m <[0;33mcol:4[0m> [0;32m'void *(*)(void *, const void *, unsigned long) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574f5f0[0m <[0;33mcol:4[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e0880[0m[0;1;36m '__builtin_memmove'[0m [0;32m'void *(void *, const void *, unsigned long) noexcept'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f770[0m <[0;33mcol:22[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f758[0m <[0;33mcol:22[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574f610[0m <[0;33mcol:22[0m> [0;32m'std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x574c8d8[0m[0;1;36m '__s1'[0m [0;32m'std::char_traits<char32_t>::char_type *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f7a0[0m <[0;33mcol:28[0m> [0;32m'const void *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f788[0m <[0;33mcol:28[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574f630[0m <[0;33mcol:28[0m> [0;32m'const std::char_traits<char32_t>::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x574c950[0m[0;1;36m '__s2'[0m [0;32m'const std::char_traits<char32_t>::char_type *'[0m
[0;34m          `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x574f6b8[0m <[0;33mcol:34[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x574f6a0[0m <[0;33mcol:34[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x574f650[0m <[0;33mcol:34[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x574c9c8[0m[0;1;36m '__n'[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m            `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x574f680[0m <[0;33mcol:40[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'std::char_traits<char32_t>::char_type':'char32_t'[0m

Dumping __gnu_cxx::new_allocator::propagate_on_container_move_assignment:
[0;1;32mTypedefDecl[0m[0;33m 0x581a0d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/new_allocator.h:76:7[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;32mElaboratedType[0m[0;33m 0x581a060[0m [0;32m'std::true_type'[0m sugar
[0;34m  `-[0m[0;32mTypedefType[0m[0;33m 0x54cbbd0[0m [0;32m'std::true_type'[0m sugar
[0;34m    |-[0m[0;1;32mTypedef[0m[0;33m 0x54c43a8[0m[0;1;36m 'true_type'[0m
[0;34m    `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x54c42c0[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m      |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m      |-[0mTemplateArgument expr
[0;34m      | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x54c4188[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m      |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x54c4130[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m      `-[0m[0;32mRecordType[0m[0;33m 0x54c42a0[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m        `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x54c41a8[0m[0;1;36m 'integral_constant'[0m

Dumping std::allocator<void>::propagate_on_container_move_assignment:
[0;1;32mTypedefDecl[0m[0;33m 0x581ffd0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/allocator.h:84:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x54cbbd0[0m [0;32m'std::true_type'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x54c43a8[0m[0;1;36m 'true_type'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x54c42c0[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m    |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m    |-[0mTemplateArgument expr
[0;34m    | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x54c4188[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m    |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x54c4130[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x54c42a0[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m      `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x54c41a8[0m[0;1;36m 'integral_constant'[0m

Dumping std::allocator::propagate_on_container_move_assignment:
[0;1;32mTypedefDecl[0m[0;33m 0x58218b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/allocator.h:126:7[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x54cbbd0[0m [0;32m'std::true_type'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x54c43a8[0m[0;1;36m 'true_type'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x54c42c0[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m    |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m    |-[0mTemplateArgument expr
[0;34m    | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x54c4188[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m    |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x54c4130[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x54c42a0[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m      `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x54c41a8[0m[0;1;36m 'integral_constant'[0m

Dumping std::allocator_traits::propagate_on_container_move_assignment:
[0;1;32mTypeAliasDecl[0m[0;33m 0x58c3cf8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:184:7[0m, [0;33mline:185:47[0m> [0;33mline:184:13[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'__detected_or_t<std::false_type, __pocma, _Alloc>':'typename __detected_or<integral_constant<bool, false>, __pocma, type-parameter-0-0>::type'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x58c3bc0[0m [0;32m'__detected_or_t<std::false_type, __pocma, _Alloc>'[0m sugar dependent alias __detected_or_t
[0;34m  |-[0mTemplateArgument type [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m  |-[0mTemplateArgument template __pocma
[0;34m  |-[0mTemplateArgument type [0;32m'_Alloc'[0m
[0;34m  |-[0m[0;32mDependentNameType[0m[0;33m 0x58c3b70[0m [0;32m'typename __detected_or<integral_constant<bool, false>, __pocma, type-parameter-0-0>::type'[0m dependent
[0;34m  `-[0m[0;32mDependentNameType[0m[0;33m 0x58c3b70[0m [0;32m'typename __detected_or<integral_constant<bool, false>, __pocma, type-parameter-0-0>::type'[0m dependent

Dumping std::allocator_traits<allocator<type-parameter-0-0> >::propagate_on_container_move_assignment:
[0;1;32mTypeAliasDecl[0m[0;33m 0x58d3f80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:413:7[0m, [0;33mcol:54[0m> [0;33mcol:13[0m[0;1;36m propagate_on_container_move_assignment[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x54cbbd0[0m [0;32m'std::true_type'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x54c43a8[0m[0;1;36m 'true_type'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x54c42c0[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m    |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m    |-[0mTemplateArgument expr
[0;34m    | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x54c4188[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m    |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x54c4130[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x54c42a0[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m      `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x54c41a8[0m[0;1;36m 'integral_constant'[0m

Dumping std::__do_alloc_on_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x58d8d38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:534:3[0m, [0;33mline:536:33[0m> [0;33mline:535:17[0m[0;1;36m __do_alloc_on_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58d89c0[0m <[0;33mline:534:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Alloc[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x58d8c98[0m <[0;33mline:535:5[0m, [0;33mline:536:33[0m> [0;33mline:535:17[0m[0;1;36m __do_alloc_on_move[0m [0;32m'void (_Alloc &, _Alloc &, std::true_type)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8a88[0m <[0;33mcol:36[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __one[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8b00[0m <[0;33mcol:51[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced[0;1;36m __two[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8b78[0m <[0;33mcol:66[0m> [0;33mcol:75[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d8ea0[0m <[0;33mline:536:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58d8e80[0m <[0;33mcol:7[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8da8[0m <[0;33mcol:7[0m> [0;32m'_Alloc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8a88[0m[0;1;36m '__one'[0m [0;32m'_Alloc &'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d8e58[0m <[0;33mcol:15[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d8de8[0m <[0;33mcol:15[0m, [0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d8e38[0m <[0;33mcol:25[0m> [0;32m'_Alloc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d8b00[0m[0;1;36m '__two'[0m [0;32m'_Alloc &'[0m

Dumping std::__do_alloc_on_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x58d9228[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:538:3[0m, [0;33mline:540:7[0m> [0;33mline:539:17[0m[0;1;36m __do_alloc_on_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58d8eb8[0m <[0;33mline:538:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Alloc[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x58d9188[0m <[0;33mline:539:5[0m, [0;33mline:540:7[0m> [0;33mline:539:17[0m[0;1;36m __do_alloc_on_move[0m [0;32m'void (_Alloc &, _Alloc &, std::false_type)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8f78[0m <[0;33mcol:36[0m, [0;33mcol:42[0m> [0;33mcol:43[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d8ff0[0m <[0;33mcol:45[0m, [0;33mcol:51[0m> [0;33mcol:52[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d9068[0m <[0;33mcol:54[0m> [0;33mcol:64[0m [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d9298[0m <[0;33mline:540:5[0m, [0;33mcol:7[0m>

Dumping std::__alloc_on_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x58d9558[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:542:3[0m, [0;33mline:548:5[0m> [0;33mline:543:17[0m[0;1;36m __alloc_on_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58d92a8[0m <[0;33mline:542:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Alloc[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x58d94b8[0m <[0;33mline:543:5[0m, [0;33mline:548:5[0m> [0;33mline:543:17[0m[0;1;36m __alloc_on_move[0m [0;32m'void (_Alloc &, _Alloc &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d9368[0m <[0;33mcol:33[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __one[0m [0;32m'_Alloc &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58d93e0[0m <[0;33mcol:48[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced[0;1;36m __two[0m [0;32m'_Alloc &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58d9958[0m <[0;33mline:544:5[0m, [0;33mline:548:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d96c8[0m <[0;33mline:545:7[0m, [0;33mcol:48[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x58d9670[0m <[0;33mcol:7[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __traits[0m [0;32m'allocator_traits<_Alloc>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x58d95d0[0m [0;32m'allocator_traits<_Alloc>'[0m dependent allocator_traits
[0;34m    |     `-[0mTemplateArgument type [0;32m'_Alloc'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x58d9828[0m <[0;33mline:546:7[0m, [0;33mcol:80[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x58d97d0[0m <[0;33mcol:7[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced[0;1;36m __pocma[0m [0;32m'typename __traits::propagate_on_container_move_assignment'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x58d9760[0m [0;32m'typename __traits::propagate_on_container_move_assignment'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x58d9920[0m <[0;33mline:547:7[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x58d9840[0m <[0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__do_alloc_on_move'[0;33m 0x58d9228[0m[0;33m 0x58d8d38[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d9890[0m <[0;33mcol:26[0m> [0;32m'_Alloc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d9368[0m[0;1;36m '__one'[0m [0;32m'_Alloc &'[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58d98b0[0m <[0;33mcol:33[0m> [0;32m'_Alloc'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58d93e0[0m[0;1;36m '__two'[0m [0;32m'_Alloc &'[0m
[0;34m      `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x58d9900[0m <[0;33mcol:40[0m, [0;33mcol:48[0m> [0;32m'__pocma':'typename __traits::propagate_on_container_move_assignment'[0m[0;36m[0m[0;36m[0m [0;32m'__pocma':'typename __traits::propagate_on_container_move_assignment'[0m

Dumping __gnu_cxx::__alloc_traits::_S_propagate_on_move_assign:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58dfc38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/alloc_traits.h:103:5[0m, [0;33mline:104:73[0m> [0;33mline:103:27[0m referenced constexpr[0;1;36m _S_propagate_on_move_assign[0m [0;32m'bool ()'[0m static
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58e1570[0m <[0;33mline:104:5[0m, [0;33mcol:73[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58e1560[0m <[0;33mcol:7[0m, [0;33mcol:66[0m>
[0;34m    `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x58e1528[0m <[0;33mcol:14[0m, [0;33mcol:66[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m

Dumping __gnu_cxx::__alloc_traits::_S_nothrow_move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58dfe78[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/alloc_traits.h:112:5[0m, [0;33mline:113:66[0m> [0;33mline:112:27[0m constexpr[0;1;36m _S_nothrow_move[0m [0;32m'bool ()'[0m static
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x58e1818[0m <[0;33mline:113:5[0m, [0;33mcol:66[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x58e1808[0m <[0;33mcol:7[0m, [0;33mcol:63[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x58e17e8[0m <[0;33mcol:14[0m, [0;33mcol:63[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x58e1770[0m <[0;33mcol:14[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58e1758[0m <[0;33mcol:14[0m> [0;32m'bool (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58e1708[0m <[0;33mcol:14[0m> [0;32m'bool ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x58dfc38[0m[0;1;36m '_S_propagate_on_move_assign'[0m [0;32m'bool ()'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x58e17c8[0m <[0;33mcol:47[0m, [0;33mcol:63[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x58e17b0[0m <[0;33mcol:47[0m> [0;32m'bool (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x58e1790[0m <[0;33mcol:47[0m> [0;32m'bool ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x58dfdb8[0m[0;1;36m '_S_always_equal'[0m [0;32m'bool ()'[0m

Dumping std::__cxx11::basic_string::_S_move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x58e8120[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_string.h:343:7[0m, [0;33mline:350:7[0m> [0;33mline:344:7[0m[0;1;36m _S_move[0m [0;32m'void (_CharT *, const _CharT *, std::__cxx11::basic_string::size_type)'[0m static
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58e7f90[0m <[0;33mcol:15[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __d[0m [0;32m'_CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58e8008[0m <[0;33mcol:28[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __s[0m [0;32m'const _CharT *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58e8080[0m <[0;33mcol:47[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __n[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5932650[0m <[0;33mline:345:7[0m, [0;33mline:350:7[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5932628[0m <[0;33mline:346:2[0m, [0;33mline:349:35[0m> has_else
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x59323a8[0m <[0;33mline:346:6[0m, [0;33mcol:13[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5932328[0m <[0;33mcol:10[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x54863a8[0m[0;33m 0x56689c8[0m[0;33m 0x568d2b8[0m[0;33m 0x568f7a8[0m[0;33m 0x56ae808[0m[0;33m 0x56aeeb8[0m[0;33m 0x5822960[0m[0;33m 0x5822e80[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59322e8[0m <[0;33mcol:6[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58e8080[0m[0;1;36m '__n'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m
[0;34m    | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5932308[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |-[0m[0;1;35mCallExpr[0m[0;33m 0x59324d8[0m <[0;33mline:347:4[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5932430[0m <[0;33mcol:4[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5932488[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5932468[0m <[0;33mcol:25[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58e7f90[0m[0;1;36m '__d'[0m [0;32m'_CharT *'[0m
[0;34m    | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x59324c0[0m <[0;33mcol:30[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59324a0[0m <[0;33mcol:31[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58e8008[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x59325f0[0m <[0;33mline:349:4[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5932558[0m <[0;33mcol:4[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5932590[0m <[0;33mcol:22[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58e7f90[0m[0;1;36m '__d'[0m [0;32m'_CharT *'[0m
[0;34m      |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59325b0[0m <[0;33mcol:27[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58e8008[0m[0;1;36m '__s'[0m [0;32m'const _CharT *'[0m
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59325d0[0m <[0;33mcol:32[0m> [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58e8080[0m[0;1;36m '__n'[0m [0;32m'std::__cxx11::basic_string::size_type':'typename _Alloc_traits::size_type'[0m

Dumping remove:
[0;1;32mFunctionDecl[0m[0;33m 0x59bf640[0m <[0;33m/usr/include/stdio.h:144:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/stdio.h:144:12[0m[0;1;36m remove[0m [0;32m'int (const char *) throw()'[0m extern
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59bf5a0[0m <[0;33mcol:20[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m __filename[0m [0;32m'const char *'[0m

Dumping std::remove:
[0;1;32mUsingDecl[0m[0;33m 0x59d4ac8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdio:131:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remove

Dumping std::remove:
[0;1;32mUsingShadowDecl[0m[0;33m 0x59d4b20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdio:131:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x59bf640[0m[0;1;36m 'remove'[0m [0;32m'int (const char *) throw()'[0m

Dumping std::locale::facet::_M_remove_reference:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5b37158[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:449:5[0m, [0;33mline:462:5[0m> [0;33mline:450:5[0m[0;1;36m _M_remove_reference[0m [0;32m'void () const throw()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b37b58[0m <[0;33mline:451:5[0m, [0;33mline:462:5[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x5b37910[0m <[0;33mline:453:60[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5b37b40[0m <[0;33mline:454:7[0m, [0;33mline:461:2[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5b37a60[0m <[0;33mline:454:11[0m, [0;33mcol:71[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5b37a10[0m <[0;33mcol:11[0m, [0;33mcol:66[0m> [0;32m'_Atomic_word':'int'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b379f8[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'_Atomic_word (*)(_Atomic_word *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b37938[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'_Atomic_word (_Atomic_word *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e8950[0m[0;1;36m '__exchange_and_add_dispatch'[0m [0;32m'_Atomic_word (_Atomic_word *, int)'[0m
[0;34m    | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5b379a8[0m <[0;33mcol:50[0m, [0;33mcol:51[0m> [0;32m'_Atomic_word *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m    | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b37978[0m <[0;33mcol:51[0m> [0;32m'_Atomic_word':'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_refcount[0;33m 0x5b35b10[0m
[0;34m    | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5b37968[0m <[0;33mcol:51[0m> [0;32m'const std::locale::facet *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5b379e0[0m <[0;33mcol:64[0m, [0;33mcol:65[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5b379c0[0m <[0;33mcol:65[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5b37a40[0m <[0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b37b20[0m <[0;33mline:455:2[0m, [0;33mline:461:2[0m>
[0;34m      |-[0m[0;1;35mNullStmt[0m[0;33m 0x5b37a80[0m <[0;33mline:456:63[0m>
[0;34m      `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x5b37b00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:460:8[0m>
[0;34m        |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b37ab8[0m <[0;33mline:458:6[0m, [0;33mcol:21[0m>
[0;34m        | `-[0m[0;1;35mCXXDeleteExpr[0m[0;33m 0x5b37a98[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x54b2d28[0m[0;1;36m 'operator delete'[0m [0;32m'void (void *) noexcept'[0m
[0;34m        |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5b37a88[0m <[0;33mcol:15[0m> [0;32m'const std::locale::facet *'[0m[0;36m[0m[0;36m[0m this
[0;34m        `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x5b37ae0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:460:8[0m>
[0;34m          |-[0m[0;34m<<<NULL>>>[0m
[0;34m          `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b37ad0[0m <[0;33mcol:6[0m, [0;33mcol:8[0m>

Dumping std::locale::_Impl::_M_remove_reference:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5b39f38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:559:5[0m, [0;33mline:572:5[0m> [0;33mline:560:5[0m referenced[0;1;36m _M_remove_reference[0m [0;32m'void () throw()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b3e678[0m <[0;33mline:561:5[0m, [0;33mline:572:5[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x5b3e430[0m <[0;33mline:563:60[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5b3e660[0m <[0;33mline:564:7[0m, [0;33mline:571:2[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5b3e580[0m <[0;33mline:564:11[0m, [0;33mcol:71[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5b3e530[0m <[0;33mcol:11[0m, [0;33mcol:66[0m> [0;32m'_Atomic_word':'int'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b3e518[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'_Atomic_word (*)(_Atomic_word *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b3e458[0m <[0;33mcol:11[0m, [0;33mcol:22[0m> [0;32m'_Atomic_word (_Atomic_word *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e8950[0m[0;1;36m '__exchange_and_add_dispatch'[0m [0;32m'_Atomic_word (_Atomic_word *, int)'[0m
[0;34m    | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5b3e4c8[0m <[0;33mcol:50[0m, [0;33mcol:51[0m> [0;32m'_Atomic_word *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m    | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5b3e498[0m <[0;33mcol:51[0m> [0;32m'_Atomic_word':'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_refcount[0;33m 0x5b394c8[0m
[0;34m    | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5b3e488[0m <[0;33mcol:51[0m> [0;32m'std::locale::_Impl *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5b3e500[0m <[0;33mcol:64[0m, [0;33mcol:65[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5b3e4e0[0m <[0;33mcol:65[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5b3e560[0m <[0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b3e640[0m <[0;33mline:565:2[0m, [0;33mline:571:2[0m>
[0;34m      |-[0m[0;1;35mNullStmt[0m[0;33m 0x5b3e5a0[0m <[0;33mline:566:63[0m>
[0;34m      `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x5b3e620[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:570:8[0m>
[0;34m        |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b3e5d8[0m <[0;33mline:568:6[0m, [0;33mcol:21[0m>
[0;34m        | `-[0m[0;1;35mCXXDeleteExpr[0m[0;33m 0x5b3e5b8[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x54b2d28[0m[0;1;36m 'operator delete'[0m [0;32m'void (void *) noexcept'[0m
[0;34m        |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5b3e5a8[0m <[0;33mcol:15[0m> [0;32m'std::locale::_Impl *'[0m[0;36m[0m[0;36m[0m this
[0;34m        `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x5b3e600[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:570:8[0m>
[0;34m          |-[0m[0;34m<<<NULL>>>[0m
[0;34m          `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5b3e5f0[0m <[0;33mcol:6[0m, [0;33mcol:8[0m>

Dumping std::errc::identifier_removed:
[0;1;32mEnumConstantDecl[0m[0;33m 0x5b620b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:72:7[0m, [0;33m/usr/include/asm-generic/errno.h:24:16[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:72:7[0m[0;1;36m identifier_removed[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x5b62090[0m <[0;33m/usr/include/asm-generic/errno.h:24:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 43[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5b62070[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 43[0m

Dumping std::ios_base::_Callback_list::_M_remove_reference:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5bc1c60[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:544:7[0m, [0;33mline:555:7[0m> [0;33mline:545:7[0m[0;1;36m _M_remove_reference[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5baec30[0m <[0;33mline:546:7[0m, [0;33mline:555:7[0m>
[0;34m  |-[0m[0;1;35mNullStmt[0m[0;33m 0x5bae970[0m <[0;33mline:548:62[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5baeb20[0m <[0;33mline:549:9[0m, [0;33mcol:77[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bae990[0m <[0;33mcol:9[0m, [0;33mcol:76[0m> [0;33mcol:13[0m used[0;1;36m __res[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5baeaf0[0m <[0;33mcol:21[0m, [0;33mcol:76[0m> [0;32m'_Atomic_word':'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5baead8[0m <[0;33mcol:21[0m, [0;33mcol:32[0m> [0;32m'_Atomic_word (*)(_Atomic_word *, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5baea18[0m <[0;33mcol:21[0m, [0;33mcol:32[0m> [0;32m'_Atomic_word (_Atomic_word *, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56e8950[0m[0;1;36m '__exchange_and_add_dispatch'[0m [0;32m'_Atomic_word (_Atomic_word *, int)'[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5baea88[0m <[0;33mcol:60[0m, [0;33mcol:61[0m> [0;32m'_Atomic_word *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5baea58[0m <[0;33mcol:61[0m> [0;32m'_Atomic_word':'int'[0m[0;36m lvalue[0m[0;36m[0m ->_M_refcount[0;33m 0x5bc17d8[0m
[0;34m  |     |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5baea48[0m <[0;33mcol:61[0m> [0;32m'std::ios_base::_Callback_list *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5baeac0[0m <[0;33mcol:74[0m, [0;33mcol:75[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5baeaa0[0m <[0;33mcol:75[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5baebd0[0m <[0;33mline:550:9[0m, [0;33mline:553:11[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5baeb90[0m <[0;33mline:550:13[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5baeb78[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5baeb38[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bae990[0m[0;1;36m '__res'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5baeb58[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5baebb8[0m <[0;33mline:551:11[0m, [0;33mline:553:11[0m>
[0;34m  |   `-[0m[0;1;35mNullStmt[0m[0;33m 0x5baebb0[0m <[0;33mline:552:65[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5baec20[0m <[0;33mline:554:9[0m, [0;33mcol:16[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5baec08[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5baebe8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bae990[0m[0;1;36m '__res'[0m [0;32m'int'[0m

Dumping std::ios_base::_M_move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5bc4dc0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:867:5[0m, [0;33mline:868:24[0m> [0;33mcol:5[0m referenced[0;1;36m _M_move[0m [0;32m'void (std::ios_base &) noexcept'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bc4cc8[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;33mcol:22[0m [0;32m'std::ios_base &'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5bca078[0m parent 0x5bb55c0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/streambuf:150:7[0m, [0;33mline:154:48[0m> [0;33mline:153:9[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5bc95f8[0m <[0;33mline:150:16[0m, [0;33mcol:21[0m> [0;33mcol:21[0m [0;32m'bool'[0m depth 1 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5bc9658[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 1 index 1[0;1;36m _CharT2[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5bc9fc8[0m parent 0x5bb55c0 <[0;33mline:151:9[0m, [0;33mline:154:48[0m> [0;33mline:153:9[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, _CharT2 *>::__type (istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>, _CharT2 *)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bc9c80[0m <[0;33mcol:24[0m, [0;33mcol:51[0m> [0;33mcol:52[0m [0;32m'istreambuf_iterator<_CharT2>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bc9e20[0m <[0;33mline:154:10[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'istreambuf_iterator<_CharT2>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bc9e98[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;33mcol:48[0m [0;32m'_CharT2 *'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5c0e348[0m parent 0x5c0c330 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf_iterator.h:77:7[0m, [0;33mline:81:48[0m> [0;33mline:80:2[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5c0dae8[0m <[0;33mline:77:16[0m, [0;33mcol:21[0m> [0;33mcol:21[0m [0;32m'bool'[0m depth 1 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c0db48[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced typename depth 1 index 1[0;1;36m _CharT2[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5c0e298[0m parent 0x5c0c330 <[0;33mline:78:2[0m, [0;33mline:81:48[0m> [0;33mline:80:2[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, _CharT2 *>::__type (istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>, _CharT2 *)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c0df90[0m <[0;33mcol:17[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'istreambuf_iterator<_CharT2>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c0e130[0m <[0;33mline:81:10[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'istreambuf_iterator<_CharT2>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c0e1a8[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;33mcol:48[0m [0;32m'_CharT2 *'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5c1cdf8[0m prev 0x54736c8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf_iterator.h:307:3[0m, [0;33mline:317:5[0m> [0;33mline:310:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5c1c560[0m <[0;33mline:307:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c1c5c0[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5c1cd58[0m prev 0x5473628 <[0;33mline:308:5[0m, [0;33mline:317:5[0m> [0;33mline:310:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type (_CharT *, _CharT *, ostreambuf_iterator<_CharT>)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1ca48[0m <[0;33mcol:20[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __first[0m [0;32m'_CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1cac0[0m <[0;33mcol:37[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __last[0m [0;32m'_CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1cc60[0m <[0;33mline:311:6[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __result[0m [0;32m'ostreambuf_iterator<_CharT>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c1d170[0m <[0;33mline:312:5[0m, [0;33mline:317:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1cfa8[0m <[0;33mline:313:7[0m, [0;33mcol:48[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c1ce78[0m <[0;33mcol:7[0m, [0;33mcol:41[0m> [0;33mcol:24[0m referenced[0;1;36m __num[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5c1cf70[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5c1cf20[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1cee0[0m <[0;33mcol:32[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1cac0[0m[0;1;36m '__last'[0m [0;32m'_CharT *'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1cf00[0m <[0;33mcol:41[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1ca48[0m[0;1;36m '__first'[0m [0;32m'_CharT *'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x5c1d128[0m <[0;33mline:314:7[0m, [0;33mline:315:32[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c1d030[0m <[0;33mline:314:11[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c1d000[0m <[0;33mcol:11[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1cfc0[0m <[0;33mcol:11[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ce78[0m[0;1;36m '__num'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c1d018[0m <[0;33mcol:19[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c1cfe0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1d0f8[0m <[0;33mline:315:2[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1d070[0m <[0;33mcol:2[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_put
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1d050[0m <[0;33mcol:2[0m> [0;32m'ostreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1cc60[0m[0;1;36m '__result'[0m [0;32m'ostreambuf_iterator<_CharT>'[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1d0b8[0m <[0;33mcol:18[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1ca48[0m[0;1;36m '__first'[0m [0;32m'_CharT *'[0m
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1d0d8[0m <[0;33mcol:27[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ce78[0m[0;1;36m '__num'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5c1d160[0m <[0;33mline:316:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1d140[0m <[0;33mcol:14[0m> [0;32m'ostreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1cc60[0m[0;1;36m '__result'[0m [0;32m'ostreambuf_iterator<_CharT>'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5c1da08[0m prev 0x54740f8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf_iterator.h:319:3[0m, [0;33mline:329:5[0m> [0;33mline:322:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5c1d1a8[0m <[0;33mline:319:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c1d208[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5c1d968[0m prev 0x5474058 <[0;33mline:320:5[0m, [0;33mline:329:5[0m> [0;33mline:322:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type (const _CharT *, const _CharT *, ostreambuf_iterator<_CharT>)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1d658[0m <[0;33mcol:20[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1d6d0[0m <[0;33mcol:43[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __last[0m [0;32m'const _CharT *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1d870[0m <[0;33mline:323:6[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __result[0m [0;32m'ostreambuf_iterator<_CharT>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c1ddb0[0m <[0;33mline:324:5[0m, [0;33mline:329:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1dbb8[0m <[0;33mline:325:7[0m, [0;33mcol:48[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c1da88[0m <[0;33mcol:7[0m, [0;33mcol:41[0m> [0;33mcol:24[0m referenced[0;1;36m __num[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m    |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5c1db80[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5c1db30[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1daf0[0m <[0;33mcol:32[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1d6d0[0m[0;1;36m '__last'[0m [0;32m'const _CharT *'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1db10[0m <[0;33mcol:41[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1d658[0m[0;1;36m '__first'[0m [0;32m'const _CharT *'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x5c1dd38[0m <[0;33mline:326:7[0m, [0;33mline:327:32[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c1dc40[0m <[0;33mline:326:11[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c1dc10[0m <[0;33mcol:11[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1dbd0[0m <[0;33mcol:11[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1da88[0m[0;1;36m '__num'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c1dc28[0m <[0;33mcol:19[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c1dbf0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1dd08[0m <[0;33mline:327:2[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1dc80[0m <[0;33mcol:2[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_put
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1dc60[0m <[0;33mcol:2[0m> [0;32m'ostreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1d870[0m[0;1;36m '__result'[0m [0;32m'ostreambuf_iterator<_CharT>'[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1dcc8[0m <[0;33mcol:18[0m> [0;32m'const _CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1d658[0m[0;1;36m '__first'[0m [0;32m'const _CharT *'[0m
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1dce8[0m <[0;33mcol:27[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1da88[0m[0;1;36m '__num'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5c1dd70[0m <[0;33mline:328:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1dd50[0m <[0;33mcol:14[0m> [0;32m'ostreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1d870[0m[0;1;36m '__result'[0m [0;32m'ostreambuf_iterator<_CharT>'[0m

Dumping std::__copy_move_a2:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5c1e638[0m prev 0x5be86d0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf_iterator.h:331:3[0m, [0;33mline:364:5[0m> [0;33mline:334:5[0m[0;1;36m __copy_move_a2[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5c1dde8[0m <[0;33mline:331:12[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;32m'bool'[0m depth 0 index 0[0;1;36m _IsMove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c1de48[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _CharT[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5c1e598[0m prev 0x5be8608 <[0;33mline:332:5[0m, [0;33mline:364:5[0m> [0;33mline:334:5[0m[0;1;36m __copy_move_a2[0m [0;32m'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type (istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>, _CharT *)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1e290[0m <[0;33mcol:20[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __first[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1e430[0m <[0;33mline:335:6[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __last[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c1e4a8[0m <[0;33mcol:42[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __result[0m [0;32m'_CharT *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c1faf8[0m <[0;33mline:336:5[0m, [0;33mline:364:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1e838[0m <[0;33mline:337:7[0m, [0;33mcol:78[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c1e7e0[0m <[0;33mcol:7[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __is_iterator_type[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5c1e740[0m [0;32m'istreambuf_iterator<_CharT>'[0m dependent istreambuf_iterator
[0;34m    |     `-[0mTemplateArgument type [0;32m'_CharT'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1e9b8[0m <[0;33mline:338:7[0m, [0;33mcol:71[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c1e960[0m <[0;33mcol:7[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m traits_type[0m [0;32m'typename __is_iterator_type::traits_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x5c1e8f0[0m [0;32m'typename __is_iterator_type::traits_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1eae8[0m <[0;33mline:339:7[0m, [0;33mcol:74[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c1ea90[0m <[0;33mcol:7[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m streambuf_type[0m [0;32m'typename __is_iterator_type::streambuf_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x5c1ea20[0m [0;32m'typename __is_iterator_type::streambuf_type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1ec68[0m <[0;33mline:340:7[0m, [0;33mcol:68[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c1ec10[0m <[0;33mcol:7[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m int_type[0m [0;32m'typename traits_type::int_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x5c1eba0[0m [0;32m'typename traits_type::int_type'[0m dependent
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x5c1fab0[0m <[0;33mline:342:7[0m, [0;33mline:362:2[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c1ed68[0m <[0;33mline:342:11[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1eca0[0m <[0;33mcol:11[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_sbuf
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1ec80[0m <[0;33mcol:11[0m> [0;32m'istreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1e290[0m[0;1;36m '__first'[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m    | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c1ed50[0m <[0;33mcol:30[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    | |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1ed08[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_sbuf
[0;34m    | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1ece8[0m <[0;33mcol:31[0m> [0;32m'istreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1e430[0m[0;1;36m '__last'[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c1fa88[0m <[0;33mline:343:2[0m, [0;33mline:362:2[0m>
[0;34m    |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1eee8[0m <[0;33mline:344:4[0m, [0;33mcol:42[0m>
[0;34m    |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c1ee18[0m <[0;33mcol:4[0m, [0;33mcol:35[0m> [0;33mcol:20[0m referenced[0;1;36m __sb[0m [0;32m'streambuf_type *'[0m cinit
[0;34m    |   |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1eea0[0m <[0;33mcol:27[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_sbuf
[0;34m    |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1ee80[0m <[0;33mcol:27[0m> [0;32m'istreambuf_iterator<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1e290[0m[0;1;36m '__first'[0m [0;32m'istreambuf_iterator<_CharT>'[0m
[0;34m    |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1f020[0m <[0;33mline:345:4[0m, [0;33mcol:32[0m>
[0;34m    |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c1ef30[0m <[0;33mcol:4[0m, [0;33mcol:31[0m> [0;33mcol:13[0m referenced[0;1;36m __c[0m [0;32m'int_type':'typename traits_type::int_type'[0m cinit
[0;34m    |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f000[0m <[0;33mcol:19[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1efb8[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->sgetc
[0;34m    |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1ef98[0m <[0;33mcol:19[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ee18[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |   `-[0m[0;1;35mWhileStmt[0m[0;33m 0x5c1fa70[0m <[0;33mline:346:4[0m, [0;33mline:361:6[0m>
[0;34m    |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c1f188[0m <[0;33mline:346:11[0m, [0;33mcol:60[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f158[0m <[0;33mcol:12[0m, [0;33mcol:60[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5c1f070[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |     |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f0a8[0m <[0;33mcol:37[0m> [0;32m'int_type':'typename traits_type::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ef30[0m[0;1;36m '__c'[0m [0;32m'int_type':'typename traits_type::int_type'[0m
[0;34m    |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f138[0m <[0;33mcol:42[0m, [0;33mcol:59[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5c1f100[0m <[0;33mcol:42[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c1fa50[0m <[0;33mline:347:6[0m, [0;33mline:361:6[0m>
[0;34m    |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c1f3b0[0m <[0;33mline:348:8[0m, [0;33mcol:59[0m>
[0;34m    |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c1f1b0[0m <[0;33mcol:8[0m, [0;33mcol:58[0m> [0;33mcol:25[0m referenced[0;1;36m __n[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m    |       |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5c1f378[0m <[0;33mcol:31[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5c1f328[0m <[0;33mcol:45[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5692078[0m[0;33m 0x56b3658[0m
[0;34m    |       |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f280[0m <[0;33mcol:31[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1f238[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->egptr
[0;34m    |       |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f218[0m <[0;33mcol:31[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ee18[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |       |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f308[0m <[0;33mcol:47[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |       |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1f2c0[0m <[0;33mcol:47[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->gptr
[0;34m    |       |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f2a0[0m <[0;33mcol:47[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ee18[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x5c1fa28[0m <[0;33mline:349:8[0m, [0;33mline:360:3[0m> has_else
[0;34m    |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c1f438[0m <[0;33mline:349:12[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m    |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c1f408[0m <[0;33mcol:12[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f3c8[0m <[0;33mcol:12[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1f1b0[0m[0;1;36m '__n'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c1f420[0m <[0;33mcol:18[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    |         |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c1f3e8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |         |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c1f7c8[0m <[0;33mline:350:3[0m, [0;33mline:355:3[0m>
[0;34m    |         | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f5a8[0m <[0;33mline:351:5[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         | | |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5c1f4a8[0m <[0;33mcol:5[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |         | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f4e0[0m <[0;33mcol:23[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1e4a8[0m[0;1;36m '__result'[0m [0;32m'_CharT *'[0m
[0;34m    |         | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f568[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         | | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1f520[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->gptr
[0;34m    |         | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f500[0m <[0;33mcol:33[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ee18[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f588[0m <[0;33mcol:47[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1f1b0[0m[0;1;36m '__n'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    |         | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f668[0m <[0;33mline:352:5[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1f600[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->__safe_gbump
[0;34m    |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f5e0[0m <[0;33mcol:5[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ee18[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f648[0m <[0;33mcol:24[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1f1b0[0m[0;1;36m '__n'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    |         | |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x5c1f6d0[0m <[0;33mline:353:5[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m    |         | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f690[0m <[0;33mcol:5[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1e4a8[0m[0;1;36m '__result'[0m [0;32m'_CharT *'[0m
[0;34m    |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f6b0[0m <[0;33mcol:17[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1f1b0[0m[0;1;36m '__n'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m    |         | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c1f7a8[0m <[0;33mline:354:5[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |         |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f700[0m <[0;33mcol:5[0m> [0;32m'int_type':'typename traits_type::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ef30[0m[0;1;36m '__c'[0m [0;32m'int_type':'typename traits_type::int_type'[0m
[0;34m    |         |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f788[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |         |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1f740[0m <[0;33mcol:11[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->underflow
[0;34m    |         |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f720[0m <[0;33mcol:11[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ee18[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c1fa08[0m <[0;33mline:357:3[0m, [0;33mline:360:3[0m>
[0;34m    |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c1f920[0m <[0;33mline:358:5[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |           | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c1f850[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |           | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c1f838[0m <[0;33mcol:6[0m, [0;33mcol:14[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m    |           | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f7f8[0m <[0;33mcol:6[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1e4a8[0m[0;1;36m '__result'[0m [0;32m'_CharT *'[0m
[0;34m    |           | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f8f8[0m <[0;33mcol:19[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |           |   |-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5c1f8a0[0m <[0;33mcol:19[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f8d8[0m <[0;33mcol:45[0m> [0;32m'int_type':'typename traits_type::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ef30[0m[0;1;36m '__c'[0m [0;32m'int_type':'typename traits_type::int_type'[0m
[0;34m    |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c1f9e8[0m <[0;33mline:359:5[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f940[0m <[0;33mcol:5[0m> [0;32m'int_type':'typename traits_type::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ef30[0m[0;1;36m '__c'[0m [0;32m'int_type':'typename traits_type::int_type'[0m
[0;34m    |             `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c1f9c8[0m <[0;33mcol:11[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |               `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5c1f980[0m <[0;33mcol:11[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->snextc
[0;34m    |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1f960[0m <[0;33mcol:11[0m> [0;32m'streambuf_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c1ee18[0m[0;1;36m '__sb'[0m [0;32m'streambuf_type *'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5c1fae8[0m <[0;33mline:363:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c1fac8[0m <[0;33mcol:14[0m> [0;32m'_CharT *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c1e4a8[0m[0;1;36m '__result'[0m [0;32m'_CharT *'[0m

Dumping std::basic_ios::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5cbe328[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_ios.h:478:7[0m, [0;33mline:487:7[0m> [0;33mline:479:7[0m[0;1;36m move[0m [0;32m'void (basic_ios<_CharT, _Traits> &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5cbe260[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __rhs[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cc77b8[0m <[0;33mline:480:7[0m, [0;33mline:487:7[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5cc10e0[0m <[0;33mline:481:2[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5cc1078[0m <[0;33mcol:2[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_move[0;33m 0x5bc4dc0[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5cc1068[0m <[0;33mcol:12[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cc10c0[0m <[0;33mcol:20[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cbe260[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5cc7470[0m <[0;33mline:482:2[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5cc7400[0m <[0;33mcol:2[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_cache_locale[0;33m 0x5cbea40[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5cc1108[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5cc7440[0m <[0;33mcol:18[0m> [0;32m'std::locale'[0m[0;36m lvalue[0m[0;36m[0m ->_M_ios_locale[0;33m 0x5bc2aa8[0m
[0;34m  |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5cc7430[0m <[0;33mcol:18[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5cc7590[0m <[0;33mline:483:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5cc74a8[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->tie
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5cc7498[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5cc7568[0m <[0;33mcol:12[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5cc7510[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .tie
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cc74f0[0m <[0;33mcol:12[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cbe260[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m  |   `-[0m[0;1;35mCXXNullPtrLiteralExpr[0m[0;33m 0x5cc7558[0m <[0;33mcol:22[0m> [0;32m'nullptr_t'[0m[0;36m[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cc7660[0m <[0;33mline:484:2[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5cc75c8[0m <[0;33mcol:2[0m> [0;32m'std::basic_ios::char_type':'_CharT'[0m[0;36m lvalue[0m[0;36m[0m ->_M_fill[0;33m 0x5cbb130[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5cc75b8[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5cc7618[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_fill
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cc75f8[0m <[0;33mcol:12[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cbe260[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cc7728[0m <[0;33mline:485:2[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5cc7690[0m <[0;33mcol:2[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_fill_init[0;33m 0x5cbb190[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5cc7680[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5cc76e0[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_fill_init
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cc76c0[0m <[0;33mcol:17[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cbe260[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &'[0m
[0;34m  `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cc7798[0m <[0;33mline:486:2[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5cc7758[0m <[0;33mcol:2[0m> [0;32m'basic_streambuf<_CharT, _Traits> *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_streambuf[0;33m 0x5cbb318[0m
[0;34m    | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5cc7748[0m <[0;33mcol:2[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m    `-[0m[0;1;35mCXXNullPtrLiteralExpr[0m[0;33m 0x5cc7788[0m <[0;33mcol:17[0m> [0;32m'nullptr_t'[0m[0;36m[0m[0;36m[0m

Dumping std::basic_ios::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5cbe4c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/basic_ios.h:489:7[0m, [0;33mline:491:28[0m> [0;33mline:490:7[0m[0;1;36m move[0m [0;32m'void (basic_ios<_CharT, _Traits> &&)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5cbe408[0m <[0;33mcol:12[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __rhs[0m [0;32m'basic_ios<_CharT, _Traits> &&'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cc7898[0m <[0;33mline:491:7[0m, [0;33mcol:28[0m>
[0;34m  `-[0m[0;1;35mCallExpr[0m[0;33m 0x5cc7870[0m <[0;33mcol:9[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5cc7808[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->move
[0;34m    | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5cc77f8[0m <[0;33mcol:9[0m> [0;32m'basic_ios<_CharT, _Traits> *'[0m[0;36m[0m[0;36m[0m this
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cc7850[0m <[0;33mcol:20[0m> [0;32m'basic_ios<_CharT, _Traits>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5cbe408[0m[0;1;36m '__rhs'[0m [0;32m'basic_ios<_CharT, _Traits> &&'[0m

Dumping std::__uninitialized_move_a:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5dbad48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:291:3[0m, [0;33mline:300:5[0m> [0;33mline:294:5[0m[0;1;36m __uninitialized_move_a[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dba898[0m <[0;33mline:291:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dba908[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dba978[0m <[0;33mline:292:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5dbaca8[0m <[0;33mline:293:5[0m, [0;33mline:300:5[0m> [0;33mline:294:5[0m[0;1;36m __uninitialized_move_a[0m [0;32m'_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbaa20[0m <[0;33mcol:28[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbaa98[0m <[0;33mcol:52[0m, [0;33mcol:67[0m> [0;33mcol:67[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbab10[0m <[0;33mline:295:7[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbabb8[0m <[0;33mcol:34[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dbb020[0m <[0;33mline:296:5[0m, [0;33mline:300:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5dbb010[0m <[0;33mline:297:7[0m, [0;33mline:299:24[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbafd0[0m <[0;33mline:297:14[0m, [0;33mline:299:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbade0[0m <[0;33mline:297:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_copy_a'[0;33m 0x5db97b8[0m[0;33m 0x5dba6f8[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbaeb8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1251:44[0m, [0;33mcol:73[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbae50[0m <[0;33mcol:44[0m, [0;33mcol:49[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'make_move_iterator'[0;33m 0x56b4258[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbae98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:297:70[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbaa20[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbaf68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1251:44[0m, [0;33mcol:73[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbaf00[0m <[0;33mcol:44[0m, [0;33mcol:49[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'make_move_iterator'[0;33m 0x56b4258[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbaf48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:298:35[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbaa98[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbaf90[0m <[0;33mline:299:7[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbab10[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbafb0[0m <[0;33mcol:17[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbabb8[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m

Dumping std::__uninitialized_move_if_noexcept_a:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5dbb4e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:302:3[0m, [0;33mline:313:5[0m> [0;33mline:305:5[0m[0;1;36m __uninitialized_move_if_noexcept_a[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbb038[0m <[0;33mline:302:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbb0a8[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbb118[0m <[0;33mline:303:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5dbb448[0m <[0;33mline:304:5[0m, [0;33mline:313:5[0m> [0;33mline:305:5[0m[0;1;36m __uninitialized_move_if_noexcept_a[0m [0;32m'_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbb1c0[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbb238[0m <[0;33mline:306:12[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbb2b0[0m <[0;33mline:307:12[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbb358[0m <[0;33mline:308:12[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dbb7d0[0m <[0;33mline:309:5[0m, [0;33mline:313:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5dbb7c0[0m <[0;33mline:310:7[0m, [0;33mline:312:69[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbb780[0m <[0;33mline:310:14[0m, [0;33mline:312:69[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbb580[0m <[0;33mline:310:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_copy_a'[0;33m 0x5db97b8[0m[0;33m 0x5dba6f8[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbb660[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1253:3[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbb5f0[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__make_move_if_noexcept_iterator'[0;33m 0x56b4bf8[0m[0;33m 0x56b5438[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbb640[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:311:43[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbb1c0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbb718[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:1253:3[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbb6a8[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__make_move_if_noexcept_iterator'[0;33m 0x56b4bf8[0m[0;33m 0x56b5438[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbb6f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:312:43[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbb238[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbb740[0m <[0;33mcol:52[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbb2b0[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbb760[0m <[0;33mcol:62[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbb358[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m

Dumping std::__uninitialized_copy_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5dbea18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:378:3[0m, [0;33mline:400:5[0m> [0;33mline:381:5[0m[0;1;36m __uninitialized_copy_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbe388[0m <[0;33mline:378:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbe3f8[0m <[0;33mcol:38[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced typename depth 0 index 1[0;1;36m _InputIterator2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbe468[0m <[0;33mline:379:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbe4d8[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 3[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5dbe978[0m <[0;33mline:380:5[0m, [0;33mline:400:5[0m> [0;33mline:381:5[0m[0;1;36m __uninitialized_copy_move[0m [0;32m'_ForwardIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _ForwardIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbe588[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbe600[0m <[0;33mline:382:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbe678[0m <[0;33mline:383:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __first2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbe6f0[0m <[0;33mline:384:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __last2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbe768[0m <[0;33mline:385:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbe808[0m <[0;33mline:386:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dbef40[0m <[0;33mline:387:5[0m, [0;33mline:400:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5dbec48[0m <[0;33mline:388:7[0m, [0;33mline:390:19[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5dbeab0[0m <[0;33mline:388:7[0m, [0;33mline:390:18[0m> [0;33mline:388:24[0m referenced[0;1;36m __mid[0m [0;32m'_ForwardIterator'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbec08[0m <[0;33mcol:32[0m, [0;33mline:390:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbeb38[0m <[0;33mline:388:32[0m, [0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_copy_a'[0;33m 0x5db97b8[0m[0;33m 0x5dba6f8[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbeb88[0m <[0;33mcol:60[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe588[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbeba8[0m <[0;33mcol:70[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe600[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbebc8[0m <[0;33mline:389:11[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe768[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbebe8[0m <[0;33mline:390:11[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe808[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m    `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x5dbef20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:399:2[0m>
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dbed98[0m <[0;33mline:392:2[0m, [0;33mline:394:2[0m>
[0;34m      | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5dbed88[0m <[0;33mline:393:4[0m, [0;33mcol:72[0m>
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbed48[0m <[0;33mcol:11[0m, [0;33mcol:72[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbec80[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_move_a'[0;33m 0x5dbad48[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbecc8[0m <[0;33mcol:39[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe678[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbece8[0m <[0;33mcol:49[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe6f0[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator2'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbed08[0m <[0;33mcol:58[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5dbeab0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbed28[0m <[0;33mcol:65[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe808[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m      `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x5dbef00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:399:2[0m>
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dbeee0[0m <[0;33mline:396:2[0m, [0;33mline:399:2[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbee90[0m <[0;33mline:397:4[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbedd0[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Destroy'[0;33m 0x5da6718[0m[0;33m 0x5da7b48[0m[0;33m 0x5daf398[0m[0;33m 0x5dafe68[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbee30[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe768[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbee50[0m <[0;33mcol:28[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5dbeab0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbee70[0m <[0;33mcol:35[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbe808[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m          `-[0m[0;1;35mCXXThrowExpr[0m[0;33m 0x5dbeec8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:42:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m

Dumping std::__uninitialized_move_copy:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5dbf598[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:406:3[0m, [0;33mline:428:5[0m> [0;33mline:409:5[0m[0;1;36m __uninitialized_move_copy[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbef60[0m <[0;33mline:406:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbefd8[0m <[0;33mcol:38[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced typename depth 0 index 1[0;1;36m _InputIterator2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbf048[0m <[0;33mline:407:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbf0b8[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 3[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5dbf4f8[0m <[0;33mline:408:5[0m, [0;33mline:428:5[0m> [0;33mline:409:5[0m[0;1;36m __uninitialized_move_copy[0m [0;32m'_ForwardIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _ForwardIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbf168[0m <[0;33mcol:31[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbf1e0[0m <[0;33mline:410:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbf258[0m <[0;33mline:411:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __first2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbf2d0[0m <[0;33mline:412:10[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __last2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbf348[0m <[0;33mline:413:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbf3e8[0m <[0;33mline:414:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dbfac0[0m <[0;33mline:415:5[0m, [0;33mline:428:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5dbf7c0[0m <[0;33mline:416:7[0m, [0;33mline:418:19[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5dbf630[0m <[0;33mline:416:7[0m, [0;33mline:418:18[0m> [0;33mline:416:24[0m referenced[0;1;36m __mid[0m [0;32m'_ForwardIterator'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbf780[0m <[0;33mcol:32[0m, [0;33mline:418:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbf6b8[0m <[0;33mline:416:32[0m, [0;33mcol:37[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_move_a'[0;33m 0x5dbad48[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf700[0m <[0;33mcol:60[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf168[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf720[0m <[0;33mcol:70[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf1e0[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf740[0m <[0;33mline:417:11[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf348[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf760[0m <[0;33mline:418:11[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf3e8[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m    `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x5dbfaa0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:427:2[0m>
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dbf918[0m <[0;33mline:420:2[0m, [0;33mline:422:2[0m>
[0;34m      | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5dbf908[0m <[0;33mline:421:4[0m, [0;33mcol:72[0m>
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbf8c8[0m <[0;33mcol:11[0m, [0;33mcol:72[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbf7f8[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_copy_a'[0;33m 0x5db97b8[0m[0;33m 0x5dba6f8[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf848[0m <[0;33mcol:39[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf258[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf868[0m <[0;33mcol:49[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf2d0[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator2'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf888[0m <[0;33mcol:58[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5dbf630[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf8a8[0m <[0;33mcol:65[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf3e8[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m      `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x5dbfa80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:427:2[0m>
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dbfa60[0m <[0;33mline:424:2[0m, [0;33mline:427:2[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dbfa10[0m <[0;33mline:425:4[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dbf950[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Destroy'[0;33m 0x5da6718[0m[0;33m 0x5da7b48[0m[0;33m 0x5daf398[0m[0;33m 0x5dafe68[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf9b0[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf348[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf9d0[0m <[0;33mcol:28[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5dbf630[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dbf9f0[0m <[0;33mcol:35[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbf3e8[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m          `-[0m[0;1;35mCXXThrowExpr[0m[0;33m 0x5dbfa48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:42:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m

Dumping std::__uninitialized_fill_move:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5dc0218[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:433:3[0m, [0;33mline:450:5[0m> [0;33mline:436:5[0m[0;1;36m __uninitialized_fill_move[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbfae0[0m <[0;33mline:433:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbfb58[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 1[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbfbc8[0m <[0;33mcol:53[0m, [0;33mcol:62[0m> [0;33mcol:62[0m referenced typename depth 0 index 2[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dbfc38[0m <[0;33mline:434:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 3[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5dc0178[0m <[0;33mline:435:5[0m, [0;33mline:450:5[0m> [0;33mline:436:5[0m[0;1;36m __uninitialized_fill_move[0m [0;32m'_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &, _InputIterator, _InputIterator, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbfce8[0m <[0;33mcol:31[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbfdd0[0m <[0;33mcol:58[0m, [0;33mcol:75[0m> [0;33mcol:75[0m referenced[0;1;36m __mid[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbfe78[0m <[0;33mline:437:10[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbfef0[0m <[0;33mcol:26[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dbff68[0m <[0;33mline:438:10[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dc0008[0m <[0;33mcol:33[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dc06b0[0m <[0;33mline:439:5[0m, [0;33mline:450:5[0m>
[0;34m    |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dc0390[0m <[0;33mline:440:7[0m, [0;33mcol:64[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dc02c0[0m <[0;33mcol:7[0m, [0;33mcol:12[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_fill_a'[0;33m 0x5dbbd08[0m[0;33m 0x5dbcb08[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0310[0m <[0;33mcol:35[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbfce8[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0330[0m <[0;33mcol:45[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbfdd0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0350[0m <[0;33mcol:52[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbfe78[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0370[0m <[0;33mcol:57[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0008[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m    `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x5dc0690[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:449:2[0m>
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dc0508[0m <[0;33mline:442:2[0m, [0;33mline:444:2[0m>
[0;34m      | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5dc04f8[0m <[0;33mline:443:4[0m, [0;33mcol:70[0m>
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dc04b8[0m <[0;33mcol:11[0m, [0;33mcol:70[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dc03f0[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_move_a'[0;33m 0x5dbad48[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0438[0m <[0;33mcol:39[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbfef0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0458[0m <[0;33mcol:48[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbff68[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0478[0m <[0;33mcol:56[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbfdd0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0498[0m <[0;33mcol:63[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0008[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m      `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x5dc0670[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:449:2[0m>
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dc0650[0m <[0;33mline:446:2[0m, [0;33mline:449:2[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dc0600[0m <[0;33mline:447:4[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dc0540[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Destroy'[0;33m 0x5da6718[0m[0;33m 0x5da7b48[0m[0;33m 0x5daf398[0m[0;33m 0x5dafe68[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc05a0[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbfce8[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc05c0[0m <[0;33mcol:28[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dbfdd0[0m[0;1;36m '__mid'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc05e0[0m <[0;33mcol:35[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0008[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m          `-[0m[0;1;35mCXXThrowExpr[0m[0;33m 0x5dc0638[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:42:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m

Dumping std::__uninitialized_move_fill:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5dc0d98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:455:3[0m, [0;33mline:475:5[0m> [0;33mline:458:5[0m[0;1;36m __uninitialized_move_fill[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dc06d0[0m <[0;33mline:455:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dc0748[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dc07b8[0m <[0;33mcol:64[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5dc0828[0m <[0;33mline:456:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 3[0;1;36m _Allocator[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5dc0cf8[0m <[0;33mline:457:5[0m, [0;33mline:475:5[0m> [0;33mline:458:5[0m[0;1;36m __uninitialized_move_fill[0m [0;32m'void (_InputIterator, _InputIterator, _ForwardIterator, _ForwardIterator, const _Tp &, _Allocator &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dc08d8[0m <[0;33mcol:31[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dc0950[0m <[0;33mcol:56[0m, [0;33mcol:71[0m> [0;33mcol:71[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dc09c8[0m <[0;33mline:459:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __first2[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dc0a40[0m <[0;33mline:460:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m referenced[0;1;36m __last2[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dc0ae8[0m <[0;33mcol:36[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5dc0b88[0m <[0;33mline:461:10[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __alloc[0m [0;32m'_Allocator &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dc12b0[0m <[0;33mline:462:5[0m, [0;33mline:475:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5dc0fc0[0m <[0;33mline:463:7[0m, [0;33mline:465:20[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5dc0e30[0m <[0;33mline:463:7[0m, [0;33mline:465:19[0m> [0;33mline:463:24[0m referenced[0;1;36m __mid2[0m [0;32m'_ForwardIterator'[0m cinit
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dc0f80[0m <[0;33mcol:33[0m, [0;33mline:465:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dc0eb8[0m <[0;33mline:463:33[0m, [0;33mcol:38[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_move_a'[0;33m 0x5dbad48[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0f00[0m <[0;33mcol:61[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc08d8[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0f20[0m <[0;33mcol:71[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0950[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator'[0m
[0;34m    |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0f40[0m <[0;33mline:464:12[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc09c8[0m[0;1;36m '__first2'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc0f60[0m <[0;33mline:465:12[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0b88[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m    `-[0m[0;1;35mCXXTryStmt[0m[0;33m 0x5dc1290[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:40:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:474:2[0m>
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dc1108[0m <[0;33mline:467:2[0m, [0;33mline:469:2[0m>
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dc10c8[0m <[0;33mline:468:4[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dc0ff8[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__uninitialized_fill_a'[0;33m 0x5dbbd08[0m[0;33m 0x5dbcb08[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc1048[0m <[0;33mcol:32[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5dc0e30[0m[0;1;36m '__mid2'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc1068[0m <[0;33mcol:40[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0a40[0m[0;1;36m '__last2'[0m [0;32m'_ForwardIterator'[0m
[0;34m      |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc1088[0m <[0;33mcol:49[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0ae8[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc10a8[0m <[0;33mcol:54[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0b88[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m      `-[0m[0;1;35mCXXCatchStmt[0m[0;33m 0x5dc1270[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:41:21[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_uninitialized.h:474:2[0m>
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5dc1250[0m <[0;33mline:471:2[0m, [0;33mline:474:2[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x5dc1200[0m <[0;33mline:472:4[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5dc1140[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '_Destroy'[0;33m 0x5da6718[0m[0;33m 0x5da7b48[0m[0;33m 0x5daf398[0m[0;33m 0x5dafe68[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc11a0[0m <[0;33mcol:18[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc09c8[0m[0;1;36m '__first2'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc11c0[0m <[0;33mcol:28[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5dc0e30[0m[0;1;36m '__mid2'[0m [0;32m'_ForwardIterator'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dc11e0[0m <[0;33mcol:36[0m> [0;32m'_Allocator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5dc0b88[0m[0;1;36m '__alloc'[0m [0;32m'_Allocator &'[0m
[0;34m          `-[0m[0;1;35mCXXThrowExpr[0m[0;33m 0x5dc1238[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_defines.h:42:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m

Dumping __move_storage:
[0;1;32mVarDecl[0m[0;33m 0x5de34e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_vector.h:463:2[0m, [0;33mline:465:38[0m> [0;33mline:463:17[0m referenced[0;1;36m __move_storage[0m [0;32m'const bool'[0m constexpr cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5de3690[0m <[0;33mline:464:4[0m, [0;33mline:465:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5de35d0[0m <[0;33mline:464:4[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5de3588[0m <[0;33mcol:4[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_S_propagate_on_move_assign
[0;34m  `-[0m[0;1;35mCallExpr[0m[0;33m 0x5de3670[0m <[0;33mline:465:7[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5de3628[0m <[0;33mcol:7[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_S_always_equal

Dumping std::vector::_M_move_assign:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5ddf320[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_vector.h:1533:7[0m, [0;33mline:1540:7[0m> [0;33mline:1534:7[0m[0;1;36m _M_move_assign[0m [0;32m'void (vector<_Tp, _Alloc> &&, std::true_type) noexcept'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ddf110[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __x[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ddf200[0m <[0;33mcol:36[0m, [0;33mcol:41[0m> [0;33mcol:50[0m [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5df7700[0m <[0;33mline:1535:7[0m, [0;33mline:1540:7[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5df72f0[0m <[0;33mline:1536:2[0m, [0;33mcol:31[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5df7228[0m <[0;33mcol:2[0m, [0;33mcol:30[0m> [0;33mcol:9[0m referenced[0;1;36m __tmp[0m [0;32m'vector<_Tp, _Alloc>'[0m callinit
[0;34m  |   `-[0m[0;1;35mParenListExpr[0m[0;33m 0x5df72d0[0m <[0;33mcol:14[0m, [0;33mcol:30[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x5df7290[0m <[0;33mcol:15[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x5df71c0[0m <[0;33mcol:15[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5df7410[0m <[0;33mline:1537:2[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df7360[0m <[0;33mcol:2[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_swap_data
[0;34m  | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df7318[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_impl
[0;34m  | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5df7308[0m <[0;33mcol:2[0m> [0;32m'vector<_Tp, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df73c8[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_impl
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5df73a8[0m <[0;33mcol:29[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5df7228[0m[0;1;36m '__tmp'[0m [0;32m'vector<_Tp, _Alloc>'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5df7540[0m <[0;33mline:1538:2[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df7490[0m <[0;33mcol:2[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_swap_data
[0;34m  | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df7448[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_impl
[0;34m  | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5df7438[0m <[0;33mcol:2[0m> [0;32m'vector<_Tp, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df74f8[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_impl
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5df74d8[0m <[0;33mcol:29[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ddf110[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m  `-[0m[0;1;35mCallExpr[0m[0;33m 0x5df76d0[0m <[0;33mline:1539:2[0m, [0;33mcol:71[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5df7588[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__alloc_on_move'[0;33m 0x58d9558[0m
[0;34m    |-[0m[0;1;35mCallExpr[0m[0;33m 0x5df7628[0m <[0;33mcol:23[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | `-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x5df75d0[0m <[0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5df76b0[0m <[0;33mcol:46[0m, [0;33mcol:70[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df7668[0m <[0;33mcol:46[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_get_Tp_allocator
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5df7648[0m <[0;33mcol:46[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ddf110[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m

Dumping std::vector::_M_move_assign:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5ddf5e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_vector.h:1544:7[0m, [0;33mline:1557:7[0m> [0;33mline:1545:7[0m[0;1;36m _M_move_assign[0m [0;32m'void (vector<_Tp, _Alloc> &&, std::false_type)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ddf3e0[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __x[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ddf4d0[0m <[0;33mcol:36[0m, [0;33mcol:41[0m> [0;33mcol:51[0m [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5df83c8[0m <[0;33mline:1546:7[0m, [0;33mline:1557:7[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x5df83a0[0m <[0;33mline:1547:2[0m, [0;33mline:1556:4[0m> has_else
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5df78f8[0m <[0;33mline:1547:6[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5df7830[0m <[0;33mcol:32[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x54863a8[0m[0;33m 0x56689c8[0m[0;33m 0x568d2b8[0m[0;33m 0x568f7a8[0m[0;33m 0x56ae808[0m[0;33m 0x56aeeb8[0m[0;33m 0x5822960[0m[0;33m 0x5822e80[0m[0;33m 0x5959de0[0m[0;33m 0x595aa90[0m[0;33m 0x595b5a8[0m[0;33m 0x595bd38[0m[0;33m 0x5b83cb0[0m[0;33m 0x5b84e60[0m[0;33m 0x5b85930[0m[0;33m 0x5b86110[0m[0;33m 0x5c17f18[0m
[0;34m    | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5df7798[0m <[0;33mcol:6[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df7750[0m <[0;33mcol:6[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ._M_get_Tp_allocator
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5df7730[0m <[0;33mcol:6[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ddf3e0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5df7810[0m <[0;33mcol:35[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df77c8[0m <[0;33mcol:35[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_Tp_allocator
[0;34m    |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5df77b8[0m <[0;33mcol:35[0m> [0;32m'vector<_Tp, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m    |-[0m[0;1;35mCallExpr[0m[0;33m 0x5df8000[0m <[0;33mline:1548:4[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x5df7940[0m <[0;33mcol:4[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5df7a30[0m <[0;33mcol:19[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5df79c0[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5df7a10[0m <[0;33mcol:29[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ddf3e0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m    | `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x5df7ee8[0m <[0;33mcol:35[0m, [0;33mcol:50[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept'[0m zeroing
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5df8380[0m <[0;33mline:1550:4[0m, [0;33mline:1556:4[0m>
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x5df82c8[0m <[0;33mline:1553:6[0m, [0;33mline:1554:53[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df8040[0m <[0;33mline:1553:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->assign
[0;34m      | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5df8030[0m <[0;33mcol:6[0m> [0;32m'vector<_Tp, _Alloc> *'[0m[0;36m[0m[0;36m[0m this
[0;34m      | |-[0m[0;1;35mCallExpr[0m[0;33m 0x5df8180[0m <[0;33mcol:19[0m, [0;33mcol:68[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5df80a8[0m <[0;33mcol:19[0m, [0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__make_move_if_noexcept_iterator'[0;33m 0x56b4bf8[0m[0;33m 0x56b5438[0m
[0;34m      | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5df8160[0m <[0;33mcol:57[0m, [0;33mcol:67[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df8118[0m <[0;33mcol:57[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .begin
[0;34m      | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5df80f8[0m <[0;33mcol:57[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ddf3e0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5df82a0[0m <[0;33mline:1554:5[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5df81c8[0m <[0;33mcol:5[0m, [0;33mcol:10[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__make_move_if_noexcept_iterator'[0;33m 0x56b4bf8[0m[0;33m 0x56b5438[0m
[0;34m      |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5df8280[0m <[0;33mcol:43[0m, [0;33mcol:51[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df8238[0m <[0;33mcol:43[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .end
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5df8218[0m <[0;33mcol:43[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ddf3e0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5df8360[0m <[0;33mline:1555:6[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x5df8318[0m <[0;33mcol:6[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .clear
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5df82f8[0m <[0;33mcol:6[0m> [0;32m'vector<_Tp, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ddf3e0[0m[0;1;36m '__x'[0m [0;32m'vector<_Tp, _Alloc> &&'[0m

Dumping Pont::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5e817b8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:22:5[0m, [0;33mcol:30[0m> [0;33mcol:10[0m[0;1;36m move[0m [0;32m'void (int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e816a0[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;33mcol:20[0m[0;1;36m nx[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e81720[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m ny[0m [0;32m'int'[0m

Dumping std::__pair_get<0>::__move_get:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6079040[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/utility:193:7[0m, [0;33mline:196:52[0m> [0;33mline:195:9[0m[0;1;36m __move_get[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6078b90[0m <[0;33mline:193:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _Tp1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6078c08[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Tp2[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6078fa0[0m <[0;33mline:194:9[0m, [0;33mline:196:52[0m> [0;33mline:195:9[0m constexpr[0;1;36m __move_get[0m [0;32m'_Tp1 &&(std::pair<_Tp1, _Tp2> &&) noexcept'[0m static
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6078e78[0m <[0;33mcol:20[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __pair[0m [0;32m'std::pair<_Tp1, _Tp2> &&'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60797a0[0m <[0;33mline:196:9[0m, [0;33mcol:52[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6079790[0m <[0;33mcol:11[0m, [0;33mcol:49[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6079768[0m <[0;33mcol:18[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6079670[0m <[0;33mcol:18[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x55d6c10[0m[0;33m 0x55d70d0[0m
[0;34m        `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6079720[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .first
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6079700[0m <[0;33mcol:37[0m> [0;32m'std::pair<_Tp1, _Tp2>':'pair<_Tp1, _Tp2>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6078e78[0m[0;1;36m '__pair'[0m [0;32m'std::pair<_Tp1, _Tp2> &&'[0m

Dumping std::__pair_get<1>::__move_get:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x607a4e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/utility:212:7[0m, [0;33mline:215:53[0m> [0;33mline:214:9[0m[0;1;36m __move_get[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x607a060[0m <[0;33mline:212:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 0 index 0[0;1;36m _Tp1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x607a0d8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Tp2[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x607a440[0m <[0;33mline:213:9[0m, [0;33mline:215:53[0m> [0;33mline:214:9[0m constexpr[0;1;36m __move_get[0m [0;32m'_Tp2 &&(std::pair<_Tp1, _Tp2> &&) noexcept'[0m static
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x607a318[0m <[0;33mcol:20[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __pair[0m [0;32m'std::pair<_Tp1, _Tp2> &&'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x607ac40[0m <[0;33mline:215:9[0m, [0;33mcol:53[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x607ac30[0m <[0;33mcol:11[0m, [0;33mcol:50[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x607ac08[0m <[0;33mcol:18[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x607ab10[0m <[0;33mcol:18[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x55d6c10[0m[0;33m 0x55d70d0[0m
[0;34m        `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x607abc0[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .second
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607aba0[0m <[0;33mcol:37[0m> [0;32m'std::pair<_Tp1, _Tp2>':'pair<_Tp1, _Tp2>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x607a318[0m[0;1;36m '__pair'[0m [0;32m'std::pair<_Tp1, _Tp2> &&'[0m

Dumping std::remove:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60a33a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:510:3[0m, [0;33mline:512:38[0m> [0;33mcol:5[0m[0;1;36m remove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a2ff8[0m <[0;33mline:510:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _FIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a3068[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60a3308[0m <[0;33mline:511:5[0m, [0;33mline:512:38[0m> [0;33mcol:5[0m[0;1;36m remove[0m [0;32m'_FIter (_FIter, _FIter, const _Tp &)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3108[0m <[0;33mcol:12[0m> [0;33mcol:18[0m [0;32m'_FIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3180[0m <[0;33mcol:20[0m> [0;33mcol:26[0m [0;32m'_FIter'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3228[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const _Tp &'[0m

Dumping std::remove_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60a3798[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:514:3[0m, [0;33mline:516:41[0m> [0;33mcol:5[0m[0;1;36m remove_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a3418[0m <[0;33mline:514:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _FIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a3488[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60a36f8[0m <[0;33mline:515:5[0m, [0;33mline:516:41[0m> [0;33mcol:5[0m[0;1;36m remove_if[0m [0;32m'_FIter (_FIter, _FIter, _Predicate)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3528[0m <[0;33mcol:15[0m> [0;33mcol:21[0m [0;32m'_FIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a35a0[0m <[0;33mcol:23[0m> [0;33mcol:29[0m [0;32m'_FIter'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3618[0m <[0;33mcol:31[0m> [0;33mcol:41[0m [0;32m'_Predicate'[0m

Dumping std::remove_copy:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60a3d08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:518:3[0m, [0;33mline:520:51[0m> [0;33mcol:5[0m[0;1;36m remove_copy[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a3808[0m <[0;33mline:518:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _IIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a3878[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _OIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a38e8[0m <[0;33mcol:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60a3c68[0m <[0;33mline:519:5[0m, [0;33mline:520:51[0m> [0;33mcol:5[0m[0;1;36m remove_copy[0m [0;32m'_OIter (_IIter, _IIter, _OIter, const _Tp &)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3990[0m <[0;33mcol:17[0m> [0;33mcol:23[0m [0;32m'_IIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3a08[0m <[0;33mcol:25[0m> [0;33mcol:31[0m [0;32m'_IIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3a80[0m <[0;33mcol:33[0m> [0;33mcol:39[0m [0;32m'_OIter'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3b28[0m <[0;33mcol:41[0m, [0;33mcol:50[0m> [0;33mcol:51[0m [0;32m'const _Tp &'[0m

Dumping std::remove_copy_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60a4208[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/algorithmfwd.h:522:3[0m, [0;33mline:524:54[0m> [0;33mcol:5[0m[0;1;36m remove_copy_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a3d80[0m <[0;33mline:522:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _IIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a3df8[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _OIter[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60a3e68[0m <[0;33mcol:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 2[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x60a4168[0m <[0;33mline:523:5[0m, [0;33mline:524:54[0m> [0;33mcol:5[0m[0;1;36m remove_copy_if[0m [0;32m'_OIter (_IIter, _IIter, _OIter, _Predicate)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3f10[0m <[0;33mcol:20[0m> [0;33mcol:26[0m [0;32m'_IIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a3f88[0m <[0;33mcol:28[0m> [0;33mcol:34[0m [0;32m'_IIter'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a4000[0m <[0;33mcol:36[0m> [0;33mcol:42[0m [0;32m'_OIter'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60a4078[0m <[0;33mcol:44[0m> [0;33mcol:54[0m [0;32m'_Predicate'[0m

Dumping std::__move_median_to_first:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x614d018[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:76:3[0m, [0;33mline:96:5[0m> [0;33mline:78:5[0m[0;1;36m __move_median_to_first[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x614cb38[0m <[0;33mline:76:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x614cba8[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 1[0;1;36m _Compare[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x614cf78[0m <[0;33mline:77:5[0m, [0;33mline:96:5[0m> [0;33mline:78:5[0m[0;1;36m __move_median_to_first[0m [0;32m'void (_Iterator, _Iterator, _Iterator, _Iterator, _Compare)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x614cc48[0m <[0;33mcol:28[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced[0;1;36m __result[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x614ccc0[0m <[0;33mcol:47[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __a[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x614cd38[0m <[0;33mcol:62[0m, [0;33mcol:72[0m> [0;33mcol:72[0m referenced[0;1;36m __b[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x614cdb0[0m <[0;33mline:79:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __c[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x614ce28[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x614d970[0m <[0;33mline:80:5[0m, [0;33mline:96:5[0m>
[0;34m|   `-[0m[0;1;35mIfStmt[0m[0;33m 0x614d948[0m <[0;33mline:81:7[0m, [0;33mline:95:30[0m> has_else
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d0f8[0m <[0;33mline:81:11[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d098[0m <[0;33mcol:11[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ce28[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d0b8[0m <[0;33mcol:18[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ccc0[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d0d8[0m <[0;33mcol:23[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cd38[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m|     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x614d538[0m <[0;33mline:82:2[0m, [0;33mline:89:2[0m>
[0;34m|     | `-[0m[0;1;35mIfStmt[0m[0;33m 0x614d510[0m <[0;33mline:83:4[0m, [0;33mline:88:34[0m> has_else
[0;34m|     |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d188[0m <[0;33mline:83:8[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d128[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ce28[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d148[0m <[0;33mcol:15[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cd38[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m|     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d168[0m <[0;33mcol:20[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cdb0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|     |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d278[0m <[0;33mline:84:6[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x614d1f0[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x60972a8[0m
[0;34m|     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d238[0m <[0;33mcol:21[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cc48[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d258[0m <[0;33mcol:31[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cd38[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m|     |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x614d4e8[0m <[0;33mline:85:9[0m, [0;33mline:88:34[0m> has_else
[0;34m|     |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d308[0m <[0;33mline:85:13[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d2a8[0m <[0;33mcol:13[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ce28[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|     |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d2c8[0m <[0;33mcol:20[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ccc0[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d2e8[0m <[0;33mcol:25[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cdb0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|     |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d3e0[0m <[0;33mline:86:6[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x614d358[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x60972a8[0m
[0;34m|     |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d3a0[0m <[0;33mcol:21[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cc48[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d3c0[0m <[0;33mcol:31[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cdb0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|     |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x614d4b8[0m <[0;33mline:88:6[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|     |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x614d430[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x60972a8[0m
[0;34m|     |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d478[0m <[0;33mcol:21[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cc48[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d498[0m <[0;33mcol:31[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ccc0[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|     `-[0m[0;1;35mIfStmt[0m[0;33m 0x614d920[0m <[0;33mline:90:12[0m, [0;33mline:95:30[0m> has_else
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d5b0[0m <[0;33mline:90:16[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d550[0m <[0;33mcol:16[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ce28[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d570[0m <[0;33mcol:23[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ccc0[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d590[0m <[0;33mcol:28[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cdb0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d688[0m <[0;33mline:91:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x614d600[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x60972a8[0m
[0;34m|       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d648[0m <[0;33mcol:17[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cc48[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d668[0m <[0;33mcol:27[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ccc0[0m[0;1;36m '__a'[0m [0;32m'_Iterator'[0m
[0;34m|       `-[0m[0;1;35mIfStmt[0m[0;33m 0x614d8f8[0m <[0;33mline:92:12[0m, [0;33mline:95:30[0m> has_else
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d718[0m <[0;33mline:92:16[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d6b8[0m <[0;33mcol:16[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614ce28[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m|         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d6d8[0m <[0;33mcol:23[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cd38[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d6f8[0m <[0;33mcol:28[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cdb0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x614d7f0[0m <[0;33mline:93:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x614d768[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x60972a8[0m
[0;34m|         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d7b0[0m <[0;33mcol:17[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cc48[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d7d0[0m <[0;33mcol:27[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cdb0[0m[0;1;36m '__c'[0m [0;32m'_Iterator'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x614d8c8[0m <[0;33mline:95:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x614d840[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'iter_swap'[0;33m 0x60972a8[0m
[0;34m|           |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d888[0m <[0;33mcol:17[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cc48[0m[0;1;36m '__result'[0m [0;32m'_Iterator'[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x614d8a8[0m <[0;33mcol:27[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x614cd38[0m[0;1;36m '__b'[0m [0;32m'_Iterator'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6311ca8[0m <[0;33mline:77:5[0m, [0;33mline:96:5[0m> [0;33mline:78:5[0m used[0;1;36m __move_median_to_first[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>)'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6311948[0m <[0;33mcol:28[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __result[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63119c0[0m <[0;33mcol:47[0m, [0;33mcol:57[0m> [0;33mcol:57[0m used[0;1;36m __a[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6311a38[0m <[0;33mcol:62[0m, [0;33mcol:72[0m> [0;33mcol:72[0m used[0;1;36m __b[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6311ab0[0m <[0;33mline:79:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m __c[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6311b58[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m __comp[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6314f90[0m <[0;33mline:80:5[0m, [0;33mline:96:5[0m>
[0;34m    `-[0m[0;1;35mIfStmt[0m[0;33m 0x6314f68[0m <[0;33mline:81:7[0m, [0;33mline:95:30[0m> has_else
[0;34m      |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6313340[0m <[0;33mline:81:11[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313228[0m <[0;33mcol:11[0m, [0;33mcol:26[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313208[0m <[0;33mcol:11[0m, [0;33mcol:26[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x62fc488[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313148[0m <[0;33mcol:11[0m> [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311b58[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m      | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6313290[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313278[0m <[0;33mcol:18[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313168[0m <[0;33mcol:18[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63119c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6313310[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63132f8[0m <[0;33mcol:23[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313188[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311a38[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6314358[0m <[0;33mline:82:2[0m, [0;33mline:89:2[0m>
[0;34m      | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6314330[0m <[0;33mline:83:4[0m, [0;33mline:88:34[0m> has_else
[0;34m      |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6313578[0m <[0;33mline:83:8[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313460[0m <[0;33mcol:8[0m, [0;33mcol:23[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313440[0m <[0;33mcol:8[0m, [0;33mcol:23[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x62fc488[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m
[0;34m      |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313380[0m <[0;33mcol:8[0m> [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311b58[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m      |   | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63134c8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63134b0[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63133a0[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311a38[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |   | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6313548[0m <[0;33mcol:20[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313530[0m <[0;33mcol:20[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63133c0[0m <[0;33mcol:20[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311ab0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6313ad0[0m <[0;33mline:84:6[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313ab8[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313a28[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6313908[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60972a8[0m[0;1;36m 'iter_swap'[0m)
[0;34m      |   | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6313b50[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313b38[0m <[0;33mcol:21[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313600[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311948[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |   | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6313bd0[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313bb8[0m <[0;33mcol:31[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313620[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311a38[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6314308[0m <[0;33mline:85:9[0m, [0;33mline:88:34[0m> has_else
[0;34m      |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6313df8[0m <[0;33mline:85:13[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313ce0[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313cc0[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x62fc488[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m
[0;34m      |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313c00[0m <[0;33mcol:13[0m> [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311b58[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m      |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6313d48[0m <[0;33mcol:20[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313d30[0m <[0;33mcol:20[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313c20[0m <[0;33mcol:20[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63119c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6313dc8[0m <[0;33mcol:25[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313db0[0m <[0;33mcol:25[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313c40[0m <[0;33mcol:25[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311ab0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6313f70[0m <[0;33mline:86:6[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313f58[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313f20[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6313908[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60972a8[0m[0;1;36m 'iter_swap'[0m)
[0;34m      |     | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6313ff0[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6313fd8[0m <[0;33mcol:21[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313e80[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311948[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314070[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314058[0m <[0;33mcol:31[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6313ea0[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311ab0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x63141d8[0m <[0;33mline:88:6[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63141c0[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314188[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6313908[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60972a8[0m[0;1;36m 'iter_swap'[0m)
[0;34m      |       |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314258[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314240[0m <[0;33mcol:21[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63140e8[0m <[0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311948[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      |       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63142d8[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m      |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63142c0[0m <[0;33mcol:31[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314108[0m <[0;33mcol:31[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63119c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m      `-[0m[0;1;35mIfStmt[0m[0;33m 0x6314f40[0m <[0;33mline:90:12[0m, [0;33mline:95:30[0m> has_else
[0;34m        |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6314568[0m <[0;33mline:90:16[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314450[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314430[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x62fc488[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m
[0;34m        | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314370[0m <[0;33mcol:16[0m> [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311b58[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m        | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63144b8[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63144a0[0m <[0;33mcol:23[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314390[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63119c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m        | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314538[0m <[0;33mcol:28[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m        |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314520[0m <[0;33mcol:28[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63143b0[0m <[0;33mcol:28[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311ab0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x63146e0[0m <[0;33mline:91:2[0m, [0;33mcol:30[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63146c8[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314690[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6313908[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60972a8[0m[0;1;36m 'iter_swap'[0m)
[0;34m        | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314760[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314748[0m <[0;33mcol:17[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63145f0[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311948[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m        | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63147e0[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m        |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63147c8[0m <[0;33mcol:27[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314610[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x63119c0[0m[0;1;36m '__a'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m        `-[0m[0;1;35mIfStmt[0m[0;33m 0x6314f18[0m <[0;33mline:92:12[0m, [0;33mline:95:30[0m> has_else
[0;34m          |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6314a08[0m <[0;33mline:92:16[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63148f0[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'bool (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63148d0[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x62fc488[0m[0;1;36m 'operator()'[0m [0;32m'bool (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314810[0m <[0;33mcol:16[0m> [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311b58[0m[0;1;36m '__comp'[0m [0;32m'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>':'__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(const Pont &, const Pont &)>'[0m
[0;34m          | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314958[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m          | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314940[0m <[0;33mcol:23[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314830[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311a38[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m          | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x63149d8[0m <[0;33mcol:28[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m          |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x63149c0[0m <[0;33mcol:28[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314850[0m <[0;33mcol:28[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311ab0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6314b80[0m <[0;33mline:93:2[0m, [0;33mcol:30[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314b68[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314b30[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6313908[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60972a8[0m[0;1;36m 'iter_swap'[0m)
[0;34m          | |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314c00[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m          | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314be8[0m <[0;33mcol:17[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314a90[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311948[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m          | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314c80[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m          |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314c68[0m <[0;33mcol:27[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314ab0[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311ab0[0m[0;1;36m '__c'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m          `-[0m[0;1;35mCallExpr[0m[0;33m 0x6314de8[0m <[0;33mline:95:2[0m, [0;33mcol:30[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314dd0[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314d98[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6313908[0m[0;1;36m 'iter_swap'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60972a8[0m[0;1;36m 'iter_swap'[0m)
[0;34m            |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314e68[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m            | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314e50[0m <[0;33mcol:17[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m            |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314cf8[0m <[0;33mcol:17[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311948[0m[0;1;36m '__result'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m
[0;34m            `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6314ee8[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &) noexcept'[0m
[0;34m              `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6314ed0[0m <[0;33mcol:27[0m> [0;32m'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'const __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6314d18[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6311a38[0m[0;1;36m '__b'[0m [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m

Dumping std::__remove_copy_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x615bb48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:639:3[0m, [0;33mline:652:5[0m> [0;33mline:642:5[0m[0;1;36m __remove_copy_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615b6c0[0m <[0;33mline:639:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615b738[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615b7a8[0m <[0;33mline:640:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x615baa8[0m <[0;33mline:641:5[0m, [0;33mline:652:5[0m> [0;33mline:642:5[0m[0;1;36m __remove_copy_if[0m [0;32m'_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _Predicate)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615b850[0m <[0;33mcol:22[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615b8c8[0m <[0;33mcol:46[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615b940[0m <[0;33mline:643:8[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615b9b8[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __pred[0m [0;32m'_Predicate'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x615bf20[0m <[0;33mline:644:5[0m, [0;33mline:652:5[0m>
[0;34m    |-[0m[0;1;35mForStmt[0m[0;33m 0x615beb8[0m <[0;33mline:645:7[0m, [0;33mline:650:4[0m>
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x615bcc8[0m <[0;33mline:645:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x615bc00[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m[0;33m 0x58233e0[0m[0;33m 0x58238c0[0m[0;33m 0x595c660[0m[0;33m 0x595cd68[0m[0;33m 0x595d468[0m[0;33m 0x5b87020[0m[0;33m 0x5b87e40[0m[0;33m 0x5b88c60[0m[0;33m 0x5b89810[0m[0;33m 0x5c185a8[0m[0;33m 0x5df9eb8[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615bbc0[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b850[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615bbe0[0m <[0;33mcol:25[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b8c8[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m    | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x615bd20[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615bd00[0m <[0;33mcol:35[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b850[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m    | `-[0m[0;1;35mIfStmt[0m[0;33m 0x615bea0[0m <[0;33mline:646:2[0m, [0;33mline:650:4[0m>
[0;34m    |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x615bda0[0m <[0;33mline:646:6[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x615bd78[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615bd38[0m <[0;33mcol:7[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b9b8[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615bd58[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b850[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m    |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x615be80[0m <[0;33mline:647:4[0m, [0;33mline:650:4[0m>
[0;34m    |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x615be28[0m <[0;33mline:648:6[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |     | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x615bdd8[0m <[0;33mcol:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615bdb8[0m <[0;33mcol:7[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b940[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |     | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x615be10[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615bdf0[0m <[0;33mcol:19[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b850[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m    |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x615be68[0m <[0;33mline:649:6[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615be48[0m <[0;33mcol:8[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b940[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x615bf10[0m <[0;33mline:651:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615bef0[0m <[0;33mcol:14[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615b940[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m

Dumping std::remove_copy:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x615c3f8[0m prev 0x60a3d08 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:668:3[0m, [0;33mline:683:5[0m> [0;33mline:670:5[0m[0;1;36m remove_copy[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615bf40[0m <[0;33mline:668:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615bfb8[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615c028[0m <[0;33mcol:63[0m, [0;33mcol:72[0m> [0;33mcol:72[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x615c358[0m prev 0x60a3c68 <[0;33mline:669:5[0m, [0;33mline:683:5[0m> [0;33mline:670:5[0m[0;1;36m remove_copy[0m [0;32m'_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, const _Tp &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615c0d0[0m <[0;33mcol:17[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615c148[0m <[0;33mcol:41[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615c1c0[0m <[0;33mline:671:3[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615c268[0m <[0;33mcol:29[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced[0;1;36m __value[0m [0;32m'const _Tp &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x615c650[0m <[0;33mline:672:5[0m, [0;33mline:683:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x615c470[0m <[0;33mline:679:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x615c640[0m <[0;33mline:681:7[0m, [0;33mline:682:46[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x615c600[0m <[0;33mline:681:14[0m, [0;33mline:682:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x615c498[0m <[0;33mline:681:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__remove_copy_if'[0;33m 0x615bb48[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615c4e0[0m <[0;33mcol:36[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615c0d0[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615c500[0m <[0;33mcol:45[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615c148[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615c520[0m <[0;33mcol:53[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615c1c0[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x615c5d8[0m <[0;33mline:682:2[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x615c570[0m <[0;33mcol:2[0m, [0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iter_equals_val'[0;33m 0x56cd518[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615c5b8[0m <[0;33mcol:38[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615c268[0m[0;1;36m '__value'[0m [0;32m'const _Tp &'[0m

Dumping std::remove_copy_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x615caf8[0m prev 0x60a4208 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:700:3[0m, [0;33mline:716:5[0m> [0;33mline:703:5[0m[0;1;36m remove_copy_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615c670[0m <[0;33mline:700:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615c6e8[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615c758[0m <[0;33mline:701:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x615ca58[0m prev 0x60a4168 <[0;33mline:702:5[0m, [0;33mline:716:5[0m> [0;33mline:703:5[0m[0;1;36m remove_copy_if[0m [0;32m'_OutputIterator (_InputIterator, _InputIterator, _OutputIterator, _Predicate)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615c800[0m <[0;33mcol:20[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615c878[0m <[0;33mcol:44[0m, [0;33mcol:59[0m> [0;33mcol:59[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615c8f0[0m <[0;33mline:704:6[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615c968[0m <[0;33mcol:32[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __pred[0m [0;32m'_Predicate'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x615cd50[0m <[0;33mline:705:5[0m, [0;33mline:716:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x615cb70[0m <[0;33mline:712:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x615cd40[0m <[0;33mline:714:7[0m, [0;33mline:715:45[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x615cd00[0m <[0;33mline:714:14[0m, [0;33mline:715:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x615cb98[0m <[0;33mline:714:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__remove_copy_if'[0;33m 0x615bb48[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615cbe0[0m <[0;33mcol:36[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615c800[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615cc00[0m <[0;33mcol:45[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615c878[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615cc20[0m <[0;33mcol:53[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615c8f0[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x615ccd8[0m <[0;33mline:715:8[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x615cc70[0m <[0;33mcol:8[0m, [0;33mcol:26[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__pred_iter'[0;33m 0x56d27f0[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615ccb8[0m <[0;33mcol:38[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615c968[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m

Dumping std::__remove_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x615fd28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:858:3[0m, [0;33mline:875:5[0m> [0;33mline:860:5[0m[0;1;36m __remove_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615f9a0[0m <[0;33mline:858:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x615fa18[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 1[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x615fc88[0m <[0;33mline:859:5[0m, [0;33mline:875:5[0m> [0;33mline:860:5[0m[0;1;36m __remove_if[0m [0;32m'_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615fab8[0m <[0;33mcol:17[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __first[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615fb30[0m <[0;33mcol:43[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __last[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x615fba8[0m <[0;33mline:861:3[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m __pred[0m [0;32m'_Predicate'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6160560[0m <[0;33mline:862:5[0m, [0;33mline:875:5[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x615fec8[0m <[0;33mline:863:7[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615fd98[0m <[0;33mcol:7[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x615fe90[0m <[0;33mcol:17[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x615fdd8[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__find_if'[0;33m 0x614dde8[0m[0;33m 0x614e548[0m[0;33m 0x614f788[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615fe30[0m <[0;33mcol:32[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615fe50[0m <[0;33mcol:41[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fb30[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615fe70[0m <[0;33mcol:49[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fba8[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x6160060[0m <[0;33mline:864:7[0m, [0;33mline:865:9[0m>
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x615fff8[0m <[0;33mline:864:11[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x615ff28[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x54863a8[0m[0;33m 0x56689c8[0m[0;33m 0x568d2b8[0m[0;33m 0x568f7a8[0m[0;33m 0x56ae808[0m[0;33m 0x56aeeb8[0m[0;33m 0x5822960[0m[0;33m 0x5822e80[0m[0;33m 0x5959de0[0m[0;33m 0x595aa90[0m[0;33m 0x595b5a8[0m[0;33m 0x595bd38[0m[0;33m 0x5b83cb0[0m[0;33m 0x5b84e60[0m[0;33m 0x5b85930[0m[0;33m 0x5b86110[0m[0;33m 0x5c17f18[0m[0;33m 0x5df8b78[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615fee8[0m <[0;33mcol:11[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x615ff08[0m <[0;33mcol:22[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fb30[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6160050[0m <[0;33mline:865:2[0m, [0;33mcol:9[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160030[0m <[0;33mcol:9[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6160110[0m <[0;33mline:866:7[0m, [0;33mcol:42[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6160088[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:24[0m referenced[0;1;36m __result[0m [0;32m'_ForwardIterator'[0m cinit
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61600f0[0m <[0;33mcol:35[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6160148[0m <[0;33mline:867:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160128[0m <[0;33mcol:9[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |-[0m[0;1;35mForStmt[0m[0;33m 0x61604f0[0m <[0;33mline:868:7[0m, [0;33mline:873:4[0m>
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;34m<<<NULL>>>[0m
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6160268[0m <[0;33mline:868:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61601a0[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m[0;33m 0x58233e0[0m[0;33m 0x58238c0[0m[0;33m 0x595c660[0m[0;33m 0x595cd68[0m[0;33m 0x595d468[0m[0;33m 0x5b87020[0m[0;33m 0x5b87e40[0m[0;33m 0x5b88c60[0m[0;33m 0x5b89810[0m[0;33m 0x5c185a8[0m[0;33m 0x5df9eb8[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160160[0m <[0;33mcol:14[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160180[0m <[0;33mcol:25[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fb30[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61602c0[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61602a0[0m <[0;33mcol:35[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    | `-[0m[0;1;35mIfStmt[0m[0;33m 0x61604d8[0m <[0;33mline:869:2[0m, [0;33mline:873:4[0m>
[0;34m    |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6160340[0m <[0;33mline:869:6[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m    |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6160318[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61602d8[0m <[0;33mcol:7[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fba8[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61602f8[0m <[0;33mcol:14[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61604b8[0m <[0;33mline:870:4[0m, [0;33mline:873:4[0m>
[0;34m    |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6160460[0m <[0;33mline:871:6[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |     | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6160378[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:871:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160358[0m <[0;33mcol:7[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6160088[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6160438[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61603b0[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m    |     |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6160420[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:871:32[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160400[0m <[0;33mcol:33[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x615fab8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m    |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61604a0[0m <[0;33mline:872:6[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160480[0m <[0;33mcol:8[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6160088[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6160548[0m <[0;33mline:874:7[0m, [0;33mcol:14[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160528[0m <[0;33mcol:14[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6160088[0m[0;1;36m '__result'[0m [0;32m'_ForwardIterator'[0m

Dumping std::remove:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6160958[0m prev 0x60a33a8 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:894:3[0m, [0;33mline:908:5[0m> [0;33mline:896:5[0m[0;1;36m remove[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61605a0[0m <[0;33mline:894:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6160618[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 1[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x61608b8[0m prev 0x60a3308 <[0;33mline:895:5[0m, [0;33mline:908:5[0m> [0;33mline:896:5[0m[0;1;36m remove[0m [0;32m'_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61606b8[0m <[0;33mcol:12[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6160730[0m <[0;33mcol:38[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61607d8[0m <[0;33mline:897:5[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __value[0m [0;32m'const _Tp &'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6160b80[0m <[0;33mline:898:5[0m, [0;33mline:908:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x61609c8[0m <[0;33mline:904:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6160b70[0m <[0;33mline:906:7[0m, [0;33mline:907:47[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6160b38[0m <[0;33mline:906:14[0m, [0;33mline:907:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61609f0[0m <[0;33mline:906:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__remove_if'[0;33m 0x615fd28[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160a38[0m <[0;33mcol:31[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61606b8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160a58[0m <[0;33mcol:40[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6160730[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6160b10[0m <[0;33mline:907:3[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6160aa8[0m <[0;33mcol:3[0m, [0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iter_equals_val'[0;33m 0x56cd518[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6160af0[0m <[0;33mcol:39[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61607d8[0m[0;1;36m '__value'[0m [0;32m'const _Tp &'[0m

Dumping std::remove_if:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6160f28[0m prev 0x60a3798 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:927:3[0m, [0;33mline:941:5[0m> [0;33mline:929:5[0m[0;1;36m remove_if[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6160ba0[0m <[0;33mline:927:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _ForwardIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6160c18[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 1[0;1;36m _Predicate[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6160e88[0m prev 0x60a36f8 <[0;33mline:928:5[0m, [0;33mline:941:5[0m> [0;33mline:929:5[0m[0;1;36m remove_if[0m [0;32m'_ForwardIterator (_ForwardIterator, _ForwardIterator, _Predicate)'[0m inline
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6160cb8[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __first[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6160d30[0m <[0;33mcol:41[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m __last[0m [0;32m'_ForwardIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6160da8[0m <[0;33mline:930:8[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __pred[0m [0;32m'_Predicate'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6161150[0m <[0;33mline:931:5[0m, [0;33mline:941:5[0m>
[0;34m    |-[0m[0;1;35mNullStmt[0m[0;33m 0x6160f98[0m <[0;33mline:937:54[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6161140[0m <[0;33mline:939:7[0m, [0;33mline:940:47[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6161108[0m <[0;33mline:939:14[0m, [0;33mline:940:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6160fc0[0m <[0;33mline:939:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__remove_if'[0;33m 0x615fd28[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6161008[0m <[0;33mcol:31[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6160cb8[0m[0;1;36m '__first'[0m [0;32m'_ForwardIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6161028[0m <[0;33mcol:40[0m> [0;32m'_ForwardIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6160d30[0m[0;1;36m '__last'[0m [0;32m'_ForwardIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x61610e0[0m <[0;33mline:940:10[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6161078[0m <[0;33mcol:10[0m, [0;33mcol:28[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__pred_iter'[0;33m 0x56d27f0[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61610c0[0m <[0;33mcol:40[0m> [0;32m'_Predicate'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6160da8[0m[0;1;36m '__pred'[0m [0;32m'_Predicate'[0m

Dumping std::__move_merge_adaptive:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6184ed8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2301:3[0m, [0;33mline:2324:5[0m> [0;33mline:2304:5[0m[0;1;36m __move_merge_adaptive[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6184860[0m <[0;33mline:2301:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61848d8[0m <[0;33mcol:38[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced typename depth 0 index 1[0;1;36m _InputIterator2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6184948[0m <[0;33mline:2302:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61849b8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 3[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6184e38[0m <[0;33mline:2303:5[0m, [0;33mline:2324:5[0m> [0;33mline:2304:5[0m[0;1;36m __move_merge_adaptive[0m [0;32m'void (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _OutputIterator, _Compare)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6184a68[0m <[0;33mcol:27[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6184ae0[0m <[0;33mcol:53[0m, [0;33mcol:69[0m> [0;33mcol:69[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6184b58[0m <[0;33mline:2305:6[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __first2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6184bd0[0m <[0;33mcol:32[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced[0;1;36m __last2[0m [0;32m'_InputIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6184c48[0m <[0;33mline:2306:6[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6184cc0[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6185888[0m <[0;33mline:2307:5[0m, [0;33mline:2324:5[0m>
[0;34m    |-[0m[0;1;35mWhileStmt[0m[0;33m 0x6185610[0m <[0;33mline:2308:7[0m, [0;33mline:2321:2[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61851e0[0m <[0;33mline:2308:14[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6185068[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6184fa0[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m[0;33m 0x58233e0[0m[0;33m 0x58238c0[0m[0;33m 0x595c660[0m[0;33m 0x595cd68[0m[0;33m 0x595d468[0m[0;33m 0x5b87020[0m[0;33m 0x5b87e40[0m[0;33m 0x5b88c60[0m[0;33m 0x5b89810[0m[0;33m 0x5c185a8[0m[0;33m 0x5df9eb8[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6184f60[0m <[0;33mcol:14[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184a68[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6184f80[0m <[0;33mcol:26[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184ae0[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m    | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61851a8[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61850e0[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m[0;33m 0x58233e0[0m[0;33m 0x58238c0[0m[0;33m 0x595c660[0m[0;33m 0x595cd68[0m[0;33m 0x595d468[0m[0;33m 0x5b87020[0m[0;33m 0x5b87e40[0m[0;33m 0x5b88c60[0m[0;33m 0x5b89810[0m[0;33m 0x5c185a8[0m[0;33m 0x5df9eb8[0m
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61850a0[0m <[0;33mcol:37[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184b58[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61850c0[0m <[0;33mcol:49[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184bd0[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator2'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61855f0[0m <[0;33mline:2309:2[0m, [0;33mline:2321:2[0m>
[0;34m    |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6185590[0m <[0;33mline:2310:4[0m, [0;33mline:2319:6[0m> has_else
[0;34m    |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6185260[0m <[0;33mline:2310:8[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185200[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184cc0[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185220[0m <[0;33mcol:15[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184b58[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m    |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185240[0m <[0;33mcol:25[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184a68[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61853f0[0m <[0;33mline:2311:6[0m, [0;33mline:2314:6[0m>
[0;34m    |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6185398[0m <[0;33mline:2312:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   | | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61852b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2312:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185290[0m <[0;33mcol:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184c48[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |   | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6185370[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61852e8[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m    |   | | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6185358[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2312:34[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185338[0m <[0;33mcol:35[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184b58[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m    |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61853d8[0m <[0;33mline:2313:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61853b8[0m <[0;33mcol:10[0m> [0;32m'_InputIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184b58[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator2'[0m
[0;34m    |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6185570[0m <[0;33mline:2316:6[0m, [0;33mline:2319:6[0m>
[0;34m    |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6185518[0m <[0;33mline:2317:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6185430[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2317:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185410[0m <[0;33mcol:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184c48[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |   |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x61854f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6185468[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m    |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61854d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2317:34[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61854b8[0m <[0;33mcol:35[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184a68[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6185558[0m <[0;33mline:2318:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185538[0m <[0;33mcol:10[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184a68[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m    |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61855d8[0m <[0;33mline:2320:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61855b8[0m <[0;33mcol:6[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184c48[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    `-[0m[0;1;35mIfStmt[0m[0;33m 0x6185870[0m <[0;33mline:2322:7[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:491:62[0m>
[0;34m      |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6185730[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2322:11[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6185668[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m[0;33m 0x58233e0[0m[0;33m 0x58238c0[0m[0;33m 0x595c660[0m[0;33m 0x595cd68[0m[0;33m 0x595d468[0m[0;33m 0x5b87020[0m[0;33m 0x5b87e40[0m[0;33m 0x5b88c60[0m[0;33m 0x5b89810[0m[0;33m 0x5c185a8[0m[0;33m 0x5df9eb8[0m
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185628[0m <[0;33mcol:11[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184a68[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185648[0m <[0;33mcol:23[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184ae0[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6185838[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:491:39[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6185788[0m <[0;33mcol:39[0m, [0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61857d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2323:17[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184a68[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator1'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61857f8[0m <[0;33mcol:27[0m> [0;32m'_InputIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184ae0[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator1'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185818[0m <[0;33mcol:36[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6184c48[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m

Dumping std::__move_merge_adaptive_backward:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6185eb8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2327:3[0m, [0;33mline:2367:5[0m> [0;33mline:2330:5[0m[0;1;36m __move_merge_adaptive_backward[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61858a8[0m <[0;33mline:2327:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator1[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6185918[0m <[0;33mcol:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 1[0;1;36m _BidirectionalIterator2[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6185988[0m <[0;33mline:2328:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _BidirectionalIterator3[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61859f8[0m <[0;33mcol:39[0m, [0;33mcol:48[0m> [0;33mcol:48[0m referenced typename depth 0 index 3[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6185e18[0m <[0;33mline:2329:5[0m, [0;33mline:2367:5[0m> [0;33mline:2330:5[0m[0;1;36m __move_merge_adaptive_backward[0m [0;32m'void (_BidirectionalIterator1, _BidirectionalIterator1, _BidirectionalIterator2, _BidirectionalIterator2, _BidirectionalIterator3, _Compare)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6185aa8[0m <[0;33mcol:36[0m, [0;33mcol:60[0m> [0;33mcol:60[0m referenced[0;1;36m __first1[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6185b20[0m <[0;33mline:2331:8[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __last1[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6185b98[0m <[0;33mline:2332:8[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __first2[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6185c10[0m <[0;33mline:2333:8[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __last2[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6185c88[0m <[0;33mline:2334:8[0m, [0;33mcol:32[0m> [0;33mcol:32[0m referenced[0;1;36m __result[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6185d00[0m <[0;33mline:2335:8[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6186c10[0m <[0;33mline:2336:5[0m, [0;33mline:2367:5[0m>
[0;34m    |-[0m[0;1;35mIfStmt[0m[0;33m 0x6186328[0m <[0;33mline:2337:7[0m, [0;33mline:2343:2[0m> has_else
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6186050[0m <[0;33mline:2337:11[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6185f80[0m <[0;33mcol:20[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x54863a8[0m[0;33m 0x56689c8[0m[0;33m 0x568d2b8[0m[0;33m 0x568f7a8[0m[0;33m 0x56ae808[0m[0;33m 0x56aeeb8[0m[0;33m 0x5822960[0m[0;33m 0x5822e80[0m[0;33m 0x5959de0[0m[0;33m 0x595aa90[0m[0;33m 0x595b5a8[0m[0;33m 0x595bd38[0m[0;33m 0x5b83cb0[0m[0;33m 0x5b84e60[0m[0;33m 0x5b85930[0m[0;33m 0x5b86110[0m[0;33m 0x5c17f18[0m[0;33m 0x5df8b78[0m
[0;34m    | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185f40[0m <[0;33mcol:11[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185aa8[0m[0;1;36m '__first1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6185f60[0m <[0;33mcol:23[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b20[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m    | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6186198[0m <[0;33mline:2338:2[0m, [0;33mline:2341:2[0m>
[0;34m    | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6186150[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:673:48[0m, [0;33mcol:80[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61860a8[0m <[0;33mcol:48[0m, [0;33mcol:53[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move_backward'[0;33m 0x56f4a48[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61860f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2339:28[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b98[0m[0;1;36m '__first2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186110[0m <[0;33mcol:38[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c10[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186130[0m <[0;33mcol:47[0m> [0;32m'_BidirectionalIterator3'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c88[0m[0;1;36m '__result'[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m    | | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6186188[0m <[0;33mline:2340:4[0m>
[0;34m    | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6186310[0m <[0;33mline:2342:12[0m, [0;33mline:2343:2[0m>
[0;34m    |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61862c8[0m <[0;33mline:2342:16[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61861f8[0m <[0;33mcol:25[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x54863a8[0m[0;33m 0x56689c8[0m[0;33m 0x568d2b8[0m[0;33m 0x568f7a8[0m[0;33m 0x56ae808[0m[0;33m 0x56aeeb8[0m[0;33m 0x5822960[0m[0;33m 0x5822e80[0m[0;33m 0x5959de0[0m[0;33m 0x595aa90[0m[0;33m 0x595b5a8[0m[0;33m 0x595bd38[0m[0;33m 0x5b83cb0[0m[0;33m 0x5b84e60[0m[0;33m 0x5b85930[0m[0;33m 0x5b86110[0m[0;33m 0x5c17f18[0m[0;33m 0x5df8b78[0m
[0;34m    |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61861b8[0m <[0;33mcol:16[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b98[0m[0;1;36m '__first2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61861d8[0m <[0;33mcol:28[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c10[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6186300[0m <[0;33mline:2343:2[0m>
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6186370[0m <[0;33mline:2345:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186350[0m <[0;33mcol:9[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b20[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61863a8[0m <[0;33mline:2346:7[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186388[0m <[0;33mcol:9[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c10[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m    `-[0m[0;1;35mWhileStmt[0m[0;33m 0x6186bf8[0m <[0;33mline:2347:7[0m, [0;33mline:2366:2[0m>
[0;34m      |-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x61863c0[0m <[0;33mline:2347:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m      `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6186be0[0m <[0;33mline:2348:2[0m, [0;33mline:2366:2[0m>
[0;34m        `-[0m[0;1;35mIfStmt[0m[0;33m 0x6186bb8[0m <[0;33mline:2349:4[0m, [0;33mline:2365:6[0m> has_else
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x6186430[0m <[0;33mline:2349:8[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61863d0[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185d00[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m          | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61863f0[0m <[0;33mcol:15[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c10[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186410[0m <[0;33mcol:24[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b20[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6186880[0m <[0;33mline:2350:6[0m, [0;33mline:2358:6[0m>
[0;34m          | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6186580[0m <[0;33mline:2351:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m          | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6186498[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2351:8[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m          | | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6186480[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m          | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186460[0m <[0;33mcol:11[0m> [0;32m'_BidirectionalIterator3'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c88[0m[0;1;36m '__result'[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m          | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6186558[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61864d0[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m          | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6186540[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2351:36[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m          | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186520[0m <[0;33mcol:37[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b20[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          | |-[0m[0;1;35mIfStmt[0m[0;33m 0x6186830[0m <[0;33mline:2352:8[0m, [0;33mline:2356:3[0m>
[0;34m          | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61866b0[0m <[0;33mline:2352:12[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61865e0[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x54863a8[0m[0;33m 0x56689c8[0m[0;33m 0x568d2b8[0m[0;33m 0x568f7a8[0m[0;33m 0x56ae808[0m[0;33m 0x56aeeb8[0m[0;33m 0x5822960[0m[0;33m 0x5822e80[0m[0;33m 0x5959de0[0m[0;33m 0x595aa90[0m[0;33m 0x595b5a8[0m[0;33m 0x595bd38[0m[0;33m 0x5b83cb0[0m[0;33m 0x5b84e60[0m[0;33m 0x5b85930[0m[0;33m 0x5b86110[0m[0;33m 0x5c17f18[0m[0;33m 0x5df8b78[0m
[0;34m          | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61865a0[0m <[0;33mcol:12[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185aa8[0m[0;1;36m '__first1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61865c0[0m <[0;33mcol:24[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b20[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6186810[0m <[0;33mline:2353:3[0m, [0;33mline:2356:3[0m>
[0;34m          | |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x61867c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:673:48[0m, [0;33mcol:80[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          | |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6186708[0m <[0;33mcol:48[0m, [0;33mcol:53[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move_backward'[0;33m 0x56f4a48[0m
[0;34m          | |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186750[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2354:29[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b98[0m[0;1;36m '__first2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m          | |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6186790[0m <[0;33mcol:39[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m          | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186770[0m <[0;33mcol:41[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c10[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m          | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61867a8[0m <[0;33mcol:50[0m> [0;32m'_BidirectionalIterator3'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c88[0m[0;1;36m '__result'[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m          | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6186800[0m <[0;33mline:2355:5[0m>
[0;34m          | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6186868[0m <[0;33mline:2357:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186848[0m <[0;33mcol:10[0m> [0;32m'_BidirectionalIterator1'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b20[0m[0;1;36m '__last1'[0m [0;32m'_BidirectionalIterator1'[0m
[0;34m          `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6186b90[0m <[0;33mline:2360:6[0m, [0;33mline:2365:6[0m>
[0;34m            |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61869c8[0m <[0;33mline:2361:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m            | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61868e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2361:8[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m            | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61868c8[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m            | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61868a8[0m <[0;33mcol:11[0m> [0;32m'_BidirectionalIterator3'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c88[0m[0;1;36m '__result'[0m [0;32m'_BidirectionalIterator3'[0m
[0;34m            | `-[0m[0;1;35mCallExpr[0m[0;33m 0x61869a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6186918[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m            |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6186988[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2361:36[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m            |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186968[0m <[0;33mcol:37[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c10[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m            |-[0m[0;1;35mIfStmt[0m[0;33m 0x6186b40[0m <[0;33mline:2362:8[0m, [0;33mline:2363:3[0m>
[0;34m            | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6186af8[0m <[0;33mline:2362:12[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6186a28[0m <[0;33mcol:21[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x54863a8[0m[0;33m 0x56689c8[0m[0;33m 0x568d2b8[0m[0;33m 0x568f7a8[0m[0;33m 0x56ae808[0m[0;33m 0x56aeeb8[0m[0;33m 0x5822960[0m[0;33m 0x5822e80[0m[0;33m 0x5959de0[0m[0;33m 0x595aa90[0m[0;33m 0x595b5a8[0m[0;33m 0x595bd38[0m[0;33m 0x5b83cb0[0m[0;33m 0x5b84e60[0m[0;33m 0x5b85930[0m[0;33m 0x5b86110[0m[0;33m 0x5c17f18[0m[0;33m 0x5df8b78[0m
[0;34m            | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61869e8[0m <[0;33mcol:12[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185b98[0m[0;1;36m '__first2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m            | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186a08[0m <[0;33mcol:24[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c10[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m
[0;34m            | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6186b30[0m <[0;33mline:2363:3[0m>
[0;34m            `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6186b78[0m <[0;33mline:2364:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m              `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6186b58[0m <[0;33mcol:10[0m> [0;32m'_BidirectionalIterator2'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6185c10[0m[0;1;36m '__last2'[0m [0;32m'_BidirectionalIterator2'[0m

Dumping std::__move_merge:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x61906e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2636:3[0m, [0;33mline:2660:5[0m> [0;33mline:2639:5[0m[0;1;36m __move_merge[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61900f0[0m <[0;33mline:2636:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6190168[0m <[0;33mcol:37[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced typename depth 0 index 1[0;1;36m _OutputIterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x61901d8[0m <[0;33mline:2637:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Compare[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6190648[0m <[0;33mline:2638:5[0m, [0;33mline:2660:5[0m> [0;33mline:2639:5[0m[0;1;36m __move_merge[0m [0;32m'_OutputIterator (_InputIterator, _InputIterator, _InputIterator, _InputIterator, _OutputIterator, _Compare)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190280[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __first1[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61902f8[0m <[0;33mcol:43[0m, [0;33mcol:58[0m> [0;33mcol:58[0m referenced[0;1;36m __last1[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190370[0m <[0;33mline:2640:4[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __first2[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61903e8[0m <[0;33mcol:29[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced[0;1;36m __last2[0m [0;32m'_InputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6190460[0m <[0;33mline:2641:4[0m, [0;33mcol:20[0m> [0;33mcol:20[0m referenced[0;1;36m __result[0m [0;32m'_OutputIterator'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61904d8[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;33mcol:39[0m referenced[0;1;36m __comp[0m [0;32m'_Compare'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6191038[0m <[0;33mline:2642:5[0m, [0;33mline:2660:5[0m>
[0;34m    |-[0m[0;1;35mWhileStmt[0m[0;33m 0x6190e20[0m <[0;33mline:2643:7[0m, [0;33mline:2656:2[0m>
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61909f0[0m <[0;33mline:2643:14[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6190878[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61907b0[0m <[0;33mcol:23[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m[0;33m 0x58233e0[0m[0;33m 0x58238c0[0m[0;33m 0x595c660[0m[0;33m 0x595cd68[0m[0;33m 0x595d468[0m[0;33m 0x5b87020[0m[0;33m 0x5b87e40[0m[0;33m 0x5b88c60[0m[0;33m 0x5b89810[0m[0;33m 0x5c185a8[0m[0;33m 0x5df9eb8[0m
[0;34m    | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190770[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190280[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190790[0m <[0;33mcol:26[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61902f8[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator'[0m
[0;34m    | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61909b8[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x61908f0[0m <[0;33mcol:46[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5486e20[0m[0;33m 0x5669ce8[0m[0;33m 0x568df78[0m[0;33m 0x5690588[0m[0;33m 0x56af5b8[0m[0;33m 0x56afbe8[0m[0;33m 0x58233e0[0m[0;33m 0x58238c0[0m[0;33m 0x595c660[0m[0;33m 0x595cd68[0m[0;33m 0x595d468[0m[0;33m 0x5b87020[0m[0;33m 0x5b87e40[0m[0;33m 0x5b88c60[0m[0;33m 0x5b89810[0m[0;33m 0x5c185a8[0m[0;33m 0x5df9eb8[0m
[0;34m    | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61908b0[0m <[0;33mcol:37[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190370[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m    | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61908d0[0m <[0;33mcol:49[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61903e8[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator'[0m
[0;34m    | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6190e00[0m <[0;33mline:2644:2[0m, [0;33mline:2656:2[0m>
[0;34m    |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6190da0[0m <[0;33mline:2645:4[0m, [0;33mline:2654:6[0m> has_else
[0;34m    |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6190a70[0m <[0;33mline:2645:8[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190a10[0m <[0;33mcol:8[0m> [0;32m'_Compare'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61904d8[0m[0;1;36m '__comp'[0m [0;32m'_Compare'[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190a30[0m <[0;33mcol:15[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190370[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m    |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190a50[0m <[0;33mcol:25[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190280[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6190c00[0m <[0;33mline:2646:6[0m, [0;33mline:2649:6[0m>
[0;34m    |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6190ba8[0m <[0;33mline:2647:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   | | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6190ac0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2647:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190aa0[0m <[0;33mcol:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190460[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |   | | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6190b80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   | | |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6190af8[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m    |   | | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6190b68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2647:34[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190b48[0m <[0;33mcol:35[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190370[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m    |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6190be8[0m <[0;33mline:2648:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190bc8[0m <[0;33mcol:10[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190370[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m    |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6190d80[0m <[0;33mline:2651:6[0m, [0;33mline:2654:6[0m>
[0;34m    |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6190d28[0m <[0;33mline:2652:8[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m    |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6190c40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2652:8[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190c20[0m <[0;33mcol:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190460[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    |   |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6190d00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/move.h:159:30[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6190c78[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m    |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6190ce8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2652:34[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m    |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190cc8[0m <[0;33mcol:35[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190280[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6190d68[0m <[0;33mline:2653:8[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190d48[0m <[0;33mcol:10[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190280[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m    |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6190de8[0m <[0;33mline:2655:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m    |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190dc8[0m <[0;33mcol:6[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190460[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6191028[0m <[0;33mline:2657:7[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:491:62[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6190ff0[0m <[0;33mcol:39[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6190e58[0m <[0;33mcol:39[0m, [0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190ea8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2657:29[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190370[0m[0;1;36m '__first2'[0m [0;32m'_InputIterator'[0m
[0;34m        |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190ec8[0m <[0;33mcol:39[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61903e8[0m[0;1;36m '__last2'[0m [0;32m'_InputIterator'[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6190fb8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algobase.h:491:39[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6190f08[0m <[0;33mcol:39[0m, [0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'move'[0;33m 0x55d77d8[0m[0;33m 0x5476058[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190f58[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2658:23[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190280[0m[0;1;36m '__first1'[0m [0;32m'_InputIterator'[0m
[0;34m          |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190f78[0m <[0;33mcol:33[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61902f8[0m[0;1;36m '__last1'[0m [0;32m'_InputIterator'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6190f98[0m <[0;33mline:2659:9[0m> [0;32m'_OutputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6190460[0m[0;1;36m '__result'[0m [0;32m'_OutputIterator'[0m

Dumping Pont::move:
[0;1;32mCXXMethodDecl[0m[0;33m 0x61d69a0[0m parent 0x5e80ce8 prev 0x5e817b8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:36:1[0m, [0;33mline:43:1[0m> [0;33mline:36:12[0m[0;1;36m move[0m [0;32m'void (int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61d6888[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;33mcol:21[0m used[0;1;36m nx[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61d6908[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m ny[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61d6e40[0m <[0;33mline:37:1[0m, [0;33mline:43:1[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x61d6e28[0m <[0;33mline:38:5[0m, [0;33mline:42:5[0m>
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6cb8[0m <[0;33mline:38:9[0m, [0;33mcol:51[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6c20[0m <[0;33mcol:9[0m, [0;33mcol:40[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6b88[0m <[0;33mcol:9[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m    | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6af0[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61d6ad8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61d6a98[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61d6888[0m[0;1;36m 'nx'[0m [0;32m'int'[0m
[0;34m    | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x61d6ab8[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6b68[0m <[0;33mcol:20[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61d6b50[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61d6b10[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61d6888[0m[0;1;36m 'nx'[0m [0;32m'int'[0m
[0;34m    | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x61d6b30[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2000[0m
[0;34m    | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6c00[0m <[0;33mcol:34[0m, [0;33mcol:40[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m    | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61d6be8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61d6ba8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61d6908[0m[0;1;36m 'ny'[0m [0;32m'int'[0m
[0;34m    | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x61d6bc8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6c98[0m <[0;33mcol:45[0m, [0;33mcol:51[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61d6c80[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61d6c40[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61d6908[0m[0;1;36m 'ny'[0m [0;32m'int'[0m
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x61d6c60[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2000[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61d6e08[0m <[0;33mline:39:5[0m, [0;33mline:42:5[0m>
[0;34m      |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6d50[0m <[0;33mline:40:9[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x61d6ce8[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->x[0;33m 0x5e80ed8[0m
[0;34m      | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x61d6cd8[0m <[0;33mcol:9[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m this
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61d6d38[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61d6d18[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61d6888[0m[0;1;36m 'nx'[0m [0;32m'int'[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61d6de8[0m <[0;33mline:41:9[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m        |-[0m[0;1;35mMemberExpr[0m[0;33m 0x61d6d80[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ->y[0;33m 0x5e80f40[0m
[0;34m        | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x61d6d70[0m <[0;33mcol:9[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m this
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61d6dd0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61d6db0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x61d6908[0m[0;1;36m 'ny'[0m [0;32m'int'[0m

Dumping my_cmp:
[0;1;32mFunctionDecl[0m[0;33m 0x5a33dd8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:49:1[0m, [0;33mcol:37[0m> [0;33mcol:6[0m used[0;1;36m my_cmp[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5a33c88[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;33mcol:24[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5a33d00[0m <[0;33mcol:26[0m, [0;33mcol:36[0m> [0;33mcol:37[0m [0;32m'const Pont &'[0m

Dumping my_cmp:
[0;1;32mFunctionDecl[0m[0;33m 0x5a60350[0m prev 0x5a33dd8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:268:1[0m, [0;33mline:272:1[0m> [0;33mline:268:6[0m used[0;1;36m my_cmp[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5a60240[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5a602b8[0m <[0;33mcol:28[0m, [0;33mcol:40[0m> [0;33mcol:40[0m used[0;1;36m b[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5a60538[0m <[0;33mline:269:1[0m, [0;33mline:272:1[0m>
[0;34m| `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5a60500[0m <[0;33mline:271:5[0m, [0;33mcol:28[0m>
[0;34m|   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a604e0[0m <[0;33mcol:12[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m|     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5a60450[0m <[0;33mcol:12[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a60420[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5a32258[0m
[0;34m|     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a60400[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5a60240[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m|     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5a604c0[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5a60490[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x5a32258[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a60470[0m <[0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5a602b8[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x5bba9d0[0m <[0;33mline:266:4[0m, [0;33mcol:151[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x5bba9a0[0m <[0;33mcol:4[0m, [0;33mcol:151[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x5bba970[0m <[0;33mcol:4[0m, [0;33mcol:151[0m> Text="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

Dumping findmin:
[0;1;32mFunctionDecl[0m[0;33m 0x6630560[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:24:1[0m, [0;33mcol:27[0m> [0;33mcol:8[0m[0;1;36m findmin[0m [0;32m'double (bool **, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6630408[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'bool **'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6630488[0m <[0;33mcol:24[0m> [0;33mcol:27[0m [0;32m'int'[0m

Dumping findmin:
[0;1;32mFunctionDecl[0m[0;33m 0x6986690[0m prev 0x6630560 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:54:1[0m, [0;33mline:143:1[0m> [0;33mline:54:8[0m[0;1;36m findmin[0m [0;32m'double (bool **, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6986570[0m <[0;33mcol:16[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m table[0m [0;32m'bool **'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x69865f0[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;33mcol:35[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69a28b8[0m <[0;33mline:55:1[0m, [0;33mline:143:1[0m>
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6986920[0m <[0;33mline:57:5[0m, [0;33mcol:24[0m>
[0;34m| | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6986758[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m| | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69867c0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0m[0;1;32mVarDecl[0m[0;33m 0x69867f8[0m <[0;33mcol:5[0m, [0;33mcol:20[0m> [0;33mcol:16[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m| | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6986860[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6986898[0m <[0;33mcol:5[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m f[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6986ac0[0m <[0;33mline:58:5[0m, [0;33mcol:27[0m>
[0;34m| | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6986950[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;33mcol:12[0m used[0;1;36m d[0m [0;32m'double'[0m cinit
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69869d8[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69869b8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1000[0m
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6986a08[0m <[0;33mcol:5[0m, [0;33mcol:26[0m> [0;33mcol:22[0m used[0;1;36m min[0m [0;32m'double'[0m cinit
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6986a90[0m <[0;33mcol:26[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m| |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6986a70[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6986cd0[0m <[0;33mline:59:5[0m, [0;33mcol:15[0m>
[0;34m| | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6986ae8[0m <[0;33mcol:5[0m, [0;33mcol:10[0m> [0;33mcol:10[0m used[0;1;36m p1[0m [0;32m'Pont'[0m callinit
[0;34m| | | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6986b90[0m <[0;33mcol:10[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m| | |   |-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x6986b50[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x6986b70[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6986bd8[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;33mcol:13[0m used[0;1;36m p2[0m [0;32m'Pont'[0m callinit
[0;34m| |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6986c80[0m <[0;33mcol:13[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m| |     |-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x6986c40[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |     `-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x6986c60[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6986d70[0m <[0;33mline:62:5[0m, [0;33mcol:21[0m>
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6986cf8[0m <[0;33mcol:5[0m, [0;33mcol:17[0m> [0;33mcol:10[0m used[0;1;36m isUp[0m [0;32m'bool'[0m cinit
[0;34m| |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6986d60[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m| |-[0m[0;1;35mForStmt[0m[0;33m 0x6989f28[0m <[0;33mline:65:5[0m, [0;33mline:140:5[0m>
[0;34m| | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6986e28[0m <[0;33mline:65:10[0m, [0;33mcol:17[0m>
[0;34m| | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6986da0[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6986e08[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6986f08[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6986ef0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6986e40[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986da0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6986ed0[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6986ea0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6986e60[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6986eb8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6986e80[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6989f08[0m <[0;33mline:66:5[0m, [0;33mline:140:5[0m>
[0;34m| |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6989e50[0m <[0;33mline:68:9[0m, [0;33mline:136:9[0m> has_else
[0;34m| |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6986f48[0m <[0;33mline:68:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6986f28[0m <[0;33mcol:13[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986cf8[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69886e0[0m <[0;33mline:69:9[0m, [0;33mline:101:9[0m>
[0;34m| |   | | |-[0m[0;1;35mForStmt[0m[0;33m 0x6988310[0m <[0;33mline:70:13[0m, [0;33mline:94:13[0m>
[0;34m| |   | | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987068[0m <[0;33mline:70:21[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6986fb8[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m| |   | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6986fa0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6986f60[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6986f80[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987048[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987018[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6986fd8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987030[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6986ff8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69870f8[0m <[0;33mcol:35[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   | | | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x69870a8[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987088[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x69870e0[0m <[0;33mcol:40[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69870c0[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69882f0[0m <[0;33mline:71:13[0m, [0;33mline:94:13[0m>
[0;34m| |   | | |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x69882a0[0m <[0;33mline:73:17[0m, [0;33mline:92:17[0m>
[0;34m| |   | | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69872c8[0m <[0;33mline:73:21[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x69872a8[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987290[0m <[0;33mcol:21[0m, [0;33mcol:30[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x69871f8[0m <[0;33mcol:21[0m, [0;33mcol:30[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69871e0[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987148[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6986570[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   | | |   | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69871c0[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69871a8[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987168[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6987188[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987270[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987258[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987218[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6987238[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6988288[0m <[0;33mline:74:17[0m, [0;33mline:92:17[0m>
[0;34m| |   | | |   |   `-[0m[0;1;35mForStmt[0m[0;33m 0x6988250[0m <[0;33mline:75:21[0m, [0;33mline:91:21[0m>
[0;34m| |   | | |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987320[0m <[0;33mline:75:26[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69872e0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6987300[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | |   |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987398[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987380[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987340[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6987360[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 16[0m
[0;34m| |   | | |   |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x69873d8[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m| |   | | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69873b8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6988238[0m <[0;33mline:76:21[0m, [0;33mline:91:21[0m>
[0;34m| |   | | |   |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x6988220[0m <[0;33mline:77:25[0m, [0;33mline:90:25[0m>
[0;34m| |   | | |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987700[0m <[0;33mline:77:29[0m, [0;33mcol:53[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x69876e0[0m <[0;33mcol:29[0m, [0;33mcol:53[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |         |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69876c8[0m <[0;33mcol:29[0m, [0;33mcol:43[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6987568[0m <[0;33mcol:29[0m, [0;33mcol:43[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |         |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987550[0m <[0;33mcol:29[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69873f0[0m <[0;33mcol:29[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6986570[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   | | |   |         |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987530[0m <[0;33mcol:35[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |         |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69874f0[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |         |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69874c0[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987410[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   |         |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69874d8[0m <[0;33mcol:37[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         |   |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x69874a0[0m <[0;33mcol:37[0m, [0;33mcol:40[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |         |   |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987470[0m <[0;33mcol:37[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   | | |   |         |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987430[0m <[0;33mcol:37[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69859c0[0m[0;1;36m 'a'[0m [0;32m'const int [16]'[0m
[0;34m| |   | | |   |         |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987488[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         |   |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987450[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |         |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6987510[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   |         |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69876a8[0m <[0;33mcol:45[0m, [0;33mcol:52[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |         |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987668[0m <[0;33mcol:45[0m, [0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |         |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987638[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987588[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   |         |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987650[0m <[0;33mcol:47[0m, [0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6987618[0m <[0;33mcol:47[0m, [0;33mcol:50[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |         |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69875e8[0m <[0;33mcol:47[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   | | |   |         |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69875a8[0m <[0;33mcol:47[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6985ea0[0m[0;1;36m 'b'[0m [0;32m'const int [16]'[0m
[0;34m| |   | | |   |         |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987600[0m <[0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69875c8[0m <[0;33mcol:49[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |         |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6987688[0m <[0;33mcol:52[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69881f8[0m <[0;33mline:78:25[0m, [0;33mline:90:25[0m>
[0;34m| |   | | |   |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987aa0[0m <[0;33mline:79:29[0m, [0;33mcol:57[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987718[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m| |   | | |   |           | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6987a30[0m <[0;33mcol:31[0m, [0;33mcol:57[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987a18[0m <[0;33mcol:31[0m> [0;32m'double (*)(int, int, int, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |   | | |   |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69879c8[0m <[0;33mcol:31[0m> [0;32m'double (int, int, int, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6630a90[0m[0;1;36m 'distance'[0m [0;32m'double (int, int, int, int)'[0m
[0;34m| |   | | |   |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987a70[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987788[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987a88[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69877a8[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69878a8[0m <[0;33mcol:44[0m, [0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |           |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987878[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69877c8[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987890[0m <[0;33mcol:46[0m, [0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6987858[0m <[0;33mcol:46[0m, [0;33mcol:49[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |           |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987828[0m <[0;33mcol:46[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   | | |   |           |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69877e8[0m <[0;33mcol:46[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69859c0[0m[0;1;36m 'a'[0m [0;32m'const int [16]'[0m
[0;34m| |   | | |   |           |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987840[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987808[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69879a8[0m <[0;33mcol:51[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |           |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987978[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69878c8[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987990[0m <[0;33mcol:53[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6987958[0m <[0;33mcol:53[0m, [0;33mcol:56[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |           |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987928[0m <[0;33mcol:53[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   | | |   |           |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69878e8[0m <[0;33mcol:53[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6985ea0[0m[0;1;36m 'b'[0m [0;32m'const int [16]'[0m
[0;34m| |   | | |   |           |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987940[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987908[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |-[0m[0;1;35mIfStmt[0m[0;33m 0x6988050[0m <[0;33mline:80:29[0m, [0;33mline:85:29[0m>
[0;34m| |   | | |   |           | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987b30[0m <[0;33mline:80:33[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | |   |           | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987b00[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987ac0[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m| |   | | |   |           | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987b18[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987ae0[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986a08[0m[0;1;36m 'min'[0m [0;32m'double'[0m
[0;34m| |   | | |   |           | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6988018[0m <[0;33mline:81:29[0m, [0;33mline:85:29[0m>
[0;34m| |   | | |   |           |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987ba8[0m <[0;33mline:82:33[0m, [0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |           |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987b50[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986a08[0m[0;1;36m 'min'[0m [0;32m'double'[0m
[0;34m| |   | | |   |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987b90[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987b70[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m| |   | | |   |           |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6987c38[0m <[0;33mline:83:33[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |           |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6987be8[0m <[0;33mcol:33[0m, [0;33mcol:36[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x6984ca8[0m
[0;34m| |   | | |   |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987bc8[0m <[0;33mcol:33[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986ae8[0m[0;1;36m 'p1'[0m [0;32m'Pont'[0m
[0;34m| |   | | |   |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987c60[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987c18[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6987ce8[0m <[0;33mcol:45[0m, [0;33mcol:54[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |           |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6987c98[0m <[0;33mcol:45[0m, [0;33mcol:48[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x6985020[0m
[0;34m| |   | | |   |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987c78[0m <[0;33mcol:45[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986ae8[0m[0;1;36m 'p1'[0m [0;32m'Pont'[0m
[0;34m| |   | | |   |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987d10[0m <[0;33mcol:53[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987cc8[0m <[0;33mcol:53[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6987e78[0m <[0;33mline:84:33[0m, [0;33mcol:47[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |           |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6987d48[0m <[0;33mcol:33[0m, [0;33mcol:36[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x6984ca8[0m
[0;34m| |   | | |   |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987d28[0m <[0;33mcol:33[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986bd8[0m[0;1;36m 'p2'[0m [0;32m'Pont'[0m
[0;34m| |   | | |   |           |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987e58[0m <[0;33mcol:41[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |           |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987e28[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987d78[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987e40[0m <[0;33mcol:43[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6987e08[0m <[0;33mcol:43[0m, [0;33mcol:46[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |           |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987dd8[0m <[0;33mcol:43[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   | | |   |           |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987d98[0m <[0;33mcol:43[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69859c0[0m[0;1;36m 'a'[0m [0;32m'const int [16]'[0m
[0;34m| |   | | |   |           |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987df0[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987db8[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6987ff0[0m <[0;33mcol:50[0m, [0;33mcol:64[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |           |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6987ec0[0m <[0;33mcol:50[0m, [0;33mcol:53[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x6985020[0m
[0;34m| |   | | |   |           |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987ea0[0m <[0;33mcol:50[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986bd8[0m[0;1;36m 'p2'[0m [0;32m'Pont'[0m
[0;34m| |   | | |   |           |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6987fd0[0m <[0;33mcol:58[0m, [0;33mcol:63[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |           |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987fa0[0m <[0;33mcol:58[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987ef0[0m <[0;33mcol:58[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987fb8[0m <[0;33mcol:60[0m, [0;33mcol:63[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |         `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6987f80[0m <[0;33mcol:60[0m, [0;33mcol:63[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |           |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987f50[0m <[0;33mcol:60[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   | | |   |           |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987f10[0m <[0;33mcol:60[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6985ea0[0m[0;1;36m 'b'[0m [0;32m'const int [16]'[0m
[0;34m| |   | | |   |           |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6987f68[0m <[0;33mcol:62[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |           |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6987f30[0m <[0;33mcol:62[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   | | |   |           `-[0m[0;1;35mIfStmt[0m[0;33m 0x69881e0[0m <[0;33mline:86:29[0m, [0;33mline:89:29[0m>
[0;34m| |   | | |   |             |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69880d8[0m <[0;33mline:86:33[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   | | |   |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69880a8[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988068[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m| |   | | |   |             | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69880c0[0m <[0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m| |   | | |   |             |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988088[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   | | |   |             `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69881c8[0m <[0;33mline:87:29[0m, [0;33mline:89:29[0m>
[0;34m| |   | | |   |               `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69881a8[0m <[0;33mline:88:33[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |                 |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69880f8[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986da0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   | | |   |                 `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988188[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |   | | |   |                   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988158[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |                   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988118[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | |   |                   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988170[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |                     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988138[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x69882d8[0m <[0;33mline:93:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69882b8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986da0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   | | |-[0m[0;1;35mIfStmt[0m[0;33m 0x6988510[0m <[0;33mline:97:13[0m, [0;33mline:98:21[0m>
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988490[0m <[0;33mline:97:17[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69883a0[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988388[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988348[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988368[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988470[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m| |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988458[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69883c0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988438[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988420[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69883e0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988400[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69884f0[0m <[0;33mline:98:17[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69884b0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69884d0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | `-[0m[0;1;35mIfStmt[0m[0;33m 0x69886c8[0m <[0;33mline:99:13[0m, [0;33mline:100:28[0m>
[0;34m| |   | |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988598[0m <[0;33mline:99:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988568[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988528[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988580[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988548[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69886a8[0m <[0;33mline:100:17[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   | |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988650[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69885b8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988630[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988618[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69885d8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69885f8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6988690[0m <[0;33mcol:27[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988670[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6989e28[0m <[0;33mline:105:9[0m, [0;33mline:136:9[0m>
[0;34m| |   |   |-[0m[0;1;35mForStmt[0m[0;33m 0x6989a58[0m <[0;33mline:106:13[0m, [0;33mline:129:13[0m>
[0;34m| |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988810[0m <[0;33mline:106:21[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988760[0m <[0;33mcol:21[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m| |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988748[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988708[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988728[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69887f0[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69887c0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988780[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69887d8[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69887a0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69888a0[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   |   | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6988850[0m <[0;33mcol:37[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988830[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6988888[0m <[0;33mcol:43[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988868[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6989a38[0m <[0;33mline:107:13[0m, [0;33mline:129:13[0m>
[0;34m| |   |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x69899e8[0m <[0;33mline:108:17[0m, [0;33mline:127:17[0m>
[0;34m| |   |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988a40[0m <[0;33mline:108:21[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6988a20[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988a08[0m <[0;33mcol:21[0m, [0;33mcol:30[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6988970[0m <[0;33mcol:21[0m, [0;33mcol:30[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988958[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69888c0[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6986570[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   |   |   | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988938[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988920[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69888e0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988900[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69889e8[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69889d0[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988990[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69889b0[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69899d0[0m <[0;33mline:109:17[0m, [0;33mline:127:17[0m>
[0;34m| |   |   |   |   `-[0m[0;1;35mForStmt[0m[0;33m 0x6989998[0m <[0;33mline:110:21[0m, [0;33mline:126:21[0m>
[0;34m| |   |   |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988a98[0m <[0;33mline:110:26[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988a58[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988a78[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   |   |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988b10[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988af8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988ab8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988ad8[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 16[0m
[0;34m| |   |   |   |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6988b50[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m| |   |   |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988b30[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6989980[0m <[0;33mline:111:21[0m, [0;33mline:126:21[0m>
[0;34m| |   |   |   |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x6989968[0m <[0;33mline:112:25[0m, [0;33mline:125:25[0m>
[0;34m| |   |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988e78[0m <[0;33mline:112:29[0m, [0;33mcol:53[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6988e58[0m <[0;33mcol:29[0m, [0;33mcol:53[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |         |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988e40[0m <[0;33mcol:29[0m, [0;33mcol:43[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6988ce0[0m <[0;33mcol:29[0m, [0;33mcol:43[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |         |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988cc8[0m <[0;33mcol:29[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988b68[0m <[0;33mcol:29[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6986570[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   |   |   |         |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988ca8[0m <[0;33mcol:35[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |         |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988c68[0m <[0;33mcol:35[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |         |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988c38[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988b88[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   |         |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988c50[0m <[0;33mcol:37[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         |   |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6988c18[0m <[0;33mcol:37[0m, [0;33mcol:40[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |         |   |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988be8[0m <[0;33mcol:37[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   |   |   |         |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988ba8[0m <[0;33mcol:37[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69859c0[0m[0;1;36m 'a'[0m [0;32m'const int [16]'[0m
[0;34m| |   |   |   |         |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988c00[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         |   |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988bc8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |         |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988c88[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   |         |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988e20[0m <[0;33mcol:45[0m, [0;33mcol:52[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |         |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6988de0[0m <[0;33mcol:45[0m, [0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |         |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988db0[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988d00[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   |         |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988dc8[0m <[0;33mcol:47[0m, [0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6988d90[0m <[0;33mcol:47[0m, [0;33mcol:50[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |         |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988d60[0m <[0;33mcol:47[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   |   |   |         |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988d20[0m <[0;33mcol:47[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6985ea0[0m[0;1;36m 'b'[0m [0;32m'const int [16]'[0m
[0;34m| |   |   |   |         |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988d78[0m <[0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988d40[0m <[0;33mcol:49[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |         |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6988e00[0m <[0;33mcol:52[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6989940[0m <[0;33mline:113:25[0m, [0;33mline:125:25[0m>
[0;34m| |   |   |   |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69891e8[0m <[0;33mline:114:29[0m, [0;33mcol:57[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988e90[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m| |   |   |   |           | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6989178[0m <[0;33mcol:31[0m, [0;33mcol:57[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989160[0m <[0;33mcol:31[0m> [0;32m'double (*)(int, int, int, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |   |   |   |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989140[0m <[0;33mcol:31[0m> [0;32m'double (int, int, int, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6630a90[0m[0;1;36m 'distance'[0m [0;32m'double (int, int, int, int)'[0m
[0;34m| |   |   |   |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69891b8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988f00[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69891d0[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988f20[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989020[0m <[0;33mcol:44[0m, [0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |           |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988ff0[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988f40[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989008[0m <[0;33mcol:46[0m, [0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6988fd0[0m <[0;33mcol:46[0m, [0;33mcol:49[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |           |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988fa0[0m <[0;33mcol:46[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   |   |   |           |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988f60[0m <[0;33mcol:46[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69859c0[0m[0;1;36m 'a'[0m [0;32m'const int [16]'[0m
[0;34m| |   |   |   |           |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6988fb8[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6988f80[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989120[0m <[0;33mcol:51[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |           |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69890f0[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989040[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989108[0m <[0;33mcol:53[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x69890d0[0m <[0;33mcol:53[0m, [0;33mcol:56[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |           |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69890a0[0m <[0;33mcol:53[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   |   |   |           |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989060[0m <[0;33mcol:53[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6985ea0[0m[0;1;36m 'b'[0m [0;32m'const int [16]'[0m
[0;34m| |   |   |   |           |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69890b8[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989080[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |-[0m[0;1;35mIfStmt[0m[0;33m 0x6989798[0m <[0;33mline:115:29[0m, [0;33mline:120:29[0m>
[0;34m| |   |   |   |           | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989278[0m <[0;33mline:115:33[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   |   |           | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989248[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989208[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m| |   |   |   |           | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989260[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989228[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986a08[0m[0;1;36m 'min'[0m [0;32m'double'[0m
[0;34m| |   |   |   |           | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6989760[0m <[0;33mline:116:29[0m, [0;33mline:120:29[0m>
[0;34m| |   |   |   |           |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69892f0[0m <[0;33mline:117:33[0m, [0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |           |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989298[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986a08[0m[0;1;36m 'min'[0m [0;32m'double'[0m
[0;34m| |   |   |   |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69892d8[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69892b8[0m <[0;33mcol:37[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m| |   |   |   |           |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6989380[0m <[0;33mline:118:33[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |           |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6989330[0m <[0;33mcol:33[0m, [0;33mcol:36[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x6984ca8[0m
[0;34m| |   |   |   |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989310[0m <[0;33mcol:33[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986ae8[0m[0;1;36m 'p1'[0m [0;32m'Pont'[0m
[0;34m| |   |   |   |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69893a8[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989360[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6989430[0m <[0;33mcol:45[0m, [0;33mcol:54[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |           |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x69893e0[0m <[0;33mcol:45[0m, [0;33mcol:48[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x6985020[0m
[0;34m| |   |   |   |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69893c0[0m <[0;33mcol:45[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986ae8[0m[0;1;36m 'p1'[0m [0;32m'Pont'[0m
[0;34m| |   |   |   |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989458[0m <[0;33mcol:53[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989410[0m <[0;33mcol:53[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x69895c0[0m <[0;33mline:119:33[0m, [0;33mcol:47[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |           |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6989490[0m <[0;33mcol:33[0m, [0;33mcol:36[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x6984ca8[0m
[0;34m| |   |   |   |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989470[0m <[0;33mcol:33[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986ae8[0m[0;1;36m 'p1'[0m [0;32m'Pont'[0m
[0;34m| |   |   |   |           |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69895a0[0m <[0;33mcol:41[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |           |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989570[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69894c0[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989588[0m <[0;33mcol:43[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6989550[0m <[0;33mcol:43[0m, [0;33mcol:46[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |           |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989520[0m <[0;33mcol:43[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   |   |   |           |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69894e0[0m <[0;33mcol:43[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69859c0[0m[0;1;36m 'a'[0m [0;32m'const int [16]'[0m
[0;34m| |   |   |   |           |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989538[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989500[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6989738[0m <[0;33mcol:50[0m, [0;33mcol:64[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |           |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6989608[0m <[0;33mcol:50[0m, [0;33mcol:53[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x6985020[0m
[0;34m| |   |   |   |           |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69895e8[0m <[0;33mcol:50[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986bd8[0m[0;1;36m 'p2'[0m [0;32m'Pont'[0m
[0;34m| |   |   |   |           |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989718[0m <[0;33mcol:58[0m, [0;33mcol:63[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |           |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69896e8[0m <[0;33mcol:58[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989638[0m <[0;33mcol:58[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989700[0m <[0;33mcol:60[0m, [0;33mcol:63[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |         `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x69896c8[0m <[0;33mcol:60[0m, [0;33mcol:63[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |           |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989698[0m <[0;33mcol:60[0m> [0;32m'const int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| |   |   |   |           |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989658[0m <[0;33mcol:60[0m> [0;32m'const int [16]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6985ea0[0m[0;1;36m 'b'[0m [0;32m'const int [16]'[0m
[0;34m| |   |   |   |           |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69896b0[0m <[0;33mcol:62[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |           |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989678[0m <[0;33mcol:62[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986898[0m[0;1;36m 'f'[0m [0;32m'int'[0m
[0;34m| |   |   |   |           `-[0m[0;1;35mIfStmt[0m[0;33m 0x6989928[0m <[0;33mline:121:29[0m, [0;33mline:124:29[0m>
[0;34m| |   |   |   |             |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989820[0m <[0;33mline:121:33[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   |   |   |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69897f0[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69897b0[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m| |   |   |   |             | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989808[0m <[0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m| |   |   |   |             |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69897d0[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   |   |   |             `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6989910[0m <[0;33mline:122:29[0m, [0;33mline:124:29[0m>
[0;34m| |   |   |   |               `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69898f0[0m <[0;33mline:123:33[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |                 |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989840[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986da0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   |   |   |                 `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69898d0[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |   |   |   |                   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69898a0[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |                   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989860[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   |   |                   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69898b8[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |                     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989880[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6989a20[0m <[0;33mline:128:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989a00[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986da0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6989c58[0m <[0;33mline:132:13[0m, [0;33mline:133:21[0m>
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989bd8[0m <[0;33mline:132:17[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989ae8[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989ad0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989a90[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6989ab0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989bb8[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m| |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989ba0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989b08[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989b80[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989b68[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989b28[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6989b48[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989c38[0m <[0;33mline:133:17[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989bf8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6989c18[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6989e10[0m <[0;33mline:134:13[0m, [0;33mline:135:30[0m>
[0;34m| |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989ce0[0m <[0;33mline:134:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989cb0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989c70[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989cc8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989c90[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69865f0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989df0[0m <[0;33mline:135:17[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989d98[0m <[0;33mcol:17[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989d00[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |       | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989d78[0m <[0;33mcol:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989d60[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989d20[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69867f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |       |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6989d40[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6989dd8[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989db8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986758[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6989ee8[0m <[0;33mline:139:9[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989e78[0m <[0;33mcol:9[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986cf8[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6989ed0[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m| |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6989eb8[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989e98[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986cf8[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x69a2808[0m <[0;33mline:141:5[0m, [0;33mcol:120[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a27f0[0m <[0;33mcol:117[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69a27d0[0m <[0;33mcol:117[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64b0f98[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m| | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x69a1e58[0m <[0;33mcol:5[0m, [0;33mcol:113[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a1e40[0m <[0;33mcol:110[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69a1e20[0m <[0;33mcol:110[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64ba538[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x69a1070[0m <[0;33mcol:5[0m, [0;33mcol:108[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a1058[0m <[0;33mcol:97[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69a1038[0m <[0;33mcol:97[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64b1ef8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m| | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x69a0218[0m <[0;33mcol:5[0m, [0;33mcol:93[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a0200[0m <[0;33mcol:90[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69a01e0[0m <[0;33mcol:90[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64ba538[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x699f430[0m <[0;33mcol:5[0m, [0;33mcol:88[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699f418[0m <[0;33mcol:77[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x699f3f8[0m <[0;33mcol:77[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64b1ef8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m| | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x699e5d8[0m <[0;33mcol:5[0m, [0;33mcol:73[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699e5c0[0m <[0;33mcol:70[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x699e5a0[0m <[0;33mcol:70[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64ba538[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x699d7e8[0m <[0;33mcol:5[0m, [0;33mcol:66[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699d7d0[0m <[0;33mcol:63[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x699d7b0[0m <[0;33mcol:63[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64ba538[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x699c9f8[0m <[0;33mcol:5[0m, [0;33mcol:60[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699c9e0[0m <[0;33mcol:57[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x699c9c0[0m <[0;33mcol:57[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64ba538[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x699adb0[0m <[0;33mcol:5[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699ad98[0m <[0;33mcol:44[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x699ad78[0m <[0;33mcol:44[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64b1ef8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m| | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6999f58[0m <[0;33mcol:5[0m, [0;33mcol:40[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6999f40[0m <[0;33mcol:37[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6999f20[0m <[0;33mcol:37[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64ba538[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6999170[0m <[0;33mcol:5[0m, [0;33mcol:35[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6999158[0m <[0;33mcol:24[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69990d8[0m <[0;33mcol:24[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64b1ef8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m| | | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6997440[0m <[0;33mcol:5[0m, [0;33mcol:20[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6997428[0m <[0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69973b0[0m <[0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64ba538[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x698a980[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x698a968[0m <[0;33mcol:10[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x698a8f0[0m <[0;33mcol:10[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64b0f98[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m| | | | | | | | | | | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6989f60[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6554140[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m| | | | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x698a8d8[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x698a8b0[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64b5678[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6493198[0m[0;1;36m 'endl'[0m)
[0;34m| | | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6997398[0m <[0;33mcol:20[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x698a9b8[0m <[0;33mcol:20[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "("[0m
[0;34m| | | | | | | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x69974c8[0m <[0;33mcol:27[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | | | | | | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6997498[0m <[0;33mcol:27[0m, [0;33mcol:30[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x69848f8[0m
[0;34m| | | | | | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69974e8[0m <[0;33mcol:27[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m| | | | | | | | | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6997478[0m <[0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986ae8[0m[0;1;36m 'p1'[0m [0;32m'Pont'[0m
[0;34m| | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6999f08[0m <[0;33mcol:40[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x69991a8[0m <[0;33mcol:40[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ","[0m
[0;34m| | | | | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6999fe0[0m <[0;33mcol:47[0m, [0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | | | | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6999fb0[0m <[0;33mcol:47[0m, [0;33mcol:50[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x6984a90[0m
[0;34m| | | | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699a000[0m <[0;33mcol:47[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m| | | | | | | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6999f90[0m <[0;33mcol:47[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986ae8[0m[0;1;36m 'p1'[0m [0;32m'Pont'[0m
[0;34m| | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699c9a8[0m <[0;33mcol:60[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x699ade8[0m <[0;33mcol:60[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ")"[0m
[0;34m| | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699d798[0m <[0;33mcol:66[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x699ca30[0m <[0;33mcol:66[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "&"[0m
[0;34m| | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699e588[0m <[0;33mcol:73[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x699d820[0m <[0;33mcol:73[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "("[0m
[0;34m| | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x699e660[0m <[0;33mcol:80[0m, [0;33mcol:88[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x699e630[0m <[0;33mcol:80[0m, [0;33mcol:83[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x69848f8[0m
[0;34m| | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x699e680[0m <[0;33mcol:80[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m| | | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x699e610[0m <[0;33mcol:80[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986bd8[0m[0;1;36m 'p2'[0m [0;32m'Pont'[0m
[0;34m| | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a01c8[0m <[0;33mcol:93[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x699f468[0m <[0;33mcol:93[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ","[0m
[0;34m| | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x69a02a0[0m <[0;33mcol:100[0m, [0;33mcol:108[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x69a0270[0m <[0;33mcol:100[0m, [0;33mcol:103[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x6984a90[0m
[0;34m| | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a02c0[0m <[0;33mcol:100[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m| | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69a0250[0m <[0;33mcol:100[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986bd8[0m[0;1;36m 'p2'[0m [0;32m'Pont'[0m
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a1e08[0m <[0;33mcol:113[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x69a10a8[0m <[0;33mcol:113[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ")"[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a27b8[0m <[0;33mcol:120[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69a2790[0m <[0;33mcol:120[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64b5678[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6493198[0m[0;1;36m 'endl'[0m)
[0;34m| `-[0m[0;1;35mReturnStmt[0m[0;33m 0x69a2878[0m <[0;33mline:142:5[0m, [0;33mcol:12[0m>
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69a2860[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69a2840[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6986950[0m[0;1;36m 'd'[0m [0;32m'double'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x6b0ffc0[0m <[0;33mline:53:4[0m, [0;33mcol:139[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x6b0ff90[0m <[0;33mcol:4[0m, [0;33mcol:139[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x6b0ff60[0m <[0;33mcol:4[0m, [0;33mcol:139[0m> Text="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

Dumping findmax:
[0;1;32mFunctionDecl[0m[0;33m 0x6f92808[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:25:1[0m, [0;33mcol:27[0m> [0;33mcol:8[0m[0;1;36m findmax[0m [0;32m'double (bool **, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6f926e8[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'bool **'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6f92768[0m <[0;33mcol:24[0m> [0;33mcol:27[0m [0;32m'int'[0m

Dumping findmax:
[0;1;32mFunctionDecl[0m[0;33m 0x7304fb0[0m prev 0x6f92808 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:148:1[0m, [0;33mline:252:1[0m> [0;33mline:148:8[0m[0;1;36m findmax[0m [0;32m'double (bool **, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7304e90[0m <[0;33mcol:16[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m table[0m [0;32m'bool **'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7304f10[0m <[0;33mcol:30[0m, [0;33mcol:34[0m> [0;33mcol:34[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7314568[0m <[0;33mline:149:1[0m, [0;33mline:252:1[0m>
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7305258[0m <[0;33mline:150:5[0m, [0;33mcol:13[0m>
[0;34m| | |-[0m[0;1;32mVarDecl[0m[0;33m 0x7305070[0m <[0;33mcol:5[0m, [0;33mcol:10[0m> [0;33mcol:10[0m used[0;1;36m a[0m [0;32m'Pont'[0m callinit
[0;34m| | | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7305118[0m <[0;33mcol:10[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m| | |   |-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x73050d8[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x73050f8[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7305160[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m b[0m [0;32m'Pont'[0m callinit
[0;34m| |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7305208[0m <[0;33mcol:12[0m> [0;32m'Pont'[0m[0;36m[0m[0;36m[0m [0;32m'void (int, int)'[0m
[0;34m| |     |-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x73051c8[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |     `-[0m[0;1;35mCXXDefaultArgExpr[0m[0;33m 0x73051e8[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x73053c8[0m <[0;33mline:153:5[0m, [0;33mcol:22[0m>
[0;34m| | |-[0m[0;1;32mVarDecl[0m[0;33m 0x7305288[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m| | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73052f0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7305328[0m <[0;33mcol:5[0m, [0;33mcol:20[0m> [0;33mcol:16[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305390[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7305468[0m <[0;33mline:155:5[0m, [0;33mcol:21[0m>
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x73053f0[0m <[0;33mcol:5[0m, [0;33mcol:17[0m> [0;33mcol:10[0m used[0;1;36m isUp[0m [0;32m'bool'[0m cinit
[0;34m| |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x7305458[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m| |-[0m[0;1;35mForStmt[0m[0;33m 0x7306b50[0m <[0;33mline:157:5[0m, [0;33mline:198:5[0m>
[0;34m| | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7305520[0m <[0;33mline:157:10[0m, [0;33mcol:17[0m>
[0;34m| | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7305498[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305500[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305600[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73055e8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305538[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305498[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73055c8[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305598[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305558[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73055b0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305578[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7306b30[0m <[0;33mline:158:5[0m, [0;33mline:198:5[0m>
[0;34m| |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x7306a78[0m <[0;33mline:159:9[0m, [0;33mline:195:9[0m> has_else
[0;34m| |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305640[0m <[0;33mline:159:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305620[0m <[0;33mcol:13[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x73053f0[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7306040[0m <[0;33mline:160:9[0m, [0;33mline:176:9[0m>
[0;34m| |   | | |-[0m[0;1;35mForStmt[0m[0;33m 0x7305c70[0m <[0;33mline:161:13[0m, [0;33mline:170:13[0m>
[0;34m| |   | | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305760[0m <[0;33mline:161:21[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73056b0[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m| |   | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305698[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305658[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305678[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305740[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305710[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73056d0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305728[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73056f0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73057f0[0m <[0;33mcol:35[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   | | | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x73057a0[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305780[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x73057d8[0m <[0;33mcol:40[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73057b8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7305c50[0m <[0;33mline:162:13[0m, [0;33mline:170:13[0m>
[0;34m| |   | | |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x7305c00[0m <[0;33mline:163:17[0m, [0;33mline:168:17[0m>
[0;34m| |   | | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305990[0m <[0;33mline:163:21[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x7305970[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305958[0m <[0;33mcol:21[0m, [0;33mcol:30[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x73058c0[0m <[0;33mcol:21[0m, [0;33mcol:30[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73058a8[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305810[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304e90[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   | | |   | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305888[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305870[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305830[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305850[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305938[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305920[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73058e0[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305900[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7305bd8[0m <[0;33mline:164:17[0m, [0;33mline:168:17[0m>
[0;34m| |   | | |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7305a18[0m <[0;33mline:165:21[0m, [0;33mcol:29[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x73059c8[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x72e70b8[0m
[0;34m| |   | | |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73059a8[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m| |   | | |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305a40[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73059f8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7305ac8[0m <[0;33mline:166:21[0m, [0;33mcol:29[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7305a78[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x72e7430[0m
[0;34m| |   | | |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305a58[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m| |   | | |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305af0[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305aa8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305bb8[0m <[0;33mline:167:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305b08[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305498[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   | | |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305b98[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |   | | |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305b68[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305b28[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305b80[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305b48[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7305c38[0m <[0;33mline:169:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305c18[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305498[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   | | |-[0m[0;1;35mIfStmt[0m[0;33m 0x7305e70[0m <[0;33mline:172:13[0m, [0;33mline:173:21[0m>
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305df0[0m <[0;33mline:172:17[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305d00[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305ce8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305ca8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305cc8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305dd0[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m| |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305db8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305d20[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305d98[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305d80[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305d40[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305d60[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305e50[0m <[0;33mline:173:17[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305e10[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305e30[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | `-[0m[0;1;35mIfStmt[0m[0;33m 0x7306028[0m <[0;33mline:174:13[0m, [0;33mline:175:28[0m>
[0;34m| |   | |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305ef8[0m <[0;33mline:174:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305ec8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305e88[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305ee0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305ea8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306008[0m <[0;33mline:175:17[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   | |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305fb0[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305f18[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7305f90[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7305f78[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305f38[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7305f58[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7305ff0[0m <[0;33mcol:27[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7305fd0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7306a50[0m <[0;33mline:179:9[0m, [0;33mline:195:9[0m>
[0;34m| |   |   |-[0m[0;1;35mForStmt[0m[0;33m 0x7306680[0m <[0;33mline:180:13[0m, [0;33mline:189:13[0m>
[0;34m| |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306170[0m <[0;33mline:180:21[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73060c0[0m <[0;33mcol:21[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m| |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73060a8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306068[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306088[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306150[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306120[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73060e0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306138[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306100[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306200[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   |   | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x73061b0[0m <[0;33mcol:37[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306190[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x73061e8[0m <[0;33mcol:43[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73061c8[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7306660[0m <[0;33mline:181:13[0m, [0;33mline:189:13[0m>
[0;34m| |   |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x7306610[0m <[0;33mline:182:17[0m, [0;33mline:187:17[0m>
[0;34m| |   |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73063a0[0m <[0;33mline:182:21[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x7306380[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306368[0m <[0;33mcol:21[0m, [0;33mcol:30[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x73062d0[0m <[0;33mcol:21[0m, [0;33mcol:30[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73062b8[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306220[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304e90[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   |   |   | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306298[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306280[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306240[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306260[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306348[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306330[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73062f0[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306310[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73065e8[0m <[0;33mline:183:17[0m, [0;33mline:187:17[0m>
[0;34m| |   |   |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7306428[0m <[0;33mline:184:21[0m, [0;33mcol:29[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x73063d8[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x72e70b8[0m
[0;34m| |   |   |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73063b8[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m| |   |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306450[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306408[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73064d8[0m <[0;33mline:185:21[0m, [0;33mcol:29[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7306488[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x72e7430[0m
[0;34m| |   |   |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306468[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m| |   |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306500[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73064b8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73065c8[0m <[0;33mline:186:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306518[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305498[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73065a8[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |   |   |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306578[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306538[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306590[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306558[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7306648[0m <[0;33mline:188:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306628[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305498[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x7306880[0m <[0;33mline:191:13[0m, [0;33mline:192:21[0m>
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306800[0m <[0;33mline:191:17[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306710[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73066f8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73066b8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73066d8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73067e0[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m| |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73067c8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306730[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73067a8[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306790[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306750[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306770[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306860[0m <[0;33mline:192:17[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306820[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306840[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x7306a38[0m <[0;33mline:193:13[0m, [0;33mline:194:30[0m>
[0;34m| |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306908[0m <[0;33mline:193:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73068d8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306898[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73068f0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73068b8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306a18[0m <[0;33mline:194:17[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73069c0[0m <[0;33mcol:17[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306928[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |       | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73069a0[0m <[0;33mcol:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306988[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306948[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |       |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306968[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7306a00[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73069e0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306b10[0m <[0;33mline:197:9[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306aa0[0m <[0;33mcol:9[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x73053f0[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7306af8[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m| |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306ae0[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306ac0[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x73053f0[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306c48[0m <[0;33mline:202:5[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m ','
[0;34m| | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306bc8[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306b88[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306ba8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306c28[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306be8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306c08[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306c98[0m <[0;33mline:204:5[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306c68[0m <[0;33mcol:5[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x73053f0[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x7306c88[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m| |-[0m[0;1;35mForStmt[0m[0;33m 0x7308688[0m <[0;33mline:206:5[0m, [0;33mline:247:5[0m>
[0;34m| | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7306d58[0m <[0;33mline:206:10[0m, [0;33mcol:17[0m>
[0;34m| | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7306cd0[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306d38[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306e38[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306e20[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306d70[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7306cd0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306e00[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306dd0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306d90[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306de8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306db0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7308668[0m <[0;33mline:207:5[0m, [0;33mline:247:5[0m>
[0;34m| |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x73085b0[0m <[0;33mline:208:9[0m, [0;33mline:244:9[0m> has_else
[0;34m| |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306e78[0m <[0;33mline:208:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306e58[0m <[0;33mcol:13[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x73053f0[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73079f8[0m <[0;33mline:209:9[0m, [0;33mline:225:9[0m>
[0;34m| |   | | |-[0m[0;1;35mForStmt[0m[0;33m 0x7307628[0m <[0;33mline:210:13[0m, [0;33mline:219:13[0m>
[0;34m| |   | | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306f98[0m <[0;33mline:210:21[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306ee8[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m| |   | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306ed0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306e90[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7306eb0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7306f78[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306f48[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306f08[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7306f60[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306f28[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307028[0m <[0;33mcol:35[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   | | | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7306fd8[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306fb8[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7307010[0m <[0;33mcol:40[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7306ff0[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7307608[0m <[0;33mline:211:13[0m, [0;33mline:219:13[0m>
[0;34m| |   | | |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x73075b8[0m <[0;33mline:212:17[0m, [0;33mline:217:17[0m>
[0;34m| |   | | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307248[0m <[0;33mline:212:21[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x7307228[0m <[0;33mcol:21[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307210[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x7307138[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307120[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307048[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304e90[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   | | |   | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307100[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:212:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   | |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73070c0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:212:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | |   | |   |     | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307068[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   | | |   | |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73070a8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:212:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307088[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73070e0[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73071f0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:212:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   | |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73071b0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:212:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | |   | |     | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307158[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   | | |   | |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307198[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:212:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307178[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73071d0[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7307590[0m <[0;33mline:213:17[0m, [0;33mline:217:17[0m>
[0;34m| |   | | |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7307368[0m <[0;33mline:214:21[0m, [0;33mcol:36[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7307280[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x72e70b8[0m
[0;34m| |   | | |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307260[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m| |   | | |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307348[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:214:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307308[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:214:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | |   |   |   | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73072b0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   | | |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73072f0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:214:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73072d0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307328[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7307498[0m <[0;33mline:215:21[0m, [0;33mcol:36[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x73073b0[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x72e7430[0m
[0;34m| |   | | |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307390[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m| |   | | |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307478[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:215:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307438[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:215:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | |   |   |   | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73073e0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   | | |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307420[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:215:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307400[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307458[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307570[0m <[0;33mline:216:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73074c0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7306cd0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   | | |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307550[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |   | | |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307520[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73074e0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307538[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307500[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x73075f0[0m <[0;33mline:218:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73075d0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7306cd0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   | | |-[0m[0;1;35mIfStmt[0m[0;33m 0x7307828[0m <[0;33mline:221:13[0m, [0;33mline:222:21[0m>
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73077a8[0m <[0;33mline:221:17[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73076b8[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73076a0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307660[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307680[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307788[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m| |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307770[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73076d8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307750[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307738[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73076f8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307718[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307808[0m <[0;33mline:222:17[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73077c8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73077e8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | `-[0m[0;1;35mIfStmt[0m[0;33m 0x73079e0[0m <[0;33mline:223:13[0m, [0;33mline:224:28[0m>
[0;34m| |   | |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73078b0[0m <[0;33mline:223:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307880[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307840[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307898[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307860[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73079c0[0m <[0;33mline:224:17[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   | |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307968[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73078d0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307948[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307930[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73078f0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307910[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x73079a8[0m <[0;33mcol:27[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307988[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7308588[0m <[0;33mline:228:9[0m, [0;33mline:244:9[0m>
[0;34m| |   |   |-[0m[0;1;35mForStmt[0m[0;33m 0x73081b8[0m <[0;33mline:229:13[0m, [0;33mline:238:13[0m>
[0;34m| |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307b28[0m <[0;33mline:229:21[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307a78[0m <[0;33mcol:21[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m| |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307a60[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307a20[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307a40[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307b08[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307ad8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307a98[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307af0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307ab8[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307bb8[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   |   | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7307b68[0m <[0;33mcol:37[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307b48[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7307ba0[0m <[0;33mcol:43[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307b80[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7308198[0m <[0;33mline:230:13[0m, [0;33mline:238:13[0m>
[0;34m| |   |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x7308148[0m <[0;33mline:231:17[0m, [0;33mline:236:17[0m>
[0;34m| |   |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307dd8[0m <[0;33mline:231:21[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x7307db8[0m <[0;33mcol:21[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307da0[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x7307cc8[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307cb0[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307bd8[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304e90[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   |   |   | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307c90[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:231:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   | |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307c50[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:231:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   |   | |   |     | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307bf8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   |   |   | |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307c38[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:231:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307c18[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307c70[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307d80[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:231:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   | |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307d40[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:231:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   |   | |     | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307ce8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   |   |   | |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307d28[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:231:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307d08[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307d60[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7308120[0m <[0;33mline:232:17[0m, [0;33mline:236:17[0m>
[0;34m| |   |   |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7307ef8[0m <[0;33mline:233:21[0m, [0;33mcol:36[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7307e10[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x72e70b8[0m
[0;34m| |   |   |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307df0[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m| |   |   |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307ed8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:233:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307e98[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:233:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   |   |   |   | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307e40[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   |   |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307e80[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:233:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307e60[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307eb8[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7308028[0m <[0;33mline:234:21[0m, [0;33mcol:36[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7307f40[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x72e7430[0m
[0;34m| |   |   |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307f20[0m <[0;33mcol:21[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m| |   |   |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308008[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:234:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7307fc8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:234:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   |   |   |   | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307f70[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   |   |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7307fb0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:234:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7307f90[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7307fe8[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308100[0m <[0;33mline:235:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308050[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7306cd0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73080e0[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |   |   |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73080b0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308070[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73080c8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308090[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7308180[0m <[0;33mline:237:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308160[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7306cd0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x73083b8[0m <[0;33mline:240:13[0m, [0;33mline:241:21[0m>
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308338[0m <[0;33mline:240:17[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308248[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7308230[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73081f0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7308210[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308318[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m| |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7308300[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308268[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73082e0[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73082c8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308288[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73082a8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308398[0m <[0;33mline:241:17[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308358[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7308378[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x7308570[0m <[0;33mline:242:13[0m, [0;33mline:243:30[0m>
[0;34m| |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308440[0m <[0;33mline:242:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7308410[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73083d0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7308428[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73083f0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x7304f10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308550[0m <[0;33mline:243:17[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73084f8[0m <[0;33mcol:17[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308460[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |       | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73084d8[0m <[0;33mcol:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73084c0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308480[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305328[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |       |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x73084a0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7308538[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308518[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305288[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7308648[0m <[0;33mline:246:9[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73085d8[0m <[0;33mcol:9[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x73053f0[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7308630[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m| |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7308618[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73085f8[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x73053f0[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x73134f8[0m <[0;33mline:249:5[0m, [0;33mcol:116[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73134e0[0m <[0;33mcol:113[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73134c0[0m <[0;33mcol:113[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6e137a8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m| | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7312b48[0m <[0;33mcol:5[0m, [0;33mcol:109[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7312b30[0m <[0;33mcol:106[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7312b10[0m <[0;33mcol:106[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e1d368[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7311d60[0m <[0;33mcol:5[0m, [0;33mcol:104[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7311d48[0m <[0;33mcol:94[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7311d28[0m <[0;33mcol:94[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6e14708[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m| | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7310f08[0m <[0;33mcol:5[0m, [0;33mcol:90[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7310ef0[0m <[0;33mcol:87[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7310ed0[0m <[0;33mcol:87[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e1d368[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7310120[0m <[0;33mcol:5[0m, [0;33mcol:85[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7310108[0m <[0;33mcol:75[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73100e8[0m <[0;33mcol:75[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6e14708[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m| | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x730f2c8[0m <[0;33mcol:5[0m, [0;33mcol:71[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730f2b0[0m <[0;33mcol:68[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730f290[0m <[0;33mcol:68[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e1d368[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x730e4d8[0m <[0;33mcol:5[0m, [0;33mcol:64[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730e4c0[0m <[0;33mcol:61[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730e4a0[0m <[0;33mcol:61[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e1d368[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x730d6c8[0m <[0;33mcol:5[0m, [0;33mcol:58[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730d6b0[0m <[0;33mcol:55[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730d690[0m <[0;33mcol:55[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e1d368[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x730c8e0[0m <[0;33mcol:5[0m, [0;33mcol:53[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730c8c8[0m <[0;33mcol:43[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730c8a8[0m <[0;33mcol:43[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6e14708[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m| | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x730ba88[0m <[0;33mcol:5[0m, [0;33mcol:39[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730ba70[0m <[0;33mcol:36[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730ba50[0m <[0;33mcol:36[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e1d368[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x730aca0[0m <[0;33mcol:5[0m, [0;33mcol:34[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730ac88[0m <[0;33mcol:24[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730ac68[0m <[0;33mcol:24[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6e14708[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m| | | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7309e48[0m <[0;33mcol:5[0m, [0;33mcol:20[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7309e30[0m <[0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7309e10[0m <[0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e1d368[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m| | | | | | | | | | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7309058[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| | | | | | | | | | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7309040[0m <[0;33mcol:10[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7309020[0m <[0;33mcol:10[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6e137a8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m| | | | | | | | | | | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73086c0[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb6340[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m| | | | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7309008[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| | | | | | | | | | | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7308fe0[0m <[0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e17e88[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6df59a8[0m[0;1;36m 'endl'[0m)
[0;34m| | | | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7309df8[0m <[0;33mcol:20[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7309090[0m <[0;33mcol:20[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "("[0m
[0;34m| | | | | | | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7309ed0[0m <[0;33mcol:27[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | | | | | | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7309ea0[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x72e6d08[0m
[0;34m| | | | | | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7309ef0[0m <[0;33mcol:27[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m| | | | | | | | | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7309e80[0m <[0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m| | | | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730ba38[0m <[0;33mcol:39[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x730acd8[0m <[0;33mcol:39[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ","[0m
[0;34m| | | | | | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x730bb10[0m <[0;33mcol:46[0m, [0;33mcol:53[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | | | | | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x730bae0[0m <[0;33mcol:46[0m, [0;33mcol:48[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x72e6ea0[0m
[0;34m| | | | | | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730bb30[0m <[0;33mcol:46[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m| | | | | | | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730bac0[0m <[0;33mcol:46[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m| | | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730d678[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x730c918[0m <[0;33mcol:58[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ")"[0m
[0;34m| | | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730e488[0m <[0;33mcol:64[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x730d700[0m <[0;33mcol:64[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "&"[0m
[0;34m| | | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730f278[0m <[0;33mcol:71[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x730e510[0m <[0;33mcol:71[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "("[0m
[0;34m| | | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x730f350[0m <[0;33mcol:78[0m, [0;33mcol:85[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x730f320[0m <[0;33mcol:78[0m, [0;33mcol:80[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x72e6d08[0m
[0;34m| | | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x730f370[0m <[0;33mcol:78[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m| | | | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x730f300[0m <[0;33mcol:78[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m| | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7310eb8[0m <[0;33mcol:90[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7310158[0m <[0;33mcol:90[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ","[0m
[0;34m| | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7310f90[0m <[0;33mcol:97[0m, [0;33mcol:104[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m| | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7310f60[0m <[0;33mcol:97[0m, [0;33mcol:99[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x72e6ea0[0m
[0;34m| | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7310fb0[0m <[0;33mcol:97[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m| | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7310f40[0m <[0;33mcol:97[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m| | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7312af8[0m <[0;33mcol:109[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m| | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7311d98[0m <[0;33mcol:109[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ")"[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73134a8[0m <[0;33mcol:116[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7313480[0m <[0;33mcol:116[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6e17e88[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6df59a8[0m[0;1;36m 'endl'[0m)
[0;34m| `-[0m[0;1;35mReturnStmt[0m[0;33m 0x7314528[0m <[0;33mline:251:5[0m, [0;33mcol:98[0m>
[0;34m|   `-[0m[0;1;35mCallExpr[0m[0;33m 0x7314500[0m <[0;33mcol:12[0m, [0;33mcol:98[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m|     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73144e8[0m <[0;33mcol:12[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73143a8[0m <[0;33mcol:12[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x73142a8[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7135cc8[0m[0;1;36m 'sqrt'[0m)
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7313b10[0m <[0;33mcol:17[0m, [0;33mcol:97[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m|       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7313830[0m <[0;33mcol:17[0m, [0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m|       | |-[0m[0;1;35mParenExpr[0m[0;33m 0x73136c0[0m <[0;33mcol:17[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73136a0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       | |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73135e0[0m <[0;33mcol:18[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73135b0[0m <[0;33mcol:18[0m, [0;33mcol:20[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x72e6d08[0m
[0;34m|       | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313600[0m <[0;33mcol:18[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|       | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7313590[0m <[0;33mcol:18[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m|       | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7313668[0m <[0;33mcol:27[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7313638[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x72e6d08[0m
[0;34m|       | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313688[0m <[0;33mcol:27[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|       | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7313618[0m <[0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m|       | `-[0m[0;1;35mParenExpr[0m[0;33m 0x7313810[0m <[0;33mcol:37[0m, [0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73137f0[0m <[0;33mcol:38[0m, [0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7313730[0m <[0;33mcol:38[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7313700[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x72e6d08[0m
[0;34m|       |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313750[0m <[0;33mcol:38[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|       |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73136e0[0m <[0;33mcol:38[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m|       |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73137b8[0m <[0;33mcol:47[0m, [0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7313788[0m <[0;33mcol:47[0m, [0;33mcol:49[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x72e6d08[0m
[0;34m|       |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73137d8[0m <[0;33mcol:47[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|       |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7313768[0m <[0;33mcol:47[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7313af0[0m <[0;33mcol:59[0m, [0;33mcol:97[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m|         |-[0m[0;1;35mParenExpr[0m[0;33m 0x7313980[0m <[0;33mcol:59[0m, [0;33mcol:77[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|         | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7313960[0m <[0;33mcol:60[0m, [0;33mcol:76[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|         |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73138a0[0m <[0;33mcol:60[0m, [0;33mcol:67[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|         |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7313870[0m <[0;33mcol:60[0m, [0;33mcol:62[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x72e6ea0[0m
[0;34m|         |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73138c0[0m <[0;33mcol:60[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|         |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7313850[0m <[0;33mcol:60[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m|         |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7313928[0m <[0;33mcol:69[0m, [0;33mcol:76[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|         |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73138f8[0m <[0;33mcol:69[0m, [0;33mcol:71[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x72e6ea0[0m
[0;34m|         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313948[0m <[0;33mcol:69[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73138d8[0m <[0;33mcol:69[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m|         `-[0m[0;1;35mParenExpr[0m[0;33m 0x7313ad0[0m <[0;33mcol:79[0m, [0;33mcol:97[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7313ab0[0m <[0;33mcol:80[0m, [0;33mcol:96[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|             |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73139f0[0m <[0;33mcol:80[0m, [0;33mcol:87[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|             | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73139c0[0m <[0;33mcol:80[0m, [0;33mcol:82[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x72e6ea0[0m
[0;34m|             |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313a10[0m <[0;33mcol:80[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|             |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73139a0[0m <[0;33mcol:80[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305160[0m[0;1;36m 'b'[0m [0;32m'Pont'[0m
[0;34m|             `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7313a78[0m <[0;33mcol:89[0m, [0;33mcol:96[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|               `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7313a48[0m <[0;33mcol:89[0m, [0;33mcol:91[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x72e6ea0[0m
[0;34m|                 `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7313a98[0m <[0;33mcol:89[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7313a28[0m <[0;33mcol:89[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7305070[0m[0;1;36m 'a'[0m [0;32m'Pont'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x746f350[0m <[0;33mline:147:4[0m, [0;33mcol:152[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x746f320[0m <[0;33mcol:4[0m, [0;33mcol:152[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x746f2f0[0m <[0;33mcol:4[0m, [0;33mcol:152[0m> Text="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5ef5e28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:77:3[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5ef59a8[0m <[0;33mline:77:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5ef5d88[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator, std::input_iterator_tag)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ef5b60[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ef5bd8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ef5c50[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5ef61f8[0m <[0;33mline:82:5[0m, [0;33mline:93:5[0m>
[0;34m|   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5ef6038[0m <[0;33mline:86:7[0m, [0;33mcol:72[0m>
[0;34m|   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5ef5fb0[0m <[0;33mcol:7[0m, [0;33mcol:71[0m> [0;33mcol:65[0m referenced[0;1;36m __n[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m nrvo cinit
[0;34m|   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ef6018[0m <[0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|   |-[0m[0;1;35mWhileStmt[0m[0;33m 0x5ef61a8[0m <[0;33mline:87:7[0m, [0;33mline:91:2[0m>
[0;34m|   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5ef60e0[0m <[0;33mline:87:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5ef6090[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5d05e20[0m[0;33m 0x5ee8d78[0m
[0;34m|   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ef6050[0m <[0;33mcol:14[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ef5b60[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ef6070[0m <[0;33mcol:25[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ef5bd8[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5ef6188[0m <[0;33mline:88:2[0m, [0;33mline:91:2[0m>
[0;34m|   |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5ef6138[0m <[0;33mline:89:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ef6118[0m <[0;33mcol:6[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ef5b60[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5ef6170[0m <[0;33mline:90:4[0m, [0;33mcol:6[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m|   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ef6150[0m <[0;33mcol:6[0m> [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5ef5fb0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5ef61e0[0m <[0;33mline:92:7[0m, [0;33mcol:14[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ef61c0[0m <[0;33mcol:14[0m> [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5ef5fb0[0m[0;1;36m '__n'[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6aedc98[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aeda80[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aedaf8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aedb60[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b1cf78[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b1cd60[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b1cdd8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b1ce40[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b28648[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b28430[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b284a8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b28510[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b30998[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b30780[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b307f8[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b30860[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b3f9c8[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::input_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b3f7b0[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b3f828[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b3f890[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b56d38[0m <[0;33mline:78:5[0m, [0;33mline:93:5[0m> [0;33mline:80:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::input_iterator_tag)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b56b20[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;33mcol:31[0m[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b56b98[0m <[0;33mcol:40[0m, [0;33mcol:55[0m> [0;33mcol:55[0m[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b56c00[0m <[0;33mline:81:16[0m> [0;33mcol:34[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5efa0b8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:95:3[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5ef6220[0m <[0;33mline:95:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _RandomAccessIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5efa018[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<_RandomAccessIterator>::difference_type (_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ef63b0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced[0;1;36m __first[0m [0;32m'_RandomAccessIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ef6428[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m referenced[0;1;36m __last[0m [0;32m'_RandomAccessIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ef64a0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5efa198[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5efa188[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5efa168[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5efa128[0m <[0;33mcol:14[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ef6428[0m[0;1;36m '__last'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m|       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5efa148[0m <[0;33mcol:23[0m> [0;32m'_RandomAccessIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ef63b0[0m[0;1;36m '__first'[0m [0;32m'_RandomAccessIterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6aee1a8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aedf90[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aee008[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aee070[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aee3f0[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aee3e0[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aee3c0[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee390[0m <[0;33mcol:14[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aee350[0m <[0;33mcol:14[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aee008[0m[0;1;36m '__last'[0m [0;32m'char *':'char *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee3a8[0m <[0;33mcol:23[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aee370[0m <[0;33mcol:23[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aedf90[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b1d408[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b1d1f0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b1d268[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b1d2d0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b1d650[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b1d640[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b1d620[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b1d5f0[0m <[0;33mcol:14[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b1d5b0[0m <[0;33mcol:14[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b1d268[0m[0;1;36m '__last'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b1d608[0m <[0;33mcol:23[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b1d5d0[0m <[0;33mcol:23[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b1d1f0[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b28ad8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b288c0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b28938[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b289a0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b28d20[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b28d10[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b28cf0[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28cc0[0m <[0;33mcol:14[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b28c80[0m <[0;33mcol:14[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b28938[0m[0;1;36m '__last'[0m [0;32m'const char *':'const char *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28cd8[0m <[0;33mcol:23[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b28ca0[0m <[0;33mcol:23[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b288c0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b30e28[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b30c10[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b30c88[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b30cf0[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b31070[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b31060[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b31040[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b31010[0m <[0;33mcol:14[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b30fd0[0m <[0;33mcol:14[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b30c88[0m[0;1;36m '__last'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b31028[0m <[0;33mcol:23[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b30ff0[0m <[0;33mcol:23[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b30c10[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b3fe58[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b3fc40[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b3fcb8[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b3fd20[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b400a0[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b40090[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b40070[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b40040[0m <[0;33mcol:14[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b40000[0m <[0;33mcol:14[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b3fcb8[0m[0;1;36m '__last'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b40058[0m <[0;33mcol:23[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b40020[0m <[0;33mcol:23[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b3fc40[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b571c8[0m <[0;33mline:96:5[0m, [0;33mline:105:5[0m> [0;33mline:98:5[0m used constexpr[0;1;36m __distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b56fb0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b57028[0m <[0;33mcol:47[0m, [0;33mcol:69[0m> [0;33mcol:69[0m used[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b57090[0m <[0;33mline:99:16[0m> [0;33mcol:42[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b57410[0m <[0;33mline:100:5[0m, [0;33mline:105:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b57400[0m <[0;33mline:104:7[0m, [0;33mcol:23[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b573e0[0m <[0;33mcol:14[0m, [0;33mcol:23[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b573b0[0m <[0;33mcol:14[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b57370[0m <[0;33mcol:14[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b57028[0m[0;1;36m '__last'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b573c8[0m <[0;33mcol:23[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b57390[0m <[0;33mcol:23[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b56fb0[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5efa738[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:109:3[0m, [0;33mline:113:27[0m> [0;33mline:111:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5efa1b0[0m <[0;33mline:109:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5efa698[0m <[0;33mline:110:5[0m, [0;33mline:113:27[0m> [0;33mline:111:5[0m[0;1;36m __distance[0m [0;32m'std::ptrdiff_t (std::_List_iterator<_Tp>, std::_List_iterator<_Tp>, std::input_iterator_tag)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5efa378[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:111:50[0m> [0;33mcol:51[0m [0;32m'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5efa4f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:112:43[0m> [0;33mcol:44[0m [0;32m'std::_List_iterator<_Tp>':'_List_iterator<_Tp>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5efa570[0m <[0;33mline:113:9[0m> [0;33mcol:27[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::__distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5efad18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:115:3[0m, [0;33mline:119:27[0m> [0;33mline:117:5[0m[0;1;36m __distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5efa7a8[0m <[0;33mline:115:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5efac78[0m <[0;33mline:116:5[0m, [0;33mline:119:27[0m> [0;33mline:117:5[0m[0;1;36m __distance[0m [0;32m'std::ptrdiff_t (std::_List_const_iterator<_Tp>, std::_List_const_iterator<_Tp>, std::input_iterator_tag)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5efa958[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:117:56[0m> [0;33mcol:57[0m [0;32m'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5efaad8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:403:25[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:118:49[0m> [0;33mcol:50[0m [0;32m'std::_List_const_iterator<_Tp>':'_List_const_iterator<_Tp>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5efab50[0m <[0;33mline:119:9[0m> [0;33mcol:27[0m [0;32m'std::input_iterator_tag'[0m

Dumping std::distance:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5efb148[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:135:3[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m[0;1;36m distance[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5efad88[0m <[0;33mline:135:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _InputIterator[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5efb0a8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m[0;1;36m distance[0m [0;32m'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator)'[0m inline
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5efaf10[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'_InputIterator'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5efaf88[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m referenced[0;1;36m __last[0m [0;32m'_InputIterator'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5efb368[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5efb358[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x5efb320[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5efb1d0[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__distance'[0;33m 0x5ef5e28[0m[0;33m 0x5efa0b8[0m[0;33m 0x5efa738[0m[0;33m 0x5efad18[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5efb230[0m <[0;33mcol:30[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5efaf10[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5efb250[0m <[0;33mcol:39[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5efaf88[0m[0;1;36m '__last'[0m [0;32m'_InputIterator'[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x5efb2f8[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5efb290[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__iterator_category'[0;33m 0x5ef4b48[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5efb2d8[0m <[0;33mcol:34[0m> [0;32m'_InputIterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5efaf10[0m[0;1;36m '__first'[0m [0;32m'_InputIterator'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6ae6a18[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6880[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae68f8[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'char *':'char *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aee558[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aee548[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6aee530[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aee480[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee468[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<char *>::difference_type (*)(char *, char *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aee318[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6aee1a8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<char *>::difference_type (char *, char *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5efa0b8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee4b8[0m <[0;33mcol:30[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aecee0[0m <[0;33mcol:30[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6880[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee4d0[0m <[0;33mcol:39[0m> [0;32m'char *':'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aecf00[0m <[0;33mcol:39[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae68f8[0m[0;1;36m '__last'[0m [0;32m'char *':'char *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aee500[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6aee4e8[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aed860[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aed848[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<char *>::iterator_category (*)(char *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aed398[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<char *>::iterator_category (char *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6aed298[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<char *>::iterator_category (char *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5ef4b48[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aed888[0m <[0;33mcol:34[0m> [0;32m'char *const':'char *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aecf68[0m <[0;33mcol:34[0m> [0;32m'char *':'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6880[0m[0;1;36m '__first'[0m [0;32m'char *':'char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b14008[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b13e70[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b13ee8[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b1d7b8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b1d7a8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b1d790[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b1d6e0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b1d6c8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type (*)(wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b1d578[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b1d408[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<wchar_t *>::difference_type (wchar_t *, wchar_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5efa0b8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b1d718[0m <[0;33mcol:30[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b1c520[0m <[0;33mcol:30[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b13e70[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b1d730[0m <[0;33mcol:39[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b1c540[0m <[0;33mcol:39[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b13ee8[0m[0;1;36m '__last'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b1d760[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b1d748[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b1cbc0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b1cba8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category (*)(wchar_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b1c958[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b1c858[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<wchar_t *>::iterator_category (wchar_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5ef4b48[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b1cbe8[0m <[0;33mcol:34[0m> [0;32m'wchar_t *const':'wchar_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b1c5a8[0m <[0;33mcol:34[0m> [0;32m'wchar_t *':'wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b13e70[0m[0;1;36m '__first'[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b26c68[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b26ad0[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b26b48[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char *':'const char *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b28e88[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b28e78[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b28e60[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b28db0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28d98[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char *>::difference_type (*)(const char *, const char *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b28c48[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b28ad8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char *>::difference_type (const char *, const char *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5efa0b8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28de8[0m <[0;33mcol:30[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b27bf0[0m <[0;33mcol:30[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b26ad0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28e00[0m <[0;33mcol:39[0m> [0;32m'const char *':'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b27c10[0m <[0;33mcol:39[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b26b48[0m[0;1;36m '__last'[0m [0;32m'const char *':'const char *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b28e30[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b28e18[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b28290[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b28278[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char *>::iterator_category (*)(const char *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b28028[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char *>::iterator_category (const char *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b27f28[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char *>::iterator_category (const char *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5ef4b48[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b282b8[0m <[0;33mcol:34[0m> [0;32m'const char *const':'const char *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b27c78[0m <[0;33mcol:34[0m> [0;32m'const char *':'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b26ad0[0m[0;1;36m '__first'[0m [0;32m'const char *':'const char *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b2efb8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b2ee20[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b2ee98[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b311d8[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b311c8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b311b0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b31100[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b310e8[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type (*)(const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b30f98[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b30e28[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const wchar_t *>::difference_type (const wchar_t *, const wchar_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5efa0b8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b31138[0m <[0;33mcol:30[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b2ff40[0m <[0;33mcol:30[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b2ee20[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b31150[0m <[0;33mcol:39[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b2ff60[0m <[0;33mcol:39[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b2ee98[0m[0;1;36m '__last'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b31180[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b31168[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b305e0[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b305c8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (*)(const wchar_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b30378[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b30278[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const wchar_t *>::iterator_category (const wchar_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5ef4b48[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b30608[0m <[0;33mcol:34[0m> [0;32m'const wchar_t *const':'const wchar_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b2ffc8[0m <[0;33mcol:34[0m> [0;32m'const wchar_t *':'const wchar_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b2ee20[0m[0;1;36m '__first'[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b37ba8[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *)'[0m inline
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b37a10[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b37a88[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b40208[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m|   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b401f8[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m|     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b401e0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b40130[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b40118[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type (*)(const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b3ffc8[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b3fe58[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char16_t *>::difference_type (const char16_t *, const char16_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5efa0b8[0m[0;1;36m '__distance'[0m)
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b40168[0m <[0;33mcol:30[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b3ef70[0m <[0;33mcol:30[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b37a10[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b40180[0m <[0;33mcol:39[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b3ef90[0m <[0;33mcol:39[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b37a88[0m[0;1;36m '__last'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m|         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b401b0[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m|           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b40198[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|             `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b3f610[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m|               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b3f5f8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category (*)(const char16_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b3f3a8[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b3f2a8[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char16_t *>::iterator_category (const char16_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5ef4b48[0m[0;1;36m '__iterator_category'[0m)
[0;34m|               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b3f638[0m <[0;33mcol:34[0m> [0;32m'const char16_t *const':'const char16_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b3eff8[0m <[0;33mcol:34[0m> [0;32m'const char16_t *':'const char16_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b37a10[0m[0;1;36m '__first'[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b4ff70[0m <[0;33mline:136:5[0m, [0;33mline:143:5[0m> [0;33mline:138:5[0m used[0;1;36m distance[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *)'[0m inline
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b4dc60[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m __first[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b4dcd8[0m <[0;33mcol:38[0m, [0;33mcol:53[0m> [0;33mcol:53[0m used[0;1;36m __last[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b57578[0m <[0;33mline:139:5[0m, [0;33mline:143:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b57568[0m <[0;33mline:141:7[0m, [0;33mline:142:42[0m>
[0;34m      `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6b57550[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b574a0[0m <[0;33mline:141:14[0m, [0;33mline:142:42[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type':'long'[0m[0;36m[0m[0;36m[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b57488[0m <[0;33mline:141:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type (*)(const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b57338[0m <[0;33mcol:14[0m, [0;33mcol:19[0m> [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b571c8[0m[0;1;36m '__distance'[0m [0;32m'typename iterator_traits<const char32_t *>::difference_type (const char32_t *, const char32_t *, std::random_access_iterator_tag)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5efa0b8[0m[0;1;36m '__distance'[0m)
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b574d8[0m <[0;33mcol:30[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b562e0[0m <[0;33mcol:30[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b4dc60[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b574f0[0m <[0;33mcol:39[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b56300[0m <[0;33mcol:39[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b4dcd8[0m[0;1;36m '__last'[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m          `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6b57520[0m <[0;33mline:142:9[0m, [0;33mcol:41[0m> [0;32m'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::random_access_iterator_tag &&) noexcept'[0m elidable
[0;34m            `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6b57508[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m              `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b56980[0m <[0;33mcol:9[0m, [0;33mcol:41[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category':'std::random_access_iterator_tag'[0m[0;36m[0m[0;36m[0m
[0;34m                |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b56968[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category (*)(const char32_t *const &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b56718[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b56618[0m[0;1;36m '__iterator_category'[0m [0;32m'typename iterator_traits<const char32_t *>::iterator_category (const char32_t *const &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5ef4b48[0m[0;1;36m '__iterator_category'[0m)
[0;34m                `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b569a8[0m <[0;33mcol:34[0m> [0;32m'const char32_t *const':'const char32_t *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b56368[0m <[0;33mcol:34[0m> [0;32m'const char32_t *':'const char32_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b4dc60[0m[0;1;36m '__first'[0m [0;32m'const char32_t *':'const char32_t *'[0m

Dumping distance:
[0;1;32mFunctionDecl[0m[0;33m 0x6700f10[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:26:1[0m, [0;33mcol:35[0m> [0;33mcol:8[0m used[0;1;36m distance[0m [0;32m'double (int, int, int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6700c90[0m <[0;33mcol:17[0m> [0;33mcol:20[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6700d10[0m <[0;33mcol:22[0m> [0;33mcol:25[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6700d90[0m <[0;33mcol:27[0m> [0;33mcol:30[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6700e10[0m <[0;33mcol:32[0m> [0;33mcol:35[0m [0;32m'int'[0m

Dumping distance:
[0;1;32mFunctionDecl[0m[0;33m 0x6a82a78[0m prev 0x6700f10 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:258:1[0m, [0;33mline:261:1[0m> [0;33mline:258:8[0m used[0;1;36m distance[0m [0;32m'double (int, int, int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a82848[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;33mcol:21[0m used[0;1;36m ax[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a828c8[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m ay[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a82948[0m <[0;33mcol:33[0m, [0;33mcol:37[0m> [0;33mcol:37[0m used[0;1;36m bx[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a829c8[0m <[0;33mcol:41[0m, [0;33mcol:45[0m> [0;33mcol:45[0m used[0;1;36m by[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6a82f98[0m <[0;33mline:259:1[0m, [0;33mline:261:1[0m>
[0;34m| `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6a82f60[0m <[0;33mline:260:5[0m, [0;33mcol:48[0m>
[0;34m|   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6a82f38[0m <[0;33mcol:12[0m, [0;33mcol:48[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type':'double'[0m[0;36m[0m[0;36m[0m
[0;34m|     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82f20[0m <[0;33mcol:12[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82ef8[0m <[0;33mcol:12[0m> [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a824b8[0m[0;1;36m 'sqrt'[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<int>::__value, double>::__type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x68a3fd8[0m[0;1;36m 'sqrt'[0m)
[0;34m|     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a82e98[0m <[0;33mcol:17[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m|       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a82cf8[0m <[0;33mcol:17[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m|       | |-[0m[0;1;35mParenExpr[0m[0;33m 0x6a82c28[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a82c08[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82bd8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82b98[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a82948[0m[0;1;36m 'bx'[0m [0;32m'int'[0m
[0;34m|       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82bf0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82bb8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a82848[0m[0;1;36m 'ax'[0m [0;32m'int'[0m
[0;34m|       | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6a82cd8[0m <[0;33mcol:25[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a82cb8[0m <[0;33mcol:26[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82c88[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82c48[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a82948[0m[0;1;36m 'bx'[0m [0;32m'int'[0m
[0;34m|       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82ca0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82c68[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a82848[0m[0;1;36m 'ax'[0m [0;32m'int'[0m
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a82e78[0m <[0;33mcol:33[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m|         |-[0m[0;1;35mParenExpr[0m[0;33m 0x6a82da8[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|         | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a82d88[0m <[0;33mcol:34[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|         |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82d58[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82d18[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a829c8[0m[0;1;36m 'by'[0m [0;32m'int'[0m
[0;34m|         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82d70[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82d38[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a828c8[0m[0;1;36m 'ay'[0m [0;32m'int'[0m
[0;34m|         `-[0m[0;1;35mParenExpr[0m[0;33m 0x6a82e58[0m <[0;33mcol:41[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a82e38[0m <[0;33mcol:42[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m|             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82e08[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82dc8[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a829c8[0m[0;1;36m 'by'[0m [0;32m'int'[0m
[0;34m|             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a82e20[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a82de8[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a828c8[0m[0;1;36m 'ay'[0m [0;32m'int'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x6bdd540[0m <[0;33mline:257:4[0m, [0;33mcol:148[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x6bdd510[0m <[0;33mcol:4[0m, [0;33mcol:148[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x6bdd4e0[0m <[0;33mcol:4[0m, [0;33mcol:148[0m> Text="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

Dumping my_cmp:
[0;1;32mFunctionDecl[0m[0;33m 0x6168fa8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:49:1[0m, [0;33mcol:37[0m> [0;33mcol:6[0m used[0;1;36m my_cmp[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6168e58[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;33mcol:24[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6168ed0[0m <[0;33mcol:26[0m, [0;33mcol:36[0m> [0;33mcol:37[0m [0;32m'const Pont &'[0m

Dumping my_cmp:
[0;1;32mFunctionDecl[0m[0;33m 0x6195520[0m prev 0x6168fa8 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:268:1[0m, [0;33mline:272:1[0m> [0;33mline:268:6[0m used[0;1;36m my_cmp[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6195410[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m a[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6195488[0m <[0;33mcol:28[0m, [0;33mcol:40[0m> [0;33mcol:40[0m used[0;1;36m b[0m [0;32m'const Pont &'[0m
[0;34m|-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6195708[0m <[0;33mline:269:1[0m, [0;33mline:272:1[0m>
[0;34m| `-[0m[0;1;35mReturnStmt[0m[0;33m 0x61956d0[0m <[0;33mline:271:5[0m, [0;33mcol:28[0m>
[0;34m|   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61956b0[0m <[0;33mcol:12[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m|     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6195620[0m <[0;33mcol:12[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x61955f0[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x6167428[0m
[0;34m|     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61955d0[0m <[0;33mcol:12[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6195410[0m[0;1;36m 'a'[0m [0;32m'const Pont &'[0m
[0;34m|     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6195690[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6195660[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x6167428[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6195640[0m <[0;33mcol:21[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6195488[0m[0;1;36m 'b'[0m [0;32m'const Pont &'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x62f00f0[0m <[0;33mline:266:4[0m, [0;33mcol:151[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x62f00c0[0m <[0;33mcol:4[0m, [0;33mcol:151[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x62f0090[0m <[0;33mcol:4[0m, [0;33mcol:151[0m> Text="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

Dumping sorting:
[0;1;32mFunctionDecl[0m[0;33m 0x72a0138[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:29:1[0m, [0;33mcol:33[0m> [0;33mcol:6[0m[0;1;36m sorting[0m [0;32m'void (std::vector<Pont> &)'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72a0040[0m <[0;33mcol:14[0m, [0;33mcol:32[0m> [0;33mcol:33[0m [0;32m'std::vector<Pont> &'[0m

Dumping sorting:
[0;1;32mFunctionDecl[0m[0;33m 0x76221b8[0m prev 0x72a0138 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:276:1[0m, [0;33mline:285:1[0m> [0;33mline:276:6[0m[0;1;36m sorting[0m [0;32m'void (vector<Pont> &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x76220f0[0m <[0;33mcol:14[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m tomb[0m [0;32m'vector<Pont> &'[0m
[0;34m|-[0m[0;1;35mCompoundStmt[0m[0;33m 0x764f388[0m <[0;33mline:277:1[0m, [0;33mline:285:1[0m>
[0;34m| |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7649088[0m <[0;33mline:278:5[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7647d80[0m <[0;33mcol:5[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7647d68[0m <[0;33mcol:5[0m> [0;32m'void (*)(__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7647ce0[0m <[0;33mcol:5[0m> [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7647bb8[0m[0;1;36m 'sort'[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, __gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >, bool (*)(const Pont &, const Pont &))'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x75def58[0m[0;1;36m 'sort'[0m)
[0;34m| |   |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7648fc0[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m| |   | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7648e78[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m| |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7644b40[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7644b10[0m <[0;33mcol:10[0m, [0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x7635320[0m
[0;34m| |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x76222b0[0m <[0;33mcol:10[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x76220f0[0m[0;1;36m 'tomb'[0m [0;32m'vector<Pont> &'[0m
[0;34m| |   |-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7649040[0m <[0;33mcol:24[0m, [0;33mcol:33[0m> [0;32m'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > > &&) noexcept'[0m elidable
[0;34m| |   | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7649028[0m <[0;33mcol:24[0m, [0;33mcol:33[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m| |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x76477d0[0m <[0;33mcol:24[0m, [0;33mcol:33[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::iterator':'__gnu_cxx::__normal_iterator<Pont *, std::vector<Pont, std::allocator<Pont> > >'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x76477a0[0m <[0;33mcol:24[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x7635528[0m
[0;34m| |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7647720[0m <[0;33mcol:24[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x76220f0[0m[0;1;36m 'tomb'[0m [0;32m'vector<Pont> &'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7649070[0m <[0;33mcol:36[0m> [0;32m'bool (*)(const Pont &, const Pont &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x76477f0[0m <[0;33mcol:36[0m> [0;32m'bool (const Pont &, const Pont &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7621d50[0m[0;1;36m 'my_cmp'[0m [0;32m'bool (const Pont &, const Pont &)'[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7649120[0m <[0;33mline:279:5[0m, [0;33mcol:10[0m>
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x76490b8[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m| `-[0m[0;1;35mForStmt[0m[0;33m 0x764f320[0m <[0;33mline:281:5[0m, [0;33mline:284:5[0m>
[0;34m|   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7649178[0m <[0;33mline:281:10[0m, [0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m|   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7649138[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x76490b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m|   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7649158[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|   |-[0m[0;34m<<<NULL>>>[0m
[0;34m|   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x76491f0[0m <[0;33mcol:15[0m, [0;33mline:9:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m|   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x76491d8[0m <[0;33mline:281:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7649198[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x76490b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m|   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x76491b8[0m <[0;33mline:9:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1000000[0m
[0;34m|   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7649230[0m <[0;33mline:281:20[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m|   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7649210[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x76490b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x764f308[0m <[0;33mline:282:5[0m, [0;33mline:284:5[0m>
[0;34m|     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x764f2d0[0m <[0;33mline:283:9[0m, [0;33mcol:74[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764f2b8[0m <[0;33mcol:71[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764f298[0m <[0;33mcol:71[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7120888[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m|       |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x764e920[0m <[0;33mcol:9[0m, [0;33mcol:69[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764e908[0m <[0;33mcol:54[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764e8e8[0m <[0;33mcol:54[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x71217e8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m|       | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x764da08[0m <[0;33mcol:9[0m, [0;33mcol:49[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764d9f0[0m <[0;33mcol:46[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764d9d0[0m <[0;33mcol:46[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x712a038[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m|       | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x764cc18[0m <[0;33mcol:9[0m, [0;33mcol:42[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764cc00[0m <[0;33mcol:39[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764cbe0[0m <[0;33mcol:39[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x712a038[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m|       | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x764be30[0m <[0;33mcol:9[0m, [0;33mcol:37[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764be18[0m <[0;33mcol:22[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764bdf8[0m <[0;33mcol:22[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x71217e8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m|       | | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x764aeb8[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764aea0[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764ae80[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x712a038[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m|       | | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7649248[0m <[0;33mcol:9[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71c3a00[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m|       | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764ae68[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m|       | | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7649268[0m <[0;33mcol:17[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "x="[0m
[0;34m|       | | | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x764b058[0m <[0;33mcol:24[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x764b028[0m <[0;33mcol:24[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getX[0;33m 0x75f3868[0m
[0;34m|       | | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764b078[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|       | | | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x764aff0[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | | | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764afd8[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764af60[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7636750[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m|       | | | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764aef0[0m <[0;33mcol:24[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x76220f0[0m[0;1;36m 'tomb'[0m [0;32m'vector<Pont> &'[0m
[0;34m|       | | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764af48[0m <[0;33mcol:29[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|       | | | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764af30[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       | | | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764af10[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x76490b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m|       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764cbc8[0m <[0;33mcol:42[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m|       | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x764be68[0m <[0;33mcol:42[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " "[0m
[0;34m|       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764d9b8[0m <[0;33mcol:49[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m|       | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x764cc50[0m <[0;33mcol:49[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "y="[0m
[0;34m|       | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x764db50[0m <[0;33mcol:56[0m, [0;33mcol:69[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m|       |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x764db20[0m <[0;33mcol:56[0m, [0;33mcol:64[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .getY[0;33m 0x75f3a00[0m
[0;34m|       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764db70[0m <[0;33mcol:56[0m, [0;33mcol:62[0m> [0;32m'const Pont'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m|       |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x764dae8[0m <[0;33mcol:56[0m, [0;33mcol:62[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Pont> >::value_type':'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764dad0[0m <[0;33mcol:60[0m, [0;33mcol:62[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764dab0[0m <[0;33mcol:60[0m, [0;33mcol:62[0m> [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7636750[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Pont, std::allocator<Pont> >::reference (std::vector::size_type) noexcept'[0m
[0;34m|       |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764da40[0m <[0;33mcol:56[0m> [0;32m'vector<Pont>':'std::vector<Pont, std::allocator<Pont> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x76220f0[0m[0;1;36m 'tomb'[0m [0;32m'vector<Pont> &'[0m
[0;34m|       |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764da98[0m <[0;33mcol:61[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m|       |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764da80[0m <[0;33mcol:61[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764da60[0m <[0;33mcol:61[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x76490b8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m|       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x764f280[0m <[0;33mcol:74[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x764f258[0m <[0;33mcol:74[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7124f68[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7102a88[0m[0;1;36m 'endl'[0m)
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x777b820[0m <[0;33mline:275:4[0m, [0;33mcol:152[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x777b7f0[0m <[0;33mcol:4[0m, [0;33mcol:152[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x777b7c0[0m <[0;33mcol:4[0m, [0;33mcol:152[0m> Text="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

Dumping findtenpoints:
[0;1;32mFunctionDecl[0m[0;33m 0x6121a38[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:30:1[0m, [0;33mcol:32[0m> [0;33mcol:7[0m[0;1;36m findtenpoints[0m [0;32m'Pont *(bool **, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61218e8[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;33mcol:28[0m [0;32m'bool **'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6121968[0m <[0;33mcol:29[0m> [0;33mcol:32[0m [0;32m'int'[0m

Dumping findtenpoints:
[0;1;32mFunctionDecl[0m[0;33m 0x64d0940[0m prev 0x6121a38 <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:292:1[0m, [0;33mline:349:1[0m> [0;33mline:292:7[0m[0;1;36m findtenpoints[0m [0;32m'Pont *(bool **, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64d0828[0m <[0;33mcol:21[0m, [0;33mcol:28[0m> [0;33mcol:28[0m used[0;1;36m table[0m [0;32m'bool **'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64d08a8[0m <[0;33mcol:35[0m, [0;33mcol:39[0m> [0;33mcol:39[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d90e0[0m <[0;33mline:293:1[0m, [0;33mline:349:1[0m>
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64d0cc0[0m <[0;33mline:294:5[0m, [0;33mcol:45[0m>
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64d0a00[0m <[0;33mcol:5[0m, [0;33mcol:44[0m> [0;33mcol:11[0m used[0;1;36m res[0m [0;32m'Pont *'[0m cinit
[0;34m| |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x64d0bd8[0m <[0;33mcol:15[0m, [0;33mcol:44[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mBitCast[0m>
[0;34m| |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x64d0ba0[0m <[0;33mcol:22[0m, [0;33mcol:44[0m> [0;32m'void *'[0m[0;36m[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d0b88[0m <[0;33mcol:22[0m> [0;32m'void *(*)(size_t) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m| |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d0b38[0m <[0;33mcol:22[0m> [0;32m'void *(size_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5c2ec38[0m[0;1;36m 'malloc'[0m [0;32m'void *(size_t) throw()'[0m
[0;34m| |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d0b18[0m <[0;33mcol:29[0m, [0;33mcol:43[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d0b00[0m <[0;33mcol:29[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m| |         | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d0ab0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 10[0m
[0;34m| |         `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x64d0ae0[0m <[0;33mcol:32[0m, [0;33mcol:43[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'Pont'[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64d0d78[0m <[0;33mline:295:5[0m, [0;33mcol:13[0m>
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64d0cf0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:9[0m used[0;1;36m it[0m [0;32m'int'[0m cinit
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d0d58[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64d0ee8[0m <[0;33mline:297:5[0m, [0;33mcol:22[0m>
[0;34m| | |-[0m[0;1;32mVarDecl[0m[0;33m 0x64d0da8[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;33mcol:9[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m| | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d0e10[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64d0e48[0m <[0;33mcol:5[0m, [0;33mcol:20[0m> [0;33mcol:16[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m| |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d0eb0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64d0f88[0m <[0;33mline:299:5[0m, [0;33mcol:21[0m>
[0;34m| | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64d0f10[0m <[0;33mcol:5[0m, [0;33mcol:17[0m> [0;33mcol:10[0m used[0;1;36m isUp[0m [0;32m'bool'[0m cinit
[0;34m| |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x64d0f78[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m| |-[0m[0;1;35mForStmt[0m[0;33m 0x64d9060[0m <[0;33mline:301:5[0m, [0;33mline:347:5[0m>
[0;34m| | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x64d1040[0m <[0;33mline:301:10[0m, [0;33mcol:17[0m>
[0;34m| | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64d0fb8[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m| | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1020[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1120[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1108[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1058[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0fb8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d10e8[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d10b8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1078[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d10d0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1098[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d9040[0m <[0;33mline:302:5[0m, [0;33mline:347:5[0m>
[0;34m| |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x64d8f88[0m <[0;33mline:303:9[0m, [0;33mline:345:9[0m> has_else
[0;34m| |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1160[0m <[0;33mline:303:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1140[0m <[0;33mcol:13[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0f10[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d1ea8[0m <[0;33mline:304:9[0m, [0;33mline:324:9[0m>
[0;34m| |   | | |-[0m[0;1;35mForStmt[0m[0;33m 0x64d1ad8[0m <[0;33mline:305:13[0m, [0;33mline:318:13[0m>
[0;34m| |   | | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1280[0m <[0;33mline:305:21[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d11d0[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m| |   | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d11b8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1178[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1198[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1260[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1230[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d11f0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1248[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1210[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1310[0m <[0;33mcol:35[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   | | | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d12c0[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d12a0[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d12f8[0m <[0;33mcol:40[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d12d8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d1ab0[0m <[0;33mline:306:13[0m, [0;33mline:318:13[0m>
[0;34m| |   | | |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x64d18e8[0m <[0;33mline:307:17[0m, [0;33mline:312:17[0m>
[0;34m| |   | | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1530[0m <[0;33mline:307:21[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x64d1510[0m <[0;33mcol:21[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d14f8[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x64d1420[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1408[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1330[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d0828[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   | | |   | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d13e8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:307:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   | |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d13a8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:307:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | |   | |   |     | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1350[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   | | |   | |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1390[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:307:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1370[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d13c8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d14d8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:307:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   | |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1498[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:307:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | |   | |     | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1440[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   | | |   | |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1480[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:307:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1460[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d14b8[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d18c0[0m <[0;33mline:308:17[0m, [0;33mline:312:17[0m>
[0;34m| |   | | |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x64d16c0[0m <[0;33mline:309:21[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x64d15d8[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x6475288[0m
[0;34m| |   | | |   |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x64d15b8[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1588[0m <[0;33mcol:21[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1548[0m <[0;33mcol:21[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0a00[0m[0;1;36m 'res'[0m [0;32m'Pont *'[0m
[0;34m| |   | | |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d15a0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1568[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0cf0[0m[0;1;36m 'it'[0m [0;32m'int'[0m
[0;34m| |   | | |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d16a0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:309:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1660[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:309:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | |   |   |   | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1608[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   | | |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1648[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:309:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1628[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1680[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x64d1860[0m <[0;33mline:310:21[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   | | |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x64d1778[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x6475600[0m
[0;34m| |   | | |   |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x64d1758[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   | | |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1728[0m <[0;33mcol:21[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d16e8[0m <[0;33mcol:21[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0a00[0m[0;1;36m 'res'[0m [0;32m'Pont *'[0m
[0;34m| |   | | |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1740[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1708[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0cf0[0m[0;1;36m 'it'[0m [0;32m'int'[0m
[0;34m| |   | | |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1840[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:310:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | | |   |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1800[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:310:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | |   |   |   | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d17a8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   | | |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d17e8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:310:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d17c8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1820[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | | |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d18a8[0m <[0;33mline:311:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m| |   | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1888[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0cf0[0m[0;1;36m 'it'[0m [0;32m'int'[0m
[0;34m| |   | | |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x64d1a60[0m <[0;33mline:313:17[0m, [0;33mline:316:17[0m>
[0;34m| |   | | |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1958[0m <[0;33mline:313:21[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   | | |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1940[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1900[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0cf0[0m[0;1;36m 'it'[0m [0;32m'int'[0m
[0;34m| |   | | |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1920[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 10[0m
[0;34m| |   | | |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d1a48[0m <[0;33mline:314:17[0m, [0;33mline:316:17[0m>
[0;34m| |   | | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1a28[0m <[0;33mline:315:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1978[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0fb8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   | | |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1a08[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |   | | |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d19d8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1998[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d19f0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d19b8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d1a98[0m <[0;33mline:317:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1a78[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0fb8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   | | |-[0m[0;1;35mIfStmt[0m[0;33m 0x64d1cd8[0m <[0;33mline:320:13[0m, [0;33mline:321:21[0m>
[0;34m| |   | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1c58[0m <[0;33mline:320:17[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1b68[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1b50[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1b10[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1b30[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1c38[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m| |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1c20[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1b88[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1c00[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   | | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1be8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1ba8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1bc8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1cb8[0m <[0;33mline:321:17[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1c78[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1c98[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   | | `-[0m[0;1;35mIfStmt[0m[0;33m 0x64d1e90[0m <[0;33mline:322:13[0m, [0;33mline:323:28[0m>
[0;34m| |   | |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1d60[0m <[0;33mline:322:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1d30[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1cf0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1d48[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1d10[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1e70[0m <[0;33mline:323:17[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   | |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1e18[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   | |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1d80[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1df8[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1de0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1da0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   | |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1dc0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   | |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d1e58[0m <[0;33mcol:27[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1e38[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d8f60[0m <[0;33mline:326:9[0m, [0;33mline:345:9[0m>
[0;34m| |   |   |-[0m[0;1;35mForStmt[0m[0;33m 0x64d2830[0m <[0;33mline:327:13[0m, [0;33mline:340:13[0m>
[0;34m| |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1fd8[0m <[0;33mline:327:21[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1f28[0m <[0;33mcol:21[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m| |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1f10[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1ed0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d1ef0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d1fb8[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1f88[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1f48[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d1fa0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1f68[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2068[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   |   | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d2018[0m <[0;33mcol:37[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d1ff8[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d2050[0m <[0;33mcol:43[0m, [0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2030[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d2808[0m <[0;33mline:328:13[0m, [0;33mline:340:13[0m>
[0;34m| |   |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x64d2640[0m <[0;33mline:329:17[0m, [0;33mline:334:17[0m>
[0;34m| |   |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2288[0m <[0;33mline:329:21[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x64d2268[0m <[0;33mcol:21[0m, [0;33mcol:45[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2250[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x64d2178[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'bool *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2160[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2088[0m <[0;33mcol:21[0m> [0;32m'bool **'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d0828[0m[0;1;36m 'table'[0m [0;32m'bool **'[0m
[0;34m| |   |   |   | |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2140[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:329:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   | |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2100[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:329:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   |   | |   |     | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d20a8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   |   |   | |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d20e8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:329:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d20c8[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2120[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2230[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:329:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   | |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d21f0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:329:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   |   | |     | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2198[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   |   |   | |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d21d8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:329:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d21b8[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2210[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d2618[0m <[0;33mline:330:17[0m, [0;33mline:334:17[0m>
[0;34m| |   |   |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x64d2418[0m <[0;33mline:331:21[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x64d2330[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setX[0;33m 0x6475288[0m
[0;34m| |   |   |   |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x64d2310[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d22e0[0m <[0;33mcol:21[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d22a0[0m <[0;33mcol:21[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0a00[0m[0;1;36m 'res'[0m [0;32m'Pont *'[0m
[0;34m| |   |   |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d22f8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d22c0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0cf0[0m[0;1;36m 'it'[0m [0;32m'int'[0m
[0;34m| |   |   |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d23f8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:331:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d23b8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:331:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   |   |   |   | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2360[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   |   |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d23a0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:331:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2380[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d23d8[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x64d25b8[0m <[0;33mline:332:21[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x64d24d0[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .setY[0;33m 0x6475600[0m
[0;34m| |   |   |   |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x64d24b0[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'Pont'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |   |   |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2480[0m <[0;33mcol:21[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2440[0m <[0;33mcol:21[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0a00[0m[0;1;36m 'res'[0m [0;32m'Pont *'[0m
[0;34m| |   |   |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2498[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2460[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0cf0[0m[0;1;36m 'it'[0m [0;32m'int'[0m
[0;34m| |   |   |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2598[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:332:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |   |   |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2558[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m, [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:332:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   |   |   |   | |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2500[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.h:8:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1995[0m
[0;34m| |   |   |   |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2540[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang/Data/user14/labor2/feladat2/Pont.cpp:332:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2520[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2578[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d2600[0m <[0;33mline:333:21[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m| |   |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d25e0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0cf0[0m[0;1;36m 'it'[0m [0;32m'int'[0m
[0;34m| |   |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x64d27b8[0m <[0;33mline:335:17[0m, [0;33mline:338:17[0m>
[0;34m| |   |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d26b0[0m <[0;33mline:335:21[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   |   |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2698[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2658[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0cf0[0m[0;1;36m 'it'[0m [0;32m'int'[0m
[0;34m| |   |   |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2678[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 9[0m
[0;34m| |   |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64d27a0[0m <[0;33mline:336:17[0m, [0;33mline:338:17[0m>
[0;34m| |   |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2780[0m <[0;33mline:337:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d26d0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0fb8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2760[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m| |   |   |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2730[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d26f0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2748[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2710[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d27f0[0m <[0;33mline:339:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m| |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d27d0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0fb8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m| |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x64d2a30[0m <[0;33mline:341:13[0m, [0;33mline:342:21[0m>
[0;34m| |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d29b0[0m <[0;33mline:341:17[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m| |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d28c0[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m| |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d28a8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2868[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2888[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2990[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m| |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2978[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d28e0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2958[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |   |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2940[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2900[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d2920[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m| |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d2a10[0m <[0;33mline:342:17[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d29d0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d29f0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m| |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x64d8f48[0m <[0;33mline:343:13[0m, [0;33mline:344:30[0m>
[0;34m| |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d8e18[0m <[0;33mline:343:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m| |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d2a88[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2a48[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d8e00[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d2a68[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x64d08a8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m| |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d8f28[0m <[0;33mline:344:17[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m ','
[0;34m| |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d8ed0[0m <[0;33mcol:17[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d8e38[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |       | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d8eb0[0m <[0;33mcol:21[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |   |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d8e98[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d8e58[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0e48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m| |   |       |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64d8e78[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m| |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d8f10[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m| |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d8ef0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0da8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m| |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64d9020[0m <[0;33mline:346:9[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m| |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d8fb0[0m <[0;33mcol:9[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0f10[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64d9008[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m| |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d8ff0[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d8fd0[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0f10[0m[0;1;36m 'isUp'[0m [0;32m'bool'[0m
[0;34m| `-[0m[0;1;35mReturnStmt[0m[0;33m 0x64d90d0[0m <[0;33mline:348:5[0m, [0;33mcol:12[0m>
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64d90b8[0m <[0;33mcol:12[0m> [0;32m'Pont *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64d9098[0m <[0;33mcol:12[0m> [0;32m'Pont *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64d0a00[0m[0;1;36m 'res'[0m [0;32m'Pont *'[0m
[0;34m`-[0m[0;34mFullComment[0m[0;33m 0x65fd8e0[0m <[0;33mline:290:4[0m, [0;33mcol:152[0m>
[0;34m  `-[0m[0;34mParagraphComment[0m[0;33m 0x65fd8b0[0m <[0;33mcol:4[0m, [0;33mcol:152[0m>
[0;34m    `-[0m[0;34mTextComment[0m[0;33m 0x65fd880[0m <[0;33mcol:4[0m, [0;33mcol:152[0m> Text="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

