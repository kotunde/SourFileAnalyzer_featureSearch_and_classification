Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x65c9d38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65c9ca8[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x6b7ae20[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x6de8998[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6de8af8[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6de8b88[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6de8c98[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6de8bc0[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6de8df0[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6de8d60[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6de8ef0[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6de87e8 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6de8fc8[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x6de8fc8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6de90d8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6de9178[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x6de9178
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6de9288[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x6f4d8d8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/Ahyangyi/1836486_1484496_Ahyangyi.cpp:9:1[0m, [0;33mline:75:1[0m> [0;33mline:9:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f807b0[0m <[0;33mline:10:1[0m, [0;33mline:75:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f4da90[0m <[0;33mline:11:5[0m, [0;33mcol:13[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4d990[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m t[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4da10[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f4db48[0m <[0;33mline:12:5[0m, [0;33mcol:15[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4dac0[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;33mcol:9[0m used[0;1;36m ct[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f4db28[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6f80748[0m <[0;33mline:14:5[0m, [0;33mline:72:5[0m>
[0;34m  | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6f4dc90[0m <[0;33mline:14:10[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4dc78[0m <[0;33mcol:10[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4dc00[0m <[0;33mcol:10[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b7100[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4dcc0[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f4dba8[0m <[0;33mcol:17[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f4dbe8[0m <[0;33mcol:23[0m, [0;33mcol:24[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4dbc8[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4d990[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f4dd30[0m <[0;33mcol:28[0m, [0;33mcol:32[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4dd18[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4dcd8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4d990[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f4dcf8[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f4dd70[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4dd50[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4d990[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f806e8[0m <[0;33mline:15:5[0m, [0;33mline:72:5[0m>
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6f4de60[0m <[0;33mline:16:9[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4de48[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4de28[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b7100[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4de90[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f4ddd0[0m <[0;33mcol:16[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f4de10[0m <[0;33mcol:22[0m, [0;33mcol:23[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4ddf0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4da10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x6f4e1a0[0m <[0;33mline:17:9[0m, [0;33mline:18:34[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f4df48[0m <[0;33mline:17:14[0m, [0;33mcol:23[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4dec0[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f4df28[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f4dfd0[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4dfa0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4df60[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4dec0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4dfb8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4df80[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4da10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f4e010[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4dff0[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4dec0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6f4e158[0m <[0;33mline:18:13[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e140[0m <[0;33mcol:13[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e120[0m <[0;33mcol:13[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b7100[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e188[0m <[0;33mcol:20[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f4e070[0m <[0;33mcol:20[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f4e100[0m <[0;33mcol:26[0m, [0;33mcol:33[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e0d0[0m <[0;33mcol:26[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e090[0m <[0;33mcol:26[0m> [0;32m'int [500]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f13be0[0m[0;1;36m 'data'[0m [0;32m'int [500]'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e0e8[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e0b0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4dec0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6f4e228[0m <[0;33mline:20:9[0m, [0;33mcol:18[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6f4e1f8[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .clear[0;33m 0x6f3f540[0m
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e1d8[0m <[0;33mcol:9[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f144a8[0m[0;1;36m 'M'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f4e360[0m <[0;33mline:22:9[0m, [0;33mcol:19[0m>
[0;34m  |   | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4e260[0m <[0;33mcol:9[0m, [0;33mcol:13[0m> [0;33mcol:13[0m used[0;1;36m i1[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4e2e0[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m i2[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6f4e4d0[0m <[0;33mline:23:9[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e4b8[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e498[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b48b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e500[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f4e438[0m <[0;33mcol:17[0m> [0;32m'const char [11]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d:\n"[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e518[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f4e480[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e460[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4dac0[0m[0;1;36m 'ct'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x6f7f5b0[0m <[0;33mline:25:9[0m, [0;33mline:41:9[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f4e5d0[0m <[0;33mline:25:14[0m, [0;33mcol:23[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4e548[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f4e5b0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f4e6b8[0m <[0;33mcol:25[0m, [0;33mcol:34[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e6a0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e5e8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e548[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6f4e680[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f4e660[0m <[0;33mcol:30[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m  |   | |     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f4e608[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e648[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e628[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4da10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f4e6f8[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e6d8[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e548[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f7f588[0m <[0;33mline:26:9[0m, [0;33mline:41:9[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f4e7b0[0m <[0;33mline:27:13[0m, [0;33mcol:24[0m>
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4e728[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;33mcol:17[0m used[0;1;36m sum[0m [0;32m'int'[0m cinit
[0;34m  |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f4e790[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   |-[0m[0;1;35mForStmt[0m[0;33m 0x6f4eb60[0m <[0;33mline:28:13[0m, [0;33mline:30:34[0m>
[0;34m  |   |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f4e868[0m <[0;33mline:28:18[0m, [0;33mcol:27[0m>
[0;34m  |   |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f4e7e0[0m <[0;33mcol:18[0m, [0;33mcol:26[0m> [0;33mcol:22[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f4e848[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f4e8f0[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e8c0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e880[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e7e0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e8d8[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e8a0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4da10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f4e930[0m <[0;33mcol:36[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e910[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e7e0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6f4eb48[0m <[0;33mline:29:17[0m, [0;33mline:30:34[0m>
[0;34m  |   |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4ea38[0m <[0;33mline:29:21[0m, [0;33mcol:32[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  |   |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f4ea18[0m <[0;33mcol:21[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '&'
[0;34m  |   |   |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4ea00[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e948[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e548[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x6f4e9e0[0m <[0;33mcol:25[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f4e9c0[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m  |   |   |   |       |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f4e968[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4e9a8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4e988[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e7e0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x6f4eb18[0m <[0;33mline:30:21[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'int'[0m ComputeResultTy=[0;32m'int'[0m
[0;34m  |   |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4ea50[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e728[0m[0;1;36m 'sum'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4eb00[0m <[0;33mcol:28[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f4eae0[0m <[0;33mcol:28[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4eab0[0m <[0;33mcol:28[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4ea70[0m <[0;33mcol:28[0m> [0;32m'int [500]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f13be0[0m[0;1;36m 'data'[0m [0;32m'int [500]'[0m
[0;34m  |   |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f4eac8[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4ea90[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e7e0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6f7f560[0m <[0;33mline:31:13[0m, [0;33mline:40:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6f7f188[0m <[0;33mline:31:17[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6f7f150[0m <[0;33mcol:17[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f138[0m <[0;33mcol:28[0m> [0;32m'bool (*)(const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f0b8[0m <[0;33mcol:28[0m> [0;32m'bool (const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6f50d10[0m[0;1;36m 'operator=='[0m [0;32m'bool (const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m
[0;34m  |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f0a0[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;32m'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |     |   | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6f7f088[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6f4fb60[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6f4fb30[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .find[0;33m 0x6f3f8b8[0m
[0;34m  |   |     |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4eb98[0m <[0;33mcol:17[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f144a8[0m[0;1;36m 'M'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m  |   |     |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f50f90[0m <[0;33mcol:24[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |     |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f4ec28[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e728[0m[0;1;36m 'sum'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6f7f040[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f028[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |     |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6f51140[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6f51110[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x6f3af08[0m
[0;34m  |   |     |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f51090[0m <[0;33mcol:30[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f144a8[0m[0;1;36m 'M'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m  |   |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f7f320[0m <[0;33mline:32:13[0m, [0;33mline:34:13[0m>
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f7f300[0m <[0;33mline:33:17[0m, [0;33mcol:26[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type':'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6f7f290[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type':'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f278[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(*)(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f1f8[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6f3bc08[0m[0;1;36m 'operator[]'[0m [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m
[0;34m  |   |     |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f1a0[0m <[0;33mcol:17[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f144a8[0m[0;1;36m 'M'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m  |   |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f1e0[0m <[0;33mcol:19[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |     |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f1c0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e728[0m[0;1;36m 'sum'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f2e8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f2c8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e548[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f7f538[0m <[0;33mline:36:13[0m, [0;33mline:40:13[0m>
[0;34m  |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f7f390[0m <[0;33mline:37:17[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f338[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e260[0m[0;1;36m 'i1'[0m [0;32m'int'[0m
[0;34m  |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f378[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f358[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e548[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f7f4b0[0m <[0;33mline:38:17[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f3b0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e2e0[0m[0;1;36m 'i2'[0m [0;32m'int'[0m
[0;34m  |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f498[0m <[0;33mcol:22[0m, [0;33mcol:27[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6f7f460[0m <[0;33mcol:22[0m, [0;33mcol:27[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type':'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f448[0m <[0;33mcol:23[0m, [0;33mcol:27[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(*)(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f428[0m <[0;33mcol:23[0m, [0;33mcol:27[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6f3bc08[0m[0;1;36m 'operator[]'[0m [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m
[0;34m  |   |       |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f3d0[0m <[0;33mcol:22[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f144a8[0m[0;1;36m 'M'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m  |   |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f410[0m <[0;33mcol:24[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f3f0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e728[0m[0;1;36m 'sum'[0m [0;32m'int'[0m
[0;34m  |   |       `-[0m[0;1;35mGotoStmt[0m[0;33m 0x6f7f520[0m <[0;33mline:39:17[0m, [0;33mcol:22[0m> 'second'[0;33m 0x6f7f4d0[0m
[0;34m  |   |-[0m[0;1;35mLabelStmt[0m[0;33m 0x6f7f720[0m <[0;33mline:43:1[0m, [0;33mline:44:31[0m> 'first'
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6f7f690[0m <[0;33mcol:9[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f678[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f658[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b48b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f6b8[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f7f630[0m <[0;33mcol:17[0m> [0;32m'const char [12]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Impossible\n"[0m
[0;34m  |   |-[0m[0;1;35mGotoStmt[0m[0;33m 0x6f7f788[0m <[0;33mline:45:9[0m, [0;33mcol:14[0m> 'third'[0;33m 0x6f7f738[0m
[0;34m  |   |-[0m[0;1;35mLabelStmt[0m[0;33m 0x6f806b0[0m <[0;33mline:46:1[0m, [0;33mline:69:9[0m> 'second'
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f80670[0m <[0;33mline:47:9[0m, [0;33mline:69:9[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f7f828[0m <[0;33mline:48:9[0m, [0;33mcol:26[0m>
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f7f7b0[0m <[0;33mcol:9[0m, [0;33mcol:21[0m> [0;33mcol:14[0m used[0;1;36m flag[0m [0;32m'bool'[0m cinit
[0;34m  |   |   |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6f7f818[0m <[0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   |   |-[0m[0;1;35mForStmt[0m[0;33m 0x6f7fe18[0m <[0;33mline:49:9[0m, [0;33mline:56:13[0m>
[0;34m  |   |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f7f8e0[0m <[0;33mline:49:14[0m, [0;33mcol:23[0m>
[0;34m  |   |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f7f858[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f7f8c0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f7f968[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f938[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f8f8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f858[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7f950[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f918[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4da10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f7f9a8[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f988[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f858[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6f7fe00[0m <[0;33mline:50:13[0m, [0;33mline:56:13[0m>
[0;34m  |   |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fab0[0m <[0;33mline:50:17[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  |   |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f7fa90[0m <[0;33mcol:17[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '&'
[0;34m  |   |   |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fa78[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7f9c0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e260[0m[0;1;36m 'i1'[0m [0;32m'int'[0m
[0;34m  |   |   |   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x6f7fa58[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f7fa38[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m  |   |   |   |       |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f7f9e0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fa20[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7fa00[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f858[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f7fdd8[0m <[0;33mline:51:13[0m, [0;33mline:56:13[0m>
[0;34m  |   |   |     |-[0m[0;1;35mIfStmt[0m[0;33m 0x6f7fbe0[0m <[0;33mline:52:17[0m, [0;33mline:53:32[0m>
[0;34m  |   |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fae8[0m <[0;33mline:52:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7fac8[0m <[0;33mcol:21[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f7b0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |   |   |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6f7fba0[0m <[0;33mline:53:21[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fb88[0m <[0;33mcol:21[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7fb68[0m <[0;33mcol:21[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b48b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fbc8[0m <[0;33mcol:29[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   |     |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f7fb48[0m <[0;33mcol:29[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " "[0m
[0;34m  |   |   |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6f7fd28[0m <[0;33mline:54:17[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fd10[0m <[0;33mcol:17[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7fcf0[0m <[0;33mcol:17[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b48b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fd58[0m <[0;33mcol:25[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   |     | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f7fc40[0m <[0;33mcol:25[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  |   |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fd70[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f7fcd0[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fca0[0m <[0;33mcol:31[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7fc60[0m <[0;33mcol:31[0m> [0;32m'int [500]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f13be0[0m[0;1;36m 'data'[0m [0;32m'int [500]'[0m
[0;34m  |   |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fcb8[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7fc80[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f858[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f7fdb8[0m <[0;33mline:55:17[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7fd88[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f7b0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |   |   |       `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6f7fda8[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |   |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6f7fef0[0m <[0;33mline:57:9[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7fed8[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7feb8[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b48b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f7ff18[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f7fe98[0m <[0;33mcol:17[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f7ff60[0m <[0;33mline:59:9[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f7ff30[0m <[0;33mcol:9[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f7b0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |   |   | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6f7ff50[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   |   |-[0m[0;1;35mForStmt[0m[0;33m 0x6f80558[0m <[0;33mline:60:9[0m, [0;33mline:67:13[0m>
[0;34m  |   |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6f80020[0m <[0;33mline:60:14[0m, [0;33mcol:23[0m>
[0;34m  |   |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6f7ff98[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f80000[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f800a8[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80078[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f80038[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7ff98[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80090[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f80058[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4da10[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6f800e8[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f800c8[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7ff98[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6f80540[0m <[0;33mline:61:13[0m, [0;33mline:67:13[0m>
[0;34m  |   |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f801f0[0m <[0;33mline:61:17[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  |   |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f801d0[0m <[0;33mcol:17[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '&'
[0;34m  |   |   |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f801b8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f80100[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f4e2e0[0m[0;1;36m 'i2'[0m [0;32m'int'[0m
[0;34m  |   |   |   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x6f80198[0m <[0;33mcol:22[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f80178[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m  |   |   |   |       |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f80120[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80160[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f80140[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7ff98[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6f80518[0m <[0;33mline:62:13[0m, [0;33mline:67:13[0m>
[0;34m  |   |   |     |-[0m[0;1;35mIfStmt[0m[0;33m 0x6f80320[0m <[0;33mline:63:17[0m, [0;33mline:64:32[0m>
[0;34m  |   |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80228[0m <[0;33mline:63:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f80208[0m <[0;33mcol:21[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f7b0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |   |   |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6f802e0[0m <[0;33mline:64:21[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f802c8[0m <[0;33mcol:21[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f802a8[0m <[0;33mcol:21[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b48b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80308[0m <[0;33mcol:29[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   |     |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f80288[0m <[0;33mcol:29[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " "[0m
[0;34m  |   |   |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6f80468[0m <[0;33mline:65:17[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80450[0m <[0;33mcol:17[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f80430[0m <[0;33mcol:17[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b48b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80498[0m <[0;33mcol:25[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   |     | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f80380[0m <[0;33mcol:25[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  |   |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f804b0[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6f80410[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f803e0[0m <[0;33mcol:31[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f803a0[0m <[0;33mcol:31[0m> [0;32m'int [500]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f13be0[0m[0;1;36m 'data'[0m [0;32m'int [500]'[0m
[0;34m  |   |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f803f8[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f803c0[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7ff98[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6f804f8[0m <[0;33mline:66:17[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f804c8[0m <[0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6f7f7b0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |   |   |       `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6f804e8[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6f80630[0m <[0;33mline:68:9[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80618[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6f805f8[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x65b48b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6f80658[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6f805d8[0m <[0;33mcol:17[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m
[0;34m  |   `-[0m[0;1;35mLabelStmt[0m[0;33m 0x6f806d0[0m <[0;33mline:70:1[0m, [0;33mline:71:9[0m> 'third'
[0;34m  |     `-[0m[0;1;35mNullStmt[0m[0;33m 0x6f806c8[0m <[0;33mcol:9[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6f807a0[0m <[0;33mline:74:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6f80780[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

