Dumping std::__is_convertible_helper:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5e4e7d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1516:3[0m, [0;33mline:1520:49[0m> [0;33mline:1519:12[0m[0;1;36m __is_convertible_helper[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e4dfa8[0m <[0;33mline:1516:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e4e018[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5e4e6a8[0m <[0;33mline:1517:12[0m, [0;33mline:1518:41[0m> [0;33mline:1517:17[0m [0;32m'bool'[0m depth 0 index 2
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e4e708[0m <[0;33mcol:19[0m, [0;33mline:1518:41[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5e4e660[0m <[0;33mline:1517:19[0m, [0;33mline:1518:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5e4e748[0m <[0;33mline:1519:5[0m, [0;33mline:1520:49[0m> [0;33mline:1519:12[0m struct[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5e4eab0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_helper[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5e4eca0[0m <[0;33mline:1520:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m type[0m [0;32m'typename is_void<_To>::type'[0m
[0;34m|   `-[0m[0;32mDependentNameType[0m[0;33m 0x5e4ec30[0m [0;32m'typename is_void<_To>::type'[0m dependent
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6db8558[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6db88d0[0m prev 0x6db8558 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6db8b68[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6db8960[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6db8ac8[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6db8a00[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6db9de8[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (std::_Rb_tree_node_base *)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6db9d28[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'std::_Rb_tree_node_base *':'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6db90e0[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6db8c48[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6db8cb8[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6db8d28[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6db9040[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6db8fb0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6dba120[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6dba090[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6db9368[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6db91c0[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6db9238[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6db92c8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6db9678[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6db9440[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6dba388[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<std::_Rb_tree_node_base *const &, std::_Rb_tree_node_base *>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x6dba350[0m [0;32m'decltype(__test<std::_Rb_tree_node_base *const &, std::_Rb_tree_node_base *>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6dba300[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dba2e8[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dba250[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6dba120[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6db90e0[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6dd1b30[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6dd1e70[0m prev 0x6dd1b30 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6dd2108[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6dd1f00[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6dd2068[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6dd1fa0[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6dd2640[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6dd21e8[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6dd2258[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6dd22c8[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6dd25a0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6dd2510[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6dd28c8[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6dd2720[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6dd2798[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6dd2828[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6dd2b58[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6dd29a0[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6dd3478[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<int &&, std::_Rb_tree_node_base *>(0))':'std::integral_constant<bool, false>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x6dd3440[0m [0;32m'decltype(__test<int &&, std::_Rb_tree_node_base *>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6dd33e8[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6dd33d0[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::false_type (*)(...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6dd3338[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::false_type (...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6dd2b58[0m[0;1;36m '__test'[0m [0;32m'std::false_type (...)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6dd28c8[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db2d80[0m [0;32m'std::false_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9e18[0m[0;1;36m 'false_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9d30[0m [0;32m'integral_constant<bool, false>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9bf0[0m <[0;33mline:90:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m false[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da9bc0[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9d10[0m [0;32m'std::integral_constant<bool, false>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9c10[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x70681c8[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const bool &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7068540[0m prev 0x70681c8 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x70687d8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70685d0[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7068738[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7068670[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7069998[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (bool)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70698d8[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'bool':'bool'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7068d10[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70688b8[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7068928[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7068998[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7068c70[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7068be0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x706b330[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'const bool &'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x706b2a0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7068f98[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7068df0[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7068e68[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7068ef8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7069228[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'const bool &'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x7069070[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x706b598[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<const bool &, bool>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x706b560[0m [0;32m'decltype(__test<const bool &, bool>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x706b510[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x706b4f8[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x706b460[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x706b330[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7068d10[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x706e7d8[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const unsigned long &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x706eb60[0m prev 0x706e7d8 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x706edf8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x706ebf0[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x706ed58[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x706ec90[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x706ffb8[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (unsigned long)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x706fef8[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'unsigned long':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x706f330[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x706eed8[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x706ef48[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x706efb8[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x706f290[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x706f200[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70702f0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'const unsigned long &'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7070260[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x706f5b8[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x706f410[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x706f488[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x706f518[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x706f848[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'const unsigned long &'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x706f690[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7070558[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<const unsigned long &, unsigned long>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x7070520[0m [0;32m'decltype(__test<const unsigned long &, unsigned long>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x70704d0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70704b8[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7070420[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x70702f0[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x706f330[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x70832d0[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'bool &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7083610[0m prev 0x70832d0 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x70838a8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70836a0[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7083808[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7083740[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7084a68[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (bool)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70849a8[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'bool':'bool'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7083de0[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7083988[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70839f8[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7083a68[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7083d40[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7083cb0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7084d70[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'bool &&'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7084ce0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7084068[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7083ec0[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7083f38[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7083fc8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70842f8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'bool &&'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x7084140[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7084fd8[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<bool &&, bool>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x7084fa0[0m [0;32m'decltype(__test<bool &&, bool>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x7084f50[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7084f38[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7084ea0[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7084d70[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7083de0[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x70936f0[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7093a40[0m prev 0x70936f0 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7093cd8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7093ad0[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7093c38[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7093b70[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7094e98[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (unsigned long)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7094dd8[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'unsigned long':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7094210[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7093db8[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7093e28[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7093e98[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7094170[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70940e0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70951a0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long &&'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7095110[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7094498[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70942f0[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7094368[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70943f8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7094728[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long &&'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x7094570[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7095408[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<unsigned long &&, unsigned long>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x70953d0[0m [0;32m'decltype(__test<unsigned long &&, unsigned long>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x7095380[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7095368[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70952d0[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x70951a0[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7094210[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x70e8a28[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const int &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x70e8db0[0m prev 0x70e8a28 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x70e9048[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70e8e40[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70e8fa8[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70e8ee0[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70ea208[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70ea148[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'int':'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x70e9580[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70e9128[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70e9198[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70e9208[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70e94e0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70e9450[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70ea540[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'const int &'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70ea4b0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x70e9808[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70e9660[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x70e96d8[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70e9768[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x70e9a98[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'const int &'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x70e98e0[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x70ea7a8[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<const int &, int>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x70ea770[0m [0;32m'decltype(__test<const int &, int>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x70ea720[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70ea708[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70ea670[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x70ea540[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x70e9580[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7102250[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7102570[0m prev 0x7102250 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7102808[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7102600[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7102768[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71026a0[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x71039c8[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7103908[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'int':'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7102d40[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71028e8[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7102958[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71029c8[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7102ca0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7102c10[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7103cd0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7103c40[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7102fc8[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7102e20[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7102e98[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7102f28[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7103258[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x71030a0[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7103f38[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<int &&, int>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x7103f00[0m [0;32m'decltype(__test<int &&, int>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x7103eb0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7103e98[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7103e00[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7103cd0[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7102d40[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7118cf0[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const int &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7119010[0m prev 0x7118cf0 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x71192a8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71190a0[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7119208[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7119140[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x711a468[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (unsigned long)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x711a3a8[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'unsigned long':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x71197e0[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7119388[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71193f8[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7119468[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7119740[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71196b0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x711a790[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'const int &'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x711a700[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7119a68[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71198c0[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7119938[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x71199c8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7119cf8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'const int &'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x7119b40[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x711a9f8[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<const int &, unsigned long>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x711a9c0[0m [0;32m'decltype(__test<const int &, unsigned long>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x711a970[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x711a958[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x711a8c0[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x711a790[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x71197e0[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7126e20[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |-[0mTemplateArgument integral 0
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7127140[0m prev 0x7126e20 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x71273d8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71271d0[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7127338[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7127270[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7128598[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (unsigned long)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71284d8[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'unsigned long':'unsigned long'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7127910[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71274b8[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7127528[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7127598[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m| | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7127870[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71277e0[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x71288c0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7128830[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7127b98[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x71279f0[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7127a68[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7127af8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7127e28[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m| |   |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |   `-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x7127c70[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x7128b28[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<int &&, unsigned long>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x7128af0[0m [0;32m'decltype(__test<int &&, unsigned long>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x7128aa0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7128a88[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71289f0[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x71288c0[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7127910[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7314540[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument integral 0
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x73148b0[0m prev 0x7314540 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7314b48[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7314940[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7314aa8[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m  | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x73149e0[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x731b3d8[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (std::input_iterator_tag)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x731b2e8[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'std::input_iterator_tag':'std::input_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7315080[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7314c28[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7314c98[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7314d08[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m  | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7314fe0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m  | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x7314f50[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x731b7c0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x731b730[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x7315308[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x7315160[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x73151d8[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7315268[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x7315598[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |   `-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x73153e0[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x731ba28[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<std::random_access_iterator_tag, std::input_iterator_tag>(0))':'std::integral_constant<bool, true>'[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x731b9f0[0m [0;32m'decltype(__test<std::random_access_iterator_tag, std::input_iterator_tag>(0))'[0m sugar
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x731b9a0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x731b988[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x731b8f0[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x731b7c0[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7315080[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      `-[0m[0;32mTypedefType[0m[0;33m 0x5db6110[0m [0;32m'std::true_type'[0m sugar
[0;34m        |-[0m[0;1;32mTypedef[0m[0;33m 0x5da9b58[0m[0;1;36m 'true_type'[0m
[0;34m        `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5da9a70[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m          |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m          |-[0mTemplateArgument expr
[0;34m          | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5da9938[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m          |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5da7b80[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m          `-[0m[0;32mRecordType[0m[0;33m 0x5da9a50[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m            `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5da9958[0m[0;1;36m 'integral_constant'[0m

Dumping std::__is_convertible_helper:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5e4eff0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-1'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e4ed10[0m <[0;33mline:1522:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e4ed88[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5e507e8[0m <[0;33mline:1523:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5e50ad8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e50878[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 1 index 0[0;1;36m _To1[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5e50a38[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e50910[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5e51038[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e50b38[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _From1[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e50ba8[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced typename depth 1 index 1[0;1;36m _To1[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e50e58[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 1 index 2
[0;34m| | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5e50f98[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e50f08[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5e51258[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e51098[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 1 index 0
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e51108[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 1 index 1
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5e511b8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x5e512b0[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5e51458[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m[0;1;36m type[0m [0;32m'decltype(__test<_From, _To>(0))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x5e51420[0m [0;32m'decltype(__test<_From, _To>(0))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5e513f0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5e51310[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__test'[0;33m 0x5e51258[0m[0;33m 0x5e51038[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e513d0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::is_convertible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5e51b20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e514c8[0m <[0;33mline:1543:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5e51538[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5e515c8[0m <[0;33mline:1544:5[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<_From, _To>::type'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5e523c0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6db52a8[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<_Rb_tree_node_base *const &, _Rb_tree_node_base *>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6dba4a0[0m prev 0x6db52a8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6dbbff8[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<int &&, _Rb_tree_node_base *>::type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6dd3590[0m prev 0x6dbbff8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7064e08[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<const bool &, bool>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const bool &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x706b6b0[0m prev 0x7064e08 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7065038[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<const unsigned long &, unsigned long>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const unsigned long &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7070670[0m prev 0x7065038 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7071898[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<bool &&, bool>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'bool &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x70850f0[0m prev 0x7071898 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x70890b8[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<unsigned long &&, unsigned long>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7095520[0m prev 0x70890b8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x70e53c8[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<const int &, int>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const int &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x70ea8c0[0m prev 0x70e53c8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x70fa7e0[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<int &&, int>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7104050[0m prev 0x70fa7e0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7117270[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<const int &, unsigned long>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const int &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x711ab10[0m prev 0x7117270 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x7120350[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<int &&, unsigned long>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'unsigned long'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x7128c40[0m prev 0x7120350 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x730a1b0[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_helper<random_access_iterator_tag, input_iterator_tag>::type':'std::integral_constant<bool, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x731bb40[0m prev 0x730a1b0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m

Dumping __do_converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5ed1258[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:128:2[0m, [0;33mline:129:33[0m> [0;33mline:128:8[0m referenced[0;1;36m __do_converts[0m [0;32m'__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5ed1170[0m [0;32m'__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >'[0m dependent __and_
[0;34m  |-[0mTemplateArgument type [0;32m'is_convertible<const _U1 &, _T1>'[0m
[0;34m  `-[0mTemplateArgument type [0;32m'is_convertible<_U2 &&, _T2>'[0m

Dumping __converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5ed1630[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:130:2[0m, [0;33mline:132:36[0m> [0;33mline:130:8[0m referenced[0;1;36m __converts[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m
[0;34m`-[0m[0;32mDependentNameType[0m[0;33m 0x5ed15c0[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m dependent

Dumping __do_converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5ed2168[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:142:2[0m, [0;33mline:143:38[0m> [0;33mline:142:8[0m referenced[0;1;36m __do_converts[0m [0;32m'__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5ed2080[0m [0;32m'__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >'[0m dependent __and_
[0;34m  |-[0mTemplateArgument type [0;32m'is_convertible<_U1 &&, _T1>'[0m
[0;34m  `-[0mTemplateArgument type [0;32m'is_convertible<const _U2 &, _T2>'[0m

Dumping __converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5ed40f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:144:2[0m, [0;33mline:146:36[0m> [0;33mline:144:8[0m referenced[0;1;36m __converts[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m
[0;34m`-[0m[0;32mDependentNameType[0m[0;33m 0x5ed4080[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m dependent

Dumping std::__convert_from_v:
[0;1;32mFunctionDecl[0m[0;33m 0x6492a90[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++locale.h:68:3[0m, [0;33mline:109:3[0m> [0;33mline:69:3[0m referenced[0;1;36m __convert_from_v[0m [0;32m'int (const std::__c_locale &, char *, const int, const char *, ...)'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6492748[0m <[0;33mcol:20[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __cloc[0m [0;32m'const std::__c_locale &'[0m
[0;34m| `-[0m[0;1;34mUnusedAttr[0m[0;33m 0x64927b0[0m <[0;33mcol:61[0m> unused
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6492808[0m <[0;33mline:70:6[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m __out[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6492888[0m <[0;33mline:71:6[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __size[0m [0;32m'const int'[0m
[0;34m| `-[0m[0;1;34mUnusedAttr[0m[0;33m 0x64928f0[0m <[0;33mcol:39[0m> unused
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6492948[0m <[0;33mline:72:6[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m __fmt[0m [0;32m'const char *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64940d0[0m <[0;33mline:73:3[0m, [0;33mline:109:3[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6492d00[0m <[0;33mline:75:5[0m, [0;33mcol:54[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6492b60[0m <[0;33mcol:5[0m, [0;33mcol:53[0m> [0;33mcol:16[0m used[0;1;36m __old[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6492cc0[0m <[0;33mcol:24[0m, [0;33mcol:53[0m> [0;32m'locale_t':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6492ca8[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'typeof (uselocale) *'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6492c00[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6492468[0m[0;1;36m '__uselocale'[0m [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6492ce8[0m <[0;33mcol:47[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6492c30[0m <[0;33mcol:47[0m> [0;32m'const std::__c_locale':'struct __locale_struct *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6492748[0m[0;1;36m '__cloc'[0m [0;32m'const std::__c_locale &'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6493310[0m <[0;33mline:88:5[0m, [0;33mcol:29[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6492d28[0m <[0;33mcol:5[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __args[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x64931e8[0m <[0;33mcol:23[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6493600[0m <[0;33mline:89:5[0m, [0;33mcol:37[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64935e8[0m <[0;33mcol:5[0m> [0;32m'void (*)(__va_list_tag *, ...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493530[0m <[0;33mcol:5[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x64933e0[0m[0;1;36m '__builtin_va_start'[0m [0;32m'void (__va_list_tag *, ...) noexcept'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493630[0m <[0;33mcol:24[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493550[0m <[0;33mcol:24[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6492d28[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493570[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6492948[0m[0;1;36m '__fmt'[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6493cb0[0m <[0;33mline:92:5[0m, [0;33mcol:72[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6493660[0m <[0;33mcol:5[0m, [0;33mcol:71[0m> [0;33mcol:15[0m used[0;1;36m __ret[0m [0;32m'const int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6493ba0[0m <[0;33mcol:23[0m, [0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493b88[0m <[0;33mcol:23[0m> [0;32m'int (*)(char *, unsigned long, const char *, __va_list_tag *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493a28[0m <[0;33mcol:23[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6493768[0m[0;1;36m '__builtin_vsnprintf'[0m [0;32m'int (char *, unsigned long, const char *, __va_list_tag *) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493be0[0m <[0;33mcol:43[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493a48[0m <[0;33mcol:43[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6492808[0m[0;1;36m '__out'[0m [0;32m'char *'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493c10[0m <[0;33mcol:50[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493bf8[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493a68[0m <[0;33mcol:50[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6492888[0m[0;1;36m '__size'[0m [0;32m'const int'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493c28[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493a88[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6492948[0m[0;1;36m '__fmt'[0m [0;32m'const char *'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493c40[0m <[0;33mcol:65[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493aa8[0m <[0;33mcol:65[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6492d28[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6493f80[0m <[0;33mline:97:5[0m, [0;33mcol:28[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493f68[0m <[0;33mcol:5[0m> [0;32m'void (*)(__va_list_tag *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493ed0[0m <[0;33mcol:5[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6493d80[0m[0;1;36m '__builtin_va_end'[0m [0;32m'void (__va_list_tag *) noexcept'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6493fa8[0m <[0;33mcol:22[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493ef0[0m <[0;33mcol:22[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6492d28[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6494048[0m <[0;33mline:100:5[0m, [0;33mcol:33[0m> [0;32m'locale_t':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6494030[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;32m'typeof (uselocale) *'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6493fe0[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6492468[0m[0;1;36m '__uselocale'[0m [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6494070[0m <[0;33mcol:28[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6494010[0m <[0;33mcol:28[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6492b60[0m[0;1;36m '__old'[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x64940c0[0m <[0;33mline:108:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64940a8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6494088[0m <[0;33mcol:12[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6493660[0m[0;1;36m '__ret'[0m [0;32m'const int'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x67fa150[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:71:3[0m, [0;33mline:74:31[0m> [0;33mline:73:5[0m[0;1;36m __convert_to_v[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x67f9c80[0m <[0;33mline:71:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x67fa0b0[0m <[0;33mline:72:5[0m, [0;33mline:74:31[0m> [0;33mline:73:5[0m[0;1;36m __convert_to_v[0m [0;32m'void (const char *, _Tp &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67f9d28[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67f9dc8[0m <[0;33mcol:33[0m, [0;33mcol:36[0m> [0;33mcol:37[0m [0;32m'_Tp &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67f9ef0[0m <[0;33mcol:39[0m, [0;33mcol:56[0m> [0;33mcol:57[0m [0;32m'ios_base::iostate &'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67f9f68[0m <[0;33mline:74:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m
[0;34m|-[0m[0;1;32mFunction[0m[0;33m 0x67fa500[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, float &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0m[0;1;32mFunction[0m[0;33m 0x67fade0[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m`-[0m[0;1;32mFunction[0m[0;33m 0x67fb640[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, long double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x67fa500[0m prev 0x67fa950 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:77:3[0m, [0;33mline:80:31[0m> [0;33mline:79:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, float &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fa1f0[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fa270[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;33mcol:39[0m [0;32m'float &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fa340[0m <[0;33mcol:41[0m, [0;33mcol:58[0m> [0;33mcol:59[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fa3b8[0m <[0;33mline:80:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x67fade0[0m prev 0x67fb1b0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:82:3[0m, [0;33mline:85:31[0m> [0;33mline:84:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67faad0[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fab50[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;33mcol:40[0m [0;32m'double &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fac20[0m <[0;33mcol:42[0m, [0;33mcol:59[0m> [0;33mcol:60[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fac98[0m <[0;33mline:85:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x67fb640[0m prev 0x67fba10 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:87:3[0m, [0;33mline:90:31[0m> [0;33mline:89:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, long double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fb330[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fb3b0[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'long double &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fb480[0m <[0;33mcol:47[0m, [0;33mcol:64[0m> [0;33mcol:65[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67fb4f8[0m <[0;33mline:90:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::ctype<wchar_t>::_M_convert_to_wmask:
[0;1;32mCXXMethodDecl[0m[0;33m 0x6814780[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:1229:7[0m, [0;33mline:1230:55[0m> [0;33mcol:7[0m[0;1;36m _M_convert_to_wmask[0m [0;32m'std::ctype<wchar_t>::__wmask_type (const std::ctype_base::mask) const throw()'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6814688[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __m[0m [0;32m'const std::ctype_base::mask':'const unsigned short'[0m

Dumping std::__cxx11::messages::_M_convert_to_char:
[0;1;32mCXXMethodDecl[0m[0;33m 0x68fb080[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets_nonio.h:1949:7[0m, [0;33mline:1954:7[0m> [0;33mline:1950:7[0m[0;1;36m _M_convert_to_char[0m [0;32m'char *(const std::__cxx11::messages::string_type &) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x68faf80[0m <[0;33mcol:26[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __msg[0m [0;32m'const std::__cxx11::messages::string_type &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x68fb790[0m <[0;33mline:1951:7[0m, [0;33mline:1954:7[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x68fb780[0m <[0;33mline:1953:2[0m, [0;33mcol:67[0m>
[0;34m    `-[0m[0;1;35mCXXReinterpretCastExpr[0m[0;33m 0x68fb750[0m <[0;33mcol:9[0m, [0;33mcol:67[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m reinterpret_cast<char *> <Dependent>
[0;34m      `-[0m[0;1;35mCXXConstCastExpr[0m[0;33m 0x68fb708[0m <[0;33mcol:33[0m, [0;33mcol:66[0m> [0;32m'_CharT *'[0m[0;36m[0m[0;36m[0m const_cast<_CharT *> <NoOp>
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x68fb6b0[0m <[0;33mcol:53[0m, [0;33mcol:65[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x68fb668[0m <[0;33mcol:53[0m, [0;33mcol:59[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .c_str
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x68fb648[0m <[0;33mcol:53[0m> [0;32m'const std::__cxx11::messages::string_type':'const basic_string<_CharT>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x68faf80[0m[0;1;36m '__msg'[0m [0;32m'const std::__cxx11::messages::string_type &'[0m

Dumping std::__cxx11::messages::_M_convert_from_char:
[0;1;32mCXXMethodDecl[0m[0;33m 0x68fb238[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets_nonio.h:1957:7[0m, [0;33mline:1962:7[0m> [0;33mline:1958:7[0m[0;1;36m _M_convert_from_char[0m [0;32m'std::__cxx11::messages::string_type (char *) const'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x68fb140[0m <[0;33mcol:28[0m, [0;33mcol:32[0m> [0;33mcol:33[0m [0;32m'char *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x68fb7e8[0m <[0;33mline:1959:7[0m, [0;33mline:1962:7[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x68fb7d8[0m <[0;33mline:1961:2[0m, [0;33mcol:21[0m>
[0;34m    `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x68fb7b8[0m <[0;33mcol:9[0m, [0;33mcol:21[0m> [0;32m'std::__cxx11::messages::string_type':'basic_string<_CharT>'[0m[0;36m[0m[0;36m[0m [0;32m'std::__cxx11::messages::string_type':'basic_string<_CharT>'[0m

Dumping std::__is_erased_or_convertible:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x69dc108[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/uses_allocator.h:41:3[0m, [0;33mline:43:71[0m> [0;33mline:42:5[0m[0;1;36m __is_erased_or_convertible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x69dbb90[0m <[0;33mline:41:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Alloc[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x69dbc08[0m <[0;33mcol:29[0m, [0;33mcol:38[0m> [0;33mcol:38[0m referenced typename depth 0 index 1[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x69dc0a8[0m <[0;33mline:42:5[0m, [0;33mline:43:71[0m> [0;33mline:42:11[0m[0;1;36m __is_erased_or_convertible[0m [0;32m'__or_<is_same<_Tp, std::__erased_type>, is_convertible<_Alloc, _Tp> >'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x69dbfc0[0m [0;32m'__or_<is_same<_Tp, std::__erased_type>, is_convertible<_Alloc, _Tp> >'[0m dependent __or_
[0;34m    |-[0mTemplateArgument type [0;32m'is_same<_Tp, std::__erased_type>'[0m
[0;34m    `-[0mTemplateArgument type [0;32m'is_convertible<_Alloc, _Tp>'[0m

Dumping std::__cxx11::wstring_convert:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6ae5268[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:166:3[0m, [0;33mline:314:5[0m> [0;33mline:169:11[0m[0;1;36m wstring_convert[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ae4e58[0m <[0;33mline:166:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ae4ed8[0m <[0;33mcol:31[0m, [0;33mcol:48[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Elem[0m
[0;34m| `-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ae5000[0m <[0;33mline:167:5[0m, [0;33mcol:43[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _Wide_alloc[0m
[0;34m| `-[0mTemplateArgument type [0;32m'allocator<_Elem>'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6ae5130[0m <[0;33mline:168:5[0m, [0;33m<scratch space>:201:1[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:168:14[0m referenced typename depth 0 index 3[0;1;36m _Byte_alloc[0m
[0;34m| `-[0mTemplateArgument type [0;32m'allocator<char>':'std::allocator<char>'[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ae51d8[0m <[0;33mline:169:5[0m, [0;33mline:314:5[0m> [0;33mline:169:11[0m class[0;1;36m wstring_convert[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m standard_layout has_user_declared_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m non_trivial user_declared has_const_param implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param user_declared implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m
[0;34m  | `-[0m[0;1;32mDestructor[0m irrelevant non_trivial user_declared
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ae5560[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m wstring_convert[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ae55f0[0m <[0;33mline:171:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ae5890[0m <[0;33mline:172:7[0m, [0;33mcol:68[0m> [0;33mcol:68[0m referenced[0;1;36m byte_string[0m [0;32m'basic_string<char, char_traits<char>, _Byte_alloc>'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6ae5760[0m [0;32m'basic_string<char, char_traits<char>, _Byte_alloc>'[0m dependent basic_string
[0;34m  |   |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'char_traits<char>':'std::char_traits<char>'[0m
[0;34m  |   `-[0mTemplateArgument type [0;32m'_Byte_alloc'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ae5b60[0m <[0;33mline:173:7[0m, [0;33mcol:68[0m> [0;33mcol:68[0m referenced[0;1;36m wide_string[0m [0;32m'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6ae5a30[0m [0;32m'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m dependent basic_string
[0;34m  |   |-[0mTemplateArgument type [0;32m'_Elem'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'char_traits<_Elem>'[0m
[0;34m  |   `-[0mTemplateArgument type [0;32m'_Wide_alloc'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ae5c90[0m <[0;33mline:174:7[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m state_type[0m [0;32m'typename _Codecvt::state_type'[0m
[0;34m  | `-[0m[0;32mDependentNameType[0m[0;33m 0x6ae5c20[0m [0;32m'typename _Codecvt::state_type'[0m dependent
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6ae5e30[0m <[0;33mline:175:7[0m, [0;33mcol:62[0m> [0;33mcol:62[0m[0;1;36m int_type[0m [0;32m'typename wide_string::traits_type::int_type'[0m
[0;34m  | `-[0m[0;32mDependentNameType[0m[0;33m 0x6ae5dc0[0m [0;32m'typename wide_string::traits_type::int_type'[0m dependent
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ae5fc8[0m <[0;33mline:183:7[0m, [0;33mline:188:7[0m> [0;33mline:184:7[0m[0;1;36m wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>[0m [0;32m'void (_Codecvt *)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae5ec8[0m <[0;33mcol:23[0m, [0;33mcol:55[0m> [0;33mcol:33[0m referenced[0;1;36m __pcvt[0m [0;32m'_Codecvt *'[0m cinit
[0;34m  | | `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x6ae7f58[0m <[0;33mcol:42[0m, [0;33mcol:55[0m> [0;32m'_Codecvt *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6ae7f30[0m <[0;33mcol:54[0m, [0;33mcol:55[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ae7ca0[0m[0;1;36m '_M_cvt'[0m [0;32m'unique_ptr<_Codecvt>'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6ae8070[0m <[0;33mcol:66[0m, [0;33mcol:73[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8050[0m <[0;33mcol:67[0m> [0;32m'_Codecvt *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae5ec8[0m[0;1;36m '__pcvt'[0m [0;32m'_Codecvt *'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae8250[0m <[0;33mline:185:7[0m, [0;33mline:188:7[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6ae8238[0m <[0;33mline:186:2[0m, [0;33mline:187:41[0m>
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6ae8100[0m <[0;33mline:186:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae80d0[0m <[0;33mcol:7[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6ae7ca0[0m
[0;34m  |     |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae80c0[0m <[0;33mcol:7[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae81f8[0m <[0;33mline:187:4[0m, [0;33mcol:41[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae81e0[0m <[0;33mcol:4[0m> [0;32m'void (*)(const char *) __attribute__((noreturn))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae81c0[0m <[0;33mcol:4[0m> [0;32m'void (const char *) __attribute__((noreturn))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f23bb8[0m[0;1;36m '__throw_logic_error'[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae8220[0m <[0;33mcol:24[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |         `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6ae8198[0m <[0;33mcol:24[0m> [0;32m'const char [16]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "wstring_convert"[0m
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ae6238[0m <[0;33mline:198:7[0m, [0;33mline:203:7[0m> [0;33mline:198:7[0m[0;1;36m wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>[0m [0;32m'void (_Codecvt *, std::__cxx11::wstring_convert::state_type)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6088[0m <[0;33mcol:23[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __pcvt[0m [0;32m'_Codecvt *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6120[0m <[0;33mcol:41[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __state[0m [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ae7ca0[0m[0;1;36m '_M_cvt'[0m [0;32m'unique_ptr<_Codecvt>'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6ae8288[0m <[0;33mline:199:15[0m, [0;33mcol:22[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8268[0m <[0;33mcol:16[0m> [0;32m'_Codecvt *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6088[0m[0;1;36m '__pcvt'[0m [0;32m'_Codecvt *'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ae7dc0[0m[0;1;36m '_M_state'[0m [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6ae82f0[0m <[0;33mcol:33[0m, [0;33mcol:41[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae82d0[0m <[0;33mcol:34[0m> [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6120[0m[0;1;36m '__state'[0m [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ae7e80[0m[0;1;36m '_M_with_cvtstate'[0m [0;32m'bool'[0m
[0;34m  | | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ae8338[0m <[0;33mcol:61[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae8500[0m <[0;33mline:200:7[0m, [0;33mline:203:7[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6ae84e8[0m <[0;33mline:201:2[0m, [0;33mline:202:41[0m>
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6ae83e8[0m <[0;33mline:201:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae83b8[0m <[0;33mcol:7[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6ae7ca0[0m
[0;34m  |     |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae83a8[0m <[0;33mcol:7[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae84a8[0m <[0;33mline:202:4[0m, [0;33mcol:41[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae8490[0m <[0;33mcol:4[0m> [0;32m'void (*)(const char *) __attribute__((noreturn))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8470[0m <[0;33mcol:4[0m> [0;32m'void (const char *) __attribute__((noreturn))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f23bb8[0m[0;1;36m '__throw_logic_error'[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae84d0[0m <[0;33mcol:24[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |         `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6ae8448[0m <[0;33mcol:24[0m> [0;32m'const char [16]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "wstring_convert"[0m
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ae6558[0m <[0;33mline:210:7[0m, [0;33mline:219:7[0m> [0;33mline:211:7[0m[0;1;36m wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>[0m [0;32m'void (const std::__cxx11::wstring_convert::byte_string &, const std::__cxx11::wstring_convert::wide_string &)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6378[0m <[0;33mcol:23[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __byte_err[0m [0;32m'const std::__cxx11::wstring_convert::byte_string &'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6448[0m <[0;33mline:212:9[0m, [0;33mcol:53[0m> [0;33mcol:28[0m referenced[0;1;36m __wide_err[0m [0;32m'const std::__cxx11::wstring_convert::wide_string &'[0m cinit
[0;34m  | | `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x6ae7fa8[0m <[0;33mcol:41[0m, [0;33mcol:53[0m> [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m[0;36m[0m[0;36m[0m [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ae7ca0[0m[0;1;36m '_M_cvt'[0m [0;32m'unique_ptr<_Codecvt>'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6ae8560[0m <[0;33mline:213:15[0m, [0;33mcol:28[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x6ae8528[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;32m'_Codecvt *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ae7d00[0m[0;1;36m '_M_byte_err_string'[0m [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6ae85c8[0m <[0;33mline:214:20[0m, [0;33mcol:31[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae85a8[0m <[0;33mcol:21[0m> [0;32m'const std::__cxx11::wstring_convert::byte_string':'const basic_string<char, char_traits<char>, _Byte_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6378[0m[0;1;36m '__byte_err'[0m [0;32m'const std::__cxx11::wstring_convert::byte_string &'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ae7d60[0m[0;1;36m '_M_wide_err_string'[0m [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6ae8630[0m <[0;33mcol:52[0m, [0;33mcol:63[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8610[0m <[0;33mcol:53[0m> [0;32m'const std::__cxx11::wstring_convert::wide_string':'const basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6448[0m[0;1;36m '__wide_err'[0m [0;32m'const std::__cxx11::wstring_convert::wide_string &'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6ae7ee0[0m[0;1;36m '_M_with_strings'[0m [0;32m'bool'[0m
[0;34m  | | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ae8678[0m <[0;33mline:215:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae8848[0m <[0;33mline:216:7[0m, [0;33mline:219:7[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6ae8830[0m <[0;33mline:217:2[0m, [0;33mline:218:41[0m>
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6ae8730[0m <[0;33mline:217:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae8700[0m <[0;33mcol:7[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6ae7ca0[0m
[0;34m  |     |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae86f0[0m <[0;33mcol:7[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae87f0[0m <[0;33mline:218:4[0m, [0;33mcol:41[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae87d8[0m <[0;33mcol:4[0m> [0;32m'void (*)(const char *) __attribute__((noreturn))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae87b8[0m <[0;33mcol:4[0m> [0;32m'void (const char *) __attribute__((noreturn))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f23bb8[0m[0;1;36m '__throw_logic_error'[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae8818[0m <[0;33mcol:24[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |         `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6ae8790[0m <[0;33mcol:24[0m> [0;32m'const char [16]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "wstring_convert"[0m
[0;34m  |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6ae6658[0m <[0;33mline:221:7[0m, [0;33mcol:34[0m> [0;33mcol:7[0m[0;1;36m ~wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>[0m [0;32m'void ()'[0m default
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6ae6808[0m <[0;33mline:225:7[0m, [0;33mcol:54[0m> [0;33mcol:7[0m[0;1;36m wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>[0m [0;32m'void (const wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> &)'[0m delete
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6748[0m <[0;33mcol:23[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'const wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae69b8[0m <[0;33mline:226:7[0m, [0;33mcol:65[0m> [0;33mcol:24[0m[0;1;36m operator=[0m [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> &(const wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> &)'[0m delete
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae68c8[0m <[0;33mcol:34[0m, [0;33mcol:55[0m> [0;33mcol:56[0m [0;32m'const wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae6b68[0m <[0;33mline:229:7[0m, [0;33mline:234:7[0m> [0;33mline:230:7[0m[0;1;36m from_bytes[0m [0;32m'std::__cxx11::wstring_convert::wide_string (char)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6a70[0m <[0;33mcol:18[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __byte[0m [0;32m'char'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae8b70[0m <[0;33mline:231:7[0m, [0;33mline:234:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ae8a00[0m <[0;33mline:232:2[0m, [0;33mcol:30[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ae88c0[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:7[0m referenced[0;1;36m __bytes[0m [0;32m'char [2]'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6ae8990[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'char [2]'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-array_filler: [0m[0;1;35mImplicitValueInitExpr[0m[0;33m 0x6ae89f0[0m <[0;33m<invalid sloc>[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae89d0[0m <[0;33mcol:22[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8928[0m <[0;33mcol:22[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6a70[0m[0;1;36m '__byte'[0m [0;32m'char'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ae8b60[0m <[0;33mline:233:2[0m, [0;33mcol:38[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae8b30[0m <[0;33mcol:9[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6ae8a28[0m <[0;33mcol:9[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8a98[0m <[0;33mcol:20[0m> [0;32m'char [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae88c0[0m[0;1;36m '__bytes'[0m [0;32m'char [2]'[0m
[0;34m  |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ae8b10[0m <[0;33mcol:29[0m, [0;33mcol:37[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae8af8[0m <[0;33mcol:29[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8ab8[0m <[0;33mcol:29[0m> [0;32m'char [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae88c0[0m[0;1;36m '__bytes'[0m [0;32m'char [2]'[0m
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ae8ad8[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae6d18[0m <[0;33mline:236:7[0m, [0;33mline:238:75[0m> [0;33mline:237:7[0m[0;1;36m from_bytes[0m [0;32m'std::__cxx11::wstring_convert::wide_string (const char *)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6c28[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __ptr[0m [0;32m'const char *'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae8e58[0m <[0;33mline:238:7[0m, [0;33mcol:75[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ae8e48[0m <[0;33mcol:9[0m, [0;33mcol:72[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae8e18[0m <[0;33mcol:16[0m, [0;33mcol:72[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6ae8ba0[0m <[0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8c10[0m <[0;33mcol:27[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6c28[0m[0;1;36m '__ptr'[0m [0;32m'const char *'[0m
[0;34m  |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ae8df8[0m <[0;33mcol:34[0m, [0;33mcol:71[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae8de0[0m <[0;33mcol:34[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8c30[0m <[0;33mcol:34[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6c28[0m[0;1;36m '__ptr'[0m [0;32m'const char *'[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae8da0[0m <[0;33mcol:40[0m, [0;33mcol:71[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae8d88[0m <[0;33mcol:40[0m, [0;33mcol:59[0m> [0;32m'std::size_t (*)(const std::char_traits<char>::char_type *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8d10[0m <[0;33mcol:40[0m, [0;33mcol:59[0m> [0;32m'std::size_t (const std::char_traits<char>::char_type *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64bdc88[0m[0;1;36m 'length'[0m [0;32m'std::size_t (const std::char_traits<char>::char_type *)'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae8dc8[0m <[0;33mcol:66[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8d40[0m <[0;33mcol:66[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6c28[0m[0;1;36m '__ptr'[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae6ec8[0m <[0;33mline:240:7[0m, [0;33mline:245:7[0m> [0;33mline:241:7[0m[0;1;36m from_bytes[0m [0;32m'std::__cxx11::wstring_convert::wide_string (const std::__cxx11::wstring_convert::byte_string &)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6dd0[0m <[0;33mcol:18[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced[0;1;36m __str[0m [0;32m'const std::__cxx11::wstring_convert::byte_string &'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae91f8[0m <[0;33mline:242:7[0m, [0;33mline:245:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ae8f70[0m <[0;33mline:243:2[0m, [0;33mcol:27[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ae8e80[0m <[0;33mcol:2[0m, [0;33mcol:26[0m> [0;33mcol:7[0m referenced[0;1;36m __ptr[0m [0;32m'auto'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae8f50[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6ae8f08[0m <[0;33mcol:15[0m, [0;33mcol:21[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .data
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae8ee8[0m <[0;33mcol:15[0m> [0;32m'const std::__cxx11::wstring_convert::byte_string':'const basic_string<char, char_traits<char>, _Byte_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6dd0[0m[0;1;36m '__str'[0m [0;32m'const std::__cxx11::wstring_convert::byte_string &'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ae91e8[0m <[0;33mline:244:2[0m, [0;33mcol:47[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae91b8[0m <[0;33mcol:9[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6ae8f98[0m <[0;33mcol:9[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9008[0m <[0;33mcol:20[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae8e80[0m[0;1;36m '__ptr'[0m [0;32m'auto'[0m
[0;34m  |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6ae9180[0m <[0;33mcol:27[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6ae90d0[0m <[0;33mcol:33[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9028[0m <[0;33mcol:27[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae8e80[0m[0;1;36m '__ptr'[0m [0;32m'auto'[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae90b0[0m <[0;33mcol:35[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6ae9068[0m <[0;33mcol:35[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m  |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9048[0m <[0;33mcol:35[0m> [0;32m'const std::__cxx11::wstring_convert::byte_string':'const basic_string<char, char_traits<char>, _Byte_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6dd0[0m[0;1;36m '__str'[0m [0;32m'const std::__cxx11::wstring_convert::byte_string &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae7118[0m <[0;33mline:247:7[0m, [0;33mline:259:7[0m> [0;33mline:248:7[0m[0;1;36m from_bytes[0m [0;32m'std::__cxx11::wstring_convert::wide_string (const char *, const char *)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae6f88[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __first[0m [0;32m'const char *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae7008[0m <[0;33mcol:39[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m __last[0m [0;32m'const char *'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae9878[0m <[0;33mline:249:7[0m, [0;33mline:259:7[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ae9318[0m <[0;33mline:250:2[0m, [0;33mline:251:26[0m>
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6ae9270[0m <[0;33mline:250:6[0m, [0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae9258[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae9228[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_with_cvtstate[0;33m 0x6ae7e80[0m
[0;34m  |   | |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae9218[0m <[0;33mcol:7[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6ae92f8[0m <[0;33mline:251:4[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae9298[0m <[0;33mcol:4[0m> [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_state[0;33m 0x6ae7dc0[0m
[0;34m  |   |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae9288[0m <[0;33mcol:4[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x6ae92d8[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m[0m[0;36m[0m [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ae9498[0m <[0;33mline:252:2[0m, [0;33mcol:57[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ae9340[0m <[0;33mcol:2[0m, [0;33mcol:56[0m> [0;33mcol:14[0m referenced[0;1;36m __out[0m [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m listinit
[0;34m  |   |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6ae9450[0m <[0;33mcol:19[0m, [0;33mcol:56[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae9430[0m <[0;33mcol:21[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6ae93e8[0m <[0;33mcol:21[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .get_allocator
[0;34m  |   |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae93b8[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_wide_err_string[0;33m 0x6ae7d60[0m
[0;34m  |   |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae93a8[0m <[0;33mcol:21[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ae96c0[0m <[0;33mline:253:2[0m, [0;33mline:255:11[0m>
[0;34m  |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae9638[0m <[0;33mline:253:6[0m, [0;33mline:254:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6ae94b0[0m <[0;33mline:253:6[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__str_codecvt_in'[0;33m 0x6ae2688[0m[0;33m 0x6ae1018[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9500[0m <[0;33mcol:23[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae6f88[0m[0;1;36m '__first'[0m [0;32m'const char *'[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9520[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae7008[0m[0;1;36m '__last'[0m [0;32m'const char *'[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9540[0m <[0;33mcol:40[0m> [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae9340[0m[0;1;36m '__out'[0m [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m
[0;34m  |   | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6ae95a0[0m <[0;33mcol:47[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |   | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae9570[0m <[0;33mcol:48[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6ae7ca0[0m
[0;34m  |   | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae9560[0m <[0;33mcol:48[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae95c8[0m <[0;33mcol:56[0m> [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_state[0;33m 0x6ae7dc0[0m
[0;34m  |   | | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae95b8[0m <[0;33mcol:56[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae9608[0m <[0;33mline:254:9[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_count[0;33m 0x6ae7e20[0m
[0;34m  |   | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae95f8[0m <[0;33mcol:9[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ae96a8[0m <[0;33mline:255:4[0m, [0;33mcol:11[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9688[0m <[0;33mcol:11[0m> [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae9340[0m[0;1;36m '__out'[0m [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6ae9768[0m <[0;33mline:256:2[0m, [0;33mline:257:11[0m>
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae96e8[0m <[0;33mline:256:6[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_with_strings[0;33m 0x6ae7ee0[0m
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae96d8[0m <[0;33mcol:6[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ae9758[0m <[0;33mline:257:4[0m, [0;33mcol:11[0m>
[0;34m  |   |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6ae9728[0m <[0;33mcol:11[0m> [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_wide_err_string[0;33m 0x6ae7d60[0m
[0;34m  |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6ae9718[0m <[0;33mcol:11[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae9838[0m <[0;33mline:258:2[0m, [0;33mcol:51[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae9820[0m <[0;33mcol:2[0m> [0;32m'void (*)(const char *) __attribute__((noreturn))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9800[0m <[0;33mcol:2[0m> [0;32m'void (const char *) __attribute__((noreturn))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f245f8[0m[0;1;36m '__throw_range_error'[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae9860[0m <[0;33mcol:22[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6ae97c8[0m <[0;33mcol:22[0m> [0;32m'const char [28]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "wstring_convert::from_bytes"[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae72c8[0m <[0;33mline:263:7[0m, [0;33mline:268:7[0m> [0;33mline:264:7[0m[0;1;36m to_bytes[0m [0;32m'std::__cxx11::wstring_convert::byte_string (_Elem)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae71d8[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;33mcol:22[0m referenced[0;1;36m __wchar[0m [0;32m'_Elem'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae9c78[0m <[0;33mline:265:7[0m, [0;33mline:268:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6ae9a58[0m <[0;33mline:266:2[0m, [0;33mcol:33[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ae9988[0m <[0;33mcol:2[0m, [0;33mcol:32[0m> [0;33mcol:8[0m referenced[0;1;36m __wchars[0m [0;32m'_Elem [2]'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6ae9a10[0m <[0;33mcol:22[0m, [0;33mcol:32[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae99f0[0m <[0;33mcol:24[0m> [0;32m'_Elem'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae71d8[0m[0;1;36m '__wchar'[0m [0;32m'_Elem'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ae9c68[0m <[0;33mline:267:2[0m, [0;33mcol:38[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae9c38[0m <[0;33mcol:9[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6ae9a80[0m <[0;33mcol:9[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9af0[0m <[0;33mcol:18[0m> [0;32m'_Elem [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae9988[0m[0;1;36m '__wchars'[0m [0;32m'_Elem [2]'[0m
[0;34m  |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6ae9c00[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6ae9b50[0m <[0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9b10[0m <[0;33mcol:28[0m> [0;32m'_Elem [2]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae9988[0m[0;1;36m '__wchars'[0m [0;32m'_Elem [2]'[0m
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ae9b30[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae7498[0m <[0;33mline:270:7[0m, [0;33mline:274:7[0m> [0;33mline:271:7[0m[0;1;36m to_bytes[0m [0;32m'std::__cxx11::wstring_convert::byte_string (const _Elem *)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae73a8[0m <[0;33mcol:16[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __ptr[0m [0;32m'const _Elem *'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ae9f58[0m <[0;33mline:272:7[0m, [0;33mline:274:7[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6ae9f48[0m <[0;33mline:273:2[0m, [0;33mcol:70[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae9f18[0m <[0;33mcol:9[0m, [0;33mcol:70[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6ae9ca8[0m <[0;33mcol:9[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9d18[0m <[0;33mcol:18[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae73a8[0m[0;1;36m '__ptr'[0m [0;32m'const _Elem *'[0m
[0;34m  |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6ae9ee0[0m <[0;33mcol:25[0m, [0;33mcol:69[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6ae9e30[0m <[0;33mcol:30[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9d38[0m <[0;33mcol:25[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae73a8[0m[0;1;36m '__ptr'[0m [0;32m'const _Elem *'[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ae9e08[0m <[0;33mcol:31[0m, [0;33mcol:69[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6ae9da0[0m <[0;33mcol:31[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->length
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9de8[0m <[0;33mcol:64[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae73a8[0m[0;1;36m '__ptr'[0m [0;32m'const _Elem *'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae7648[0m <[0;33mline:276:7[0m, [0;33mline:281:7[0m> [0;33mline:277:7[0m[0;1;36m to_bytes[0m [0;32m'std::__cxx11::wstring_convert::byte_string (const std::__cxx11::wstring_convert::wide_string &)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae7550[0m <[0;33mcol:16[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced[0;1;36m __wstr[0m [0;32m'const std::__cxx11::wstring_convert::wide_string &'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aea2f8[0m <[0;33mline:278:7[0m, [0;33mline:281:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6aea070[0m <[0;33mline:279:2[0m, [0;33mcol:28[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ae9f80[0m <[0;33mcol:2[0m, [0;33mcol:27[0m> [0;33mcol:7[0m referenced[0;1;36m __ptr[0m [0;32m'auto'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aea050[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aea008[0m <[0;33mcol:15[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .data
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ae9fe8[0m <[0;33mcol:15[0m> [0;32m'const std::__cxx11::wstring_convert::wide_string':'const basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae7550[0m[0;1;36m '__wstr'[0m [0;32m'const std::__cxx11::wstring_convert::wide_string &'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aea2e8[0m <[0;33mline:280:2[0m, [0;33mcol:46[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aea2b8[0m <[0;33mcol:9[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6aea098[0m <[0;33mcol:9[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aea108[0m <[0;33mcol:18[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae9f80[0m[0;1;36m '__ptr'[0m [0;32m'auto'[0m
[0;34m  |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aea280[0m <[0;33mcol:25[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aea1d0[0m <[0;33mcol:31[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aea128[0m <[0;33mcol:25[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6ae9f80[0m[0;1;36m '__ptr'[0m [0;32m'auto'[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aea1b0[0m <[0;33mcol:33[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aea168[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m  |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aea148[0m <[0;33mcol:33[0m> [0;32m'const std::__cxx11::wstring_convert::wide_string':'const basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae7550[0m[0;1;36m '__wstr'[0m [0;32m'const std::__cxx11::wstring_convert::wide_string &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae7888[0m <[0;33mline:283:7[0m, [0;33mline:295:7[0m> [0;33mline:284:7[0m[0;1;36m to_bytes[0m [0;32m'std::__cxx11::wstring_convert::byte_string (const _Elem *, const _Elem *)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae7700[0m <[0;33mcol:16[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __first[0m [0;32m'const _Elem *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ae7778[0m <[0;33mcol:38[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m __last[0m [0;32m'const _Elem *'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aea978[0m <[0;33mline:285:7[0m, [0;33mline:295:7[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6aea418[0m <[0;33mline:286:2[0m, [0;33mline:287:26[0m>
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aea370[0m <[0;33mline:286:6[0m, [0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aea358[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea328[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_with_cvtstate[0;33m 0x6ae7e80[0m
[0;34m  |   | |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea318[0m <[0;33mcol:7[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aea3f8[0m <[0;33mline:287:4[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea398[0m <[0;33mcol:4[0m> [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_state[0;33m 0x6ae7dc0[0m
[0;34m  |   |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea388[0m <[0;33mcol:4[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x6aea3d8[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m[0m[0;36m[0m [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6aea598[0m <[0;33mline:288:2[0m, [0;33mcol:57[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6aea440[0m <[0;33mcol:2[0m, [0;33mcol:56[0m> [0;33mcol:14[0m referenced[0;1;36m __out[0m [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m listinit
[0;34m  |   |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x6aea550[0m <[0;33mcol:19[0m, [0;33mcol:56[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aea530[0m <[0;33mcol:21[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aea4e8[0m <[0;33mcol:21[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .get_allocator
[0;34m  |   |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea4b8[0m <[0;33mcol:21[0m> [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_byte_err_string[0;33m 0x6ae7d00[0m
[0;34m  |   |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea4a8[0m <[0;33mcol:21[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6aea7c0[0m <[0;33mline:289:2[0m, [0;33mline:291:11[0m>
[0;34m  |   | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aea738[0m <[0;33mline:289:6[0m, [0;33mline:290:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aea5b0[0m <[0;33mline:289:6[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__str_codecvt_out'[0;33m 0x6ae4a78[0m[0;33m 0x6ae3478[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aea600[0m <[0;33mcol:24[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae7700[0m[0;1;36m '__first'[0m [0;32m'const _Elem *'[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aea620[0m <[0;33mcol:33[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ae7778[0m[0;1;36m '__last'[0m [0;32m'const _Elem *'[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aea640[0m <[0;33mcol:41[0m> [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aea440[0m[0;1;36m '__out'[0m [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m
[0;34m  |   | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aea6a0[0m <[0;33mcol:48[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |   | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea670[0m <[0;33mcol:49[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6ae7ca0[0m
[0;34m  |   | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea660[0m <[0;33mcol:49[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea6c8[0m <[0;33mcol:57[0m> [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_state[0;33m 0x6ae7dc0[0m
[0;34m  |   | | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea6b8[0m <[0;33mcol:57[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea708[0m <[0;33mline:290:10[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_count[0;33m 0x6ae7e20[0m
[0;34m  |   | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea6f8[0m <[0;33mcol:10[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aea7a8[0m <[0;33mline:291:4[0m, [0;33mcol:11[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aea788[0m <[0;33mcol:11[0m> [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aea440[0m[0;1;36m '__out'[0m [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6aea868[0m <[0;33mline:292:2[0m, [0;33mline:293:11[0m>
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea7e8[0m <[0;33mline:292:6[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_with_strings[0;33m 0x6ae7ee0[0m
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea7d8[0m <[0;33mcol:6[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aea858[0m <[0;33mline:293:4[0m, [0;33mcol:11[0m>
[0;34m  |   |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea828[0m <[0;33mcol:11[0m> [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_byte_err_string[0;33m 0x6ae7d00[0m
[0;34m  |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea818[0m <[0;33mcol:11[0m> [0;32m'wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aea938[0m <[0;33mline:294:2[0m, [0;33mcol:49[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aea920[0m <[0;33mcol:2[0m> [0;32m'void (*)(const char *) __attribute__((noreturn))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aea900[0m <[0;33mcol:2[0m> [0;32m'void (const char *) __attribute__((noreturn))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f245f8[0m[0;1;36m '__throw_range_error'[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aea960[0m <[0;33mcol:22[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6aea8c8[0m <[0;33mcol:22[0m> [0;32m'const char [26]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "wstring_convert::to_bytes"[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae7990[0m <[0;33mline:301:7[0m, [0;33mcol:60[0m> [0;33mcol:14[0m[0;1;36m converted[0m [0;32m'std::size_t () const noexcept'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aeaa00[0m <[0;33mcol:41[0m, [0;33mcol:60[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aea9f0[0m <[0;33mcol:43[0m, [0;33mcol:50[0m>
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aea9c0[0m <[0;33mcol:50[0m> [0;32m'const std::size_t':'const unsigned long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_count[0;33m 0x6ae7e20[0m
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aea9b0[0m <[0;33mcol:50[0m> [0;32m'const wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6ae7aa8[0m <[0;33mline:304:7[0m, [0;33mcol:51[0m> [0;33mcol:18[0m[0;1;36m state[0m [0;32m'std::__cxx11::wstring_convert::state_type () const'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aeaa68[0m <[0;33mcol:32[0m, [0;33mcol:51[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aeaa58[0m <[0;33mcol:34[0m, [0;33mcol:41[0m>
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aeaa28[0m <[0;33mcol:41[0m> [0;32m'const std::__cxx11::wstring_convert::state_type':'const typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_state[0;33m 0x6ae7dc0[0m
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aeaa18[0m <[0;33mcol:41[0m> [0;32m'const wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ae7b48[0m <[0;33mline:306:5[0m, [0;33mcol:12[0m> [0;33mcol:5[0m private
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6ae7ca0[0m <[0;33mline:307:7[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m _M_cvt[0m [0;32m'unique_ptr<_Codecvt>'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6ae7d00[0m <[0;33mline:308:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m referenced[0;1;36m _M_byte_err_string[0m [0;32m'std::__cxx11::wstring_convert::byte_string':'basic_string<char, char_traits<char>, _Byte_alloc>'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6ae7d60[0m <[0;33mline:309:7[0m, [0;33mcol:20[0m> [0;33mcol:20[0m referenced[0;1;36m _M_wide_err_string[0m [0;32m'std::__cxx11::wstring_convert::wide_string':'basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6ae7dc0[0m <[0;33mline:310:7[0m, [0;33mcol:41[0m> [0;33mcol:19[0m referenced[0;1;36m _M_state[0m [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  | `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x6ae7fd8[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m[0m[0;36m[0m [0;32m'std::__cxx11::wstring_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6ae7e20[0m <[0;33mline:311:7[0m, [0;33mcol:27[0m> [0;33mcol:16[0m referenced[0;1;36m _M_count[0m [0;32m'std::size_t':'unsigned long'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ae8018[0m <[0;33mcol:27[0m> [0;32m'std::size_t':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6ae7ff8[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6ae7e80[0m <[0;33mline:312:7[0m, [0;33mcol:33[0m> [0;33mcol:14[0m referenced[0;1;36m _M_with_cvtstate[0m [0;32m'bool'[0m
[0;34m  | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ae8030[0m <[0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  `-[0m[0;1;32mFieldDecl[0m[0;33m 0x6ae7ee0[0m <[0;33mline:313:7[0m, [0;33mcol:32[0m> [0;33mcol:14[0m referenced[0;1;36m _M_with_strings[0m [0;32m'bool'[0m
[0;34m    `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6ae8040[0m <[0;33mcol:32[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping std::wbuffer_convert:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6aead60[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:319:3[0m, [0;33mline:538:5[0m> [0;33mline:321:11[0m[0;1;36m wbuffer_convert[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aeaa80[0m <[0;33mline:319:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Codecvt[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aeab08[0m <[0;33mcol:31[0m, [0;33mcol:48[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Elem[0m
[0;34m| `-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aeac30[0m <[0;33mline:320:5[0m, [0;33m<scratch space>:202:1[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_conv.h:320:14[0m referenced typename depth 0 index 2[0;1;36m _Tr[0m
[0;34m| `-[0mTemplateArgument type [0;32m'char_traits<_Elem>'[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aeacd0[0m <[0;33mline:321:5[0m, [0;33mline:538:5[0m> [0;33mline:321:11[0m class[0;1;36m wbuffer_convert[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m standard_layout has_user_declared_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m non_trivial user_declared has_const_param implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param user_declared implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m
[0;34m  | `-[0m[0;1;32mDestructor[0m irrelevant non_trivial user_declared
[0;34m  |-[0mpublic [0;32m'basic_streambuf<_Elem, _Tr>'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aeb160[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m wbuffer_convert[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6aeb2f8[0m <[0;33mline:323:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m _Wide_streambuf[0m [0;32m'basic_streambuf<_Elem, _Tr>'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6aeb210[0m [0;32m'basic_streambuf<_Elem, _Tr>'[0m dependent basic_streambuf
[0;34m  |   |-[0mTemplateArgument type [0;32m'_Elem'[0m
[0;34m  |   `-[0mTemplateArgument type [0;32m'_Tr'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6aeb350[0m <[0;33mline:325:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6aeb420[0m <[0;33mline:326:7[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m state_type[0m [0;32m'typename _Codecvt::state_type'[0m
[0;34m  | `-[0m[0;32mDependentNameType[0m[0;33m 0x6aeb3b0[0m [0;32m'typename _Codecvt::state_type'[0m dependent
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6aeb778[0m <[0;33mline:336:7[0m, [0;33mline:353:7[0m> [0;33mline:337:7[0m[0;1;36m wbuffer_convert<_Codecvt, _Elem, _Tr>[0m [0;32m'void (std::streambuf *, _Codecvt *, std::wbuffer_convert::state_type)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aeb4d8[0m <[0;33mcol:23[0m, [0;33mcol:46[0m> [0;33mcol:34[0m referenced[0;1;36m __bytebuf[0m [0;32m'std::streambuf *'[0m cinit
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aed710[0m <[0;33mcol:46[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mNullToPointer[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aed6f0[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aeb578[0m <[0;33mcol:49[0m, [0;33mcol:72[0m> [0;33mcol:59[0m referenced[0;1;36m __pcvt[0m [0;32m'_Codecvt *'[0m cinit
[0;34m  | | `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x6aed738[0m <[0;33mcol:68[0m, [0;33mcol:72[0m> [0;32m'_Codecvt *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aeb610[0m <[0;33mline:338:9[0m, [0;33mcol:41[0m> [0;33mcol:20[0m referenced[0;1;36m __state[0m [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m cinit
[0;34m  | | `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x6aed780[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m[0m[0;36m[0m [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6aece08[0m[0;1;36m '_M_buf'[0m [0;32m'std::streambuf *'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aed818[0m <[0;33mline:339:16[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aed7d8[0m <[0;33mcol:16[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aeb4d8[0m[0;1;36m '__bytebuf'[0m [0;32m'std::streambuf *'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6aecf90[0m[0;1;36m '_M_cvt'[0m [0;32m'unique_ptr<_Codecvt>'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6aed878[0m <[0;33mcol:34[0m, [0;33mcol:41[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aed858[0m <[0;33mcol:35[0m> [0;32m'_Codecvt *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aeb578[0m[0;1;36m '__pcvt'[0m [0;32m'_Codecvt *'[0m
[0;34m  | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6aecff0[0m[0;1;36m '_M_state'[0m [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x6aed8e0[0m <[0;33mcol:52[0m, [0;33mcol:60[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aed8c0[0m <[0;33mcol:53[0m> [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aeb610[0m[0;1;36m '__state'[0m [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aee290[0m <[0;33mline:340:7[0m, [0;33mline:353:7[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6aeda80[0m <[0;33mline:341:2[0m, [0;33mline:342:41[0m>
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aed980[0m <[0;33mline:341:6[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aed950[0m <[0;33mcol:7[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6aecf90[0m
[0;34m  |   | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aed940[0m <[0;33mcol:7[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeda40[0m <[0;33mline:342:4[0m, [0;33mcol:41[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aeda28[0m <[0;33mcol:4[0m> [0;32m'void (*)(const char *) __attribute__((noreturn))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aeda08[0m <[0;33mcol:4[0m> [0;32m'void (const char *) __attribute__((noreturn))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5f23bb8[0m[0;1;36m '__throw_logic_error'[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aeda68[0m <[0;33mcol:24[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6aed9e0[0m <[0;33mcol:24[0m> [0;32m'const char [16]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "wbuffer_convert"[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aedb80[0m <[0;33mline:344:2[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aedaa8[0m <[0;33mcol:2[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_always_noconv[0;33m 0x6aed6a0[0m
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aeda98[0m <[0;33mcol:2[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aedb60[0m <[0;33mcol:21[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aedb18[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->always_noconv
[0;34m  |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aedae8[0m <[0;33mcol:21[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6aecf90[0m
[0;34m  |   |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aedad8[0m <[0;33mcol:21[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6aee278[0m <[0;33mline:346:2[0m, [0;33mline:352:4[0m>
[0;34m  |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aedbb0[0m <[0;33mline:346:6[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aedba0[0m <[0;33mcol:6[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aee258[0m <[0;33mline:347:4[0m, [0;33mline:352:4[0m>
[0;34m  |       |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeddc0[0m <[0;33mline:348:6[0m, [0;33mcol:60[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aedbf0[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->setp
[0;34m  |       | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aedbe0[0m <[0;33mcol:6[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |       | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aedc48[0m <[0;33mcol:17[0m> [0;32m'_Elem [_S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_put_area[0;33m 0x6aed350[0m
[0;34m  |       | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aedc38[0m <[0;33mcol:17[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |       | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aedd88[0m <[0;33mcol:30[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aedcd8[0m <[0;33mcol:42[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |       |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aedc88[0m <[0;33mcol:30[0m> [0;32m'_Elem [_S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_put_area[0;33m 0x6aed350[0m
[0;34m  |       |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aedc78[0m <[0;33mcol:30[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aedcb8[0m <[0;33mcol:44[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aed050[0m[0;1;36m '_S_buffer_length'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aee220[0m <[0;33mline:349:6[0m, [0;33mline:351:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aede00[0m <[0;33mline:349:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->setg
[0;34m  |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aeddf0[0m <[0;33mcol:6[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |         |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aedf58[0m <[0;33mcol:17[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aedea8[0m <[0;33mcol:29[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |         | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aede58[0m <[0;33mcol:17[0m> [0;32m'_Elem [_S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_area[0;33m 0x6aed460[0m
[0;34m  |         | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aede48[0m <[0;33mcol:17[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aede88[0m <[0;33mcol:31[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aed158[0m[0;1;36m '_S_putback_length'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |         |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aee0a0[0m <[0;33mline:350:10[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aedff0[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |         | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aedfa0[0m <[0;33mcol:10[0m> [0;32m'_Elem [_S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_area[0;33m 0x6aed460[0m
[0;34m  |         | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aedf90[0m <[0;33mcol:10[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aedfd0[0m <[0;33mcol:24[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aed158[0m[0;1;36m '_S_putback_length'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |         `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aee1e8[0m <[0;33mline:351:10[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aee138[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |           |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee0e8[0m <[0;33mcol:10[0m> [0;32m'_Elem [_S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_area[0;33m 0x6aed460[0m
[0;34m  |           | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee0d8[0m <[0;33mcol:10[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aee118[0m <[0;33mcol:24[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aed158[0m[0;1;36m '_S_putback_length'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6aeb880[0m <[0;33mline:355:7[0m, [0;33mcol:34[0m> [0;33mcol:7[0m[0;1;36m ~wbuffer_convert<_Codecvt, _Elem, _Tr>[0m [0;32m'void ()'[0m default
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6aeba28[0m <[0;33mline:359:7[0m, [0;33mcol:54[0m> [0;33mcol:7[0m[0;1;36m wbuffer_convert<_Codecvt, _Elem, _Tr>[0m [0;32m'void (const wbuffer_convert<_Codecvt, _Elem, _Tr> &)'[0m delete
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aeb968[0m <[0;33mcol:23[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'const wbuffer_convert<_Codecvt, _Elem, _Tr> &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aebbd8[0m <[0;33mline:360:7[0m, [0;33mcol:65[0m> [0;33mcol:24[0m[0;1;36m operator=[0m [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> &(const wbuffer_convert<_Codecvt, _Elem, _Tr> &)'[0m delete
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aebae8[0m <[0;33mcol:34[0m, [0;33mcol:55[0m> [0;33mcol:56[0m [0;32m'const wbuffer_convert<_Codecvt, _Elem, _Tr> &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aebd30[0m <[0;33mline:362:7[0m, [0;33mcol:58[0m> [0;33mcol:18[0m[0;1;36m rdbuf[0m [0;32m'std::streambuf *() const noexcept'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aee308[0m <[0;33mcol:41[0m, [0;33mcol:58[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aee2f8[0m <[0;33mcol:43[0m, [0;33mcol:50[0m>
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee2c8[0m <[0;33mcol:50[0m> [0;32m'std::streambuf *const'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee2b8[0m <[0;33mcol:50[0m> [0;32m'const wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aebee0[0m <[0;33mline:364:7[0m, [0;33mline:370:7[0m> [0;33mline:365:7[0m[0;1;36m rdbuf[0m [0;32m'std::streambuf *(std::streambuf *) noexcept'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aebde0[0m <[0;33mcol:13[0m, [0;33mcol:24[0m> [0;33mcol:24[0m referenced[0;1;36m __bytebuf[0m [0;32m'std::streambuf *'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aee4a0[0m <[0;33mline:366:7[0m, [0;33mline:370:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6aee3d8[0m <[0;33mline:367:2[0m, [0;33mcol:22[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6aee330[0m <[0;33mcol:2[0m, [0;33mcol:16[0m> [0;33mcol:7[0m referenced[0;1;36m __prev[0m [0;32m'auto'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee3a8[0m <[0;33mcol:16[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee398[0m <[0;33mcol:16[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aee450[0m <[0;33mline:368:2[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee400[0m <[0;33mcol:2[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee3f0[0m <[0;33mcol:2[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aee430[0m <[0;33mcol:11[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aebde0[0m[0;1;36m '__bytebuf'[0m [0;32m'std::streambuf *'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aee490[0m <[0;33mline:369:2[0m, [0;33mcol:9[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aee470[0m <[0;33mcol:9[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aee330[0m[0;1;36m '__prev'[0m [0;32m'auto'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aebfe0[0m <[0;33mline:373:7[0m, [0;33mcol:60[0m> [0;33mcol:18[0m[0;1;36m state[0m [0;32m'std::wbuffer_convert::state_type () const noexcept'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aee518[0m <[0;33mcol:41[0m, [0;33mcol:60[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aee508[0m <[0;33mcol:43[0m, [0;33mcol:50[0m>
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee4d8[0m <[0;33mcol:50[0m> [0;32m'const std::wbuffer_convert::state_type':'const typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_state[0;33m 0x6aecff0[0m
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee4c8[0m <[0;33mcol:50[0m> [0;32m'const wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6aec080[0m <[0;33mline:375:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aec0d0[0m <[0;33mline:376:7[0m, [0;33mline:378:72[0m> [0;33mline:377:7[0m[0;1;36m sync[0m [0;32m'int ()'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aee780[0m <[0;33mline:378:7[0m, [0;33mcol:72[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aee770[0m <[0;33mcol:9[0m, [0;33mcol:69[0m>
[0;34m  |     `-[0m[0;1;35mConditionalOperator[0m[0;33m 0x6aee740[0m <[0;33mcol:16[0m, [0;33mcol:69[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aee6c8[0m <[0;33mcol:16[0m, [0;33mcol:60[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aee5d0[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |       | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee540[0m <[0;33mcol:16[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |       | | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee530[0m <[0;33mcol:16[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |       | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aee5b0[0m <[0;33mcol:26[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee580[0m <[0;33mcol:26[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_conv_put[0;33m 0x6aecd58[0m
[0;34m  |       | |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee570[0m <[0;33mcol:26[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |       | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aee6b0[0m <[0;33mcol:43[0m, [0;33mcol:60[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee698[0m <[0;33mcol:44[0m, [0;33mcol:60[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  |       |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6aee678[0m <[0;33mcol:44[0m, [0;33mcol:60[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee648[0m <[0;33mcol:44[0m, [0;33mcol:52[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->pubsync[0;33m 0x67d2088[0m
[0;34m  |       |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee630[0m <[0;33mcol:44[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee600[0m <[0;33mcol:44[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |       |             `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee5f0[0m <[0;33mcol:44[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |       |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aee6e8[0m <[0;33mcol:64[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aee728[0m <[0;33mcol:68[0m, [0;33mcol:69[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aee708[0m <[0;33mcol:69[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aec3b8[0m <[0;33mline:380:7[0m, [0;33mline:388:7[0m> [0;33mline:381:7[0m[0;1;36m overflow[0m [0;32m'typename _Wide_streambuf::int_type (typename _Wide_streambuf::int_type)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aec2b8[0m <[0;33mcol:16[0m, [0;33mcol:51[0m> [0;33mcol:51[0m referenced[0;1;36m __out[0m [0;32m'typename _Wide_streambuf::int_type'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aeecd0[0m <[0;33mline:382:7[0m, [0;33mline:388:7[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6aeebd0[0m <[0;33mline:383:2[0m, [0;33mline:386:28[0m> has_else
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aee898[0m <[0;33mline:383:6[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |   | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aee808[0m <[0;33mcol:6[0m, [0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee7f0[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mPointerToBoolean[0m>
[0;34m  |   | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aee7d8[0m <[0;33mcol:7[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee7a8[0m <[0;33mcol:7[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |   | | |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee798[0m <[0;33mcol:7[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aee880[0m <[0;33mcol:17[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aee860[0m <[0;33mcol:18[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aee830[0m <[0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_conv_put[0;33m 0x6aecd58[0m
[0;34m  |   | |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aee820[0m <[0;33mcol:18[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | |-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aee970[0m <[0;33mline:384:4[0m, [0;33mcol:20[0m>
[0;34m  |   | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aee950[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aee908[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->eof
[0;34m  |   | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6aeebb8[0m <[0;33mline:385:7[0m, [0;33mline:386:28[0m>
[0;34m  |   |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aeeaf0[0m <[0;33mline:385:11[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeeac0[0m <[0;33mcol:12[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aee9b8[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->eq_int_type
[0;34m  |   |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aeea00[0m <[0;33mcol:29[0m> [0;32m'typename _Wide_streambuf::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aec2b8[0m[0;1;36m '__out'[0m [0;32m'typename _Wide_streambuf::int_type'[0m
[0;34m  |   |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeeaa0[0m <[0;33mcol:36[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aeea58[0m <[0;33mcol:36[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->eof
[0;34m  |   |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aeeba8[0m <[0;33mline:386:4[0m, [0;33mcol:28[0m>
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeeb80[0m <[0;33mcol:11[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aeeb18[0m <[0;33mcol:11[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->sputc
[0;34m  |   |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aeeb08[0m <[0;33mcol:11[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aeeb60[0m <[0;33mcol:23[0m> [0;32m'typename _Wide_streambuf::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aec2b8[0m[0;1;36m '__out'[0m [0;32m'typename _Wide_streambuf::int_type'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aeecc0[0m <[0;33mline:387:2[0m, [0;33mcol:27[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeec98[0m <[0;33mcol:9[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aeec30[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->not_eof
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aeec78[0m <[0;33mcol:22[0m> [0;32m'typename _Wide_streambuf::int_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aec2b8[0m[0;1;36m '__out'[0m [0;32m'typename _Wide_streambuf::int_type'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aec528[0m <[0;33mline:390:7[0m, [0;33mline:400:7[0m> [0;33mline:391:7[0m[0;1;36m underflow[0m [0;32m'typename _Wide_streambuf::int_type ()'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aef340[0m <[0;33mline:392:7[0m, [0;33mline:400:7[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6aeee28[0m <[0;33mline:393:2[0m, [0;33mline:394:20[0m>
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aeed60[0m <[0;33mline:393:6[0m, [0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aeed48[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mPointerToBoolean[0m>
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aeed30[0m <[0;33mcol:7[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aeed00[0m <[0;33mcol:7[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |   | |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aeecf0[0m <[0;33mcol:7[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aeee18[0m <[0;33mline:394:4[0m, [0;33mcol:20[0m>
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeedf8[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aeedb0[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->eof
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6aef318[0m <[0;33mline:396:2[0m, [0;33mline:399:20[0m> has_else
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aef100[0m <[0;33mline:396:6[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |     | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aeefe8[0m <[0;33mcol:6[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aeef30[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x5efe5d8[0m[0;33m 0x5f91e58[0m[0;33m 0x5f944f8[0m[0;33m 0x5fb4f28[0m[0;33m 0x5fb5598[0m[0;33m 0x65e9ee0[0m[0;33m 0x65ea660[0m[0;33m 0x65ead98[0m[0;33m 0x6754980[0m[0;33m 0x67594c0[0m[0;33m 0x69c5888[0m[0;33m 0x6a96898[0m[0;33m 0x6ad3b98[0m[0;33m 0x6ad4938[0m[0;33m 0x6ad5158[0m
[0;34m  |     | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeee98[0m <[0;33mcol:6[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aeee50[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->gptr
[0;34m  |     | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aeee40[0m <[0;33mcol:6[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |     | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeef10[0m <[0;33mcol:21[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aeeec8[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->egptr
[0;34m  |     | |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aeeeb8[0m <[0;33mcol:21[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |     | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6aef0e0[0m <[0;33mcol:38[0m, [0;33mcol:62[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aef0c0[0m <[0;33mcol:39[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |     |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aef030[0m <[0;33mcol:39[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |     |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aef020[0m <[0;33mcol:39[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aef0a0[0m <[0;33mcol:49[0m, [0;33mcol:61[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aef070[0m <[0;33mcol:49[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_conv_get[0;33m 0x6aec960[0m
[0;34m  |     |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aef060[0m <[0;33mcol:49[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |     |-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aef258[0m <[0;33mline:397:4[0m, [0;33mcol:41[0m>
[0;34m  |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aef230[0m <[0;33mcol:11[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aef158[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->to_int_type
[0;34m  |     |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aef218[0m <[0;33mcol:28[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m  |     |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aef1f8[0m <[0;33mcol:29[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aef1b0[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->gptr
[0;34m  |     |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aef1a0[0m <[0;33mcol:29[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aef308[0m <[0;33mline:399:4[0m, [0;33mcol:20[0m>
[0;34m  |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aef2e8[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aef2a0[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->eof
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aec868[0m <[0;33mline:402:7[0m, [0;33mline:417:7[0m> [0;33mline:403:7[0m[0;1;36m xsputn[0m [0;32m'std::streamsize (const typename _Wide_streambuf::char_type *, std::streamsize)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aec6e0[0m <[0;33mcol:14[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __s[0m [0;32m'const typename _Wide_streambuf::char_type *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aec758[0m <[0;33mcol:62[0m, [0;33mcol:73[0m> [0;33mcol:73[0m referenced[0;1;36m __n[0m [0;32m'std::streamsize':'long'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aefee0[0m <[0;33mline:404:7[0m, [0;33mline:417:7[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6aef4e0[0m <[0;33mline:405:2[0m, [0;33mline:406:11[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aef478[0m <[0;33mline:405:6[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |   | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6aef3d0[0m <[0;33mcol:6[0m, [0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aef3b8[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mPointerToBoolean[0m>
[0;34m  |   | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aef3a0[0m <[0;33mcol:7[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aef370[0m <[0;33mcol:7[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |   | | |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aef360[0m <[0;33mcol:7[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aef458[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aef428[0m <[0;33mcol:17[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aef3e8[0m <[0;33mcol:17[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aec758[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aef440[0m <[0;33mcol:24[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aef408[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aef4d0[0m <[0;33mline:406:4[0m, [0;33mcol:11[0m>
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aef4b8[0m <[0;33mcol:11[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aef498[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6aef5a8[0m <[0;33mline:407:2[0m, [0;33mcol:23[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6aef508[0m <[0;33mcol:2[0m, [0;33mcol:22[0m> [0;33mcol:13[0m referenced[0;1;36m __done[0m [0;32m'std::streamsize':'long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aef590[0m <[0;33mcol:22[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aef570[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mDoStmt[0m[0;33m 0x6aefe78[0m <[0;33mline:408:2[0m, [0;33mline:415:40[0m>
[0;34m  |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aefd38[0m <[0;33mline:409:2[0m, [0;33mline:415:2[0m>
[0;34m  |   | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6aef980[0m <[0;33mline:410:4[0m, [0;33mline:411:22[0m>
[0;34m  |   | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6aef5d0[0m <[0;33mline:410:4[0m, [0;33mline:411:21[0m> [0;33mline:410:9[0m referenced[0;1;36m __nn[0m [0;32m'auto'[0m cinit
[0;34m  |   | | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aef950[0m <[0;33mcol:16[0m, [0;33mline:411:21[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aef6a8[0m <[0;33mline:410:16[0m, [0;33mcol:35[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'min'[0;33m 0x60accb8[0m[0;33m 0x60ad0d8[0m[0;33m 0x6213658[0m[0;33m 0x6213c78[0m
[0;34m  |   | | |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aef888[0m <[0;33mcol:37[0m, [0;33mcol:64[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aef838[0m <[0;33mcol:51[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   | | |     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aef7a0[0m <[0;33mcol:37[0m, [0;33mcol:49[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |     | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aef758[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->epptr
[0;34m  |   | | |     | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aef748[0m <[0;33mcol:37[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   | | |     | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aef818[0m <[0;33mcol:53[0m, [0;33mcol:64[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |     |   `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aef7d0[0m <[0;33mcol:53[0m, [0;33mcol:59[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->pptr
[0;34m  |   | | |     |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aef7c0[0m <[0;33mcol:53[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   | | |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aef930[0m <[0;33mline:411:9[0m, [0;33mcol:15[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   | | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aef900[0m <[0;33mcol:9[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aef8c0[0m <[0;33mcol:9[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aec758[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aef918[0m <[0;33mcol:15[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aef8e0[0m <[0;33mcol:15[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aef508[0m[0;1;36m '__done'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aefbf0[0m <[0;33mline:412:4[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aef9e8[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->copy
[0;34m  |   | | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aefa88[0m <[0;33mcol:14[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aefa40[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->pptr
[0;34m  |   | | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aefa30[0m <[0;33mcol:14[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aefb98[0m <[0;33mcol:28[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6aefae8[0m <[0;33mcol:32[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |   | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefaa8[0m <[0;33mcol:28[0m> [0;32m'const typename _Wide_streambuf::char_type *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aec6e0[0m[0;1;36m '__s'[0m [0;32m'const typename _Wide_streambuf::char_type *'[0m
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefac8[0m <[0;33mcol:34[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aef508[0m[0;1;36m '__done'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefbd0[0m <[0;33mcol:42[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aef5d0[0m[0;1;36m '__nn'[0m [0;32m'auto'[0m
[0;34m  |   | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aefca0[0m <[0;33mline:413:4[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aefc38[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->pbump
[0;34m  |   | | | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aefc28[0m <[0;33mcol:4[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefc80[0m <[0;33mcol:16[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aef5d0[0m[0;1;36m '__nn'[0m [0;32m'auto'[0m
[0;34m  |   | | `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x6aefd08[0m <[0;33mline:414:4[0m, [0;33mcol:14[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m  |   | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefcc8[0m <[0;33mcol:4[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aef508[0m[0;1;36m '__done'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefce8[0m <[0;33mcol:14[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aef5d0[0m[0;1;36m '__nn'[0m [0;32m'auto'[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aefe58[0m <[0;33mline:415:11[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6aefdd8[0m <[0;33mcol:11[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aefda8[0m <[0;33mcol:11[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefd68[0m <[0;33mcol:11[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aef508[0m[0;1;36m '__done'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aefdc0[0m <[0;33mcol:20[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefd88[0m <[0;33mcol:20[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aec758[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aefe38[0m <[0;33mcol:27[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6aefe08[0m <[0;33mcol:27[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->_M_conv_put[0;33m 0x6aecd58[0m
[0;34m  |   |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aefdf8[0m <[0;33mcol:27[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6aefed0[0m <[0;33mline:416:2[0m, [0;33mcol:9[0m>
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aefeb8[0m <[0;33mcol:9[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aefe98[0m <[0;33mcol:9[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aef508[0m[0;1;36m '__done'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6aec918[0m <[0;33mline:419:5[0m, [0;33mcol:12[0m> [0;33mcol:5[0m private
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aec960[0m <[0;33mline:421:7[0m, [0;33mline:473:7[0m> [0;33mline:422:7[0m referenced[0;1;36m _M_conv_get[0m [0;32m'bool ()'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6af9ba0[0m <[0;33mline:423:7[0m, [0;33mline:473:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af0100[0m <[0;33mline:424:2[0m, [0;33mcol:55[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6aeff20[0m <[0;33mcol:2[0m, [0;33mcol:54[0m> [0;33mcol:19[0m referenced[0;1;36m __pb1[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af00c8[0m <[0;33mcol:27[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af0078[0m <[0;33mcol:40[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x6aeffe0[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6aeff98[0m <[0;33mcol:27[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->gptr
[0;34m  |   |     |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6aeff88[0m <[0;33mcol:27[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6af0058[0m <[0;33mcol:42[0m, [0;33mcol:54[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6af0010[0m <[0;33mcol:42[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->eback
[0;34m  |   |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af0000[0m <[0;33mcol:42[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af01e8[0m <[0;33mline:425:2[0m, [0;33mcol:44[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af0128[0m <[0;33mcol:2[0m, [0;33mcol:27[0m> [0;33mcol:19[0m referenced[0;1;36m __pb2[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af01d0[0m <[0;33mcol:27[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af01b0[0m <[0;33mcol:27[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aed158[0m[0;1;36m '_S_putback_length'[0m [0;32m'const std::streamsize':'const long'[0m non_odr_use_constant
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af0440[0m <[0;33mline:426:2[0m, [0;33mcol:49[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af0210[0m <[0;33mcol:2[0m, [0;33mcol:48[0m> [0;33mcol:19[0m referenced[0;1;36m __npb[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0428[0m <[0;33mcol:27[0m, [0;33mcol:48[0m> [0;32m'long':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6af03f8[0m <[0;33mcol:27[0m, [0;33mcol:48[0m> [0;32m'const long':'const long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af03e0[0m <[0;33mcol:27[0m, [0;33mcol:32[0m> [0;32m'const long &(*)(const long &, const long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af03a8[0m <[0;33mcol:27[0m, [0;33mcol:32[0m> [0;32m'const long &(const long &, const long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67c9ae8[0m[0;1;36m 'min'[0m [0;32m'const long &(const long &, const long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60accb8[0m[0;1;36m 'min'[0m)
[0;34m  |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af02f8[0m <[0;33mcol:36[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aeff20[0m[0;1;36m '__pb1'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0318[0m <[0;33mcol:43[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0128[0m[0;1;36m '__pb2'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6af0820[0m <[0;33mline:428:2[0m, [0;33mline:429:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6af04a8[0m <[0;33mline:428:2[0m, [0;33mcol:7[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->move
[0;34m  |   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af06a8[0m <[0;33mcol:12[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af0658[0m <[0;33mcol:44[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af0600[0m <[0;33mcol:12[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af0550[0m <[0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |   | | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af0500[0m <[0;33mcol:12[0m> [0;32m'_Elem [_S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_area[0;33m 0x6aed460[0m
[0;34m  |   | | | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af04f0[0m <[0;33mcol:12[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0530[0m <[0;33mcol:26[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aed158[0m[0;1;36m '_S_putback_length'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0638[0m <[0;33mcol:46[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0210[0m[0;1;36m '__npb'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af07c8[0m <[0;33mline:429:5[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af0778[0m <[0;33mcol:18[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   | | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6af0738[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6af06f0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->gptr
[0;34m  |   | | |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af06e0[0m <[0;33mcol:5[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0758[0m <[0;33mcol:20[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0210[0m[0;1;36m '__npb'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0800[0m <[0;33mcol:27[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0210[0m[0;1;36m '__npb'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af0a18[0m <[0;33mline:431:2[0m, [0;33mcol:54[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af0868[0m <[0;33mcol:2[0m, [0;33mcol:45[0m> [0;33mcol:13[0m referenced[0;1;36m __nbytes[0m [0;32m'std::streamsize':'long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af09e0[0m <[0;33mcol:24[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af0990[0m <[0;33mcol:43[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   |     |-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6af0930[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof
[0;34m  |   |     | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6af0910[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;32m'char [_S_buffer_length - _S_putback_length]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af08e0[0m <[0;33mcol:31[0m> [0;32m'char [_S_buffer_length - _S_putback_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_buf[0;33m 0x6aed640[0m non_odr_use_unevaluated
[0;34m  |   |     |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af08d0[0m <[0;33mcol:31[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af0960[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_unconv[0;33m 0x6aed4c0[0m
[0;34m  |   |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af0950[0m <[0;33mcol:45[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6af0cf0[0m <[0;33mline:432:2[0m, [0;33mcol:50[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af0cd0[0m <[0;33mcol:2[0m, [0;33mcol:50[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0a30[0m <[0;33mcol:2[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0cb8[0m <[0;33mcol:13[0m, [0;33mcol:50[0m> [0;32m'long':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6af0c58[0m <[0;33mcol:13[0m, [0;33mcol:50[0m> [0;32m'const long':'const long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0c40[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'const long &(*)(const long &, const long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0c08[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'const long &(const long &, const long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67c9ae8[0m[0;1;36m 'min'[0m [0;32m'const long &(const long &, const long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x60accb8[0m[0;1;36m 'min'[0m)
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0c88[0m <[0;33mcol:22[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0ad0[0m <[0;33mcol:22[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6af0ca0[0m <[0;33mcol:32[0m, [0;33mcol:49[0m> [0;32m'const long':'const long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6af0b78[0m <[0;33mcol:32[0m, [0;33mcol:49[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af0b48[0m <[0;33mcol:32[0m, [0;33mcol:40[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->in_avail[0;33m 0x67d2138[0m
[0;34m  |   |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0b30[0m <[0;33mcol:32[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af0b00[0m <[0;33mcol:32[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |   |                 `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af0af0[0m <[0;33mcol:32[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6af0e10[0m <[0;33mline:433:2[0m, [0;33mline:434:15[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af0d78[0m <[0;33mline:433:6[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0d48[0m <[0;33mcol:6[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0d08[0m <[0;33mcol:6[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0d60[0m <[0;33mcol:17[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6af0d28[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af0df0[0m <[0;33mline:434:4[0m, [0;33mcol:15[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0d98[0m <[0;33mcol:4[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0dd8[0m <[0;33mcol:15[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6af0db8[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af1088[0m <[0;33mline:435:2[0m, [0;33mcol:59[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0e28[0m <[0;33mcol:2[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6af1058[0m <[0;33mcol:13[0m, [0;33mcol:59[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af0ea0[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->sgetn[0;33m 0x67d2638[0m
[0;34m  |   |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af0e88[0m <[0;33mcol:13[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af0e58[0m <[0;33mcol:13[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |   |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af0e48[0m <[0;33mcol:13[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af1000[0m <[0;33mcol:27[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af0f50[0m <[0;33mcol:38[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af0ee0[0m <[0;33mcol:27[0m> [0;32m'char [_S_buffer_length - _S_putback_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_buf[0;33m 0x6aed640[0m
[0;34m  |   |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af0ed0[0m <[0;33mcol:27[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af0f20[0m <[0;33mcol:40[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_unconv[0;33m 0x6aed4c0[0m
[0;34m  |   |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af0f10[0m <[0;33mcol:40[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af1038[0m <[0;33mcol:51[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6af7fa0[0m <[0;33mline:436:2[0m, [0;33mline:437:11[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af7f60[0m <[0;33mline:436:6[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af10e8[0m <[0;33mcol:6[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af10a8[0m <[0;33mcol:6[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af1100[0m <[0;33mcol:17[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6af10c8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6af7f90[0m <[0;33mline:437:4[0m, [0;33mcol:11[0m>
[0;34m  |   |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6af7f80[0m <[0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x6af8018[0m <[0;33mline:438:2[0m, [0;33mcol:14[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af7fb8[0m <[0;33mcol:2[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af7fe8[0m <[0;33mcol:14[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_unconv[0;33m 0x6aed4c0[0m
[0;34m  |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af7fd8[0m <[0;33mcol:14[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af8238[0m <[0;33mline:442:2[0m, [0;33mcol:51[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af8088[0m <[0;33mcol:2[0m, [0;33mcol:34[0m> [0;33mcol:9[0m referenced[0;1;36m __outbuf[0m [0;32m'_Elem *'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af8200[0m <[0;33mcol:20[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af8150[0m <[0;33mcol:32[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af8100[0m <[0;33mcol:20[0m> [0;32m'_Elem [_S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_area[0;33m 0x6aed460[0m
[0;34m  |   |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af80f0[0m <[0;33mcol:20[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af8130[0m <[0;33mcol:34[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aed158[0m[0;1;36m '_S_putback_length'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af82e8[0m <[0;33mline:443:2[0m, [0;33mcol:29[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af8260[0m <[0;33mcol:2[0m, [0;33mcol:21[0m> [0;33mcol:9[0m referenced[0;1;36m __outnext[0m [0;32m'_Elem *'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af82c8[0m <[0;33mcol:21[0m> [0;32m'_Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8088[0m[0;1;36m '__outbuf'[0m [0;32m'_Elem *'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af83c0[0m <[0;33mline:444:2[0m, [0;33mcol:34[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af8318[0m <[0;33mcol:2[0m, [0;33mcol:24[0m> [0;33mcol:14[0m referenced[0;1;36m __bnext[0m [0;32m'const char *'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af8390[0m <[0;33mcol:24[0m> [0;32m'char [_S_buffer_length - _S_putback_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_buf[0;33m 0x6aed640[0m
[0;34m  |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af8380[0m <[0;33mcol:24[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af8498[0m <[0;33mline:446:2[0m, [0;33mcol:31[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af8430[0m <[0;33mcol:2[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced[0;1;36m __result[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6af8a80[0m <[0;33mline:447:2[0m, [0;33mline:456:4[0m> has_else
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af84c0[0m <[0;33mline:447:6[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_always_noconv[0;33m 0x6aed6a0[0m
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af84b0[0m <[0;33mcol:6[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af85d8[0m <[0;33mline:448:4[0m, [0;33mcol:29[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af84f0[0m <[0;33mcol:4[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8430[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af8548[0m <[0;33mcol:15[0m, [0;33mcol:29[0m> [0;32m'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x690eed0[0m[0;1;36m 'noconv'[0m [0;32m'std::codecvt_base::result'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6af8a60[0m <[0;33mline:450:4[0m, [0;33mline:456:4[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af87b8[0m <[0;33mline:451:6[0m, [0;33mcol:54[0m>
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af8608[0m <[0;33mcol:6[0m, [0;33mcol:38[0m> [0;33mcol:13[0m referenced[0;1;36m __outend[0m [0;32m'_Elem *'[0m cinit
[0;34m  |   |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af8780[0m <[0;33mcol:24[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af86d0[0m <[0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |   |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af8680[0m <[0;33mcol:24[0m> [0;32m'_Elem [_S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_area[0;33m 0x6aed460[0m
[0;34m  |   |   |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af8670[0m <[0;33mcol:24[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af86b0[0m <[0;33mcol:38[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6aed050[0m[0;1;36m '_S_buffer_length'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af8a40[0m <[0;33mline:453:6[0m, [0;33mline:455:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af87d0[0m <[0;33mline:453:6[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8430[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6af89e8[0m <[0;33mcol:17[0m, [0;33mline:455:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6af8830[0m <[0;33mline:453:17[0m, [0;33mcol:25[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->in
[0;34m  |   |       | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af8800[0m <[0;33mcol:17[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6aecf90[0m
[0;34m  |   |       |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af87f0[0m <[0;33mcol:17[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |       |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af8888[0m <[0;33mcol:28[0m> [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_state[0;33m 0x6aecff0[0m
[0;34m  |   |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af8878[0m <[0;33mcol:28[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af88b8[0m <[0;33mline:454:7[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8318[0m[0;1;36m '__bnext'[0m [0;32m'const char *'[0m
[0;34m  |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af8948[0m <[0;33mcol:16[0m, [0;33mcol:26[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af8918[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af88d8[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8318[0m[0;1;36m '__bnext'[0m [0;32m'const char *'[0m
[0;34m  |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af8930[0m <[0;33mcol:26[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af88f8[0m <[0;33mcol:26[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af8968[0m <[0;33mcol:36[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8318[0m[0;1;36m '__bnext'[0m [0;32m'const char *'[0m
[0;34m  |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af8988[0m <[0;33mline:455:7[0m> [0;32m'_Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8088[0m[0;1;36m '__outbuf'[0m [0;32m'_Elem *'[0m
[0;34m  |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af89a8[0m <[0;33mcol:17[0m> [0;32m'_Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8608[0m[0;1;36m '__outend'[0m [0;32m'_Elem *'[0m
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af89c8[0m <[0;33mcol:27[0m> [0;32m'_Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8260[0m[0;1;36m '__outnext'[0m [0;32m'_Elem *'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6af9230[0m <[0;33mline:458:2[0m, [0;33mline:465:4[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af8ed8[0m <[0;33mline:458:6[0m, [0;33mcol:32[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af8ea8[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af8e90[0m <[0;33mcol:6[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af8aa8[0m <[0;33mcol:6[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8430[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af8ec0[0m <[0;33mcol:18[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af8b00[0m <[0;33mcol:18[0m, [0;33mcol:32[0m> [0;32m'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x690eed0[0m[0;1;36m 'noconv'[0m [0;32m'std::codecvt_base::result'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6af9200[0m <[0;33mline:459:4[0m, [0;33mline:465:4[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af9018[0m <[0;33mline:461:6[0m, [0;33mcol:65[0m>
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af8f08[0m <[0;33mcol:6[0m, [0;33mcol:64[0m> [0;33mcol:11[0m referenced[0;1;36m __get_buf[0m [0;32m'auto'[0m cinit
[0;34m  |   |   |   `-[0m[0;1;35mCXXReinterpretCastExpr[0m[0;33m 0x6af8fe8[0m <[0;33mcol:23[0m, [0;33mcol:64[0m> [0;32m'const _Elem *'[0m[0;36m[0m[0;36m[0m reinterpret_cast<const _Elem *> <Dependent>
[0;34m  |   |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af8f80[0m <[0;33mcol:54[0m> [0;32m'char [_S_buffer_length - _S_putback_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_buf[0;33m 0x6aed640[0m
[0;34m  |   |   |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af8f70[0m <[0;33mcol:54[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6af9128[0m <[0;33mline:462:6[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6af9080[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->copy
[0;34m  |   |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af90c8[0m <[0;33mcol:16[0m> [0;32m'_Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8088[0m[0;1;36m '__outbuf'[0m [0;32m'_Elem *'[0m
[0;34m  |   |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af90e8[0m <[0;33mcol:26[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8f08[0m[0;1;36m '__get_buf'[0m [0;32m'auto'[0m
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af9108[0m <[0;33mcol:37[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af91c0[0m <[0;33mline:463:6[0m, [0;33mcol:18[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af9170[0m <[0;33mcol:6[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_unconv[0;33m 0x6aed4c0[0m
[0;34m  |   |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af9160[0m <[0;33mcol:6[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6af91a0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6af91f0[0m <[0;33mline:464:6[0m, [0;33mcol:13[0m>
[0;34m  |   |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6af91e0[0m <[0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6af9668[0m <[0;33mline:467:2[0m, [0;33mline:468:58[0m>
[0;34m  |   | |-[0m[0;1;35mParenExpr[0m[0;33m 0x6af9498[0m <[0;33mline:467:6[0m, [0;33mcol:50[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af9478[0m <[0;33mcol:7[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   | |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af9258[0m <[0;33mcol:7[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_unconv[0;33m 0x6aed4c0[0m
[0;34m  |   | |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af9248[0m <[0;33mcol:7[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af9440[0m <[0;33mcol:19[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af93f0[0m <[0;33mcol:41[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   | |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6af9398[0m <[0;33mcol:19[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |     | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6af92e8[0m <[0;33mcol:30[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |   | |     | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af9298[0m <[0;33mcol:19[0m> [0;32m'char [_S_buffer_length - _S_putback_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_buf[0;33m 0x6aed640[0m
[0;34m  |   | |     | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af9288[0m <[0;33mcol:19[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af92c8[0m <[0;33mcol:32[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af0868[0m[0;1;36m '__nbytes'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af93d0[0m <[0;33mcol:43[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8318[0m[0;1;36m '__bnext'[0m [0;32m'const char *'[0m
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6af9630[0m <[0;33mline:468:4[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af9560[0m <[0;33mcol:4[0m, [0;33mcol:23[0m> [0;32m'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64be218[0m[0;1;36m 'move'[0m [0;32m'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)'[0m
[0;34m  |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af95a0[0m <[0;33mcol:28[0m> [0;32m'char [_S_buffer_length - _S_putback_length]'[0m[0;36m lvalue[0m[0;36m[0m ->_M_get_buf[0;33m 0x6aed640[0m
[0;34m  |   |   | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af9590[0m <[0;33mcol:28[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af95d0[0m <[0;33mcol:40[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8318[0m[0;1;36m '__bnext'[0m [0;32m'const char *'[0m
[0;34m  |   |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af9600[0m <[0;33mcol:49[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_unconv[0;33m 0x6aed4c0[0m
[0;34m  |   |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af95f0[0m <[0;33mcol:49[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6af9738[0m <[0;33mline:470:2[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6af9690[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->setg
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af9680[0m <[0;33mcol:2[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af96d8[0m <[0;33mcol:13[0m> [0;32m'_Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8088[0m[0;1;36m '__outbuf'[0m [0;32m'_Elem *'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af96f8[0m <[0;33mcol:23[0m> [0;32m'_Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8088[0m[0;1;36m '__outbuf'[0m [0;32m'_Elem *'[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af9718[0m <[0;33mcol:33[0m> [0;32m'_Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8260[0m[0;1;36m '__outnext'[0m [0;32m'_Elem *'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6af9b90[0m <[0;33mline:472:2[0m, [0;33mcol:35[0m>
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af9b70[0m <[0;33mcol:9[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af9b40[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af9b28[0m <[0;33mcol:9[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af9770[0m <[0;33mcol:9[0m> [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af8430[0m[0;1;36m '__result'[0m [0;32m'codecvt_base::result':'std::codecvt_base::result'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af9b58[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af97c8[0m <[0;33mcol:21[0m, [0;33mcol:35[0m> [0;32m'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x690ee80[0m[0;1;36m 'error'[0m [0;32m'std::codecvt_base::result'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aeca48[0m <[0;33mline:476:7[0m, [0;33mline:478:23[0m> [0;33mline:477:7[0m[0;1;36m _M_put[0m [0;32m'bool (...)'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6af9c68[0m <[0;33mline:478:7[0m, [0;33mcol:23[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6af9c58[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m  |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6af9c48[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aecc88[0m <[0;33mline:480:7[0m, [0;33mline:486:7[0m> [0;33mline:481:7[0m[0;1;36m _M_put[0m [0;32m'bool (const char *, std::streamsize)'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aecb00[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __p[0m [0;32m'const char *'[0m
[0;34m  | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aecb78[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __n[0m [0;32m'std::streamsize':'long'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6af9e58[0m <[0;33mline:482:7[0m, [0;33mline:486:7[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6af9e20[0m <[0;33mline:483:2[0m, [0;33mline:484:11[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6af9de0[0m <[0;33mline:483:6[0m, [0;33mcol:32[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6af9d48[0m <[0;33mcol:6[0m, [0;33mcol:28[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af9cd8[0m <[0;33mcol:6[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m ->sputn[0;33m 0x67d2c98[0m
[0;34m  |   | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af9cc0[0m <[0;33mcol:6[0m> [0;32m'std::streambuf *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6af9c90[0m <[0;33mcol:6[0m> [0;32m'std::streambuf *'[0m[0;36m lvalue[0m[0;36m[0m ->_M_buf[0;33m 0x6aece08[0m
[0;34m  |   | | | |     `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af9c80[0m <[0;33mcol:6[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af9d78[0m <[0;33mcol:20[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af9d08[0m <[0;33mcol:20[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aecb00[0m[0;1;36m '__p'[0m [0;32m'const char *'[0m
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af9d90[0m <[0;33mcol:25[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af9d28[0m <[0;33mcol:25[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aecb78[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6af9dc8[0m <[0;33mcol:32[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af9da8[0m <[0;33mcol:32[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6aecb78[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6af9e10[0m <[0;33mline:484:4[0m, [0;33mcol:11[0m>
[0;34m  |   |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6af9e00[0m <[0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6af9e48[0m <[0;33mline:485:2[0m, [0;33mcol:9[0m>
[0;34m  |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6af9e38[0m <[0;33mcol:9[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aecd58[0m <[0;33mline:489:7[0m, [0;33mline:525:7[0m> [0;33mline:490:7[0m referenced[0;1;36m _M_conv_put[0m [0;32m'bool ()'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6afbb58[0m <[0;33mline:491:7[0m, [0;33mline:525:7[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6af9f68[0m <[0;33mline:492:2[0m, [0;33mcol:38[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af9e88[0m <[0;33mcol:2[0m, [0;33mcol:37[0m> [0;33mcol:15[0m referenced[0;1;36m __first[0m [0;32m'_Elem *const'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6af9f48[0m <[0;33mcol:25[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6af9f00[0m <[0;33mcol:25[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->pbase
[0;34m  |   |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af9ef0[0m <[0;33mcol:25[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6afa070[0m <[0;33mline:493:2[0m, [0;33mcol:42[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6af9f90[0m <[0;33mcol:2[0m, [0;33mcol:41[0m> [0;33mcol:21[0m referenced[0;1;36m __last[0m [0;32m'const _Elem *const'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6afa050[0m <[0;33mcol:30[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6afa008[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->pptr
[0;34m  |   |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6af9ff8[0m <[0;33mcol:30[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6afa1c8[0m <[0;33mline:494:2[0m, [0;33mcol:47[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6afa098[0m <[0;33mcol:2[0m, [0;33mcol:40[0m> [0;33mcol:19[0m referenced[0;1;36m __pending[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afa190[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afa140[0m <[0;33mcol:38[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa100[0m <[0;33mcol:31[0m> [0;32m'const _Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9f90[0m[0;1;36m '__last'[0m [0;32m'const _Elem *const'[0m
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa120[0m <[0;33mcol:40[0m> [0;32m'_Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9e88[0m[0;1;36m '__first'[0m [0;32m'_Elem *const'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6afa310[0m <[0;33mline:496:2[0m, [0;33mline:497:36[0m>
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6afa1f0[0m <[0;33mline:496:6[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m ->_M_always_noconv[0;33m 0x6aed6a0[0m
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6afa1e0[0m <[0;33mcol:6[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6afa300[0m <[0;33mline:497:4[0m, [0;33mcol:36[0m>
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6afa2d0[0m <[0;33mcol:11[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6afa230[0m <[0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa290[0m <[0;33mcol:18[0m> [0;32m'_Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9e88[0m[0;1;36m '__first'[0m [0;32m'_Elem *const'[0m
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa2b0[0m <[0;33mcol:27[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa098[0m[0;1;36m '__pending'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6afa4a8[0m <[0;33mline:499:2[0m, [0;33mcol:37[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6afa440[0m <[0;33mcol:2[0m, [0;33mcol:36[0m> [0;33mcol:7[0m referenced[0;1;36m __outbuf[0m [0;32m'char [2 * _S_buffer_length]'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6afa558[0m <[0;33mline:501:2[0m, [0;33mcol:31[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6afa4d0[0m <[0;33mcol:2[0m, [0;33mcol:24[0m> [0;33mcol:15[0m referenced[0;1;36m __next[0m [0;32m'const _Elem *'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa538[0m <[0;33mcol:24[0m> [0;32m'_Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9e88[0m[0;1;36m '__first'[0m [0;32m'_Elem *const'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6afa5e8[0m <[0;33mline:502:2[0m, [0;33mcol:22[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6afa580[0m <[0;33mcol:2[0m, [0;33mcol:15[0m> [0;33mcol:15[0m referenced[0;1;36m __start[0m [0;32m'const _Elem *'[0m
[0;34m  |   |-[0m[0;1;35mDoStmt[0m[0;33m 0x6afb530[0m <[0;33mline:503:2[0m, [0;33mline:518:46[0m>
[0;34m  |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6afb210[0m <[0;33mline:504:4[0m, [0;33mline:517:4[0m>
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6afa640[0m <[0;33mline:505:6[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '='
[0;34m  |   | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa600[0m <[0;33mcol:6[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa580[0m[0;1;36m '__start'[0m [0;32m'const _Elem *'[0m
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa620[0m <[0;33mcol:16[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6afa700[0m <[0;33mline:506:6[0m, [0;33mcol:32[0m>
[0;34m  |   | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6afa678[0m <[0;33mcol:6[0m, [0;33mcol:24[0m> [0;33mcol:12[0m referenced[0;1;36m __outnext[0m [0;32m'char *'[0m cinit
[0;34m  |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa6e0[0m <[0;33mcol:24[0m> [0;32m'char [2 * _S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa440[0m[0;1;36m '__outbuf'[0m [0;32m'char [2 * _S_buffer_length]'[0m
[0;34m  |   | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6afa900[0m <[0;33mline:507:6[0m, [0;33mcol:57[0m>
[0;34m  |   | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6afa730[0m <[0;33mcol:6[0m, [0;33mcol:56[0m> [0;33mcol:18[0m referenced[0;1;36m __outlast[0m [0;32m'char *const'[0m cinit
[0;34m  |   | | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afa8c8[0m <[0;33mcol:30[0m, [0;33mcol:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afa818[0m <[0;33mcol:39[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator+'[0;33m 0x5f96ec8[0m[0;33m 0x5fb8b08[0m[0;33m 0x65de398[0m[0;33m 0x66ea488[0m[0;33m 0x66eb498[0m[0;33m 0x65dfc28[0m[0;33m 0x65e0668[0m[0;33m 0x65e14f8[0m[0;33m 0x65e1ee8[0m[0;33m 0x65e2d78[0m[0;33m 0x65e3db8[0m[0;33m 0x65e4648[0m[0;33m 0x65e4f28[0m[0;33m 0x65e5788[0m
[0;34m  |   | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa798[0m <[0;33mcol:30[0m> [0;32m'char [2 * _S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa440[0m[0;1;36m '__outbuf'[0m [0;32m'char [2 * _S_buffer_length]'[0m
[0;34m  |   | | |     `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6afa7f8[0m <[0;33mcol:41[0m, [0;33mcol:56[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof
[0;34m  |   | | |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x6afa7d8[0m <[0;33mcol:47[0m, [0;33mcol:56[0m> [0;32m'char [2 * _S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa7b8[0m <[0;33mcol:48[0m> [0;32m'char [2 * _S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa440[0m[0;1;36m '__outbuf'[0m [0;32m'char [2 * _S_buffer_length]'[0m non_odr_use_unevaluated
[0;34m  |   | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6afab70[0m <[0;33mline:508:6[0m, [0;33mline:509:38[0m>
[0;34m  |   | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6afa928[0m <[0;33mline:508:6[0m, [0;33mline:509:37[0m> [0;33mline:508:11[0m referenced[0;1;36m __result[0m [0;32m'auto'[0m cinit
[0;34m  |   | | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6afab18[0m <[0;33mcol:22[0m, [0;33mline:509:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |     |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6afa9d0[0m <[0;33mline:508:22[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->out
[0;34m  |   | | |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6afa9a0[0m <[0;33mcol:22[0m> [0;32m'unique_ptr<_Codecvt>'[0m[0;36m lvalue[0m[0;36m[0m ->_M_cvt[0;33m 0x6aecf90[0m
[0;34m  |   | | |     |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6afa990[0m <[0;33mcol:22[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6afaa28[0m <[0;33mcol:34[0m> [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m[0;36m lvalue[0m[0;36m[0m ->_M_state[0;33m 0x6aecff0[0m
[0;34m  |   | | |     | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6afaa18[0m <[0;33mcol:34[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |   | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afaa58[0m <[0;33mcol:44[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afaa78[0m <[0;33mcol:52[0m> [0;32m'const _Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9f90[0m[0;1;36m '__last'[0m [0;32m'const _Elem *const'[0m
[0;34m  |   | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afaa98[0m <[0;33mcol:60[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afaab8[0m <[0;33mline:509:6[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa678[0m[0;1;36m '__outnext'[0m [0;32m'char *'[0m
[0;34m  |   | | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afaad8[0m <[0;33mcol:17[0m> [0;32m'char *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa730[0m[0;1;36m '__outlast'[0m [0;32m'char *const'[0m
[0;34m  |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afaaf8[0m <[0;33mcol:28[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa678[0m[0;1;36m '__outnext'[0m [0;32m'char *'[0m
[0;34m  |   | | |-[0m[0;1;35mIfStmt[0m[0;33m 0x6afb010[0m <[0;33mline:510:6[0m, [0;33mline:513:39[0m> has_else
[0;34m  |   | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afad00[0m <[0;33mline:510:10[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afac10[0m <[0;33mcol:19[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x5efd0c8[0m[0;33m 0x5f917f8[0m[0;33m 0x5f93e18[0m[0;33m 0x5fb34b8[0m[0;33m 0x5fb3b68[0m[0;33m 0x641b438[0m[0;33m 0x64ec8e0[0m[0;33m 0x64ece00[0m[0;33m 0x65e6050[0m[0;33m 0x65e6d00[0m[0;33m 0x65e7818[0m[0;33m 0x65e7fa8[0m[0;33m 0x675d7a0[0m[0;33m 0x675e100[0m[0;33m 0x675ebd0[0m[0;33m 0x675f3b0[0m[0;33m 0x67ebbc8[0m[0;33m 0x69c4838[0m[0;33m 0x6a95ac8[0m[0;33m 0x6ad1508[0m[0;33m 0x6ad1c40[0m[0;33m 0x6ad2170[0m
[0;34m  |   | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afab88[0m <[0;33mcol:10[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa928[0m[0;1;36m '__result'[0m [0;32m'auto'[0m
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afabe0[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;32m'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x690ee80[0m[0;1;36m 'error'[0m [0;32m'std::codecvt_base::result'[0m
[0;34m  |   | | | |-[0m[0;1;35mReturnStmt[0m[0;33m 0x6afad48[0m <[0;33mline:511:8[0m, [0;33mcol:15[0m>
[0;34m  |   | | | | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6afad38[0m <[0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   | | | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6afaff8[0m <[0;33mline:512:11[0m, [0;33mline:513:39[0m>
[0;34m  |   | | |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afaed0[0m <[0;33mline:512:15[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afade0[0m <[0;33mcol:24[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator=='[0;33m 0x5efd0c8[0m[0;33m 0x5f917f8[0m[0;33m 0x5f93e18[0m[0;33m 0x5fb34b8[0m[0;33m 0x5fb3b68[0m[0;33m 0x641b438[0m[0;33m 0x64ec8e0[0m[0;33m 0x64ece00[0m[0;33m 0x65e6050[0m[0;33m 0x65e6d00[0m[0;33m 0x65e7818[0m[0;33m 0x65e7fa8[0m[0;33m 0x675d7a0[0m[0;33m 0x675e100[0m[0;33m 0x675ebd0[0m[0;33m 0x675f3b0[0m[0;33m 0x67ebbc8[0m[0;33m 0x69c4838[0m[0;33m 0x6a95ac8[0m[0;33m 0x6ad1508[0m[0;33m 0x6ad1c40[0m[0;33m 0x6ad2170[0m
[0;34m  |   | | |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afad58[0m <[0;33mcol:15[0m> [0;32m'auto'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa928[0m[0;1;36m '__result'[0m [0;32m'auto'[0m
[0;34m  |   | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afadb0[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;32m'std::codecvt_base::result'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x690eed0[0m[0;1;36m 'noconv'[0m [0;32m'std::codecvt_base::result'[0m
[0;34m  |   | | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6afafe8[0m <[0;33mline:513:8[0m, [0;33mcol:39[0m>
[0;34m  |   | | |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x6afafb8[0m <[0;33mcol:15[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |       |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6afaf18[0m <[0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afaf78[0m <[0;33mcol:22[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   | | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afaf98[0m <[0;33mcol:30[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa098[0m[0;1;36m '__pending'[0m [0;32m'const std::streamsize':'const long'[0m
[0;34m  |   | | `-[0m[0;1;35mIfStmt[0m[0;33m 0x6afb1f8[0m <[0;33mline:515:6[0m, [0;33mline:516:15[0m>
[0;34m  |   | |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6afb1c0[0m <[0;33mline:515:10[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6afb190[0m <[0;33mcol:11[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   |   |-[0m[0;1;35mUnresolvedMemberExpr[0m[0;33m 0x6afb048[0m <[0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb0a8[0m <[0;33mcol:18[0m> [0;32m'char [2 * _S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa440[0m[0;1;36m '__outbuf'[0m [0;32m'char [2 * _S_buffer_length]'[0m
[0;34m  |   | |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afb158[0m <[0;33mcol:28[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afb108[0m <[0;33mcol:38[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   | |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb0c8[0m <[0;33mcol:28[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa678[0m[0;1;36m '__outnext'[0m [0;32m'char *'[0m
[0;34m  |   | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb0e8[0m <[0;33mcol:40[0m> [0;32m'char [2 * _S_buffer_length]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa440[0m[0;1;36m '__outbuf'[0m [0;32m'char [2 * _S_buffer_length]'[0m
[0;34m  |   | |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6afb1e8[0m <[0;33mline:516:8[0m, [0;33mcol:15[0m>
[0;34m  |   | |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6afb1d8[0m <[0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6afb510[0m <[0;33mline:518:9[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afb378[0m <[0;33mcol:9[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afb290[0m <[0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5eff048[0m[0;33m 0x5f924b8[0m[0;33m 0x5f94bd8[0m[0;33m 0x5fb4258[0m[0;33m 0x5fb48d0[0m[0;33m 0x641b9c8[0m[0;33m 0x64ed360[0m[0;33m 0x64ed840[0m[0;33m 0x65e8870[0m[0;33m 0x65e8f78[0m[0;33m 0x65e9678[0m[0;33m 0x67602c0[0m[0;33m 0x67610e0[0m[0;33m 0x6761f00[0m[0;33m 0x6762ab0[0m[0;33m 0x67ec258[0m[0;33m 0x69c50c8[0m[0;33m 0x6a97558[0m[0;33m 0x6ad2878[0m[0;33m 0x6ad2f60[0m[0;33m 0x6ad3470[0m
[0;34m  |   |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb250[0m <[0;33mcol:9[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb270[0m <[0;33mcol:19[0m> [0;32m'const _Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9f90[0m[0;1;36m '__last'[0m [0;32m'const _Elem *const'[0m
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afb4d8[0m <[0;33mcol:29[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afb3f0[0m <[0;33mcol:36[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5eff048[0m[0;33m 0x5f924b8[0m[0;33m 0x5f94bd8[0m[0;33m 0x5fb4258[0m[0;33m 0x5fb48d0[0m[0;33m 0x641b9c8[0m[0;33m 0x64ed360[0m[0;33m 0x64ed840[0m[0;33m 0x65e8870[0m[0;33m 0x65e8f78[0m[0;33m 0x65e9678[0m[0;33m 0x67602c0[0m[0;33m 0x67610e0[0m[0;33m 0x6761f00[0m[0;33m 0x6762ab0[0m[0;33m 0x67ec258[0m[0;33m 0x69c50c8[0m[0;33m 0x6a97558[0m[0;33m 0x6ad2878[0m[0;33m 0x6ad2f60[0m[0;33m 0x6ad3470[0m
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb3b0[0m <[0;33mcol:29[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb3d0[0m <[0;33mcol:39[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa580[0m[0;1;36m '__start'[0m [0;32m'const _Elem *'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6afb888[0m <[0;33mline:520:2[0m, [0;33mline:521:46[0m>
[0;34m  |   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afb678[0m <[0;33mline:520:6[0m, [0;33mcol:16[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afb590[0m <[0;33mcol:13[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5eff048[0m[0;33m 0x5f924b8[0m[0;33m 0x5f94bd8[0m[0;33m 0x5fb4258[0m[0;33m 0x5fb48d0[0m[0;33m 0x641b9c8[0m[0;33m 0x64ed360[0m[0;33m 0x64ed840[0m[0;33m 0x65e8870[0m[0;33m 0x65e8f78[0m[0;33m 0x65e9678[0m[0;33m 0x67602c0[0m[0;33m 0x67610e0[0m[0;33m 0x6761f00[0m[0;33m 0x6762ab0[0m[0;33m 0x67ec258[0m[0;33m 0x69c50c8[0m[0;33m 0x6a97558[0m[0;33m 0x6ad2878[0m[0;33m 0x6ad2f60[0m[0;33m 0x6ad3470[0m
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb550[0m <[0;33mcol:6[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb570[0m <[0;33mcol:16[0m> [0;32m'const _Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9f90[0m[0;1;36m '__last'[0m [0;32m'const _Elem *const'[0m
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6afb850[0m <[0;33mline:521:4[0m, [0;33mcol:46[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6afb700[0m <[0;33mcol:4[0m, [0;33mcol:9[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->move
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb748[0m <[0;33mcol:14[0m> [0;32m'_Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9e88[0m[0;1;36m '__first'[0m [0;32m'_Elem *const'[0m
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb768[0m <[0;33mcol:23[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afb818[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afb7c8[0m <[0;33mcol:38[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb788[0m <[0;33mcol:31[0m> [0;32m'const _Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9f90[0m[0;1;36m '__last'[0m [0;32m'const _Elem *const'[0m
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb7a8[0m <[0;33mcol:40[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x6afb9c0[0m <[0;33mline:523:2[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6afb8b0[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m ->pbump
[0;34m  |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x6afb8a0[0m <[0;33mcol:2[0m> [0;32m'wbuffer_convert<_Codecvt, _Elem, _Tr> *'[0m[0;36m[0m[0;36m[0m this
[0;34m  |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afb988[0m <[0;33mcol:14[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afb938[0m <[0;33mcol:22[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator-'[0;33m 0x5f96718[0m[0;33m 0x5fb8338[0m
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb8f8[0m <[0;33mcol:14[0m> [0;32m'_Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9e88[0m[0;1;36m '__first'[0m [0;32m'_Elem *const'[0m
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb918[0m <[0;33mcol:24[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6afbb48[0m <[0;33mline:524:2[0m, [0;33mcol:19[0m>
[0;34m  |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6afbb10[0m <[0;33mcol:9[0m, [0;33mcol:19[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6afba28[0m <[0;33mcol:16[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator!='[0;33m 0x5eff048[0m[0;33m 0x5f924b8[0m[0;33m 0x5f94bd8[0m[0;33m 0x5fb4258[0m[0;33m 0x5fb48d0[0m[0;33m 0x641b9c8[0m[0;33m 0x64ed360[0m[0;33m 0x64ed840[0m[0;33m 0x65e8870[0m[0;33m 0x65e8f78[0m[0;33m 0x65e9678[0m[0;33m 0x67602c0[0m[0;33m 0x67610e0[0m[0;33m 0x6761f00[0m[0;33m 0x6762ab0[0m[0;33m 0x67ec258[0m[0;33m 0x69c50c8[0m[0;33m 0x6a97558[0m[0;33m 0x6ad2878[0m[0;33m 0x6ad2f60[0m[0;33m 0x6ad3470[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afb9e8[0m <[0;33mcol:9[0m> [0;32m'const _Elem *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6afa4d0[0m[0;1;36m '__next'[0m [0;32m'const _Elem *'[0m
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afba08[0m <[0;33mcol:19[0m> [0;32m'_Elem *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6af9e88[0m[0;1;36m '__first'[0m [0;32m'_Elem *const'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6aece08[0m <[0;33mline:527:7[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m _M_buf[0m [0;32m'std::streambuf *'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6aecf90[0m <[0;33mline:528:7[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m _M_cvt[0m [0;32m'unique_ptr<_Codecvt>'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6aecff0[0m <[0;33mline:529:7[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m _M_state[0m [0;32m'std::wbuffer_convert::state_type':'typename _Codecvt::state_type'[0m
[0;34m  |-[0m[0;1;32mVarDecl[0m[0;33m 0x6aed050[0m <[0;33mline:531:7[0m, [0;33mcol:50[0m> [0;33mcol:31[0m referenced[0;1;36m _S_buffer_length[0m [0;32m'const std::streamsize':'const long'[0m static cinit
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aed0d8[0m <[0;33mcol:50[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aed0b8[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 32[0m
[0;34m  |-[0m[0;1;32mVarDecl[0m[0;33m 0x6aed158[0m <[0;33mline:532:7[0m, [0;33mcol:51[0m> [0;33mcol:31[0m referenced[0;1;36m _S_putback_length[0m [0;32m'const std::streamsize':'const long'[0m static cinit
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aed1e0[0m <[0;33mcol:51[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aed1c0[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 3[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6aed350[0m <[0;33mline:533:7[0m, [0;33mcol:61[0m> [0;33mcol:33[0m referenced[0;1;36m _M_put_area[0m [0;32m'_Elem [_S_buffer_length]'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6aed460[0m <[0;33mline:534:7[0m, [0;33mcol:61[0m> [0;33mcol:33[0m referenced[0;1;36m _M_get_area[0m [0;32m'_Elem [_S_buffer_length]'[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6aed4c0[0m <[0;33mline:535:7[0m, [0;33mcol:31[0m> [0;33mcol:19[0m referenced[0;1;36m _M_unconv[0m [0;32m'std::streamsize':'long'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aed7c0[0m <[0;33mcol:31[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6aed7a0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6aed640[0m <[0;33mline:536:7[0m, [0;33mcol:59[0m> [0;33mcol:14[0m referenced[0;1;36m _M_get_buf[0m [0;32m'char [_S_buffer_length - _S_putback_length]'[0m
[0;34m  `-[0m[0;1;32mFieldDecl[0m[0;33m 0x6aed6a0[0m <[0;33mline:537:7[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced[0;1;36m _M_always_noconv[0m [0;32m'bool'[0m

Dumping std::__is_convertible_to_basic_ostream_test:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b2b7c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:616:3[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_ostream_test[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b2b2c8[0m <[0;33mline:616:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Ch[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b2b338[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b2b728[0m <[0;33mline:617:5[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_ostream_test[0m [0;32m'basic_ostream<_Ch, _Up> &(basic_ostream<_Ch, _Up> *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b2b5c8[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_ostream<_Ch, _Up> *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x72d5278[0m <[0;33mline:617:5[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_ostream_test[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::char_traits<char>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72d5148[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_ostream<char, std::char_traits<char> > *'[0m

Dumping std::__is_convertible_to_basic_ostream_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6b2b9c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:620:3[0m, [0;33mline:624:5[0m> [0;33mline:621:12[0m[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b2b828[0m <[0;33mline:620:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b2b8a8[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b2b938[0m <[0;33mline:621:5[0m, [0;33mline:624:5[0m> [0;33mline:621:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b2bc60[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b2bd00[0m <[0;33mline:623:7[0m, [0;33mcol:30[0m> [0;33mcol:13[0m[0;1;36m __ostream_type[0m [0;32m'void'[0m
[0;34m|   `-[0m[0;32mBuiltinType[0m[0;33m 0x5cf3c40[0m [0;32m'void'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x72cdc28[0m <[0;33mline:631:3[0m, [0;33mline:638:5[0m> [0;33mline:632:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x72d5630[0m prev 0x72cdc28 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m  `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x72d5ce8[0m <[0;33mline:636:7[0m, [0;33mline:637:47[0m> [0;33mline:636:13[0m referenced[0;1;36m __ostream_type[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>':'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m    `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x72d5c70[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>'[0m sugar alias __do_is_convertible_to_basic_ostream_impl
[0;34m      |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &':'std::basic_ostream<char> &'[0m
[0;34m      |-[0m[0;32mDecltypeType[0m[0;33m 0x72d5c30[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<basic_ostream<char> &>::type *>()))'[0m sugar
[0;34m      | |-[0m[0;1;35mCallExpr[0m[0;33m 0x72d5be8[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5bd0[0m <[0;33mline:628:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d5ba8[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72d5278[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b2b7c8[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m) non_odr_use_unevaluated
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5c10[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x72d5b28[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5b10[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d5aa8[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72d4c70[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e942d0[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x72d5020[0m [0;32m'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x72d4fc0[0m [0;32m'basic_ostream<char, std::char_traits<char> >'[0m sugar basic_ostream
[0;34m      |     |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m      |     `-[0m[0;32mRecordType[0m[0;33m 0x6424540[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m      |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6424440[0m[0;1;36m 'basic_ostream'[0m
[0;34m      `-[0m[0;32mDecltypeType[0m[0;33m 0x72d5c30[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<basic_ostream<char> &>::type *>()))'[0m sugar
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x72d5be8[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5bd0[0m <[0;33mline:628:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d5ba8[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72d5278[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b2b7c8[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m) non_odr_use_unevaluated
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5c10[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x72d5b28[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d5b10[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d5aa8[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72d4c70[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e942d0[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m        `-[0m[0;32mLValueReferenceType[0m[0;33m 0x72d5020[0m [0;32m'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m          `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x72d4fc0[0m [0;32m'basic_ostream<char, std::char_traits<char> >'[0m sugar basic_ostream
[0;34m            |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m            |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m            `-[0m[0;32mRecordType[0m[0;33m 0x6424540[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m              `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6424440[0m[0;1;36m 'basic_ostream'[0m

Dumping std::__do_is_convertible_to_basic_ostream_impl:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x6b2c138[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:626:3[0m, [0;33mline:628:5[0m> [0;33mline:627:5[0m[0;1;36m __do_is_convertible_to_basic_ostream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b2bd78[0m <[0;33mline:626:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b2c0d8[0m <[0;33mline:627:5[0m, [0;33mline:628:5[0m> [0;33mline:627:11[0m[0;1;36m __do_is_convertible_to_basic_ostream_impl[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x6b2c0a0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b2c038[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b2be00[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x6b2b7c8[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b2c018[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b2bf90[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5e942d0[0m

Dumping std::__is_convertible_to_basic_ostream_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x6b2c7a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:631:3[0m, [0;33mline:638:5[0m> [0;33mline:632:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b2c190[0m <[0;33mline:631:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b2ca28[0m <[0;33mline:632:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b2ce08[0m <[0;33mline:636:7[0m, [0;33mline:637:47[0m> [0;33mline:636:13[0m[0;1;36m __ostream_type[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<_Tp>':'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6b2cd60[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<_Tp>'[0m sugar dependent alias __do_is_convertible_to_basic_ostream_impl
[0;34m    |-[0mTemplateArgument type [0;32m'_Tp'[0m
[0;34m    |-[0m[0;32mDecltypeType[0m[0;33m 0x6b2cd20[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b2ccf8[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b2cad8[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x6b2b7c8[0m
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b2ccd8[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b2cc50[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5e942d0[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x6b2cd20[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b2ccf8[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b2cad8[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x6b2b7c8[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b2ccd8[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b2cc50[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5e942d0[0m

Dumping std::__is_convertible_to_basic_ostream:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6b2cfa0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:640:3[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b2ce80[0m <[0;33mline:640:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b2cf10[0m <[0;33mline:641:5[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m struct[0;1;36m __is_convertible_to_basic_ostream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_ostream_impl<_Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b2d2a0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6b2d330[0m <[0;33mline:644:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b2d680[0m <[0;33mline:645:7[0m, [0;33mline:646:78[0m> [0;33mline:645:13[0m referenced[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6b2d5e0[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type> >'[0m dependent __not_
[0;34m| |   `-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type>'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x6b2d6f0[0m <[0;33mline:647:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x6b2d7d0[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x72cd8c0[0m <[0;33mline:640:3[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m struct[0;1;36m __is_convertible_to_basic_ostream[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>':'std::__is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &, void>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x72d5d90[0m prev 0x72cd8c0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x72d5e20[0m <[0;33mline:644:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x72d6250[0m <[0;33mline:645:7[0m, [0;33mline:646:78[0m> [0;33mline:645:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type> >':'std::__not_<std::is_void<std::basic_ostream<char> &> >'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x72d61e0[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type> >'[0m sugar __not_
[0;34m  |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type>':'std::is_void<std::basic_ostream<char> &>'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x72d61c0[0m [0;32m'std::__not_<std::is_void<std::basic_ostream<char> &> >'[0m
[0;34m  |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x72d60e0[0m[0;1;36m '__not_'[0m
[0;34m  `-[0m[0;1;32mVarDecl[0m[0;33m 0x72d62b0[0m <[0;33mline:647:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72d7890[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72d7860[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x678e678[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant

Dumping std::__is_convertible_to_basic_istream_test:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6b7c598[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:911:3[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_istream_test[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7c068[0m <[0;33mline:911:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Ch[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7c0d8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6b7c4f8[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<_Ch, _Up> &(basic_istream<_Ch, _Up> *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6b7c398[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<_Ch, _Up> *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6bbc578[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::char_traits<char>'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bbc448[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<char, std::char_traits<char> > *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6bd6658[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bd6528[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > *'[0m

Dumping std::__is_convertible_to_basic_istream_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6b7c798[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:915:3[0m, [0;33mline:919:5[0m> [0;33mline:916:12[0m[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7c5f8[0m <[0;33mline:915:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7c678[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7c708[0m <[0;33mline:916:5[0m, [0;33mline:919:5[0m> [0;33mline:916:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7ca30[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b7cad0[0m <[0;33mline:918:7[0m, [0;33mcol:30[0m> [0;33mcol:13[0m[0;1;36m __istream_type[0m [0;32m'void'[0m
[0;34m|   `-[0m[0;32mBuiltinType[0m[0;33m 0x5cf3c40[0m [0;32m'void'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bb4ea0[0m <[0;33mline:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bbc930[0m prev 0x6bb4ea0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6bbcfe8[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m referenced[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<char> &>':'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bbcf70[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<char> &>'[0m sugar alias __do_is_convertible_to_basic_istream_impl
[0;34m|     |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &':'std::basic_istream<char> &'[0m
[0;34m|     |-[0m[0;32mDecltypeType[0m[0;33m 0x6bbcf30[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<char> &>::type *>()))'[0m sugar
[0;34m|     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6bbcee8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<char, std::char_traits<char> >':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bbced0[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(*)(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bbcea8[0m <[0;33mcol:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6bbc578[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7c598[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m|     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bbcf10[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|     | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6bbce28[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bbce10[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bbcda8[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6bbbf70[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e942d0[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6bbc320[0m [0;32m'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|     |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bbc2c0[0m [0;32m'basic_istream<char, std::char_traits<char> >'[0m sugar basic_istream
[0;34m|     |     |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m|     |     |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m|     |     `-[0m[0;32mRecordType[0m[0;33m 0x6424260[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|     |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6424160[0m[0;1;36m 'basic_istream'[0m
[0;34m|     `-[0m[0;32mDecltypeType[0m[0;33m 0x6bbcf30[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<char> &>::type *>()))'[0m sugar
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x6bbcee8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<char, std::char_traits<char> >':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bbced0[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(*)(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bbcea8[0m <[0;33mcol:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6bbc578[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7c598[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m|       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bbcf10[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6bbce28[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bbce10[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bbcda8[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6bbbf70[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e942d0[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m|       `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6bbc320[0m [0;32m'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|         `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bbc2c0[0m [0;32m'basic_istream<char, std::char_traits<char> >'[0m sugar basic_istream
[0;34m|           |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m|           |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x6424260[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6424160[0m[0;1;36m 'basic_istream'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bcf088[0m <[0;33mline:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bd6a10[0m prev 0x6bcf088 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m  `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6bd70c8[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m referenced[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>':'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m    `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bd7050[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>'[0m sugar alias __do_is_convertible_to_basic_istream_impl
[0;34m      |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'[0m
[0;34m      |-[0m[0;32mDecltypeType[0m[0;33m 0x6bd7010[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<wchar_t> &>::type *>()))'[0m sugar
[0;34m      | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6bd6fc8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >':'std::basic_istream<wchar_t>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bd6fb0[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(*)(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bd6f88[0m <[0;33mcol:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6bd6658[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7c598[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bd6ff0[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6bd6f08[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bd6ef0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bd6e88[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6bd60d0[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e942d0[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6bd6400[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bd63a0[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >'[0m sugar basic_istream
[0;34m      |     |-[0mTemplateArgument type [0;32m'wchar_t':'wchar_t'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>':'std::char_traits<wchar_t>'[0m
[0;34m      |     `-[0m[0;32mRecordType[0m[0;33m 0x6426a00[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m      |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6426900[0m[0;1;36m 'basic_istream'[0m
[0;34m      `-[0m[0;32mDecltypeType[0m[0;33m 0x6bd7010[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<wchar_t> &>::type *>()))'[0m sugar
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x6bd6fc8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >':'std::basic_istream<wchar_t>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bd6fb0[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(*)(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bd6f88[0m <[0;33mcol:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6bd6658[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6b7c598[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bd6ff0[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6bd6f08[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bd6ef0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bd6e88[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6bd60d0[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e942d0[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m        `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6bd6400[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m          `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bd63a0[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >'[0m sugar basic_istream
[0;34m            |-[0mTemplateArgument type [0;32m'wchar_t':'wchar_t'[0m
[0;34m            |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>':'std::char_traits<wchar_t>'[0m
[0;34m            `-[0m[0;32mRecordType[0m[0;33m 0x6426a00[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m              `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6426900[0m[0;1;36m 'basic_istream'[0m

Dumping std::__do_is_convertible_to_basic_istream_impl:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x6b7cf08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:921:3[0m, [0;33mline:923:5[0m> [0;33mline:922:5[0m[0;1;36m __do_is_convertible_to_basic_istream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7cb48[0m <[0;33mline:921:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b7cea8[0m <[0;33mline:922:5[0m, [0;33mline:923:5[0m> [0;33mline:922:11[0m[0;1;36m __do_is_convertible_to_basic_istream_impl[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x6b7ce70[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b7ce08[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b7cbd0[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x6b7c598[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b7cde8[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b7cd60[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5e942d0[0m

Dumping std::__is_convertible_to_basic_istream_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x6b7d578[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7cf60[0m <[0;33mline:926:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7d7f8[0m <[0;33mline:927:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b7dbd8[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<_Tp>':'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6b7db30[0m [0;32m'__do_is_convertible_to_basic_istream_impl<_Tp>'[0m sugar dependent alias __do_is_convertible_to_basic_istream_impl
[0;34m    |-[0mTemplateArgument type [0;32m'_Tp'[0m
[0;34m    |-[0m[0;32mDecltypeType[0m[0;33m 0x6b7daf0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b7dac8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b7d8a8[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x6b7c598[0m
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b7daa8[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b7da20[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5e942d0[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x6b7daf0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b7dac8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b7d8a8[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x6b7c598[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b7daa8[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6b7da20[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5e942d0[0m

Dumping std::__is_convertible_to_basic_istream:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6b7dd70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6b7dc50[0m <[0;33mline:935:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7dce0[0m <[0;33mline:936:5[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<_Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6b7f8d8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6b7f968[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6b7fcb0[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m referenced[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6b7fc10[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type> >'[0m dependent __not_
[0;34m| |   `-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type>'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x6b7fd20[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x6b7fe00[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bb3ac0[0m <[0;33mline:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<std::basic_istream<char> &>':'std::__is_convertible_to_basic_istream_impl<std::basic_istream<char> &, void>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bbd090[0m prev 0x6bb3ac0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6bbd120[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6bbd550[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type> >':'std::__not_<std::is_void<std::basic_istream<char> &> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bbd4e0[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type> >'[0m sugar __not_
[0;34m| |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type>':'std::is_void<std::basic_istream<char> &>'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x6bbd4c0[0m [0;32m'std::__not_<std::is_void<std::basic_istream<char> &> >'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6bbd3e0[0m[0;1;36m '__not_'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x6bbd5b0[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bbeb90[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bbeb60[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x678e678[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6bced20[0m <[0;33mline:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>':'std::__is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &, void>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6bd7170[0m prev 0x6bced20 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6bd7200[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6bd7630[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type> >':'std::__not_<std::is_void<std::basic_istream<wchar_t> &> >'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6bd75c0[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type> >'[0m sugar __not_
[0;34m  |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type>':'std::is_void<std::basic_istream<wchar_t> &>'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x6bd75a0[0m [0;32m'std::__not_<std::is_void<std::basic_istream<wchar_t> &> >'[0m
[0;34m  |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6bd74c0[0m[0;1;36m '__not_'[0m
[0;34m  `-[0m[0;1;32mVarDecl[0m[0;33m 0x6bd7690[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6bdbf30[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6bdbf00[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x678e678[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant

Dumping convert:
[0;1;32mFunctionDecl[0m[0;33m 0x729a218[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aknow/2994486_5751500831719424_aknow.cpp:65:1[0m, [0;33mline:82:1[0m> [0;33mline:65:15[0m used[0;1;36m convert[0m [0;32m'vector<Token> (std::__cxx11::string &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x729a100[0m <[0;33mcol:23[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m s[0m [0;32m'std::__cxx11::string &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x72c6118[0m <[0;33mcol:34[0m, [0;33mline:82:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x72bcdd8[0m <[0;33mline:66:3[0m, [0;33mcol:23[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x72b7b20[0m <[0;33mcol:3[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m result[0m [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m nrvo callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x72bcdb0[0m <[0;33mcol:17[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<Token> >::value)'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x72bcf48[0m <[0;33mline:68:3[0m, [0;33mcol:17[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x72bce00[0m <[0;33mcol:3[0m, [0;33mcol:16[0m> [0;33mcol:8[0m used[0;1;36m ch[0m [0;32m'char'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bcf30[0m <[0;33mcol:13[0m, [0;33mcol:16[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x72bcef8[0m <[0;33mcol:13[0m, [0;33mcol:16[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bcee0[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bcec0[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x661ab48[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bce68[0m <[0;33mcol:13[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x729a100[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string &'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bcea8[0m <[0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x72bce88[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x72bd000[0m <[0;33mline:69:3[0m, [0;33mcol:14[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x72bcf78[0m <[0;33mcol:3[0m, [0;33mcol:13[0m> [0;33mcol:7[0m used[0;1;36m cnt[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x72bcfe0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x72bdb38[0m <[0;33mline:70:3[0m, [0;33mline:78:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x72bd0d0[0m <[0;33mline:70:8[0m, [0;33mcol:22[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x72bd030[0m <[0;33mcol:8[0m, [0;33mcol:21[0m> [0;33mcol:17[0m used[0;1;36m i[0m [0;32m'unsigned int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd0b8[0m <[0;33mcol:21[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x72bd098[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72bd1c0[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd1a8[0m <[0;33mcol:24[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd190[0m <[0;33mcol:24[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd0e8[0m <[0;33mcol:24[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bd030[0m[0;1;36m 'i'[0m [0;32m'unsigned int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x72bd158[0m <[0;33mcol:28[0m, [0;33mcol:35[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x72bd128[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6619e50[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd178[0m <[0;33mcol:28[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd108[0m <[0;33mcol:28[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x729a100[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string &'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x72bd200[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd1e0[0m <[0;33mcol:40[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bd030[0m[0;1;36m 'i'[0m [0;32m'unsigned int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x72bdb20[0m <[0;33mcol:43[0m, [0;33mline:78:3[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x72bdaf8[0m <[0;33mline:71:5[0m, [0;33mline:77:5[0m> has_else
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72bd378[0m <[0;33mline:71:9[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd348[0m <[0;33mcol:9[0m, [0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd318[0m <[0;33mcol:9[0m, [0;33mcol:12[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x72bd2c0[0m <[0;33mcol:9[0m, [0;33mcol:12[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd2a8[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd288[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x661ab48[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |     | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd218[0m <[0;33mcol:9[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x729a100[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string &'[0m
[0;34m  |     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd270[0m <[0;33mcol:11[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd258[0m <[0;33mcol:11[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd238[0m <[0;33mcol:11[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bd030[0m[0;1;36m 'i'[0m [0;32m'unsigned int'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd360[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd330[0m <[0;33mcol:17[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd2f8[0m <[0;33mcol:17[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bce00[0m[0;1;36m 'ch'[0m [0;32m'char'[0m
[0;34m  |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x72bd3d0[0m <[0;33mcol:21[0m, [0;33mline:73:5[0m>
[0;34m  |     | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x72bd3b8[0m <[0;33mline:72:7[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd398[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bcf78[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x72bdad0[0m <[0;33mline:73:12[0m, [0;33mline:77:5[0m>
[0;34m  |       |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x72bd920[0m <[0;33mline:74:7[0m, [0;33mcol:38[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x72bd8e0[0m <[0;33mcol:7[0m, [0;33mcol:38[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x72bd8b0[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x72af1c8[0m
[0;34m  |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd3e8[0m <[0;33mcol:7[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72b7b20[0m[0;1;36m 'result'[0m [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m
[0;34m  |       |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72bd908[0m <[0;33mcol:24[0m, [0;33mcol:37[0m> [0;32m'Token'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |       |     `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x72bd788[0m <[0;33mcol:24[0m, [0;33mcol:37[0m> [0;32m'Token'[0m[0;36m[0m[0;36m[0m [0;32m'void (char, int)'[0m
[0;34m  |       |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd758[0m <[0;33mcol:30[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd478[0m <[0;33mcol:30[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bce00[0m[0;1;36m 'ch'[0m [0;32m'char'[0m
[0;34m  |       |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd770[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd498[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bcf78[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m  |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72bda50[0m <[0;33mline:75:7[0m, [0;33mcol:15[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd938[0m <[0;33mcol:7[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bce00[0m[0;1;36m 'ch'[0m [0;32m'char'[0m
[0;34m  |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bda38[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x72bda00[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd9e8[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd9c8[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x661ab48[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |       |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd958[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x729a100[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string &'[0m
[0;34m  |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd9b0[0m <[0;33mcol:14[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bd998[0m <[0;33mcol:14[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bd978[0m <[0;33mcol:14[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bd030[0m[0;1;36m 'i'[0m [0;32m'unsigned int'[0m
[0;34m  |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72bdab0[0m <[0;33mline:76:7[0m, [0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bda70[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bcf78[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x72bda90[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x72bdd20[0m <[0;33mline:79:3[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x72bdce0[0m <[0;33mcol:3[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x72bdcb0[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x72af1c8[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bdb70[0m <[0;33mcol:3[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72b7b20[0m[0;1;36m 'result'[0m [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m
[0;34m  |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72bdd08[0m <[0;33mcol:20[0m, [0;33mcol:33[0m> [0;32m'Token'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x72bdc70[0m <[0;33mcol:20[0m, [0;33mcol:33[0m> [0;32m'Token'[0m[0;36m[0m[0;36m[0m [0;32m'void (char, int)'[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bdc40[0m <[0;33mcol:26[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bdc00[0m <[0;33mcol:26[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bce00[0m[0;1;36m 'ch'[0m [0;32m'char'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72bdc58[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72bdc20[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72bcf78[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x72c6100[0m <[0;33mline:81:3[0m, [0;33mcol:10[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x72c60d0[0m <[0;33mcol:10[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<Token, std::allocator<Token> > &&) noexcept'[0m elidable
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72c60b8[0m <[0;33mcol:10[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72c5200[0m <[0;33mcol:10[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72b7b20[0m[0;1;36m 'result'[0m [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m

Dumping dump:
[0;1;32mFunctionDecl[0m[0;33m 0x70c5e78[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aknow/2994486_5751500831719424_aknow.cpp:84:1[0m, [0;33mline:89:1[0m> [0;33mline:84:6[0m[0;1;36m dump[0m [0;32m'void (const vector<Token> &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x70c5db0[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m word[0m [0;32m'const vector<Token> &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x70e2988[0m <[0;33mcol:38[0m, [0;33mline:89:1[0m>
[0;34m  |-[0m[0;1;35mCXXForRangeStmt[0m[0;33m 0x70cc7e0[0m <[0;33mline:85:3[0m, [0;33mline:87:3[0m>
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x70c61a0[0m <[0;33mline:85:17[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x70c5fe0[0m <[0;33mcol:17[0m> [0;33mcol:17[0m implicit used[0;1;36m __range1[0m [0;32m'const std::vector<Token, std::allocator<Token> > &'[0m cinit
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70c5f20[0m <[0;33mcol:17[0m> [0;32m'const vector<Token>':'const std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x70c5db0[0m[0;1;36m 'word'[0m [0;32m'const vector<Token> &'[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x70ca268[0m <[0;33mcol:15[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x70c6208[0m <[0;33mcol:15[0m> [0;33mcol:15[0m implicit used[0;1;36m __begin1[0m [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m cinit
[0;34m  | |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x70c9e40[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x70c9e10[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &&) noexcept'[0m elidable
[0;34m  | |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x70c9cc8[0m <[0;33mcol:15[0m> [0;32m'std::vector<Token, std::allocator<Token> >::const_iterator':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  | |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x70c6378[0m <[0;33mcol:15[0m> [0;32m'std::vector<Token, std::allocator<Token> >::const_iterator':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x70c6348[0m <[0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x70ad6c0[0m
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70c61b8[0m <[0;33mcol:15[0m> [0;32m'const std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70c5fe0[0m[0;1;36m '__range1'[0m [0;32m'const std::vector<Token, std::allocator<Token> > &'[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x70ca280[0m <[0;33mcol:15[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x70c6280[0m <[0;33mcol:15[0m> [0;33mcol:15[0m implicit used[0;1;36m __end1[0m [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m cinit
[0;34m  | |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x70ca250[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x70ca220[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &&) noexcept'[0m elidable
[0;34m  | |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x70ca208[0m <[0;33mcol:15[0m> [0;32m'std::vector<Token, std::allocator<Token> >::const_iterator':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  | |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x70c9ee8[0m <[0;33mcol:15[0m> [0;32m'std::vector<Token, std::allocator<Token> >::const_iterator':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m[0m[0;36m[0m
[0;34m  | |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x70c9eb8[0m <[0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x70ad870[0m
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70c61d8[0m <[0;33mcol:15[0m> [0;32m'const std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70c5fe0[0m[0;1;36m '__range1'[0m [0;32m'const std::vector<Token, std::allocator<Token> > &'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70cc330[0m <[0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70cc318[0m <[0;33mcol:15[0m> [0;32m'bool (*)(const __normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &, const __normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70cc2a0[0m <[0;33mcol:15[0m> [0;32m'bool (const __normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &, const __normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x70cc120[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &, const __normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &) noexcept'[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70cc270[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'const __gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70ca298[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70c6208[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70cc288[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'const __gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70ca2b8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70c6280[0m[0;1;36m '__end1'[0m [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70cc450[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70cc438[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70cc3b8[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x70c80d0[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > > &() noexcept'[0m
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70cc368[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70c6208[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x70c5fb8[0m <[0;33mcol:8[0m, [0;33mcol:21[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x70c5f50[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m t[0m [0;32m'Token':'Token'[0m cinit
[0;34m  | |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x70cc7b0[0m <[0;33mcol:15[0m> [0;32m'Token':'Token'[0m[0;36m[0m[0;36m[0m [0;32m'void (const Token &) noexcept'[0m
[0;34m  | |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70cc570[0m <[0;33mcol:15[0m> [0;32m'const Token':'const Token'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70cc558[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70cc4e0[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x70c7e50[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >::reference () const noexcept'[0m
[0;34m  | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70cc4c8[0m <[0;33mcol:15[0m> [0;32m'const __gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70cc480[0m <[0;33mcol:15[0m> [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70c6208[0m[0;1;36m '__begin1'[0m [0;32m'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >':'__gnu_cxx::__normal_iterator<const Token *, std::vector<Token, std::allocator<Token> > >'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x70e0770[0m <[0;33mcol:23[0m, [0;33mline:87:3[0m>
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70e0738[0m <[0;33mline:86:5[0m, [0;33mcol:44[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70e0720[0m <[0;33mcol:41[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70e0700[0m <[0;33mcol:41[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x694fd28[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70df800[0m <[0;33mcol:5[0m, [0;33mcol:37[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70df7e8[0m <[0;33mcol:32[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70df770[0m <[0;33mcol:32[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6947528[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  |     | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70dd9b8[0m <[0;33mcol:5[0m, [0;33mcol:28[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70dd9a0[0m <[0;33mcol:25[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70dd980[0m <[0;33mcol:25[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x694fd28[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70dca80[0m <[0;33mcol:5[0m, [0;33mcol:22[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70dca68[0m <[0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, char)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70dc9f0[0m <[0;33mcol:17[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, char)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x694d688[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, char)'[0m
[0;34m  |     | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70da9b0[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70da998[0m <[0;33mcol:10[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70da920[0m <[0;33mcol:10[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x694fd28[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |     | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70cc840[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a56730[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |     | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70da908[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x70cc860[0m <[0;33mcol:13[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "("[0m
[0;34m  |     | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70dc9d8[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x70daa08[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m .ch[0;33m 0x70752c8[0m
[0;34m  |     | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70da9e8[0m <[0;33mcol:20[0m> [0;32m'Token':'Token'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70c5f50[0m[0;1;36m 't'[0m [0;32m'Token':'Token'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70dd968[0m <[0;33mcol:28[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x70dcab8[0m <[0;33mcol:28[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " "[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70df758[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x70dda10[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m .cnt[0;33m 0x7075330[0m
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70dd9f0[0m <[0;33mcol:35[0m> [0;32m'Token':'Token'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70c5f50[0m[0;1;36m 't'[0m [0;32m'Token':'Token'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70e06e8[0m <[0;33mcol:44[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x70df838[0m <[0;33mcol:44[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ")"[0m
[0;34m  `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x70e2950[0m <[0;33mline:88:3[0m, [0;33mcol:11[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70e2938[0m <[0;33mcol:8[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70e28b8[0m <[0;33mcol:8[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x69465c8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m    |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70e0788[0m <[0;33mcol:3[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a56730[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x70e28a0[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x70e2878[0m <[0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x694b8e8[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x692b3b8[0m[0;1;36m 'endl'[0m)

Dumping std::__invoke_memfun_ref:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5805988[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2269:3[0m, [0;33mcol:32[0m> [0;33mcol:10[0m referenced struct[0;1;36m __invoke_memfun_ref[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5805aa8[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit struct[0;1;36m __invoke_memfun_ref[0m

Dumping std::__invoke_memfun_deref:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5805b50[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2270:3[0m, [0;33mcol:34[0m> [0;33mcol:10[0m referenced struct[0;1;36m __invoke_memfun_deref[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5805c68[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit struct[0;1;36m __invoke_memfun_deref[0m

Dumping std::__invoke_memobj_ref:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5805d10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2271:3[0m, [0;33mcol:32[0m> [0;33mcol:10[0m referenced struct[0;1;36m __invoke_memobj_ref[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5805e28[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit struct[0;1;36m __invoke_memobj_ref[0m

Dumping std::__invoke_memobj_deref:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5805ed0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2272:3[0m, [0;33mcol:34[0m> [0;33mcol:10[0m referenced struct[0;1;36m __invoke_memobj_deref[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5805fe8[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit struct[0;1;36m __invoke_memobj_deref[0m

Dumping std::__invoke_other:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5806090[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2273:3[0m, [0;33mcol:27[0m> [0;33mcol:10[0m referenced struct[0;1;36m __invoke_other[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x58061a8[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit struct[0;1;36m __invoke_other[0m

Dumping std::__result_of_success::__invoke_type:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5809580[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2278:7[0m, [0;33mcol:29[0m> [0;33mcol:13[0m[0;1;36m __invoke_type[0m [0;32m'_Tag'[0m
[0;34m`-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x5806310[0m [0;32m'_Tag'[0m dependent depth 0 index 1
[0;34m  `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x58062c8[0m[0;1;36m '_Tag'[0m

Dumping std::__invoke_result:
[0;1;32mClassTemplateDecl[0m[0;33m 0x581af18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:2443:3[0m, [0;33mline:2454:7[0m> [0;33mline:2444:12[0m[0;1;36m __invoke_result[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x581ad88[0m <[0;33mline:2443:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Functor[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x581adf8[0m <[0;33mcol:31[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced typename depth 0 index 1 ...[0;1;36m _ArgTypes[0m
[0;34m`-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x581ae88[0m <[0;33mline:2444:5[0m, [0;33mline:2454:7[0m> [0;33mline:2444:12[0m struct[0;1;36m __invoke_result[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__result_of_impl<is_member_object_pointer<typename remove_reference<_Functor>::type>::value, is_member_function_pointer<typename remove_reference<_Functor>::type>::value, _Functor, _ArgTypes...>::type'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x581ba10[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __invoke_result[0m

Dumping __tokens:
[0;1;32mParmVarDecl[0m[0;33m 0x5a08980[0m <[0;33m/usr/include/stdlib.h:955:9[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __tokens[0m [0;32m'char *const *__restrict'[0m

Dumping __codecvt_ok:
[0;1;32mEnumConstantDecl[0m[0;33m 0x5d18a60[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:182:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_ok[0m [0;32m'__codecvt_result'[0m

Dumping __cookie:
[0;1;32mParmVarDecl[0m[0;33m 0x5d19e20[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:337:33[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __cookie[0m [0;32m'void *'[0m

Dumping __cookie:
[0;1;32mParmVarDecl[0m[0;33m 0x5d1a0a8[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:345:34[0m, [0;33mcol:40[0m> [0;33mcol:40[0m[0;1;36m __cookie[0m [0;32m'void *'[0m

Dumping __cookie:
[0;1;32mParmVarDecl[0m[0;33m 0x5d1a338[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:354:27[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __cookie[0m [0;32m'void *'[0m

Dumping __cookie:
[0;1;32mParmVarDecl[0m[0;33m 0x5d1a5f0[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:357:28[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __cookie[0m [0;32m'void *'[0m

Dumping cookie_read_function_t:
[0;1;32mTypedefDecl[0m[0;33m 0x5d1a750[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:362:1[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m cookie_read_function_t[0m [0;32m'__io_read_fn':'__ssize_t (void *, char *, size_t)'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5d1a720[0m [0;32m'__io_read_fn'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x5d1a038[0m[0;1;36m '__io_read_fn'[0m
[0;34m  `-[0m[0;32mFunctionProtoType[0m[0;33m 0x5d19fc0[0m [0;32m'__ssize_t (void *, char *, size_t)'[0m cdecl
[0;34m    |-[0m[0;32mTypedefType[0m[0;33m 0x59ab350[0m [0;32m'__ssize_t'[0m sugar
[0;34m    | |-[0m[0;1;32mTypedef[0m[0;33m 0x59aa540[0m[0;1;36m '__ssize_t'[0m
[0;34m    | `-[0m[0;32mBuiltinType[0m[0;33m 0x5664d00[0m [0;32m'long'[0m
[0;34m    |-[0m[0;32mPointerType[0m[0;33m 0x5665440[0m [0;32m'void *'[0m
[0;34m    | `-[0m[0;32mBuiltinType[0m[0;33m 0x5664c40[0m [0;32m'void'[0m
[0;34m    |-[0m[0;32mPointerType[0m[0;33m 0x56658f0[0m [0;32m'char *'[0m
[0;34m    | `-[0m[0;32mBuiltinType[0m[0;33m 0x5664c80[0m [0;32m'char'[0m
[0;34m    `-[0m[0;32mTypedefType[0m[0;33m 0x598f9a0[0m [0;32m'size_t'[0m sugar
[0;34m      |-[0m[0;1;32mTypedef[0m[0;33m 0x5988398[0m[0;1;36m 'size_t'[0m
[0;34m      `-[0m[0;32mBuiltinType[0m[0;33m 0x5664da0[0m [0;32m'unsigned long'[0m

Dumping cookie_write_function_t:
[0;1;32mTypedefDecl[0m[0;33m 0x5d1a7e0[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:363:1[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m cookie_write_function_t[0m [0;32m'__io_write_fn':'__ssize_t (void *, const char *, size_t)'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5d1a7b0[0m [0;32m'__io_write_fn'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x5d1a2c8[0m[0;1;36m '__io_write_fn'[0m
[0;34m  `-[0m[0;32mFunctionProtoType[0m[0;33m 0x5d1a250[0m [0;32m'__ssize_t (void *, const char *, size_t)'[0m cdecl
[0;34m    |-[0m[0;32mTypedefType[0m[0;33m 0x59ab350[0m [0;32m'__ssize_t'[0m sugar
[0;34m    | |-[0m[0;1;32mTypedef[0m[0;33m 0x59aa540[0m[0;1;36m '__ssize_t'[0m
[0;34m    | `-[0m[0;32mBuiltinType[0m[0;33m 0x5664d00[0m [0;32m'long'[0m
[0;34m    |-[0m[0;32mPointerType[0m[0;33m 0x5665440[0m [0;32m'void *'[0m
[0;34m    | `-[0m[0;32mBuiltinType[0m[0;33m 0x5664c40[0m [0;32m'void'[0m
[0;34m    |-[0m[0;32mPointerType[0m[0;33m 0x5665720[0m [0;32m'const char *'[0m
[0;34m    | `-[0mQualType[0;33m 0x5664c81[0m [0;32m'const char'[0m const
[0;34m    |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5664c80[0m [0;32m'char'[0m
[0;34m    `-[0m[0;32mTypedefType[0m[0;33m 0x598f9a0[0m [0;32m'size_t'[0m sugar
[0;34m      |-[0m[0;1;32mTypedef[0m[0;33m 0x5988398[0m[0;1;36m 'size_t'[0m
[0;34m      `-[0m[0;32mBuiltinType[0m[0;33m 0x5664da0[0m [0;32m'unsigned long'[0m

Dumping cookie_seek_function_t:
[0;1;32mTypedefDecl[0m[0;33m 0x5d1a870[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:364:1[0m, [0;33mcol:22[0m> [0;33mcol:22[0m[0;1;36m cookie_seek_function_t[0m [0;32m'__io_seek_fn':'int (void *, __off64_t *, int)'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5d1a840[0m [0;32m'__io_seek_fn'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x5d1a580[0m[0;1;36m '__io_seek_fn'[0m
[0;34m  `-[0m[0;32mFunctionProtoType[0m[0;33m 0x5d1a500[0m [0;32m'int (void *, __off64_t *, int)'[0m cdecl
[0;34m    |-[0m[0;32mBuiltinType[0m[0;33m 0x5664ce0[0m [0;32m'int'[0m
[0;34m    |-[0m[0;32mPointerType[0m[0;33m 0x5665440[0m [0;32m'void *'[0m
[0;34m    | `-[0m[0;32mBuiltinType[0m[0;33m 0x5664c40[0m [0;32m'void'[0m
[0;34m    |-[0m[0;32mPointerType[0m[0;33m 0x5d1a3a0[0m [0;32m'__off64_t *'[0m
[0;34m    | `-[0m[0;32mTypedefType[0m[0;33m 0x59aa680[0m [0;32m'__off64_t'[0m sugar
[0;34m    |   |-[0m[0;1;32mTypedef[0m[0;33m 0x59a9910[0m[0;1;36m '__off64_t'[0m
[0;34m    |   `-[0m[0;32mBuiltinType[0m[0;33m 0x5664d00[0m [0;32m'long'[0m
[0;34m    `-[0m[0;32mBuiltinType[0m[0;33m 0x5664ce0[0m [0;32m'int'[0m

Dumping cookie_close_function_t:
[0;1;32mTypedefDecl[0m[0;33m 0x5d1a900[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:365:1[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m cookie_close_function_t[0m [0;32m'__io_close_fn':'int (void *)'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5d1a8d0[0m [0;32m'__io_close_fn'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x5d1a6c0[0m[0;1;36m '__io_close_fn'[0m
[0;34m  `-[0m[0;32mFunctionProtoType[0m[0;33m 0x5d1a660[0m [0;32m'int (void *)'[0m cdecl
[0;34m    |-[0m[0;32mBuiltinType[0m[0;33m 0x5664ce0[0m [0;32m'int'[0m
[0;34m    `-[0m[0;32mPointerType[0m[0;33m 0x5665440[0m [0;32m'void *'[0m
[0;34m      `-[0m[0;32mBuiltinType[0m[0;33m 0x5664c40[0m [0;32m'void'[0m

Dumping _IO_cookie_io_functions_t:
[0;1;32mTypedefDecl[0m[0;33m 0x5d1ade8[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:368:1[0m, [0;33mline:374:3[0m> [0;33mcol:3[0m referenced[0;1;36m _IO_cookie_io_functions_t[0m [0;32m'struct _IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'[0m
[0;34m`-[0m[0;32mElaboratedType[0m[0;33m 0x5d1ad90[0m [0;32m'struct _IO_cookie_io_functions_t'[0m sugar
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x5d1a9f0[0m [0;32m'_IO_cookie_io_functions_t'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5d1a958[0m[0;1;36m ''[0m

Dumping cookie_io_functions_t:
[0;1;32mTypedefDecl[0m[0;33m 0x5d1ae90[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:375:1[0m, [0;33mcol:35[0m> [0;33mcol:35[0m[0;1;36m cookie_io_functions_t[0m [0;32m'_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5d1ae60[0m [0;32m'_IO_cookie_io_functions_t'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x5d1ade8[0m[0;1;36m '_IO_cookie_io_functions_t'[0m
[0;34m  `-[0m[0;32mElaboratedType[0m[0;33m 0x5d1ad90[0m [0;32m'struct _IO_cookie_io_functions_t'[0m sugar
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x5d1a9f0[0m [0;32m'_IO_cookie_io_functions_t'[0m
[0;34m      `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5d1a958[0m[0;1;36m ''[0m

Dumping _IO_cookie_file:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5d1aee8[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:377:1[0m, [0;33mcol:8[0m> [0;33mcol:8[0m struct[0;1;36m _IO_cookie_file[0m

Dumping _IO_cookie_init:
[0;1;32mFunctionDecl[0m[0;33m 0x5d1b308[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:380:1[0m, [0;33mline:381:56[0m> [0;33mline:380:13[0m[0;1;36m _IO_cookie_init[0m [0;32m'void (struct _IO_cookie_file *, int, void *, _IO_cookie_io_functions_t)'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d1b050[0m <[0;33mcol:30[0m, [0;33mcol:54[0m> [0;33mcol:54[0m[0;1;36m __cfile[0m [0;32m'struct _IO_cookie_file *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d1b0d0[0m <[0;33mcol:63[0m, [0;33mcol:67[0m> [0;33mcol:67[0m[0;1;36m __read_write[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d1b150[0m <[0;33mline:381:9[0m, [0;33mcol:15[0m> [0;33mcol:15[0m[0;1;36m __cookie[0m [0;32m'void *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d1b1c8[0m <[0;33mcol:25[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __fns[0m [0;32m'_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'[0m

Dumping fopencookie:
[0;1;32mFunctionDecl[0m[0;33m 0x5d390e0[0m <[0;33m/usr/include/stdio.h:271:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/stdio.h:271:14[0m[0;1;36m fopencookie[0m [0;32m'FILE *(void *__restrict, const char *__restrict, _IO_cookie_io_functions_t) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d38eb8[0m <[0;33mcol:27[0m, [0;33mcol:44[0m> [0;33mcol:44[0m[0;1;36m __magic_cookie[0m [0;32m'void *__restrict'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d38f38[0m <[0;33mline:272:6[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m __modes[0m [0;32m'const char *__restrict'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d38fb0[0m <[0;33mline:273:6[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m __io_funcs[0m [0;32m'_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'[0m

Dumping strtok:
[0;1;32mFunctionDecl[0m[0;33m 0x5d55288[0m <[0;33m/usr/include/string.h:335:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:288:63[0m> [0;33m/usr/include/string.h:335:14[0m[0;1;36m strtok[0m [0;32m'char *(char *__restrict, const char *__restrict) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d55140[0m <[0;33mcol:22[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __s[0m [0;32m'char *__restrict'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d551c0[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:67[0m[0;1;36m __delim[0m [0;32m'const char *__restrict'[0m
[0;34m`-[0m[0;1;34mNonNullAttr[0m[0;33m 0x5d55338[0m <[0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:288:44[0m, [0;33m/usr/include/string.h:336:27[0m> 2

Dumping __strtok_r:
[0;1;32mFunctionDecl[0m[0;33m 0x5d55618[0m <[0;33m/usr/include/string.h:340:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:288:63[0m> [0;33m/usr/include/string.h:340:14[0m[0;1;36m __strtok_r[0m [0;32m'char *(char *__restrict, const char *__restrict, char **__restrict) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d553a0[0m <[0;33mcol:26[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __s[0m [0;32m'char *__restrict'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d55420[0m <[0;33mline:341:5[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m __delim[0m [0;32m'const char *__restrict'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d554a0[0m <[0;33mline:342:5[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __save_ptr[0m [0;32m'char **__restrict'[0m
[0;34m`-[0m[0;1;34mNonNullAttr[0m[0;33m 0x5d556d0[0m <[0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:288:44[0m, [0;33m/usr/include/string.h:343:30[0m> 2 3

Dumping strtok_r:
[0;1;32mFunctionDecl[0m[0;33m 0x5d55930[0m <[0;33m/usr/include/string.h:345:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:288:63[0m> [0;33m/usr/include/string.h:345:14[0m[0;1;36m strtok_r[0m [0;32m'char *(char *__restrict, const char *__restrict, char **__restrict) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d55740[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __s[0m [0;32m'char *__restrict'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d557c0[0m <[0;33mcol:46[0m, [0;33mcol:69[0m> [0;33mcol:69[0m[0;1;36m __delim[0m [0;32m'const char *__restrict'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d55840[0m <[0;33mline:346:10[0m, [0;33mcol:28[0m> [0;33mcol:28[0m[0;1;36m __save_ptr[0m [0;32m'char **__restrict'[0m
[0;34m`-[0m[0;1;34mNonNullAttr[0m[0;33m 0x5d559e8[0m <[0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:288:44[0m, [0;33m/usr/include/string.h:347:30[0m> 2 3

Dumping std::strtok:
[0;1;32mUsingDecl[0m[0;33m 0x5d5ce30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstring:91:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::strtok

Dumping std::strtok:
[0;1;32mUsingShadowDecl[0m[0;33m 0x5d5ce88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstring:91:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5d55288[0m[0;1;36m 'strtok'[0m [0;32m'char *(char *__restrict, const char *__restrict) throw()'[0m

Dumping wcstok:
[0;1;32mFunctionDecl[0m[0;33m 0x5d76878[0m <[0;33m/usr/include/wchar.h:217:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/wchar.h:217:17[0m[0;1;36m wcstok[0m [0;32m'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, wchar_t **__restrict) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d76610[0m <[0;33mcol:25[0m, [0;33mcol:45[0m> [0;33mcol:45[0m[0;1;36m __s[0m [0;32m'wchar_t *__restrict'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d76690[0m <[0;33mline:218:4[0m, [0;33mcol:30[0m> [0;33mcol:30[0m[0;1;36m __delim[0m [0;32m'const wchar_t *__restrict'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d76740[0m <[0;33mline:219:4[0m, [0;33mcol:25[0m> [0;33mcol:25[0m[0;1;36m __ptr[0m [0;32m'wchar_t **__restrict'[0m

Dumping std::wcstok:
[0;1;32mUsingDecl[0m[0;33m 0x5d87838[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cwchar:193:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::wcstok

Dumping std::wcstok:
[0;1;32mUsingShadowDecl[0m[0;33m 0x5d87890[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cwchar:193:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5d76878[0m[0;1;36m 'wcstok'[0m [0;32m'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, wchar_t **__restrict) throw()'[0m

Dumping std::errc::broken_pipe:
[0;1;32mEnumConstantDecl[0m[0;33m 0x60a89d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:55:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:36:16[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:55:7[0m[0;1;36m broken_pipe[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x60a89b0[0m <[0;33m/usr/include/asm-generic/errno-base.h:36:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 32[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60a8990[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 32[0m

Dumping std::ctype<char>::_M_widen_ok:
[0;1;32mFieldDecl[0m[0;33m 0x6178ba8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:695:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m _M_widen_ok[0m [0;32m'char'[0m mutable

Dumping std::ctype<char>::_M_narrow_ok:
[0;1;32mFieldDecl[0m[0;33m 0x6178f48[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:698:7[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced[0;1;36m _M_narrow_ok[0m [0;32m'char'[0m mutable

Dumping std::ctype<wchar_t>::_M_narrow_ok:
[0;1;32mFieldDecl[0m[0;33m 0x6185c58[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:1194:7[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m _M_narrow_ok[0m [0;32m'bool'[0m

Dumping std::codecvt_base::ok:
[0;1;32mEnumConstantDecl[0m[0;33m 0x627fc20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/codecvt.h:51:7[0m> [0;33mcol:7[0m[0;1;36m ok[0m [0;32m'std::codecvt_base::result'[0m

Dumping std::__invoke_impl:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635c7d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/invoke.h:57:3[0m, [0;33mline:60:70[0m> [0;33mline:59:5[0m[0;1;36m __invoke_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635c308[0m <[0;33mline:57:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Res[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635c378[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _Fn[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635c3e8[0m <[0;33mcol:41[0m, [0;33mcol:53[0m> [0;33mcol:53[0m referenced typename depth 0 index 2 ...[0;1;36m _Args[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635c738[0m <[0;33mline:58:5[0m, [0;33mline:60:70[0m> [0;33mline:59:5[0m constexpr[0;1;36m __invoke_impl[0m [0;32m'_Res (std::__invoke_other, _Fn &&, _Args &&...)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c490[0m <[0;33mcol:19[0m> [0;33mcol:33[0m [0;32m'std::__invoke_other'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c538[0m <[0;33mcol:35[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced[0;1;36m __f[0m [0;32m'_Fn &&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c610[0m <[0;33mcol:46[0m, [0;33mcol:57[0m> [0;33mcol:57[0m referenced[0;1;36m __args[0m [0;32m'_Args &&...'[0m pack
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635caf8[0m <[0;33mline:60:5[0m, [0;33mcol:70[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635cae8[0m <[0;33mcol:7[0m, [0;33mcol:67[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x635cac0[0m <[0;33mcol:14[0m, [0;33mcol:67[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x635c958[0m <[0;33mcol:14[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635c8a8[0m <[0;33mcol:14[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5835b20[0m[0;33m 0x5835fe0[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c938[0m <[0;33mcol:32[0m> [0;32m'_Fn'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c538[0m[0;1;36m '__f'[0m [0;32m'_Fn &&'[0m
[0;34m        `-[0m[0;1;35mPackExpansionExpr[0m[0;33m 0x635caa0[0m <[0;33mcol:37[0m, [0;33mcol:64[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCallExpr[0m[0;33m 0x635ca78[0m <[0;33mcol:37[0m, [0;33mcol:63[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635c9c8[0m <[0;33mcol:37[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5835b20[0m[0;33m 0x5835fe0[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635ca58[0m <[0;33mcol:57[0m> [0;32m'_Args &&...'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c610[0m[0;1;36m '__args'[0m [0;32m'_Args &&...'[0m

Dumping std::__invoke_impl:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635d178[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/invoke.h:62:3[0m, [0;33mline:66:73[0m> [0;33mline:64:5[0m[0;1;36m __invoke_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635cb10[0m <[0;33mline:62:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Res[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635cb88[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _MemFun[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635cbf8[0m <[0;33mcol:45[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635cc68[0m <[0;33mcol:59[0m, [0;33mcol:71[0m> [0;33mcol:71[0m referenced typename depth 0 index 3 ...[0;1;36m _Args[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635d0d8[0m <[0;33mline:63:5[0m, [0;33mline:66:73[0m> [0;33mline:64:5[0m constexpr[0;1;36m __invoke_impl[0m [0;32m'_Res (std::__invoke_memfun_ref, _MemFun &&, _Tp &&, _Args &&...)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cd18[0m <[0;33mcol:19[0m> [0;33mcol:38[0m [0;32m'std::__invoke_memfun_ref'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cdb8[0m <[0;33mcol:40[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __f[0m [0;32m'_MemFun &&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ce58[0m <[0;33mcol:55[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635cf90[0m <[0;33mline:65:5[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __args[0m [0;32m'_Args &&...'[0m pack
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635d4a8[0m <[0;33mline:66:5[0m, [0;33mcol:73[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635d498[0m <[0;33mcol:7[0m, [0;33mcol:70[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x635d470[0m <[0;33mcol:14[0m, [0;33mcol:70[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mParenExpr[0m[0;33m 0x635d310[0m <[0;33mcol:14[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635d2f0[0m <[0;33mcol:15[0m, [0;33mcol:35[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '.*'
[0;34m        |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x635d2a8[0m <[0;33mcol:15[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |   | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635d200[0m <[0;33mcol:15[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__invfwd'[0;33m 0x635c220[0m
[0;34m        |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635d288[0m <[0;33mcol:29[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ce58[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635d2d0[0m <[0;33mcol:35[0m> [0;32m'_MemFun'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635cdb8[0m[0;1;36m '__f'[0m [0;32m'_MemFun &&'[0m
[0;34m        `-[0m[0;1;35mPackExpansionExpr[0m[0;33m 0x635d450[0m <[0;33mcol:40[0m, [0;33mcol:67[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCallExpr[0m[0;33m 0x635d428[0m <[0;33mcol:40[0m, [0;33mcol:66[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635d378[0m <[0;33mcol:40[0m, [0;33mcol:58[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5835b20[0m[0;33m 0x5835fe0[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635d408[0m <[0;33mcol:60[0m> [0;32m'_Args &&...'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635cf90[0m[0;1;36m '__args'[0m [0;32m'_Args &&...'[0m

Dumping std::__invoke_impl:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635dac8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/invoke.h:68:3[0m, [0;33mline:74:5[0m> [0;33mline:70:5[0m[0;1;36m __invoke_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635d4c0[0m <[0;33mline:68:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Res[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635d538[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _MemFun[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635d5a8[0m <[0;33mcol:45[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635d618[0m <[0;33mcol:59[0m, [0;33mcol:71[0m> [0;33mcol:71[0m referenced typename depth 0 index 3 ...[0;1;36m _Args[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635da28[0m <[0;33mline:69:5[0m, [0;33mline:74:5[0m> [0;33mline:70:5[0m constexpr[0;1;36m __invoke_impl[0m [0;32m'_Res (std::__invoke_memfun_deref, _MemFun &&, _Tp &&, _Args &&...)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d6c8[0m <[0;33mcol:19[0m> [0;33mcol:40[0m [0;32m'std::__invoke_memfun_deref'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d768[0m <[0;33mcol:42[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __f[0m [0;32m'_MemFun &&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d808[0m <[0;33mcol:57[0m, [0;33mcol:63[0m> [0;33mcol:63[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d8e0[0m <[0;33mline:71:5[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m __args[0m [0;32m'_Args &&...'[0m pack
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635de98[0m <[0;33mline:72:5[0m, [0;33mline:74:5[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635de88[0m <[0;33mline:73:7[0m, [0;33mcol:77[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x635de60[0m <[0;33mcol:14[0m, [0;33mcol:77[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mParenExpr[0m[0;33m 0x635dd00[0m <[0;33mcol:14[0m, [0;33mcol:45[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635dce0[0m <[0;33mcol:15[0m, [0;33mcol:42[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '.*'
[0;34m        |   |-[0m[0;1;35mParenExpr[0m[0;33m 0x635dca0[0m <[0;33mcol:15[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635dc88[0m <[0;33mcol:16[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m        |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x635dc60[0m <[0;33mcol:17[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |   |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635dbb0[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5835b20[0m[0;33m 0x5835fe0[0m
[0;34m        |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635dc40[0m <[0;33mcol:35[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635d808[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635dcc0[0m <[0;33mcol:42[0m> [0;32m'_MemFun'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635d768[0m[0;1;36m '__f'[0m [0;32m'_MemFun &&'[0m
[0;34m        `-[0m[0;1;35mPackExpansionExpr[0m[0;33m 0x635de40[0m <[0;33mcol:47[0m, [0;33mcol:74[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCallExpr[0m[0;33m 0x635de18[0m <[0;33mcol:47[0m, [0;33mcol:73[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635dd68[0m <[0;33mcol:47[0m, [0;33mcol:65[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5835b20[0m[0;33m 0x5835fe0[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635ddf8[0m <[0;33mcol:67[0m> [0;32m'_Args &&...'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635d8e0[0m[0;1;36m '__args'[0m [0;32m'_Args &&...'[0m

Dumping std::__invoke_impl:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635e348[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/invoke.h:76:3[0m, [0;33mline:79:39[0m> [0;33mline:78:5[0m[0;1;36m __invoke_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635deb0[0m <[0;33mline:76:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Res[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635df28[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _MemPtr[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635df98[0m <[0;33mcol:45[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635e2a8[0m <[0;33mline:77:5[0m, [0;33mline:79:39[0m> [0;33mline:78:5[0m constexpr[0;1;36m __invoke_impl[0m [0;32m'_Res (std::__invoke_memobj_ref, _MemPtr &&, _Tp &&)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e040[0m <[0;33mcol:19[0m> [0;33mcol:38[0m [0;32m'std::__invoke_memobj_ref'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e0e8[0m <[0;33mcol:40[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m __f[0m [0;32m'_MemPtr &&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e188[0m <[0;33mcol:55[0m, [0;33mcol:61[0m> [0;33mcol:61[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635e4e8[0m <[0;33mline:79:5[0m, [0;33mcol:39[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635e4d8[0m <[0;33mcol:7[0m, [0;33mcol:34[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635e4b8[0m <[0;33mcol:14[0m, [0;33mcol:34[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '.*'
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x635e470[0m <[0;33mcol:14[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635e3c8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__invfwd'[0;33m 0x635c220[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635e450[0m <[0;33mcol:28[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635e188[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635e498[0m <[0;33mcol:34[0m> [0;32m'_MemPtr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635e0e8[0m[0;1;36m '__f'[0m [0;32m'_MemPtr &&'[0m

Dumping std::__invoke_impl:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635e998[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/invoke.h:81:3[0m, [0;33mline:84:46[0m> [0;33mline:83:5[0m[0;1;36m __invoke_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635e500[0m <[0;33mline:81:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Res[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635e578[0m <[0;33mcol:27[0m, [0;33mcol:36[0m> [0;33mcol:36[0m referenced typename depth 0 index 1[0;1;36m _MemPtr[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635e5e8[0m <[0;33mcol:45[0m, [0;33mcol:54[0m> [0;33mcol:54[0m referenced typename depth 0 index 2[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635e8f8[0m <[0;33mline:82:5[0m, [0;33mline:84:46[0m> [0;33mline:83:5[0m constexpr[0;1;36m __invoke_impl[0m [0;32m'_Res (std::__invoke_memobj_deref, _MemPtr &&, _Tp &&)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e690[0m <[0;33mcol:19[0m> [0;33mcol:40[0m [0;32m'std::__invoke_memobj_deref'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e738[0m <[0;33mcol:42[0m, [0;33mcol:52[0m> [0;33mcol:52[0m referenced[0;1;36m __f[0m [0;32m'_MemPtr &&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635e7d8[0m <[0;33mcol:57[0m, [0;33mcol:63[0m> [0;33mcol:63[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635ebe0[0m <[0;33mline:84:5[0m, [0;33mcol:46[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635ebd0[0m <[0;33mcol:7[0m, [0;33mcol:41[0m>
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635ebb0[0m <[0;33mcol:14[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '.*'
[0;34m        |-[0m[0;1;35mParenExpr[0m[0;33m 0x635eb70[0m <[0;33mcol:14[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635eb58[0m <[0;33mcol:15[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m        |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x635eb30[0m <[0;33mcol:16[0m, [0;33mcol:37[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |     |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635ea80[0m <[0;33mcol:16[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5835b20[0m[0;33m 0x5835fe0[0m
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635eb10[0m <[0;33mcol:34[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635e7d8[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635eb90[0m <[0;33mcol:41[0m> [0;32m'_MemPtr'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635e738[0m[0;1;36m '__f'[0m [0;32m'_MemPtr &&'[0m

Dumping std::__invoke:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635f368[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/invoke.h:87:3[0m, [0;33mline:97:5[0m> [0;33mline:89:5[0m[0;1;36m __invoke[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635ebf8[0m <[0;33mline:87:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Callable[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635ec68[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;33mcol:44[0m referenced typename depth 0 index 1 ...[0;1;36m _Args[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x635f2c8[0m <[0;33mline:88:5[0m, [0;33mline:97:5[0m> [0;33mline:89:5[0m constexpr[0;1;36m __invoke[0m [0;32m'typename __invoke_result<_Callable, _Args...>::type (_Callable &&, _Args &&...) noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ef28[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced[0;1;36m __fn[0m [0;32m'_Callable &&'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635f000[0m <[0;33mcol:32[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __args[0m [0;32m'_Args &&...'[0m pack
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635fc70[0m <[0;33mline:91:5[0m, [0;33mline:97:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x635f578[0m <[0;33mline:92:7[0m, [0;33mcol:60[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x635f518[0m <[0;33mcol:7[0m, [0;33mcol:59[0m> [0;33mcol:13[0m referenced[0;1;36m __result[0m [0;32m'__invoke_result<_Callable, _Args...>'[0m
[0;34m    |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x635f430[0m [0;32m'__invoke_result<_Callable, _Args...>'[0m dependent __invoke_result
[0;34m    |     |-[0mTemplateArgument type [0;32m'_Callable'[0m
[0;34m    |     `-[0mTemplateArgument type [0;32m'_Args...'[0m
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x635f6b0[0m <[0;33mline:93:7[0m, [0;33mcol:45[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x635f650[0m <[0;33mcol:7[0m, [0;33mcol:41[0m> [0;33mcol:13[0m referenced[0;1;36m __type[0m [0;32m'typename __result::type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x635f5e0[0m [0;32m'typename __result::type'[0m dependent
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x635f7e0[0m <[0;33mline:94:7[0m, [0;33mcol:53[0m>
[0;34m    | `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x635f780[0m <[0;33mcol:7[0m, [0;33mcol:40[0m> [0;33mcol:13[0m referenced[0;1;36m __tag[0m [0;32m'typename __result::__invoke_type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x635f710[0m [0;32m'typename __result::__invoke_type'[0m dependent
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635fc60[0m <[0;33mline:95:7[0m, [0;33mline:96:36[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x635fc28[0m <[0;33mline:95:14[0m, [0;33mline:96:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635f880[0m <[0;33mline:95:14[0m, [0;33mcol:39[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__invoke_impl'[0;33m 0x635c7d8[0m[0;33m 0x635d178[0m[0;33m 0x635dac8[0m[0;33m 0x635e348[0m[0;33m 0x635e998[0m
[0;34m        |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x635f9a0[0m <[0;33mcol:41[0m, [0;33mcol:47[0m> [0;32m'__tag':'typename __result::__invoke_type'[0m[0;36m[0m[0;36m[0m [0;32m'__tag':'typename __result::__invoke_type'[0m list
[0;34m        | `-[0m[0;1;35mInitListExpr[0m[0;33m 0x635f960[0m <[0;33mcol:46[0m, [0;33mcol:47[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x635fac0[0m <[0;33mcol:50[0m, [0;33mcol:78[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635fa10[0m <[0;33mcol:50[0m, [0;33mcol:72[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5835b20[0m[0;33m 0x5835fe0[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635faa0[0m <[0;33mcol:74[0m> [0;32m'_Callable'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ef28[0m[0;1;36m '__fn'[0m [0;32m'_Callable &&'[0m
[0;34m        `-[0m[0;1;35mPackExpansionExpr[0m[0;33m 0x635fc08[0m <[0;33mline:96:6[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mCallExpr[0m[0;33m 0x635fbe0[0m <[0;33mcol:6[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m            |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635fb30[0m <[0;33mcol:6[0m, [0;33mcol:24[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5835b20[0m[0;33m 0x5835fe0[0m
[0;34m            `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635fbc0[0m <[0;33mcol:26[0m> [0;32m'_Args &&...'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635f000[0m[0;1;36m '__args'[0m [0;32m'_Args &&...'[0m

Dumping std::basic_ostream::sentry::_M_ok:
[0;1;32mFieldDecl[0m[0;33m 0x6493de0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:429:7[0m, [0;33mcol:16[0m> [0;33mcol:16[0m referenced[0;1;36m _M_ok[0m [0;32m'bool'[0m

Dumping std::basic_istream::sentry::_M_ok:
[0;1;32mFieldDecl[0m[0;33m 0x64e5670[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:689:7[0m, [0;33mcol:12[0m> [0;33mcol:12[0m referenced[0;1;36m _M_ok[0m [0;32m'bool'[0m

Dumping std::__detail::_List_node_base::_M_hook:
[0;1;32mCXXMethodDecl[0m[0;33m 0x65cba00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_list.h:95:7[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_list.h:96:7[0m[0;1;36m _M_hook[0m [0;32m'void (std::__detail::_List_node_base *const) noexcept'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65cb908[0m <[0;33mcol:15[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __position[0m [0;32m'std::__detail::_List_node_base *const'[0m

Dumping std::__detail::_List_node_base::_M_unhook:
[0;1;32mCXXMethodDecl[0m[0;33m 0x65cbad0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_list.h:98:7[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_list.h:99:7[0m[0;1;36m _M_unhook[0m [0;32m'void () noexcept'[0m

Dumping Token:
[0;1;32mCXXRecordDecl[0m[0;33m 0x6be3920[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aknow/2994486_5751500831719424_aknow.cpp:56:1[0m, [0;33mline:61:1[0m> [0;33mline:56:8[0m referenced struct[0;1;36m Token[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6be3a38[0m <[0;33mcol:1[0m, [0;33mcol:8[0m> [0;33mcol:8[0m implicit referenced struct[0;1;36m Token[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x6be3ad8[0m <[0;33mline:57:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m referenced[0;1;36m ch[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x6be3b40[0m <[0;33mline:58:3[0m, [0;33mcol:7[0m> [0;33mcol:7[0m referenced[0;1;36m cnt[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6be3d38[0m <[0;33mline:60:3[0m, [0;33mcol:50[0m> [0;33mcol:3[0m used[0;1;36m Token[0m [0;32m'void (char, int)'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6be3ba0[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;33mcol:14[0m used[0;1;36m tch[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6be3c20[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m tcnt[0m [0;32m'int'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6be3ad8[0m[0;1;36m 'ch'[0m [0;32m'char'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6be3e48[0m <[0;33mcol:33[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6be3e08[0m <[0;33mcol:33[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6be3ba0[0m[0;1;36m 'tch'[0m [0;32m'char'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6be3b40[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6be3ec8[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6be3e88[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6be3c20[0m[0;1;36m 'tcnt'[0m [0;32m'int'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6be3f18[0m <[0;33mcol:49[0m, [0;33mcol:50[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6c2c5d8[0m <[0;33mline:56:8[0m> [0;33mcol:8[0m implicit used constexpr[0;1;36m Token[0m [0;32m'void (const Token &) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6c2c6b8[0m <[0;33mcol:8[0m> [0;33mcol:8[0m used [0;32m'const Token &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6be3ad8[0m[0;1;36m 'ch'[0m [0;32m'char'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c3bd30[0m <[0;33mcol:8[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6c3bd00[0m <[0;33mcol:8[0m> [0;32m'const char'[0m[0;36m lvalue[0m[0;36m[0m .ch[0;33m 0x6be3ad8[0m
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c3bce0[0m <[0;33mcol:8[0m> [0;32m'const Token'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6c2c6b8[0m[0;1;36m ''[0m [0;32m'const Token &'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6be3b40[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c3bdc0[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6c3bd90[0m <[0;33mcol:8[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m .cnt[0;33m 0x6be3b40[0m
[0;34m| |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c3bd70[0m <[0;33mcol:8[0m> [0;32m'const Token'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6c2c6b8[0m[0;1;36m ''[0m [0;32m'const Token &'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6c3be10[0m <[0;33mcol:8[0m>
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6c2c728[0m <[0;33mcol:8[0m> [0;33mcol:8[0m implicit used constexpr[0;1;36m Token[0m [0;32m'void (Token &&) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6c2c808[0m <[0;33mcol:8[0m> [0;33mcol:8[0m used [0;32m'Token &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6be3ad8[0m[0;1;36m 'ch'[0m [0;32m'char'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d4ec80[0m <[0;33mcol:8[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6d4ec50[0m <[0;33mcol:8[0m> [0;32m'char'[0m[0;36m xvalue[0m[0;36m[0m .ch[0;33m 0x6be3ad8[0m
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6d4ec20[0m <[0;33mcol:8[0m> [0;32m'Token'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct Token &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d4ebf0[0m <[0;33mcol:8[0m> [0;32m'Token'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6c2c808[0m[0;1;36m ''[0m [0;32m'Token &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x6be3b40[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d4ed50[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m| |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6d4ed20[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m xvalue[0m[0;36m[0m .cnt[0;33m 0x6be3b40[0m
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x6d4ecf0[0m <[0;33mcol:8[0m> [0;32m'Token'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct Token &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d4ecc0[0m <[0;33mcol:8[0m> [0;32m'Token'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6c2c808[0m[0;1;36m ''[0m [0;32m'Token &&'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d4eda0[0m <[0;33mcol:8[0m>
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6c2c8e8[0m <[0;33mcol:8[0m> [0;33mcol:8[0m implicit referenced[0;1;36m ~Token[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m|-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6d79358[0m <[0;33mcol:8[0m> [0;33mcol:8[0m implicit[0;1;36m operator=[0m [0;32m'Token &(const Token &)'[0m inline default trivial noexcept-unevaluated 0x6d79358
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d79468[0m <[0;33mcol:8[0m> [0;33mcol:8[0m [0;32m'const Token &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6d794d8[0m <[0;33mcol:8[0m> [0;33mcol:8[0m implicit referenced[0;1;36m operator=[0m [0;32m'Token &(Token &&) noexcept'[0m inline default trivial
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d795e8[0m <[0;33mcol:8[0m> [0;33mcol:8[0m [0;32m'Token &&'[0m

Dumping ok:
[0;1;32mFunctionDecl[0m[0;33m 0x6c52038[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aknow/2994486_5751500831719424_aknow.cpp:91:1[0m, [0;33mline:103:1[0m> [0;33mline:91:6[0m used[0;1;36m ok[0m [0;32m'bool ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6c52db0[0m <[0;33mcol:11[0m, [0;33mline:103:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6c52328[0m <[0;33mline:92:3[0m, [0;33mcol:31[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6c520f0[0m <[0;33mcol:3[0m, [0;33mcol:30[0m> [0;33mcol:12[0m used[0;1;36m L[0m [0;32m'unsigned int'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52310[0m <[0;33mcol:16[0m, [0;33mcol:30[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6c522d8[0m <[0;33mcol:16[0m, [0;33mcol:30[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6c522a8[0m <[0;33mcol:16[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6c1c8e0[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c522f8[0m <[0;33mcol:16[0m, [0;33mcol:23[0m> [0;32m'const std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6c52270[0m <[0;33mcol:16[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<Token, std::allocator<Token> > > >::value_type':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52258[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c521e0[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6bfb960[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52158[0m <[0;33mcol:16[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6be46a0[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c521c8[0m <[0;33mcol:22[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |               `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6c52178[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6c52d58[0m <[0;33mline:94:3[0m, [0;33mline:100:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6c523e0[0m <[0;33mline:94:8[0m, [0;33mcol:17[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6c52358[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6c523c0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6c52468[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52438[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c523f8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c52358[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52450[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52418[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6be38b8[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6c524a8[0m <[0;33mcol:26[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52488[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c52358[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6c52d38[0m <[0;33mcol:31[0m, [0;33mline:100:3[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6c52698[0m <[0;33mline:95:5[0m, [0;33mcol:38[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6c52658[0m <[0;33mcol:9[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |   | | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6c525d0[0m <[0;33mcol:9[0m, [0;33mcol:23[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6c525a0[0m <[0;33mcol:9[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6c1c8e0[0m
[0;34m  |   | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c525f0[0m <[0;33mcol:9[0m, [0;33mcol:16[0m> [0;32m'const std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   | | |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6c52568[0m <[0;33mcol:9[0m, [0;33mcol:16[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<Token, std::allocator<Token> > > >::value_type':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52550[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52530[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6bfb960[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |   | | |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c524c0[0m <[0;33mcol:9[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6be46a0[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |   | | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52518[0m <[0;33mcol:15[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52500[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c524e0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c52358[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52640[0m <[0;33mcol:28[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52628[0m <[0;33mcol:28[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52608[0m <[0;33mcol:28[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c520f0[0m[0;1;36m 'L'[0m [0;32m'unsigned int'[0m
[0;34m  |   | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6c52688[0m <[0;33mcol:31[0m, [0;33mcol:38[0m>
[0;34m  |   |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6c52678[0m <[0;33mcol:38[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x6c52d00[0m <[0;33mline:97:5[0m, [0;33mline:99:5[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6c52768[0m <[0;33mline:97:10[0m, [0;33mcol:24[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6c526c8[0m <[0;33mcol:10[0m, [0;33mcol:23[0m> [0;33mcol:19[0m used[0;1;36m j[0m [0;32m'unsigned int'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52750[0m <[0;33mcol:23[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6c52730[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6c527f0[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c527c0[0m <[0;33mcol:26[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52780[0m <[0;33mcol:26[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c526c8[0m[0;1;36m 'j'[0m [0;32m'unsigned int'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c527d8[0m <[0;33mcol:30[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c527a0[0m <[0;33mcol:30[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c520f0[0m[0;1;36m 'L'[0m [0;32m'unsigned int'[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6c52830[0m <[0;33mcol:33[0m, [0;33mcol:35[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52810[0m <[0;33mcol:35[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c526c8[0m[0;1;36m 'j'[0m [0;32m'unsigned int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6c52ce8[0m <[0;33mcol:38[0m, [0;33mline:99:5[0m>
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x6c52cd0[0m <[0;33mline:98:7[0m, [0;33mcol:52[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6c52c90[0m <[0;33mcol:11[0m, [0;33mcol:41[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52c60[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52c30[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6c52a48[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m .ch[0;33m 0x6be3ad8[0m
[0;34m  |         | |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6c52a10[0m <[0;33mcol:11[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Token> >::value_type':'Token'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c529f8[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'std::vector<Token, std::allocator<Token> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52978[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'std::vector<Token, std::allocator<Token> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6c1d1d0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Token, std::allocator<Token> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |         | |       |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6c528f0[0m <[0;33mcol:11[0m, [0;33mcol:18[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<Token, std::allocator<Token> > > >::value_type':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | |       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c528d8[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | |       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c528b8[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6bfb960[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |         | |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52848[0m <[0;33mcol:11[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6be46a0[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |         | |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c528a0[0m <[0;33mcol:17[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52888[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52868[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c52358[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52960[0m <[0;33mcol:20[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52948[0m <[0;33mcol:20[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52928[0m <[0;33mcol:20[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c526c8[0m[0;1;36m 'j'[0m [0;32m'unsigned int'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52c78[0m <[0;33mcol:29[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52c48[0m <[0;33mcol:29[0m, [0;33mcol:41[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6c52c00[0m <[0;33mcol:29[0m, [0;33mcol:41[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m .ch[0;33m 0x6be3ad8[0m
[0;34m  |         |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6c52bc8[0m <[0;33mcol:29[0m, [0;33mcol:39[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Token> >::value_type':'Token'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52bb0[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'std::vector<Token, std::allocator<Token> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52b90[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'std::vector<Token, std::allocator<Token> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6c1d1d0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Token, std::allocator<Token> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |         |         |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6c52b08[0m <[0;33mcol:29[0m, [0;33mcol:36[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<Token, std::allocator<Token> > > >::value_type':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52af0[0m <[0;33mcol:34[0m, [0;33mcol:36[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52ad0[0m <[0;33mcol:34[0m, [0;33mcol:36[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6bfb960[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |         |         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52a78[0m <[0;33mcol:29[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6be46a0[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |         |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52ab8[0m <[0;33mcol:35[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         |         |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6c52a98[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |         |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52b78[0m <[0;33mcol:38[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6c52b60[0m <[0;33mcol:38[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6c52b40[0m <[0;33mcol:38[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6c526c8[0m[0;1;36m 'j'[0m [0;32m'unsigned int'[0m
[0;34m  |         `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6c52cc0[0m <[0;33mcol:45[0m, [0;33mcol:52[0m>
[0;34m  |           `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6c52cb0[0m <[0;33mcol:52[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6c52da0[0m <[0;33mline:102:3[0m, [0;33mcol:10[0m>
[0;34m    `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6c52d90[0m <[0;33mcol:10[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true

Dumping __resolved:
[0;1;32mParmVarDecl[0m[0;33m 0x6797790[0m <[0;33m/usr/include/stdlib.h:798:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __resolved[0m [0;32m'char *__restrict'[0m

Dumping solve:
[0;1;32mFunctionDecl[0m[0;33m 0x79e8fa0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aknow/2994486_5751500831719424_aknow.cpp:105:1[0m, [0;33mline:132:1[0m> [0;33mline:105:5[0m used[0;1;36m solve[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x79f2e58[0m <[0;33mcol:13[0m, [0;33mline:132:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9208[0m <[0;33mline:106:3[0m, [0;33mcol:31[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9058[0m <[0;33mcol:3[0m, [0;33mcol:30[0m> [0;33mcol:12[0m used[0;1;36m L[0m [0;32m'unsigned int'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e91f0[0m <[0;33mcol:16[0m, [0;33mcol:30[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x79e91b8[0m <[0;33mcol:16[0m, [0;33mcol:30[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x79e9188[0m <[0;33mcol:16[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x79b34c0[0m
[0;34m  |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e91d8[0m <[0;33mcol:16[0m, [0;33mcol:23[0m> [0;32m'const std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x79e9150[0m <[0;33mcol:16[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<Token, std::allocator<Token> > > >::value_type':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9138[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9118[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7992540[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e90c0[0m <[0;33mcol:16[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x797b280[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9100[0m <[0;33mcol:22[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |               `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e90e0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e92c0[0m <[0;33mline:108:3[0m, [0;33mcol:23[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9238[0m <[0;33mcol:3[0m, [0;33mcol:22[0m> [0;33mcol:7[0m used[0;1;36m total_action[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e92a0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9358[0m <[0;33mline:109:3[0m, [0;33mcol:10[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e92f0[0m <[0;33mcol:3[0m, [0;33mcol:7[0m> [0;33mcol:7[0m used[0;1;36m cnt[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x79f2dd8[0m <[0;33mline:110:3[0m, [0;33mline:129:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9428[0m <[0;33mline:110:8[0m, [0;33mcol:22[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9388[0m <[0;33mcol:8[0m, [0;33mcol:21[0m> [0;33mcol:17[0m used[0;1;36m i[0m [0;32m'unsigned int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9410[0m <[0;33mcol:21[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e93f0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79e94b0[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9480[0m <[0;33mcol:24[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9440[0m <[0;33mcol:24[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9388[0m[0;1;36m 'i'[0m [0;32m'unsigned int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9498[0m <[0;33mcol:28[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9460[0m <[0;33mcol:28[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9058[0m[0;1;36m 'L'[0m [0;32m'unsigned int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x79e94f0[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e94d0[0m <[0;33mcol:33[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9388[0m[0;1;36m 'i'[0m [0;32m'unsigned int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x79f2d90[0m <[0;33mcol:36[0m, [0;33mline:129:3[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79e9548[0m <[0;33mline:111:5[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9508[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e92f0[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e9528[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x79e9938[0m <[0;33mline:112:5[0m, [0;33mline:114:5[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9608[0m <[0;33mline:112:10[0m, [0;33mcol:19[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9580[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;33mcol:14[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e95e8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79e9690[0m <[0;33mcol:21[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9660[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9620[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9580[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9678[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9640[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x797a498[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x79e96d0[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e96b0[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9580[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x79e9920[0m <[0;33mcol:33[0m, [0;33mline:114:5[0m>
[0;34m  |   |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x79e98f0[0m <[0;33mline:113:7[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'int'[0m ComputeResultTy=[0;32m'int'[0m
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e96e8[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e92f0[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e98d8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x79e98a8[0m <[0;33mcol:14[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m .cnt[0;33m 0x797a720[0m
[0;34m  |   |         `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x79e9870[0m <[0;33mcol:14[0m, [0;33mcol:24[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Token> >::value_type':'Token'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9858[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'std::vector<Token, std::allocator<Token> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9838[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'std::vector<Token, std::allocator<Token> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x79b3db0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Token, std::allocator<Token> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |   |           |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x79e97b0[0m <[0;33mcol:14[0m, [0;33mcol:21[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<Token, std::allocator<Token> > > >::value_type':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9798[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |           | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9778[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7992540[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |   |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9708[0m <[0;33mcol:14[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x797b280[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |   |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9760[0m <[0;33mcol:20[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |           |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9748[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9728[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9580[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9820[0m <[0;33mcol:23[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9808[0m <[0;33mcol:23[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e97e8[0m <[0;33mcol:23[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9388[0m[0;1;36m 'i'[0m [0;32m'unsigned int'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9a10[0m <[0;33mline:116:5[0m, [0;33mcol:29[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9988[0m <[0;33mcol:5[0m, [0;33m<built-in>:74:21[0m> [0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aknow/2994486_5751500831719424_aknow.cpp:116:9[0m used[0;1;36m min_action[0m [0;32m'int'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e99f0[0m <[0;33m<built-in>:74:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2147483647[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9b38[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aknow/2994486_5751500831719424_aknow.cpp:117:5[0m, [0;33mcol:24[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9a40[0m <[0;33mcol:5[0m, [0;33mcol:23[0m> [0;33mcol:9[0m used[0;1;36m min_l[0m [0;32m'int'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79e9b18[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9ae8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9aa8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e92f0[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9b00[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9ac8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x797a498[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9ca0[0m <[0;33mline:118:5[0m, [0;33mcol:28[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9b68[0m <[0;33mcol:5[0m, [0;33mcol:27[0m> [0;33mcol:9[0m used[0;1;36m max_l[0m [0;32m'int'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79e9c80[0m <[0;33mcol:17[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79e9c40[0m <[0;33mcol:17[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9c10[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9bd0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e92f0[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9c28[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9bf0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x797a498[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e9c60[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x79f2cd0[0m <[0;33mline:120:5[0m, [0;33mline:126:5[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9d70[0m <[0;33mline:120:10[0m, [0;33mcol:23[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9cd0[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;33mcol:14[0m used[0;1;36m l[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9d58[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9d38[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9a40[0m[0;1;36m 'min_l'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79e9df8[0m <[0;33mcol:25[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9dc8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9d88[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9cd0[0m[0;1;36m 'l'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79e9de0[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9da8[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9b68[0m[0;1;36m 'max_l'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x79e9e38[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9e18[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9cd0[0m[0;1;36m 'l'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x79f2ca8[0m <[0;33mcol:42[0m, [0;33mline:126:5[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9ef0[0m <[0;33mline:121:7[0m, [0;33mcol:21[0m>
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9e68[0m <[0;33mcol:7[0m, [0;33mcol:20[0m> [0;33mcol:11[0m used[0;1;36m action[0m [0;32m'int'[0m cinit
[0;34m  |   |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e9ed0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   |-[0m[0;1;35mForStmt[0m[0;33m 0x79ea460[0m <[0;33mline:122:7[0m, [0;33mline:124:7[0m>
[0;34m  |   |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x79e9fa8[0m <[0;33mline:122:12[0m, [0;33mcol:21[0m>
[0;34m  |   |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x79e9f20[0m <[0;33mcol:12[0m, [0;33mcol:20[0m> [0;33mcol:16[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x79e9f88[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79ea030[0m <[0;33mcol:23[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea000[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9fc0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9f20[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea018[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79e9fe0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x797a498[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x79ea070[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea050[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9f20[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x79ea448[0m <[0;33mcol:35[0m, [0;33mline:124:7[0m>
[0;34m  |   |   |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x79ea418[0m <[0;33mline:123:9[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'int'[0m ComputeResultTy=[0;32m'int'[0m
[0;34m  |   |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea088[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9e68[0m[0;1;36m 'action'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x79ea3f0[0m <[0;33mcol:19[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea3d8[0m <[0;33mcol:19[0m> [0;32m'int (*)(int) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea358[0m <[0;33mcol:19[0m> [0;32m'int (int) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6798e28[0m[0;1;36m 'abs'[0m [0;32m'int (int) throw()'[0m
[0;34m  |   |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79ea338[0m <[0;33mcol:23[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea308[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea118[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9cd0[0m[0;1;36m 'l'[0m [0;32m'int'[0m
[0;34m  |   |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea320[0m <[0;33mcol:27[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x79ea2d8[0m <[0;33mcol:27[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m .cnt[0;33m 0x797a720[0m
[0;34m  |   |   |             `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x79ea2a0[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<Token> >::value_type':'Token'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea288[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'std::vector<Token, std::allocator<Token> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea268[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'std::vector<Token, std::allocator<Token> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x79b3db0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<Token, std::allocator<Token> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |   |   |               |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x79ea1e0[0m <[0;33mcol:27[0m, [0;33mcol:34[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<Token, std::allocator<Token> > > >::value_type':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |               | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea1c8[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   |               | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea1a8[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7992540[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |   |   |               | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea138[0m <[0;33mcol:27[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x797b280[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |   |   |               | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea190[0m <[0;33mcol:33[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |               |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea178[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |               |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea158[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9f20[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea250[0m <[0;33mcol:36[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |                 `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79ea238[0m <[0;33mcol:36[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |                   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea218[0m <[0;33mcol:36[0m> [0;32m'unsigned int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9388[0m[0;1;36m 'i'[0m [0;32m'unsigned int'[0m
[0;34m  |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x79f2c88[0m <[0;33mline:125:7[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79ea498[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9988[0m[0;1;36m 'min_action'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79f2c70[0m <[0;33mcol:20[0m, [0;33mcol:42[0m> [0;32m'int':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x79f2c10[0m <[0;33mcol:20[0m, [0;33mcol:42[0m> [0;32m'const int':'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79f2bf8[0m <[0;33mcol:20[0m> [0;32m'const int &(*)(const int &, const int &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79f29e0[0m <[0;33mcol:20[0m> [0;32m'const int &(const int &, const int &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x79f28a8[0m[0;1;36m 'min'[0m [0;32m'const int &(const int &, const int &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x67b2b18[0m[0;1;36m 'min'[0m)
[0;34m  |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79f2c40[0m <[0;33mcol:24[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79f2630[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9988[0m[0;1;36m 'min_action'[0m [0;32m'int'[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79f2c58[0m <[0;33mcol:36[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79f2650[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9e68[0m[0;1;36m 'action'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x79f2d60[0m <[0;33mline:128:5[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'int'[0m ComputeResultTy=[0;32m'int'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79f2d08[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9238[0m[0;1;36m 'total_action'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79f2d48[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79f2d28[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9988[0m[0;1;36m 'min_action'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x79f2e48[0m <[0;33mline:131:3[0m, [0;33mcol:10[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x79f2e30[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x79f2e10[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x79e9238[0m[0;1;36m 'total_action'[0m [0;32m'int'[0m

Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x4df4c88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x4df4bf8[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remainder:
[0;1;32mVarDecl[0m[0;33m 0x5092d28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:297:7[0m, [0;33mcol:35[0m> [0;33mcol:21[0m referenced[0;1;36m __remainder[0m [0;32m'_DistanceType':'typename std::iterator_traits<_RandomAccessIter>::difference_type'[0m cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5092d90[0m <[0;33mcol:35[0m> [0;32m'_Integer'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5092620[0m[0;1;36m '__count'[0m [0;32m'_Integer'[0m

Dumping remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x504eb78[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:13[0m[0;1;36m remainder[0m [0;32m'double (double, double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x504ea50[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x504ead0[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x504ec28[0m <[0;33mcol:13[0m> Implicit

Dumping __remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x504eda8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:280:1[0m[0;1;36m __remainder[0m [0;32m'double (double, double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x504ec80[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x504ed00[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'double'[0m

Dumping remainderf:
[0;1;32mFunctionDecl[0m[0;33m 0x5174ea8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:72:1[0m[0;1;36m remainderf[0m [0;32m'float (float, float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5174d80[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5174e00[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x5174f58[0m <[0;33m<scratch space>:72:1[0m> Implicit

Dumping __remainderf:
[0;1;32mFunctionDecl[0m[0;33m 0x51750d8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:74:1[0m[0;1;36m __remainderf[0m [0;32m'float (float, float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5174fb0[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5175030[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'float'[0m

Dumping remainderl:
[0;1;32mFunctionDecl[0m[0;33m 0x51911e8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:348:1[0m[0;1;36m remainderl[0m [0;32m'long double (long double, long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51910c0[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5191140[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x5191298[0m <[0;33m<scratch space>:348:1[0m> Implicit

Dumping __remainderl:
[0;1;32mFunctionDecl[0m[0;33m 0x5191418[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:350:1[0m[0;1;36m __remainderl[0m [0;32m'long double (long double, long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51912f0[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5191370[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'long double'[0m

Dumping remainderf32:
[0;1;32mFunctionDecl[0m[0;33m 0x51a8318[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:190:1[0m[0;1;36m remainderf32[0m [0;32m'_Float32 (_Float32, _Float32) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51a8200[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32':'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51a8278[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32':'float'[0m

Dumping __remainderf32:
[0;1;32mFunctionDecl[0m[0;33m 0x51a84f0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:192:1[0m[0;1;36m __remainderf32[0m [0;32m'_Float32 (_Float32, _Float32) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51a83d8[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32':'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51a8450[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32':'float'[0m

Dumping remainderf64:
[0;1;32mFunctionDecl[0m[0;33m 0x51bc6c8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:74:1[0m[0;1;36m remainderf64[0m [0;32m'_Float64 (_Float64, _Float64) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51bc5b0[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51bc628[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64':'double'[0m

Dumping __remainderf64:
[0;1;32mFunctionDecl[0m[0;33m 0x51bc8a0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:76:1[0m[0;1;36m __remainderf64[0m [0;32m'_Float64 (_Float64, _Float64) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51bc788[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51bc800[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64':'double'[0m

Dumping remainderf32x:
[0;1;32mFunctionDecl[0m[0;33m 0x51d05c8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:326:1[0m[0;1;36m remainderf32x[0m [0;32m'_Float32x (_Float32x, _Float32x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51d04b0[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32x':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51d0528[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32x':'double'[0m

Dumping __remainderf32x:
[0;1;32mFunctionDecl[0m[0;33m 0x51d07a0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:328:1[0m[0;1;36m __remainderf32x[0m [0;32m'_Float32x (_Float32x, _Float32x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51d0688[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32x':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51d0700[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32x':'double'[0m

Dumping remainderf64x:
[0;1;32mFunctionDecl[0m[0;33m 0x51e4138[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:221:1[0m[0;1;36m remainderf64x[0m [0;32m'_Float64x (_Float64x, _Float64x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51e4020[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64x':'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51e4098[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64x':'long double'[0m

Dumping __remainderf64x:
[0;1;32mFunctionDecl[0m[0;33m 0x51e4310[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:223:1[0m[0;1;36m __remainderf64x[0m [0;32m'_Float64x (_Float64x, _Float64x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51e41f8[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64x':'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x51e4270[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64x':'long double'[0m

Dumping std::remainder:
[0;1;32mUsingDecl[0m[0;33m 0x523b4f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1194:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainder

Dumping std::remainder:
[0;1;32mUsingShadowDecl[0m[0;33m 0x523b550[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1194:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x504eb78[0m[0;1;36m 'remainder'[0m [0;32m'double (double, double) throw()'[0m

Dumping std::remainderf:
[0;1;32mUsingDecl[0m[0;33m 0x523b5a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1195:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainderf

Dumping std::remainderf:
[0;1;32mUsingShadowDecl[0m[0;33m 0x523b600[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1195:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5174ea8[0m[0;1;36m 'remainderf'[0m [0;32m'float (float, float) throw()'[0m

Dumping std::remainderl:
[0;1;32mUsingDecl[0m[0;33m 0x523b658[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1196:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainderl

Dumping std::remainderl:
[0;1;32mUsingShadowDecl[0m[0;33m 0x523b6b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1196:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x51911e8[0m[0;1;36m 'remainderl'[0m [0;32m'long double (long double, long double) throw()'[0m

Dumping std::remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x5264010[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1712:3[0m, [0;33mline:1714:44[0m> [0;33mline:1713:3[0m constexpr[0;1;36m remainder[0m [0;32m'float (float, float)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5263ef0[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m __x[0m [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5263f70[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m used[0;1;36m __y[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x52643b8[0m <[0;33mline:1714:3[0m, [0;33mcol:44[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x52643a8[0m <[0;33mcol:5[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5264348[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5264330[0m <[0;33mcol:12[0m> [0;32m'float (*)(float, float) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52642d0[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5264110[0m[0;1;36m '__builtin_remainderf'[0m [0;32m'float (float, float) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5264378[0m <[0;33mcol:33[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52642f0[0m <[0;33mcol:33[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5263ef0[0m[0;1;36m '__x'[0m [0;32m'float'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5264390[0m <[0;33mcol:38[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5264310[0m <[0;33mcol:38[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5263f70[0m[0;1;36m '__y'[0m [0;32m'float'[0m

Dumping std::remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x5264508[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1716:3[0m, [0;33mline:1718:44[0m> [0;33mline:1717:3[0m constexpr[0;1;36m remainder[0m [0;32m'long double (long double, long double)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x52643e8[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5264468[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;33mcol:42[0m used[0;1;36m __y[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x52648b0[0m <[0;33mline:1718:3[0m, [0;33mcol:44[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x52648a0[0m <[0;33mcol:5[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5264840[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5264828[0m <[0;33mcol:12[0m> [0;32m'long double (*)(long double, long double) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52647c8[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5264608[0m[0;1;36m '__builtin_remainderl'[0m [0;32m'long double (long double, long double) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5264870[0m <[0;33mcol:33[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52647e8[0m <[0;33mcol:33[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x52643e8[0m[0;1;36m '__x'[0m [0;32m'long double'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5264888[0m <[0;33mcol:38[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5264808[0m <[0;33mcol:38[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5264468[0m[0;1;36m '__y'[0m [0;32m'long double'[0m

Dumping std::remainder:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5265118[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1722:3[0m, [0;33mline:1728:5[0m> [0;33mline:1724:5[0m[0;1;36m remainder[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x52648c8[0m <[0;33mline:1722:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5264938[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x5265078[0m <[0;33mline:1723:5[0m, [0;33mline:1728:5[0m> [0;33mline:1724:5[0m constexpr[0;1;36m remainder[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5264f20[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __x[0m [0;32m'_Tp'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5264f98[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __y[0m [0;32m'_Up'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x52658c0[0m <[0;33mline:1725:5[0m, [0;33mline:1728:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5265738[0m <[0;33mline:1726:7[0m, [0;33mcol:71[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x52656e0[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m __type[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x5265670[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m dependent
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x52658b0[0m <[0;33mline:1727:7[0m, [0;33mcol:48[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5265880[0m <[0;33mcol:14[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5265750[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'remainder'[0;33m 0x5265118[0m[0;33m 0x5264508[0m[0;33m 0x5264010[0m[0;33m 0x523b550[0m
[0;34m        |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x5265800[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m[0;36m[0m[0;36m[0m [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x52657e0[0m <[0;33mcol:31[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5264f20[0m[0;1;36m '__x'[0m [0;32m'_Tp'[0m
[0;34m        `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x5265858[0m <[0;33mcol:37[0m, [0;33mcol:47[0m> [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m[0;36m[0m[0;36m[0m [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5265838[0m <[0;33mcol:44[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5264f98[0m[0;1;36m '__y'[0m [0;32m'_Up'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x5328338[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::errc::argument_out_of_domain:
[0;1;32mEnumConstantDecl[0m[0;33m 0x5608280[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m[0;1;36m argument_out_of_domain[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x5608260[0m <[0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5608240[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x560ccb8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x560ce18[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x560cea8[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x560cfb8[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x560cee0[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x560d110[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x560d080[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x560d210[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x560cb08 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x560d2e8[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x560d2e8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x560d3f8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x560d498[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x560d498
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x560d5a8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x569aae8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:54:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x569abc0[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x569ab90[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x569ab50[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x569a5a0[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x569aba8[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x569ab70[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x569a738[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x569c688[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:88:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x569c760[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x569c730[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x569c6f0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x569c140[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x569c748[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x569c710[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x569c2d8[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __domainname:
[0;1;32mParmVarDecl[0m[0;33m 0x57d24a0[0m <[0;33m/usr/include/libintl.h:44:24[0m, [0;33mcol:36[0m> [0;33mcol:36[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m

Dumping __domainname:
[0;1;32mParmVarDecl[0m[0;33m 0x57d26f0[0m <[0;33m/usr/include/libintl.h:46:26[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m

Dumping __domainname:
[0;1;32mParmVarDecl[0m[0;33m 0x57d2940[0m <[0;33m/usr/include/libintl.h:51:25[0m, [0;33mcol:37[0m> [0;33mcol:37[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m

Dumping __domainname:
[0;1;32mParmVarDecl[0m[0;33m 0x57d2ca8[0m <[0;33m/usr/include/libintl.h:54:27[0m, [0;33mcol:39[0m> [0;33mcol:39[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m

Dumping __domainname:
[0;1;32mParmVarDecl[0m[0;33m 0x57d3318[0m <[0;33m/usr/include/libintl.h:67:25[0m, [0;33mcol:37[0m> [0;33mcol:37[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m

Dumping __domainname:
[0;1;32mParmVarDecl[0m[0;33m 0x57d3750[0m <[0;33m/usr/include/libintl.h:73:26[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m

Dumping textdomain:
[0;1;32mFunctionDecl[0m[0;33m 0x57d3cc8[0m <[0;33m/usr/include/libintl.h:82:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/libintl.h:82:14[0m referenced[0;1;36m textdomain[0m [0;32m'char *(const char *) throw()'[0m extern
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57d3c28[0m <[0;33mcol:26[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m

Dumping bindtextdomain:
[0;1;32mFunctionDecl[0m[0;33m 0x57d3eb0[0m <[0;33m/usr/include/libintl.h:86:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/libintl.h:86:14[0m referenced[0;1;36m bindtextdomain[0m [0;32m'char *(const char *, const char *) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57d3d88[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57d3e08[0m <[0;33mline:87:9[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m __dirname[0m [0;32m'const char *'[0m

Dumping bind_textdomain_codeset:
[0;1;32mFunctionDecl[0m[0;33m 0x57d40a0[0m <[0;33m/usr/include/libintl.h:91:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/libintl.h:91:14[0m[0;1;36m bind_textdomain_codeset[0m [0;32m'char *(const char *, const char *) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57d3f78[0m <[0;33mcol:39[0m, [0;33mcol:51[0m> [0;33mcol:51[0m[0;1;36m __domainname[0m [0;32m'const char *'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57d3ff8[0m <[0;33mline:92:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m[0;1;36m __codeset[0m [0;32m'const char *'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x61bea68[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aknow/2994486_5751500831719424_aknow.cpp:134:1[0m, [0;33mline:161:1[0m> [0;33mline:134:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61c6250[0m <[0;33mcol:12[0m, [0;33mline:161:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61beb88[0m <[0;33mline:135:5[0m, [0;33mcol:14[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x61beb20[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m caseN[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x61becd0[0m <[0;33mline:136:5[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61becb8[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61bec40[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x529c5d0[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61bed00[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x61bebe8[0m <[0;33mcol:11[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61bec28[0m <[0;33mcol:17[0m, [0;33mcol:18[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61bec08[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61beb20[0m[0;1;36m 'caseN'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x61c61e8[0m <[0;33mline:138:5[0m, [0;33mline:158:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61bedb8[0m <[0;33mline:138:10[0m, [0;33mcol:20[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x61bed30[0m <[0;33mcol:10[0m, [0;33mcol:19[0m> [0;33mcol:14[0m used[0;1;36m cc[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x61bed98[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61bee40[0m <[0;33mcol:22[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61bee10[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61bedd0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61bed30[0m[0;1;36m 'cc'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61bee28[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61bedf0[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61beb20[0m[0;1;36m 'caseN'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61bee80[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61bee60[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61bed30[0m[0;1;36m 'cc'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61c6198[0m <[0;33mcol:41[0m, [0;33mline:158:5[0m>
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x61befd8[0m <[0;33mline:139:9[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61befc0[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61befa0[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5299e50[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61bf008[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x61bef58[0m <[0;33mcol:16[0m> [0;32m'const char [11]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d: "[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61bf020[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61bef80[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61bed30[0m[0;1;36m 'cc'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61c0ac0[0m <[0;33mline:141:9[0m, [0;33mcol:16[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c0aa8[0m <[0;33mcol:13[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(int &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0a30[0m <[0;33mcol:13[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a39d18[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61bf038[0m <[0;33mcol:9[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b26358[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61bf058[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6146058[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x61c0b48[0m <[0;33mline:142:9[0m, [0;33mcol:21[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x61c0b18[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .clear[0;33m 0x6161468[0m
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0af8[0m <[0;33mcol:9[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6146e40[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x61c0c38[0m <[0;33mline:143:9[0m, [0;33mcol:23[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x61c0c08[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .resize[0;33m 0x615da00[0m
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0b68[0m <[0;33mcol:9[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6146e40[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c0c78[0m <[0;33mcol:22[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c0c60[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0be8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6146058[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61c0d30[0m <[0;33mline:145:9[0m, [0;33mcol:17[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x61c0ca0[0m <[0;33mcol:9[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m s[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m callinit
[0;34m  |   |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x61c0d08[0m <[0;33mcol:16[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<char> >::value)'[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x61c3110[0m <[0;33mline:146:9[0m, [0;33mline:149:9[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x61c0de8[0m <[0;33mline:146:14[0m, [0;33mcol:23[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x61c0d60[0m <[0;33mcol:14[0m, [0;33mcol:22[0m> [0;33mcol:18[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x61c0dc8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x61c0e70[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c0e40[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0e00[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61c0d60[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c0e58[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0e20[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6146058[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61c0eb0[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0e90[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61c0d60[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61c30f0[0m <[0;33mcol:37[0m, [0;33mline:149:9[0m>
[0;34m  |   |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61c29a0[0m <[0;33mline:147:11[0m, [0;33mcol:18[0m> [0;32m'basic_istream<char>':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c2988[0m <[0;33mcol:15[0m> [0;32m'basic_istream<char> &(*)(basic_istream<char> &, basic_string<char> &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c2908[0m <[0;33mcol:15[0m> [0;32m'basic_istream<char> &(basic_istream<char> &, basic_string<char> &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x54c1ac0[0m[0;1;36m 'operator>>'[0m [0;32m'basic_istream<char> &(basic_istream<char> &, basic_string<char> &)'[0m
[0;34m  |   |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0ec8[0m <[0;33mcol:11[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b26358[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c0ee8[0m <[0;33mcol:18[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61c0ca0[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x61c30d8[0m <[0;33mline:148:11[0m, [0;33mcol:31[0m> [0;32m'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61c30a0[0m <[0;33mcol:11[0m, [0;33mcol:31[0m> [0;32m'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c3088[0m <[0;33mcol:20[0m> [0;32m'std::vector<Token, std::allocator<Token> > &(*)(std::vector<Token, std::allocator<Token> > &&) noexcept(_Alloc_traits::_S_nothrow_move())'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c3008[0m <[0;33mcol:20[0m> [0;32m'std::vector<Token, std::allocator<Token> > &(std::vector<Token, std::allocator<Token> > &&) noexcept(_Alloc_traits::_S_nothrow_move())'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x617d428[0m[0;1;36m 'operator='[0m [0;32m'std::vector<Token, std::allocator<Token> > &(std::vector<Token, std::allocator<Token> > &&) noexcept(_Alloc_traits::_S_nothrow_move())'[0m
[0;34m  |   |       |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61c2a80[0m <[0;33mcol:11[0m, [0;33mcol:18[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<Token, std::allocator<Token> > > >::value_type':'std::vector<Token, std::allocator<Token> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c2a68[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c2a48[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x615e100[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c29d8[0m <[0;33mcol:11[0m> [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6146e40[0m[0;1;36m 'words'[0m [0;32m'vector<vector<Token> >':'std::vector<std::vector<Token, std::allocator<Token> >, std::allocator<std::vector<Token, std::allocator<Token> > > >'[0m
[0;34m  |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c2a30[0m <[0;33mcol:17[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c2a18[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c29f8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61c0d60[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x61c2c00[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |         `-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x61c2be0[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x61c2be0[0m)
[0;34m  |   |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x61c2bb0[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;32m'vector<Token>':'std::vector<Token, std::allocator<Token> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c2b98[0m <[0;33mcol:22[0m> [0;32m'vector<Token> (*)(std::__cxx11::string &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c2b20[0m <[0;33mcol:22[0m> [0;32m'vector<Token> (std::__cxx11::string &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x616cfa8[0m[0;1;36m 'convert'[0m [0;32m'vector<Token> (std::__cxx11::string &)'[0m
[0;34m  |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c2b00[0m <[0;33mcol:30[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x61c0ca0[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x61c6090[0m <[0;33mline:151:9[0m, [0;33mline:155:9[0m> has_else
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x61c31e8[0m <[0;33mline:151:13[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x61c31c8[0m <[0;33mcol:14[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c31b0[0m <[0;33mcol:14[0m> [0;32m'bool (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c3190[0m <[0;33mcol:14[0m> [0;32m'bool ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x61b3978[0m[0;1;36m 'ok'[0m [0;32m'bool ()'[0m
[0;34m  |   | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61c5080[0m <[0;33mcol:20[0m, [0;33mline:153:9[0m>
[0;34m  |   | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61c5048[0m <[0;33mline:152:11[0m, [0;33mcol:19[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c5030[0m <[0;33mcol:16[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c5010[0m <[0;33mcol:16[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5a20948[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |   | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c3200[0m <[0;33mcol:11[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b263d0[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c4ff8[0m <[0;33mcol:19[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x61c3298[0m <[0;33mcol:19[0m> [0;32m'const char [10]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Fegla Won"[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x61c6078[0m <[0;33mline:153:16[0m, [0;33mline:155:9[0m>
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x61c6040[0m <[0;33mline:154:11[0m, [0;33mcol:25[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c6028[0m <[0;33mcol:16[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c6008[0m <[0;33mcol:16[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a17868[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c5098[0m <[0;33mcol:11[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b263d0[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x61c5138[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c5120[0m <[0;33mcol:19[0m> [0;32m'int (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c5100[0m <[0;33mcol:19[0m> [0;32m'int ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x61b4740[0m[0;1;36m 'solve'[0m [0;32m'int ()'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x61c6158[0m <[0;33mline:157:9[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c6140[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x61c6120[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5299e50[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x61c6180[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x61c6100[0m <[0;33mcol:16[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x61c6240[0m <[0;33mline:160:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x61c6220[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

