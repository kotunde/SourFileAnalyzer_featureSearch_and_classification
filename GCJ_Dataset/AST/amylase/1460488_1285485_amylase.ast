Dumping std::bit_and:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d6c960[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:601:3[0m, [0;33mline:602:12[0m> [0;33mcol:12[0m[0;1;36m bit_and[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6c848[0m <[0;33mline:601:12[0m, [0;33mcol:27[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6c8d0[0m <[0;33mline:602:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m bit_and[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d6eed8[0m[0;1;36m 'bit_and'[0m

Dumping std::bit_or:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d6cc70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:604:3[0m, [0;33mline:605:12[0m> [0;33mcol:12[0m[0;1;36m bit_or[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6cb58[0m <[0;33mline:604:12[0m, [0;33mcol:27[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6cbe0[0m <[0;33mline:605:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m bit_or[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d6fef0[0m[0;1;36m 'bit_or'[0m

Dumping std::bit_xor:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d6cf80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:607:3[0m, [0;33mline:608:12[0m> [0;33mcol:12[0m[0;1;36m bit_xor[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6ce68[0m <[0;33mline:607:12[0m, [0;33mcol:27[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6cef0[0m <[0;33mline:608:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m bit_xor[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d738f0[0m[0;1;36m 'bit_xor'[0m

Dumping std::bit_not:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d6d290[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:610:3[0m, [0;33mline:611:12[0m> [0;33mcol:12[0m[0;1;36m bit_not[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6d178[0m <[0;33mline:610:12[0m, [0;33mcol:27[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6d200[0m <[0;33mline:611:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m bit_not[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d74900[0m[0;1;36m 'bit_not'[0m

Dumping std::bit_and:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d6d590[0m prev 0x5d6c960 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:616:3[0m, [0;33mline:623:5[0m> [0;33mline:617:12[0m[0;1;36m bit_and[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6d478[0m <[0;33mline:616:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0minherited from [0;1;32mTemplateTypeParm[0m[0;33m 0x5d6c848[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6d500[0m prev 0x5d6c8d0 <[0;33mline:617:5[0m, [0;33mline:623:5[0m> [0;33mline:617:12[0m struct[0;1;36m bit_and[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'binary_function<_Tp, _Tp, _Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6d780[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_and[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5d6d9c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:622:27[0m> [0;33mline:621:7[0m constexpr[0;1;36m operator()[0m [0;32m'_Tp (const _Tp &, const _Tp &) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6d848[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6d8c0[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __y[0m [0;32m'const _Tp &'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d6db28[0m <[0;33mline:622:7[0m, [0;33mcol:27[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d6db18[0m <[0;33mcol:9[0m, [0;33mcol:22[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d6daf8[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&'
[0;34m|         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6dab8[0m <[0;33mcol:16[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6d848[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6dad8[0m <[0;33mcol:22[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6d8c0[0m[0;1;36m '__y'[0m [0;32m'const _Tp &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d6eed8[0m[0;1;36m 'bit_and'[0m

Dumping std::bit_or:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d6dc60[0m prev 0x5d6cc70 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:625:3[0m, [0;33mline:632:5[0m> [0;33mline:626:12[0m[0;1;36m bit_or[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6db40[0m <[0;33mline:625:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0minherited from [0;1;32mTemplateTypeParm[0m[0;33m 0x5d6cb58[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6dbd0[0m prev 0x5d6cbe0 <[0;33mline:626:5[0m, [0;33mline:632:5[0m> [0;33mline:626:12[0m struct[0;1;36m bit_or[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'binary_function<_Tp, _Tp, _Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6de50[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_or[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5d6e098[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:631:27[0m> [0;33mline:630:7[0m constexpr[0;1;36m operator()[0m [0;32m'_Tp (const _Tp &, const _Tp &) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6df18[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6df90[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __y[0m [0;32m'const _Tp &'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d6e1f8[0m <[0;33mline:631:7[0m, [0;33mcol:27[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d6e1e8[0m <[0;33mcol:9[0m, [0;33mcol:22[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d6e1c8[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '|'
[0;34m|         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6e188[0m <[0;33mcol:16[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6df18[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6e1a8[0m <[0;33mcol:22[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6df90[0m[0;1;36m '__y'[0m [0;32m'const _Tp &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d6fef0[0m[0;1;36m 'bit_or'[0m

Dumping std::bit_xor:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d6e330[0m prev 0x5d6cf80 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:634:3[0m, [0;33mline:641:5[0m> [0;33mline:635:12[0m[0;1;36m bit_xor[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6e210[0m <[0;33mline:634:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0minherited from [0;1;32mTemplateTypeParm[0m[0;33m 0x5d6ce68[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6e2a0[0m prev 0x5d6cef0 <[0;33mline:635:5[0m, [0;33mline:641:5[0m> [0;33mline:635:12[0m struct[0;1;36m bit_xor[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'binary_function<_Tp, _Tp, _Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6e520[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_xor[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5d6e768[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:640:27[0m> [0;33mline:639:7[0m constexpr[0;1;36m operator()[0m [0;32m'_Tp (const _Tp &, const _Tp &) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6e5e8[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6e660[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __y[0m [0;32m'const _Tp &'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d6e8c8[0m <[0;33mline:640:7[0m, [0;33mcol:27[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d6e8b8[0m <[0;33mcol:9[0m, [0;33mcol:22[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d6e898[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '^'
[0;34m|         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6e858[0m <[0;33mcol:16[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6e5e8[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6e878[0m <[0;33mcol:22[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6e660[0m[0;1;36m '__y'[0m [0;32m'const _Tp &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d738f0[0m[0;1;36m 'bit_xor'[0m

Dumping std::bit_not:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5d6ea00[0m prev 0x5d6d290 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:643:3[0m, [0;33mline:650:5[0m> [0;33mline:644:12[0m[0;1;36m bit_not[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6e8e0[0m <[0;33mline:643:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0minherited from [0;1;32mTemplateTypeParm[0m[0;33m 0x5d6d178[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6e970[0m prev 0x5d6d200 <[0;33mline:644:5[0m, [0;33mline:650:5[0m> [0;33mline:644:12[0m struct[0;1;36m bit_not[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'unary_function<_Tp, _Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6ebb0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_not[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5d6ed68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:649:22[0m> [0;33mline:648:7[0m constexpr[0;1;36m operator()[0m [0;32m'_Tp (const _Tp &) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6ec78[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d6eea0[0m <[0;33mline:649:7[0m, [0;33mcol:22[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d6ee90[0m <[0;33mcol:9[0m, [0;33mcol:17[0m>
[0;34m|       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5d6ee78[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '~' cannot overflow
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6ee58[0m <[0;33mcol:17[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6ec78[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5d74900[0m[0;1;36m 'bit_not'[0m

Dumping std::bit_and:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d6eed8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:653:3[0m, [0;33mline:665:5[0m> [0;33mline:654:12[0m struct[0;1;36m bit_and[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d6f0f8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_and[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5d6f830[0m <[0;33mline:656:7[0m, [0;33mline:662:60[0m> [0;33mline:659:2[0m[0;1;36m operator()[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6f188[0m <[0;33mline:656:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d6f1f8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5d6f790[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:662:60[0m> [0;33mline:659:2[0m constexpr[0;1;36m operator()[0m [0;32m'auto (_Tp &&, _Up &&) const noexcept(noexcept(std::forward<_Tp>(__t) & std::forward<_Up>(__u))) -> decltype(std::forward<_Tp>(__t) & std::forward<_Up>(__u))'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6f2c8[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d6f368[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __u[0m [0;32m'_Up &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d6feb8[0m <[0;33mline:662:2[0m, [0;33mcol:60[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d6fea8[0m <[0;33mcol:4[0m, [0;33mcol:57[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d6fe88[0m <[0;33mcol:11[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&'
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x5d6fd40[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5d6fc90[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5c0c4c0[0m[0;33m 0x5c0c980[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6fd20[0m <[0;33mcol:29[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6f2c8[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5d6fe60[0m <[0;33mcol:36[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5d6fdb0[0m <[0;33mcol:36[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5c0c4c0[0m[0;33m 0x5c0c980[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d6fe40[0m <[0;33mcol:54[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d6f368[0m[0;1;36m '__u'[0m [0;32m'_Up &&'[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d6f8a8[0m <[0;33mline:664:7[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m is_transparent[0m [0;32m'std::__is_transparent'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x5d46380[0m [0;32m'std::__is_transparent'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5d462f0[0m[0;1;36m '__is_transparent'[0m

Dumping std::bit_or:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d6fef0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:667:3[0m, [0;33mline:679:5[0m> [0;33mline:668:12[0m struct[0;1;36m bit_or[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d70108[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_or[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5d73230[0m <[0;33mline:670:7[0m, [0;33mline:676:60[0m> [0;33mline:673:2[0m[0;1;36m operator()[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d70198[0m <[0;33mline:670:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d70208[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5d73190[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:676:60[0m> [0;33mline:673:2[0m constexpr[0;1;36m operator()[0m [0;32m'auto (_Tp &&, _Up &&) const noexcept(noexcept(std::forward<_Tp>(__t) | std::forward<_Up>(__u))) -> decltype(std::forward<_Tp>(__t) | std::forward<_Up>(__u))'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d72cc8[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d72d68[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __u[0m [0;32m'_Up &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d738b8[0m <[0;33mline:676:2[0m, [0;33mcol:60[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d738a8[0m <[0;33mcol:4[0m, [0;33mcol:57[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d73888[0m <[0;33mcol:11[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '|'
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x5d73740[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5d73690[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5c0c4c0[0m[0;33m 0x5c0c980[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d73720[0m <[0;33mcol:29[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d72cc8[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5d73860[0m <[0;33mcol:36[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5d737b0[0m <[0;33mcol:36[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5c0c4c0[0m[0;33m 0x5c0c980[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d73840[0m <[0;33mcol:54[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d72d68[0m[0;1;36m '__u'[0m [0;32m'_Up &&'[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d732a8[0m <[0;33mline:678:7[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m is_transparent[0m [0;32m'std::__is_transparent'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x5d46380[0m [0;32m'std::__is_transparent'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5d462f0[0m[0;1;36m '__is_transparent'[0m

Dumping std::bit_xor:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d738f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:681:3[0m, [0;33mline:693:5[0m> [0;33mline:682:12[0m struct[0;1;36m bit_xor[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d73b08[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_xor[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5d74240[0m <[0;33mline:684:7[0m, [0;33mline:690:60[0m> [0;33mline:687:2[0m[0;1;36m operator()[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d73b98[0m <[0;33mline:684:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d73c08[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5d741a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:690:60[0m> [0;33mline:687:2[0m constexpr[0;1;36m operator()[0m [0;32m'auto (_Tp &&, _Up &&) const noexcept(noexcept(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u))) -> decltype(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u))'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d73cd8[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d73d78[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __u[0m [0;32m'_Up &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d748c8[0m <[0;33mline:690:2[0m, [0;33mcol:60[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d748b8[0m <[0;33mcol:4[0m, [0;33mcol:57[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d74898[0m <[0;33mcol:11[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '^'
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x5d74750[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5d746a0[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5c0c4c0[0m[0;33m 0x5c0c980[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d74730[0m <[0;33mcol:29[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d73cd8[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5d74870[0m <[0;33mcol:36[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5d747c0[0m <[0;33mcol:36[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5c0c4c0[0m[0;33m 0x5c0c980[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d74850[0m <[0;33mcol:54[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d73d78[0m[0;1;36m '__u'[0m [0;32m'_Up &&'[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d742b8[0m <[0;33mline:692:7[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m is_transparent[0m [0;32m'std::__is_transparent'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x5d46380[0m [0;32m'std::__is_transparent'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5d462f0[0m[0;1;36m '__is_transparent'[0m

Dumping std::bit_not:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5d74900[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:695:3[0m, [0;33mline:707:5[0m> [0;33mline:696:12[0m struct[0;1;36m bit_not[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5d74b18[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_not[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5d74fe0[0m <[0;33mline:698:7[0m, [0;33mline:704:36[0m> [0;33mline:701:2[0m[0;1;36m operator()[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5d74ba8[0m <[0;33mline:698:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5d74f40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:704:36[0m> [0;33mline:701:2[0m constexpr[0;1;36m operator()[0m [0;32m'auto (_Tp &&) const noexcept(noexcept(~std::forward<_Tp>(__t))) -> decltype(~std::forward<_Tp>(__t))'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5d74c68[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5d75410[0m <[0;33mline:704:2[0m, [0;33mcol:36[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5d75400[0m <[0;33mcol:4[0m, [0;33mcol:33[0m>
[0;34m|       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5d753e8[0m <[0;33mcol:11[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '~' cannot overflow
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5d753c0[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5d75310[0m <[0;33mcol:12[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x5c0c4c0[0m[0;33m 0x5c0c980[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d753a0[0m <[0;33mcol:30[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d74c68[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5d75050[0m <[0;33mline:706:7[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m is_transparent[0m [0;32m'std::__is_transparent'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x5d46380[0m [0;32m'std::__is_transparent'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5d462f0[0m[0;1;36m '__is_transparent'[0m

Dumping (anonymous struct)::__bits:
[0;1;32mFieldDecl[0m[0;33m 0x60146d8[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/cpu-set.h:41:3[0m, [0;33mcol:47[0m> [0;33mcol:14[0m[0;1;36m __bits[0m [0;32m'__cpu_mask [16]'[0m

Dumping (anonymous struct)::fds_bits:
[0;1;32mFieldDecl[0m[0;33m 0x6149af8[0m <[0;33m/usr/include/x86_64-linux-gnu/sys/select.h:64:5[0m, [0;33mcol:48[0m> [0;33mcol:15[0m[0;1;36m fds_bits[0m [0;32m'__fd_mask [16]'[0m

Dumping std::_S_word_bit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x652b7e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:10[0m, [0;33mcol:60[0m> [0;33mcol:10[0m referenced[0;1;36m _S_word_bit[0m [0;32m'std::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:3)'[0m
[0;34m`-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x652b838[0m <[0;33mcol:24[0m, [0;33mcol:60[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  `-[0m[0;1;35mConstantExpr[0m[0;33m 0x652b7c8[0m <[0;33mcol:24[0m, [0;33mcol:60[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 64[0m
[0;34m    `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x652b7a0[0m <[0;33mcol:24[0m, [0;33mcol:60[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m functional cast to int <NoOp>
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x652b788[0m <[0;33m<built-in>:71:22[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:59[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m        `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x652b768[0m <[0;33m<built-in>:71:22[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:59[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x652b750[0m <[0;33m<built-in>:71:22[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m          | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x652b6d8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 8[0m
[0;34m          `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x652b730[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:43[0m, [0;33mcol:59[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'std::_Bit_type':'unsigned long'[0m

Dumping _S_word_bit:
[0;1;32mUsingDecl[0m[0;33m 0x65a9938[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/vector.tcc:873:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m std::_S_word_bit

Dumping __extrabits:
[0;1;32mVarDecl[0m[0;33m 0x65aa008[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/vector.tcc:883:7[0m, [0;33mcol:47[0m> [0;33mcol:20[0m referenced[0;1;36m __extrabits[0m [0;32m'const std::size_t':'const unsigned long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x65aa120[0m <[0;33mcol:34[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '%'
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x65aa0d8[0m <[0;33mcol:34[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x65aa090[0m <[0;33mcol:34[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65aa070[0m <[0;33mcol:34[0m> [0;32m'const std::vector<bool, _Alloc>':'const vector<bool, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x65a96b8[0m[0;1;36m '__b'[0m [0;32m'const std::vector<bool, _Alloc> &'[0m
[0;34m  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x65aa0f8[0m <[0;33mcol:47[0m> [0;32m'std::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:3)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x652b7e8[0m[0;1;36m '_S_word_bit'[0m [0;32m'std::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:3)'[0m ([0;1;32mUsingShadow[0m[0;33m 0x65a9990[0m[0;1;36m '_S_word_bit'[0m)

Dumping __signbit:
[0;1;32mFunctionDecl[0m[0;33m 0x65d16a8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32[0m> [0;33mline:25:20[0m[0;1;36m __signbit[0m [0;32m'int (double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d1608[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43[0m> [0;33mcol:43[0m[0;1;36m __value[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;34mConstAttr[0m[0;33m 0x65d1750[0m <[0;33mline:26:22[0m>

Dumping __signbitf:
[0;1;32mFunctionDecl[0m[0;33m 0x65f2918[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32[0m> [0;33m<scratch space>:152:1[0m[0;1;36m __signbitf[0m [0;32m'int (float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65f2878[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43[0m> [0;33mcol:43[0m[0;1;36m __value[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;34mConstAttr[0m[0;33m 0x65f29c0[0m <[0;33mline:26:22[0m>

Dumping __signbitl:
[0;1;32mFunctionDecl[0m[0;33m 0x6652548[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32[0m> [0;33m<scratch space>:35:1[0m[0;1;36m __signbitl[0m [0;32m'int (long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66524a8[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43[0m> [0;33mcol:43[0m[0;1;36m __value[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;34mConstAttr[0m[0;33m 0x66525f0[0m <[0;33mline:26:22[0m>

Dumping std::signbit:
[0;1;32mFunctionDecl[0m[0;33m 0x6780d78[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:667:3[0m, [0;33mline:669:36[0m> [0;33mline:668:3[0m constexpr[0;1;36m signbit[0m [0;32m'bool (float)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6780ce8[0m <[0;33mcol:11[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m __x[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6781038[0m <[0;33mline:669:3[0m, [0;33mcol:36[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6781028[0m <[0;33mcol:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781010[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6780fb8[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6780fa0[0m <[0;33mcol:12[0m> [0;32m'int (*)(...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6780f60[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6780e70[0m[0;1;36m '__builtin_signbit'[0m [0;32m'int (...) noexcept'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6780fe0[0m <[0;33mcol:30[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6780f80[0m <[0;33mcol:30[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6780ce8[0m[0;1;36m '__x'[0m [0;32m'float'[0m

Dumping std::signbit:
[0;1;32mFunctionDecl[0m[0;33m 0x67810f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:671:3[0m, [0;33mline:673:36[0m> [0;33mline:672:3[0m constexpr[0;1;36m signbit[0m [0;32m'bool (double)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6781068[0m <[0;33mcol:11[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m __x[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6781260[0m <[0;33mline:673:3[0m, [0;33mcol:36[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6781250[0m <[0;33mcol:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781238[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x67811f8[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67811e0[0m <[0;33mcol:12[0m> [0;32m'int (*)(...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67811a0[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6780e70[0m[0;1;36m '__builtin_signbit'[0m [0;32m'int (...) noexcept'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781220[0m <[0;33mcol:30[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67811c0[0m <[0;33mcol:30[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6781068[0m[0;1;36m '__x'[0m [0;32m'double'[0m

Dumping std::signbit:
[0;1;32mFunctionDecl[0m[0;33m 0x6781320[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:675:3[0m, [0;33mline:677:36[0m> [0;33mline:676:3[0m constexpr[0;1;36m signbit[0m [0;32m'bool (long double)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6781290[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6781488[0m <[0;33mline:677:3[0m, [0;33mcol:36[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6781478[0m <[0;33mcol:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781460[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6781420[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781408[0m <[0;33mcol:12[0m> [0;32m'int (*)(...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67813c8[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6780e70[0m[0;1;36m '__builtin_signbit'[0m [0;32m'int (...) noexcept'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6781448[0m <[0;33mcol:30[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67813e8[0m <[0;33mcol:30[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6781290[0m[0;1;36m '__x'[0m [0;32m'long double'[0m

Dumping std::signbit:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6781918[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:681:3[0m, [0;33mline:685:38[0m> [0;33mline:684:5[0m[0;1;36m signbit[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x67814a0[0m <[0;33mline:681:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6781878[0m <[0;33mline:682:5[0m, [0;33mline:685:38[0m> [0;33mline:684:5[0m constexpr[0;1;36m signbit[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, bool>::__type (_Tp)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67817a0[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __x[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6781b38[0m <[0;33mline:685:5[0m, [0;33mcol:38[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6781b28[0m <[0;33mcol:7[0m, [0;33mcol:31[0m>
[0;34m      `-[0m[0;1;35mConditionalOperator[0m[0;33m 0x6781af8[0m <[0;33mcol:14[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6781aa0[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x67819b8[0m <[0;33mcol:18[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x5c4dab8[0m[0;33m 0x5c725e8[0m[0;33m 0x5c74b58[0m[0;33m 0x5c99068[0m[0;33m 0x5c996d8[0m[0;33m 0x5e2b258[0m[0;33m 0x6133610[0m[0;33m 0x6133d48[0m[0;33m 0x6134488[0m[0;33m 0x62f70a8[0m[0;33m 0x63c2218[0m[0;33m 0x63f66e8[0m[0;33m 0x640fd18[0m[0;33m 0x6425cf8[0m[0;33m 0x643db78[0m[0;33m 0x6473330[0m[0;33m 0x6474150[0m[0;33m 0x64cdfa8[0m[0;33m 0x64fc358[0m[0;33m 0x6528bc8[0m[0;33m 0x65c3068[0m
[0;34m        | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6781978[0m <[0;33mcol:14[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x67817a0[0m[0;1;36m '__x'[0m [0;32m'_Tp'[0m
[0;34m        | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6781998[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m        |-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6781ad8[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m        `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6781ae8[0m <[0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping std::_S_goodbit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6827ef0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:155:7[0m, [0;33mcol:22[0m> [0;33mcol:7[0m referenced[0;1;36m _S_goodbit[0m [0;32m'std::_Ios_Iostate'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x6827ed0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6827eb0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::_S_badbit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6827fc0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:156:7[0m, [0;33mcol:27[0m> [0;33mcol:7[0m referenced[0;1;36m _S_badbit[0m [0;32m'std::_Ios_Iostate'[0m
[0;34m`-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68283b8[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6827fa0[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6827f80[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6827f40[0m <[0;33mcol:21[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6827f60[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::_S_eofbit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6828090[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:157:7[0m, [0;33mcol:27[0m> [0;33mcol:7[0m referenced[0;1;36m _S_eofbit[0m [0;32m'std::_Ios_Iostate'[0m
[0;34m`-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68283d0[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6828070[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6828050[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6828010[0m <[0;33mcol:21[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6828030[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m

Dumping std::_S_failbit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6828160[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:158:7[0m, [0;33mcol:27[0m> [0;33mcol:7[0m referenced[0;1;36m _S_failbit[0m [0;32m'std::_Ios_Iostate'[0m
[0;34m`-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68283e8[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6828140[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6828120[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x68280e0[0m <[0;33mcol:21[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6828100[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m

Dumping std::ios_base::badbit:
[0;1;32mVarDecl[0m[0;33m 0x682d210[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:402:5[0m, [0;33mcol:35[0m> [0;33mcol:26[0m referenced[0;1;36m badbit[0m [0;32m'const std::ios_base::iostate':'const std::_Ios_Iostate'[0m static cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x682d278[0m <[0;33mcol:35[0m> [0;32m'std::_Ios_Iostate'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6827fc0[0m[0;1;36m '_S_badbit'[0m [0;32m'std::_Ios_Iostate'[0m

Dumping std::ios_base::eofbit:
[0;1;32mVarDecl[0m[0;33m 0x682d300[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:405:5[0m, [0;33mcol:35[0m> [0;33mcol:26[0m referenced[0;1;36m eofbit[0m [0;32m'const std::ios_base::iostate':'const std::_Ios_Iostate'[0m static cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x682d368[0m <[0;33mcol:35[0m> [0;32m'std::_Ios_Iostate'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6828090[0m[0;1;36m '_S_eofbit'[0m [0;32m'std::_Ios_Iostate'[0m

Dumping std::ios_base::failbit:
[0;1;32mVarDecl[0m[0;33m 0x682d3f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:410:5[0m, [0;33mcol:36[0m> [0;33mcol:26[0m referenced[0;1;36m failbit[0m [0;32m'const std::ios_base::iostate':'const std::_Ios_Iostate'[0m static cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x682d458[0m <[0;33mcol:36[0m> [0;32m'std::_Ios_Iostate'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6828160[0m[0;1;36m '_S_failbit'[0m [0;32m'std::_Ios_Iostate'[0m

Dumping std::ios_base::goodbit:
[0;1;32mVarDecl[0m[0;33m 0x682d4e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:413:5[0m, [0;33mcol:36[0m> [0;33mcol:26[0m referenced[0;1;36m goodbit[0m [0;32m'const std::ios_base::iostate':'const std::_Ios_Iostate'[0m static cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x682d548[0m <[0;33mcol:36[0m> [0;32m'std::_Ios_Iostate'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6827ef0[0m[0;1;36m '_S_goodbit'[0m [0;32m'std::_Ios_Iostate'[0m

Dumping std::ctype<wchar_t>::_M_bit:
[0;1;32mFieldDecl[0m[0;33m 0x68c3e78[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:1199:7[0m, [0;33mcol:42[0m> [0;33mcol:33[0m[0;1;36m _M_bit[0m [0;32m'std::ctype_base::mask [16]'[0m

Dumping bit:
[0;1;32mFunctionDecl[0m[0;33m 0x6be5be8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/amylase/1460488_1285485_amylase.cpp:20:1[0m, [0;33mcol:37[0m> [0;33mcol:11[0m[0;1;36m bit[0m [0;32m'li (li)'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6be5b28[0m <[0;33mcol:15[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m n[0m [0;32m'li':'long long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6be5d18[0m <[0;33mcol:20[0m, [0;33mcol:37[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6be5d08[0m <[0;33mcol:22[0m, [0;33mcol:34[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6be5ce8[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6be5c90[0m <[0;33mcol:29[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6be5cd0[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6be5cb0[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6be5b28[0m[0;1;36m 'n'[0m [0;32m'li':'long long'[0m

Dumping isok:
[0;1;32mFunctionDecl[0m[0;33m 0x787fce8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/amylase/1460488_1285485_amylase.cpp:29:1[0m, [0;33mline:31:1[0m> [0;33mline:29:6[0m used[0;1;36m isok[0m [0;32m'bool (li, li, li)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x787fad8[0m <[0;33mcol:11[0m, [0;33mcol:14[0m> [0;33mcol:14[0m used[0;1;36m vx[0m [0;32m'li':'long long'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x787fb50[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;33mcol:21[0m used[0;1;36m w[0m [0;32m'li':'long long'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x787fbc8[0m <[0;33mcol:24[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m mw[0m [0;32m'li':'long long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x78801d8[0m <[0;33mcol:30[0m, [0;33mline:31:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x78801c8[0m <[0;33mline:30:3[0m, [0;33mcol:64[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x78801a8[0m <[0;33mcol:10[0m, [0;33mcol:64[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m      |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7880028[0m <[0;33mcol:10[0m, [0;33mcol:43[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x787ffd0[0m <[0;33mcol:10[0m, [0;33mcol:38[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '%'
[0;34m      | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x787ff00[0m <[0;33mcol:10[0m, [0;33mcol:28[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m      | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x787fee0[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m      | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x787fec8[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x787fda0[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x787fad8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m      | | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x787fea8[0m <[0;33mcol:16[0m, [0;33mcol:27[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m      | | |     |-[0m[0;1;35mParenExpr[0m[0;33m 0x787fe50[0m <[0;33mcol:16[0m, [0;33mcol:23[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m      | | |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x787fe30[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m      | | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x787fe00[0m <[0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x787fdc0[0m <[0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x787fb50[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m      | | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x787fe18[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x787fde0[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x787fbc8[0m[0;1;36m 'mw'[0m [0;32m'li':'long long'[0m
[0;34m      | | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x787fe90[0m <[0;33mcol:27[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      | | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x787fe70[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m      | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x787ffb0[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m      | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x787ff90[0m <[0;33mcol:33[0m, [0;33mcol:37[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m      | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x787ff78[0m <[0;33mcol:33[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      | |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x787ff20[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m      | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x787ff60[0m <[0;33mcol:37[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x787ff40[0m <[0;33mcol:37[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x787fb50[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m      | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7880010[0m <[0;33mcol:43[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m      |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x787fff0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7880188[0m <[0;33mcol:48[0m, [0;33mcol:64[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7880130[0m <[0;33mcol:48[0m, [0;33mcol:59[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '%'
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7880118[0m <[0;33mcol:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7880048[0m <[0;33mcol:48[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x787fad8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m        | `-[0m[0;1;35mParenExpr[0m[0;33m 0x78800f8[0m <[0;33mcol:53[0m, [0;33mcol:59[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m        |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x78800d8[0m <[0;33mcol:54[0m, [0;33mcol:58[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m        |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x78800c0[0m <[0;33mcol:54[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m        |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7880068[0m <[0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x78800a8[0m <[0;33mcol:58[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7880088[0m <[0;33mcol:58[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x787fb50[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7880170[0m <[0;33mcol:64[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m          `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7880150[0m <[0;33mcol:64[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping __resolved:
[0;1;32mParmVarDecl[0m[0;33m 0x678a5a0[0m <[0;33m/usr/include/stdlib.h:798:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __resolved[0m [0;32m'char *__restrict'[0m

Dumping solve:
[0;1;32mFunctionDecl[0m[0;33m 0x72049d8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/amylase/1460488_1285485_amylase.cpp:33:1[0m, [0;33mline:88:1[0m> [0;33mline:33:6[0m used[0;1;36m solve[0m [0;32m'void (li)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x72048e0[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;33mcol:15[0m used[0;1;36m casenum[0m [0;32m'li':'long long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7402338[0m <[0;33mcol:23[0m, [0;33mline:88:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7204d08[0m <[0;33mline:34:3[0m, [0;33mcol:17[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x7204a90[0m <[0;33mcol:3[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m h[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x7204b08[0m <[0;33mcol:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m used[0;1;36m w[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x7204b80[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m used[0;1;36m d[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x7204bf8[0m <[0;33mcol:3[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m mh[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7204c70[0m <[0;33mcol:3[0m, [0;33mcol:15[0m> [0;33mcol:15[0m used[0;1;36m mw[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7207be0[0m <[0;33mline:35:3[0m, [0;33mcol:20[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7207bc8[0m <[0;33mcol:17[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7207ba8[0m <[0;33mcol:17[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6fd8af8[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7207140[0m <[0;33mcol:3[0m, [0;33mcol:15[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7207128[0m <[0;33mcol:12[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7207108[0m <[0;33mcol:12[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6fd8af8[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x72066a0[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7206688[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7206610[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6fd8af8[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7204d20[0m <[0;33mcol:3[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70ba528[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7204d40[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204a90[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72066d8[0m <[0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204b08[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7207178[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204b80[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x7209dd8[0m <[0;33mline:22:25[0m, [0;33mline:46:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7207cc8[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7207c28[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:37:7[0m used[0;1;36m i[0m [0;32m'li':'long long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7207cb0[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7207c90[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7207da8[0m <[0;33mline:37:7[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7207d90[0m <[0;33mline:37:7[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7207ce0[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7207c28[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x7207d70[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x7207d48[0m <[0;33mcol:39[0m, [0;33mline:37:9[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7207d30[0m <[0;33mcol:9[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7207d00[0m <[0;33mcol:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204a90[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7207de8[0m <[0;33mcol:7[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7207dc8[0m <[0;33mline:37:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7207c28[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7209db0[0m <[0;33mcol:11[0m, [0;33mline:46:3[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7207ea0[0m <[0;33mline:38:5[0m, [0;33mcol:15[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7207e10[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m str[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m callinit
[0;34m  |   |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7207e78[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<char> >::value)'[0m
[0;34m  |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7209860[0m <[0;33mline:39:5[0m, [0;33mcol:12[0m> [0;32m'basic_istream<char>':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209848[0m <[0;33mcol:9[0m> [0;32m'basic_istream<char> &(*)(basic_istream<char> &, basic_string<char> &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72097c8[0m <[0;33mcol:9[0m> [0;32m'basic_istream<char> &(basic_istream<char> &, basic_string<char> &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6759410[0m[0;1;36m 'operator>>'[0m [0;32m'basic_istream<char> &(basic_istream<char> &, basic_string<char> &)'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7207eb8[0m <[0;33mcol:5[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70ba528[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7207ed8[0m <[0;33mcol:12[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7207e10[0m[0;1;36m 'str'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x7209d78[0m <[0;33mline:22:25[0m, [0;33mline:45:5[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7209948[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x72098a8[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:40:9[0m used[0;1;36m j[0m [0;32m'li':'long long'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209930[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7209910[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7209a28[0m <[0;33mline:40:9[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209a10[0m <[0;33mline:40:9[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209960[0m <[0;33mcol:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72098a8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |     | `-[0m[0;1;35mParenExpr[0m[0;33m 0x72099f0[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x72099c8[0m <[0;33mcol:39[0m, [0;33mline:40:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72099b0[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209980[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204b08[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7209a68[0m <[0;33mcol:9[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209a48[0m <[0;33mline:40:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72098a8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7209d60[0m <[0;33mcol:13[0m, [0;33mline:45:5[0m>
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x7209d48[0m <[0;33mline:41:7[0m, [0;33mline:44:7[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7209c18[0m <[0;33mline:41:10[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209be8[0m <[0;33mcol:10[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209bd0[0m <[0;33mcol:10[0m, [0;33mcol:15[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7209b80[0m <[0;33mcol:10[0m, [0;33mcol:15[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209b68[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209af0[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67f8348[0m[0;1;36m 'operator[]'[0m [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reference (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)'[0m
[0;34m  |         | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209a80[0m <[0;33mcol:10[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7207e10[0m[0;1;36m 'str'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |         | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209ad8[0m <[0;33mcol:14[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209ac0[0m <[0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209aa0[0m <[0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72098a8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209c00[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         |   `-[0m[0;1;35mCharacterLiteral[0m[0;33m 0x7209bb8[0m <[0;33mcol:18[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m[0;1;36m 88[0m
[0;34m  |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7209d28[0m <[0;33mcol:22[0m, [0;33mline:44:7[0m>
[0;34m  |           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7209c90[0m <[0;33mline:42:9[0m, [0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |           | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209c38[0m <[0;33mcol:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204bf8[0m[0;1;36m 'mh'[0m [0;32m'li':'long long'[0m
[0;34m  |           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209c78[0m <[0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209c58[0m <[0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7207c28[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7209d08[0m <[0;33mline:43:9[0m, [0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209cb0[0m <[0;33mcol:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204c70[0m[0;1;36m 'mw'[0m [0;32m'li':'long long'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209cf0[0m <[0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209cd0[0m <[0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72098a8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7209f18[0m <[0;33mline:48:3[0m, [0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209e10[0m <[0;33mcol:3[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204a90[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7209ef8[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7209ea0[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209e70[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209e30[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204a90[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209e88[0m <[0;33mcol:9[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7209e50[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209ee0[0m <[0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7209ec0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720a040[0m <[0;33mline:49:3[0m, [0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209f38[0m <[0;33mcol:3[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204b08[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720a020[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7209fc8[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209f98[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7209f58[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204b08[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7209fb0[0m <[0;33mcol:9[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7209f78[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720a008[0m <[0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7209fe8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720a168[0m <[0;33mline:51:3[0m, [0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720a060[0m <[0;33mcol:3[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204c70[0m[0;1;36m 'mw'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720a148[0m <[0;33mcol:8[0m, [0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720a0f0[0m <[0;33mcol:8[0m, [0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720a0c0[0m <[0;33mcol:8[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720a080[0m <[0;33mcol:8[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204c70[0m[0;1;36m 'mw'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720a0d8[0m <[0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x720a0a0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720a130[0m <[0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x720a110[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720a290[0m <[0;33mline:52:3[0m, [0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720a188[0m <[0;33mcol:3[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204bf8[0m[0;1;36m 'mh'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720a270[0m <[0;33mcol:8[0m, [0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720a218[0m <[0;33mcol:8[0m, [0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720a1e8[0m <[0;33mcol:8[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720a1a8[0m <[0;33mcol:8[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204bf8[0m[0;1;36m 'mh'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720a200[0m <[0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x720a1c8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720a258[0m <[0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x720a238[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x72435d0[0m <[0;33mline:59:3[0m, [0;33mcol:14[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x720a860[0m <[0;33mcol:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m used[0;1;36m dir[0m [0;32m'set<pi>':'std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7243598[0m <[0;33mcol:11[0m> [0;32m'set<pi>':'std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void () throw()'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x72436f0[0m <[0;33mline:61:3[0m, [0;33mcol:23[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x72435f8[0m <[0;33mcol:3[0m, [0;33mcol:19[0m> [0;33mcol:12[0m referenced[0;1;36m rect[0m [0;32m'const li':'const long long'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243680[0m <[0;33mcol:19[0m> [0;32m'const li':'const long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7243660[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1200[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x73ec288[0m <[0;33mline:62:3[0m, [0;33mline:84:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x72437f0[0m <[0;33mline:62:7[0m, [0;33mcol:19[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7243718[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:10[0m used[0;1;36m x[0m [0;32m'li':'long long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x72437d8[0m <[0;33mcol:14[0m, [0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72437c0[0m <[0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72437a0[0m <[0;33mcol:15[0m> [0;32m'const li':'const long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72435f8[0m[0;1;36m 'rect'[0m [0;32m'const li':'const long long'[0m non_odr_use_constant
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243898[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243848[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243808[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243718[0m[0;1;36m 'x'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243880[0m <[0;33mcol:24[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243860[0m <[0;33mcol:24[0m> [0;32m'const li':'const long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72435f8[0m[0;1;36m 'rect'[0m [0;32m'const li':'const long long'[0m non_odr_use_constant
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x72438d8[0m <[0;33mcol:30[0m, [0;33mcol:31[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72438b8[0m <[0;33mcol:30[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243718[0m[0;1;36m 'x'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73ec270[0m <[0;33mcol:34[0m, [0;33mline:84:3[0m>
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x73ec238[0m <[0;33mline:63:5[0m, [0;33mline:83:5[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x72439d8[0m <[0;33mline:63:9[0m, [0;33mcol:21[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7243900[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;33mcol:12[0m used[0;1;36m y[0m [0;32m'li':'long long'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x72439c0[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72439a8[0m <[0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243988[0m <[0;33mcol:17[0m> [0;32m'const li':'const long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72435f8[0m[0;1;36m 'rect'[0m [0;32m'const li':'const long long'[0m non_odr_use_constant
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243a80[0m <[0;33mcol:23[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243a30[0m <[0;33mcol:23[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72439f0[0m <[0;33mcol:23[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243900[0m[0;1;36m 'y'[0m [0;32m'li':'long long'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243a68[0m <[0;33mcol:26[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243a48[0m <[0;33mcol:26[0m> [0;32m'const li':'const long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72435f8[0m[0;1;36m 'rect'[0m [0;32m'const li':'const long long'[0m non_odr_use_constant
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7243ac0[0m <[0;33mcol:32[0m, [0;33mcol:33[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243aa0[0m <[0;33mcol:32[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243900[0m[0;1;36m 'y'[0m [0;32m'li':'long long'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73ec218[0m <[0;33mcol:36[0m, [0;33mline:83:5[0m>
[0;34m  |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7243d00[0m <[0;33mline:64:7[0m, [0;33mcol:30[0m>
[0;34m  |       | |-[0m[0;1;32mVarDecl[0m[0;33m 0x7243ae8[0m <[0;33mcol:7[0m, [0;33mcol:17[0m> [0;33mcol:10[0m used[0;1;36m vx[0m [0;32m'li':'long long'[0m cinit
[0;34m  |       | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243bc0[0m <[0;33mcol:15[0m, [0;33mcol:17[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243b90[0m <[0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243b50[0m <[0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243718[0m[0;1;36m 'x'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243ba8[0m <[0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243b70[0m <[0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204c70[0m[0;1;36m 'mw'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7243bf0[0m <[0;33mcol:7[0m, [0;33mcol:28[0m> [0;33mcol:21[0m used[0;1;36m vy[0m [0;32m'li':'long long'[0m cinit
[0;34m  |       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243cc8[0m <[0;33mcol:26[0m, [0;33mcol:28[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243c98[0m <[0;33mcol:26[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243c58[0m <[0;33mcol:26[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243900[0m[0;1;36m 'y'[0m [0;32m'li':'long long'[0m
[0;34m  |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243cb0[0m <[0;33mcol:28[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243c78[0m <[0;33mcol:28[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204bf8[0m[0;1;36m 'mh'[0m [0;32m'li':'long long'[0m
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x73ec200[0m <[0;33mline:65:7[0m, [0;33mline:82:7[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72442a0[0m <[0;33mline:65:10[0m, [0;33mcol:65[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |         | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7244120[0m <[0;33mcol:10[0m, [0;33mcol:48[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |         | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243f40[0m <[0;33mcol:10[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |         | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243e38[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |         | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243d88[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |         | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243d58[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243d18[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |         | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243d70[0m <[0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243d38[0m <[0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |         | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243e18[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |         | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243de8[0m <[0;33mcol:18[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243da8[0m <[0;33mcol:18[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |         | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243e00[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243dc8[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |         | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243f20[0m <[0;33mcol:27[0m, [0;33mcol:31[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |         | | |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7243ec8[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |         | | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243eb0[0m <[0;33mcol:27[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         | | |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7243e58[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m  |         | | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243e98[0m <[0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243e78[0m <[0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204b80[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |         | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7243f08[0m <[0;33mcol:31[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243ee8[0m <[0;33mcol:31[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204b80[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |         | | `-[0m[0;1;35mCallExpr[0m[0;33m 0x72440a0[0m <[0;33mcol:36[0m, [0;33mcol:48[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244088[0m <[0;33mcol:36[0m> [0;32m'bool (*)(li, li, li)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7244008[0m <[0;33mcol:36[0m> [0;32m'bool (li, li, li)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72043c8[0m[0;1;36m 'isok'[0m [0;32m'bool (li, li, li)'[0m
[0;34m  |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72440d8[0m <[0;33mcol:41[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243fa8[0m <[0;33mcol:41[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72440f0[0m <[0;33mcol:44[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243fc8[0m <[0;33mcol:44[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204b08[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244108[0m <[0;33mcol:46[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7243fe8[0m <[0;33mcol:46[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204c70[0m[0;1;36m 'mw'[0m [0;32m'li':'long long'[0m
[0;34m  |         | `-[0m[0;1;35mCallExpr[0m[0;33m 0x7244220[0m <[0;33mcol:53[0m, [0;33mcol:65[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |         |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244208[0m <[0;33mcol:53[0m> [0;32m'bool (*)(li, li, li)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72441e8[0m <[0;33mcol:53[0m> [0;32m'bool (li, li, li)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x72043c8[0m[0;1;36m 'isok'[0m [0;32m'bool (li, li, li)'[0m
[0;34m  |         |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244258[0m <[0;33mcol:58[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7244188[0m <[0;33mcol:58[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |         |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244270[0m <[0;33mcol:61[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72441a8[0m <[0;33mcol:61[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204a90[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244288[0m <[0;33mcol:63[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72441c8[0m <[0;33mcol:63[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7204bf8[0m[0;1;36m 'mh'[0m [0;32m'li':'long long'[0m
[0;34m  |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x73ec1d0[0m <[0;33mcol:67[0m, [0;33mline:82:7[0m>
[0;34m  |           |-[0m[0;1;35mDeclStmt[0m[0;33m 0x728a5a0[0m <[0;33mline:66:9[0m, [0;33mcol:15[0m>
[0;34m  |           | `-[0m[0;1;32mVarDecl[0m[0;33m 0x72442d0[0m <[0;33mcol:9[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m tmp[0m [0;32m'pi':'std::pair<long long, long long>'[0m callinit
[0;34m  |           |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x728a578[0m <[0;33mcol:12[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m [0;32m'void ()'[0m
[0;34m  |           |-[0m[0;1;35mIfStmt[0m[0;33m 0x728a700[0m <[0;33mline:67:9[0m, [0;33mcol:28[0m>
[0;34m  |           | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x728a6d8[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |           | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x728a628[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |           | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a5f8[0m <[0;33mcol:12[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x728a5b8[0m <[0;33mcol:12[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |           | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a610[0m <[0;33mcol:16[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x728a5d8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |           | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x728a6b8[0m <[0;33mcol:21[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |           | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a688[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x728a648[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |           | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a6a0[0m <[0;33mcol:25[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x728a668[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |           | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x728a6f8[0m <[0;33mcol:28[0m>
[0;34m  |           |-[0m[0;1;35mIfStmt[0m[0;33m 0x7392e78[0m <[0;33mline:68:9[0m, [0;33mline:75:9[0m> has_else
[0;34m  |           | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x728a788[0m <[0;33mline:68:12[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |           | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a758[0m <[0;33mcol:12[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x728a718[0m <[0;33mcol:12[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |           | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a770[0m <[0;33mcol:16[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x728a738[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |           | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x732eb40[0m <[0;33mcol:18[0m, [0;33mline:70:9[0m>
[0;34m  |           | | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x732eb28[0m <[0;33mline:69:11[0m, [0;33mcol:39[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x732eaf0[0m <[0;33mcol:11[0m, [0;33mcol:39[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x732ead8[0m <[0;33mcol:15[0m> [0;32m'typename enable_if<__and_<is_assignable<long long &, int &&>, is_assignable<long long &, long long &&> >::value, pair<long long, long long> &>::type (*)(pair<int, long long> &&)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x732ea58[0m <[0;33mcol:15[0m> [0;32m'typename enable_if<__and_<is_assignable<long long &, int &&>, is_assignable<long long &, long long &&> >::value, pair<long long, long long> &>::type (pair<int, long long> &&)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x732e928[0m[0;1;36m 'operator='[0m [0;32m'typename enable_if<__and_<is_assignable<long long &, int &&>, is_assignable<long long &, long long &&> >::value, pair<long long, long long> &>::type (pair<int, long long> &&)'[0m
[0;34m  |           | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x728a7a8[0m <[0;33mcol:11[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72442d0[0m[0;1;36m 'tmp'[0m [0;32m'pi':'std::pair<long long, long long>'[0m
[0;34m  |           | |     `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x732ea40[0m <[0;33mcol:17[0m, [0;33mcol:39[0m> [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<long long>::__type>':'std::pair<int, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           | |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x7310d30[0m <[0;33mcol:17[0m, [0;33mcol:39[0m> [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<long long>::__type>':'std::pair<int, long long>'[0m[0;36m[0m[0;36m[0m
[0;34m  |           | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7310d18[0m <[0;33mcol:17[0m> [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<long long>::__type> (*)(int &&, long long &&)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x728f4c0[0m <[0;33mcol:17[0m> [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<long long>::__type> (int &&, long long &&)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x728f3a0[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<long long>::__type> (int &&, long long &&)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62701c0[0m[0;1;36m 'make_pair'[0m)
[0;34m  |           | |         |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7310d60[0m <[0;33mcol:27[0m> [0;32m'int':'int'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           | |         | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x728a810[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |           | |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7310d78[0m <[0;33mcol:29[0m, [0;33mcol:37[0m> [0;32m'long long':'long long'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           | |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x728a970[0m <[0;33mcol:29[0m, [0;33mcol:37[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |           | |             |-[0m[0;1;35mCallExpr[0m[0;33m 0x728a8f8[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |           | |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a8e0[0m <[0;33mcol:29[0m> [0;32m'long long (*)(long long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           | |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x728a8c0[0m <[0;33mcol:29[0m> [0;32m'long long (long long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67a3f78[0m[0;1;36m 'abs'[0m [0;32m'long long (long long)'[0m
[0;34m  |           | |             | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a920[0m <[0;33mcol:33[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           | |             |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x728a8a0[0m <[0;33mcol:33[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |           | |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x728a958[0m <[0;33mcol:37[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           | |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x728a938[0m <[0;33mcol:37[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |           | `-[0m[0;1;35mIfStmt[0m[0;33m 0x7392e50[0m <[0;33mline:70:16[0m, [0;33mline:75:9[0m> has_else
[0;34m  |           |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x732ebc8[0m <[0;33mline:70:19[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |           |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x732eb98[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x732eb58[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |           |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x732ebb0[0m <[0;33mcol:23[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |           |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x732eb78[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |           |   |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7374b80[0m <[0;33mcol:25[0m, [0;33mline:72:9[0m>
[0;34m  |           |   | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7374b68[0m <[0;33mline:71:11[0m, [0;33mcol:39[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7374b30[0m <[0;33mcol:11[0m, [0;33mcol:39[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7374b18[0m <[0;33mcol:15[0m> [0;32m'typename enable_if<__and_<is_assignable<long long &, long long &&>, is_assignable<long long &, int &&> >::value, pair<long long, long long> &>::type (*)(pair<long long, int> &&)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7374a98[0m <[0;33mcol:15[0m> [0;32m'typename enable_if<__and_<is_assignable<long long &, long long &&>, is_assignable<long long &, int &&> >::value, pair<long long, long long> &>::type (pair<long long, int> &&)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7374968[0m[0;1;36m 'operator='[0m [0;32m'typename enable_if<__and_<is_assignable<long long &, long long &&>, is_assignable<long long &, int &&> >::value, pair<long long, long long> &>::type (pair<long long, int> &&)'[0m
[0;34m  |           |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x732ebe8[0m <[0;33mcol:11[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72442d0[0m[0;1;36m 'tmp'[0m [0;32m'pi':'std::pair<long long, long long>'[0m
[0;34m  |           |   |     `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7374a80[0m <[0;33mcol:17[0m, [0;33mcol:39[0m> [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<int>::__type>':'std::pair<long long, int>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           |   |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x736a270[0m <[0;33mcol:17[0m, [0;33mcol:39[0m> [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<int>::__type>':'std::pair<long long, int>'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x736a258[0m <[0;33mcol:17[0m> [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<int>::__type> (*)(long long &&, int &&)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x732f560[0m <[0;33mcol:17[0m> [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<int>::__type> (long long &&, int &&)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x732f440[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<int>::__type> (long long &&, int &&)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62701c0[0m[0;1;36m 'make_pair'[0m)
[0;34m  |           |   |         |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x736a2a0[0m <[0;33mcol:27[0m, [0;33mcol:35[0m> [0;32m'long long':'long long'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           |   |         | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x732ed90[0m <[0;33mcol:27[0m, [0;33mcol:35[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |           |   |         |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x732ed18[0m <[0;33mcol:27[0m, [0;33mcol:33[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |   |         |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x732ed00[0m <[0;33mcol:27[0m> [0;32m'long long (*)(long long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |   |         |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x732ece0[0m <[0;33mcol:27[0m> [0;32m'long long (long long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67a3f78[0m[0;1;36m 'abs'[0m [0;32m'long long (long long)'[0m
[0;34m  |           |   |         |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x732ed40[0m <[0;33mcol:31[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   |         |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x732ecc0[0m <[0;33mcol:31[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |           |   |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x732ed78[0m <[0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x732ed58[0m <[0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |           |   |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x736a2b8[0m <[0;33mcol:38[0m> [0;32m'int':'int'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           |   |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x732edb0[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |           |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7392e30[0m <[0;33mline:72:16[0m, [0;33mline:75:9[0m>
[0;34m  |           |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x73752d0[0m <[0;33mline:73:11[0m, [0;33mcol:42[0m>
[0;34m  |           |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7374ba8[0m <[0;33mcol:11[0m, [0;33mcol:41[0m> [0;33mcol:14[0m used[0;1;36m gc[0m [0;32m'li':'long long'[0m cinit
[0;34m  |           |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x73752a0[0m <[0;33mcol:19[0m, [0;33mcol:41[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7375288[0m <[0;33mcol:19[0m> [0;32m'long long (*)(long long, long long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7375200[0m <[0;33mcol:19[0m> [0;32m'long long (long long, long long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x73750f8[0m[0;1;36m '__gcd'[0m [0;32m'long long (long long, long long)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x7184158[0m[0;1;36m '__gcd'[0m)
[0;34m  |           |     |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x7374d20[0m <[0;33mcol:25[0m, [0;33mcol:31[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |     |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7374d08[0m <[0;33mcol:25[0m> [0;32m'long long (*)(long long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |     |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7374ce8[0m <[0;33mcol:25[0m> [0;32m'long long (long long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67a3f78[0m[0;1;36m 'abs'[0m [0;32m'long long (long long)'[0m
[0;34m  |           |     |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7374d48[0m <[0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |     |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7374cc8[0m <[0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |           |     |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x7374e28[0m <[0;33mcol:34[0m, [0;33mcol:40[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |     |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7374e10[0m <[0;33mcol:34[0m> [0;32m'long long (*)(long long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |     |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7374df0[0m <[0;33mcol:34[0m> [0;32m'long long (long long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67a3f78[0m[0;1;36m 'abs'[0m [0;32m'long long (long long)'[0m
[0;34m  |           |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7374e50[0m <[0;33mcol:38[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7374dd0[0m <[0;33mcol:38[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |           |     `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7392e18[0m <[0;33mline:74:11[0m, [0;33mcol:39[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7392de0[0m <[0;33mcol:11[0m, [0;33mcol:39[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7392dc8[0m <[0;33mcol:15[0m> [0;32m'std::pair<long long, long long> &(*)(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7392d48[0m <[0;33mcol:15[0m> [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x727b638[0m[0;1;36m 'operator='[0m [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m
[0;34m  |           |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73752e8[0m <[0;33mcol:11[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72442d0[0m[0;1;36m 'tmp'[0m [0;32m'pi':'std::pair<long long, long long>'[0m
[0;34m  |           |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x738fff0[0m <[0;33mcol:17[0m, [0;33mcol:39[0m> [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<long long>::__type>':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x738df70[0m <[0;33mcol:17[0m, [0;33mcol:39[0m> [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<long long>::__type>':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x738df58[0m <[0;33mcol:17[0m> [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<long long>::__type> (*)(long long &&, long long &&)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7375a50[0m <[0;33mcol:17[0m> [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<long long>::__type> (long long &&, long long &&)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x7375930[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<long long>::__type, typename __decay_and_strip<long long>::__type> (long long &&, long long &&)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x62701c0[0m[0;1;36m 'make_pair'[0m)
[0;34m  |           |             |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x738dfa0[0m <[0;33mcol:27[0m, [0;33mcol:30[0m> [0;32m'long long':'long long'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           |             | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x73753c0[0m <[0;33mcol:27[0m, [0;33mcol:30[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |           |             |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7375390[0m <[0;33mcol:27[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |             |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7375350[0m <[0;33mcol:27[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243ae8[0m[0;1;36m 'vx'[0m [0;32m'li':'long long'[0m
[0;34m  |           |             |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73753a8[0m <[0;33mcol:30[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |             |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7375370[0m <[0;33mcol:30[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7374ba8[0m[0;1;36m 'gc'[0m [0;32m'li':'long long'[0m
[0;34m  |           |             `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x738dfb8[0m <[0;33mcol:34[0m, [0;33mcol:37[0m> [0;32m'long long':'long long'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           |               `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7375450[0m <[0;33mcol:34[0m, [0;33mcol:37[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |           |                 |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7375420[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |                 | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73753e0[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7243bf0[0m[0;1;36m 'vy'[0m [0;32m'li':'long long'[0m
[0;34m  |           |                 `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7375438[0m <[0;33mcol:37[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |                   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7375400[0m <[0;33mcol:37[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7374ba8[0m[0;1;36m 'gc'[0m [0;32m'li':'long long'[0m
[0;34m  |           `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7393e58[0m <[0;33mline:76:9[0m, [0;33mcol:23[0m> [0;32m'std::pair<iterator, bool>':'std::pair<std::_Rb_tree_const_iterator<std::pair<long long, long long> >, bool>'[0m[0;36m[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7393e28[0m <[0;33mcol:9[0m, [0;33mcol:13[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .insert[0;33m 0x7237f80[0m
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7392ea0[0m <[0;33mcol:9[0m> [0;32m'set<pi>':'std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x720a860[0m[0;1;36m 'dir'[0m [0;32m'set<pi>':'std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >'[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73ec1b8[0m <[0;33mcol:20[0m> [0;32m'const pi':'const std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7392f40[0m <[0;33mcol:20[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x72442d0[0m[0;1;36m 'tmp'[0m [0;32m'pi':'std::pair<long long, long long>'[0m
[0;34m  `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7402300[0m <[0;33mline:86:3[0m, [0;33mcol:56[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74022e8[0m <[0;33mcol:53[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7402268[0m <[0;33mcol:53[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6ff6868[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x74018c0[0m <[0;33mcol:3[0m, [0;33mcol:51[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x74018a8[0m <[0;33mcol:39[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(unsigned long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7401828[0m <[0;33mcol:39[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(unsigned long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6ff7108[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(unsigned long)'[0m
[0;34m    | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x73ff928[0m <[0;33mcol:3[0m, [0;33mcol:34[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73ff910[0m <[0;33mcol:31[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73ff8f0[0m <[0;33mcol:31[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6fbfd48[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x73fdca0[0m <[0;33mcol:3[0m, [0;33mcol:23[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73fdc88[0m <[0;33mcol:20[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(long long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73fdc10[0m <[0;33mcol:20[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(long long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6ff7b28[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(long long)'[0m
[0;34m    | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x73fbd60[0m <[0;33mcol:3[0m, [0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73fbd48[0m <[0;33mcol:8[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73fbcc8[0m <[0;33mcol:8[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6fbfd48[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73ec2c0[0m <[0;33mcol:3[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x70ba5a0[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m    | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73fbcb0[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x73ec2e0[0m <[0;33mcol:11[0m> [0;32m'const char [7]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #"[0m
[0;34m    | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73fdbf8[0m <[0;33mcol:23[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73fbd98[0m <[0;33mcol:23[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x72048e0[0m[0;1;36m 'casenum'[0m [0;32m'li':'long long'[0m
[0;34m    | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73ff8d8[0m <[0;33mcol:34[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x73fdcd8[0m <[0;33mcol:34[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ": "[0m
[0;34m    | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x73ff9b0[0m <[0;33mcol:42[0m, [0;33mcol:51[0m> [0;32m'std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m    |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x73ff980[0m <[0;33mcol:42[0m, [0;33mcol:46[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x72328d0[0m
[0;34m    |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x73ff9d0[0m <[0;33mcol:42[0m> [0;32m'const std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x73ff960[0m <[0;33mcol:42[0m> [0;32m'set<pi>':'std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x720a860[0m[0;1;36m 'dir'[0m [0;32m'set<pi>':'std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >'[0m
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7402250[0m <[0;33mcol:56[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7402228[0m <[0;33mcol:56[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ffaf48[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6fa8b18[0m[0;1;36m 'endl'[0m)

Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x4c6a508[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x4c6a478[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x527a480[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5518518[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5518678[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x5518708[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5518818[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5518740[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5518970[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x55188e0[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x5518a70[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x5518368 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5518b48[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x5518b48
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5518c58[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5518cf8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x5518cf8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5518e08[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x581c5d8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:13[0m[0;1;36m remainder[0m [0;32m'double (double, double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x581c4b0[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x581c530[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x581c688[0m <[0;33mcol:13[0m> Implicit

Dumping __remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x581c808[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:123:1[0m[0;1;36m __remainder[0m [0;32m'double (double, double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x581c6e0[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x581c760[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'double'[0m

Dumping remainderf:
[0;1;32mFunctionDecl[0m[0;33m 0x585b748[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:342:1[0m[0;1;36m remainderf[0m [0;32m'float (float, float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x585b620[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x585b6a0[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x585b7f8[0m <[0;33m<scratch space>:342:1[0m> Implicit

Dumping __remainderf:
[0;1;32mFunctionDecl[0m[0;33m 0x585b978[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:344:1[0m[0;1;36m __remainderf[0m [0;32m'float (float, float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x585b850[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x585b8d0[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'float'[0m

Dumping remainderl:
[0;1;32mFunctionDecl[0m[0;33m 0x5890618[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:225:1[0m[0;1;36m remainderl[0m [0;32m'long double (long double, long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58904f0[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5890570[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x58906c8[0m <[0;33m<scratch space>:225:1[0m> Implicit

Dumping __remainderl:
[0;1;32mFunctionDecl[0m[0;33m 0x5890848[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:227:1[0m[0;1;36m __remainderl[0m [0;32m'long double (long double, long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5890720[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58907a0[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'long double'[0m

Dumping remainderf32:
[0;1;32mFunctionDecl[0m[0;33m 0x58c9818[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:80:1[0m[0;1;36m remainderf32[0m [0;32m'_Float32 (_Float32, _Float32) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58c9700[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32':'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58c9778[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32':'float'[0m

Dumping __remainderf32:
[0;1;32mFunctionDecl[0m[0;33m 0x58c99f0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:82:1[0m[0;1;36m __remainderf32[0m [0;32m'_Float32 (_Float32, _Float32) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58c98d8[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32':'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58c9950[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32':'float'[0m

Dumping remainderf64:
[0;1;32mFunctionDecl[0m[0;33m 0x5903518[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:332:1[0m[0;1;36m remainderf64[0m [0;32m'_Float64 (_Float64, _Float64) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5903400[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5903478[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64':'double'[0m

Dumping __remainderf64:
[0;1;32mFunctionDecl[0m[0;33m 0x59036f0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:334:1[0m[0;1;36m __remainderf64[0m [0;32m'_Float64 (_Float64, _Float64) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59035d8[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5903650[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64':'double'[0m

Dumping remainderf32x:
[0;1;32mFunctionDecl[0m[0;33m 0x5931518[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:214:1[0m[0;1;36m remainderf32x[0m [0;32m'_Float32x (_Float32x, _Float32x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5931400[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32x':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5931478[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32x':'double'[0m

Dumping __remainderf32x:
[0;1;32mFunctionDecl[0m[0;33m 0x595a6d8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:216:1[0m[0;1;36m __remainderf32x[0m [0;32m'_Float32x (_Float32x, _Float32x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x595a5c0[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32x':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x595a638[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32x':'double'[0m

Dumping remainderf64x:
[0;1;32mFunctionDecl[0m[0;33m 0x59753c0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:122:1[0m[0;1;36m remainderf64x[0m [0;32m'_Float64x (_Float64x, _Float64x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59752a8[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64x':'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5975320[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64x':'long double'[0m

Dumping __remainderf64x:
[0;1;32mFunctionDecl[0m[0;33m 0x5975598[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:124:1[0m[0;1;36m __remainderf64x[0m [0;32m'_Float64x (_Float64x, _Float64x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5975480[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64x':'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59754f8[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64x':'long double'[0m

Dumping std::remainder:
[0;1;32mUsingDecl[0m[0;33m 0x59c1968[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1194:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainder

Dumping std::remainder:
[0;1;32mUsingShadowDecl[0m[0;33m 0x59c19c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1194:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x581c5d8[0m[0;1;36m 'remainder'[0m [0;32m'double (double, double) throw()'[0m

Dumping std::remainderf:
[0;1;32mUsingDecl[0m[0;33m 0x59c1a18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1195:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainderf

Dumping std::remainderf:
[0;1;32mUsingShadowDecl[0m[0;33m 0x59c1a70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1195:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x585b748[0m[0;1;36m 'remainderf'[0m [0;32m'float (float, float) throw()'[0m

Dumping std::remainderl:
[0;1;32mUsingDecl[0m[0;33m 0x59c1ac8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1196:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainderl

Dumping std::remainderl:
[0;1;32mUsingShadowDecl[0m[0;33m 0x59c1b20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1196:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5890618[0m[0;1;36m 'remainderl'[0m [0;32m'long double (long double, long double) throw()'[0m

Dumping std::remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x59e8f10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1712:3[0m, [0;33mline:1714:44[0m> [0;33mline:1713:3[0m constexpr[0;1;36m remainder[0m [0;32m'float (float, float)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59e8df0[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m __x[0m [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59e8e70[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m used[0;1;36m __y[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x59e92b8[0m <[0;33mline:1714:3[0m, [0;33mcol:44[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x59e92a8[0m <[0;33mcol:5[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x59e9248[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x59e9230[0m <[0;33mcol:12[0m> [0;32m'float (*)(float, float) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59e91d0[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x59e9010[0m[0;1;36m '__builtin_remainderf'[0m [0;32m'float (float, float) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x59e9278[0m <[0;33mcol:33[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59e91f0[0m <[0;33mcol:33[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x59e8df0[0m[0;1;36m '__x'[0m [0;32m'float'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x59e9290[0m <[0;33mcol:38[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59e9210[0m <[0;33mcol:38[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x59e8e70[0m[0;1;36m '__y'[0m [0;32m'float'[0m

Dumping std::remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x59e9408[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1716:3[0m, [0;33mline:1718:44[0m> [0;33mline:1717:3[0m constexpr[0;1;36m remainder[0m [0;32m'long double (long double, long double)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59e92e8[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59e9368[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;33mcol:42[0m used[0;1;36m __y[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x59e97b0[0m <[0;33mline:1718:3[0m, [0;33mcol:44[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x59e97a0[0m <[0;33mcol:5[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x59e9740[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x59e9728[0m <[0;33mcol:12[0m> [0;32m'long double (*)(long double, long double) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59e96c8[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x59e9508[0m[0;1;36m '__builtin_remainderl'[0m [0;32m'long double (long double, long double) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x59e9770[0m <[0;33mcol:33[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59e96e8[0m <[0;33mcol:33[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x59e92e8[0m[0;1;36m '__x'[0m [0;32m'long double'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x59e9788[0m <[0;33mcol:38[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59e9708[0m <[0;33mcol:38[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x59e9368[0m[0;1;36m '__y'[0m [0;32m'long double'[0m

Dumping std::remainder:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x59ea018[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1722:3[0m, [0;33mline:1728:5[0m> [0;33mline:1724:5[0m[0;1;36m remainder[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x59e97c8[0m <[0;33mline:1722:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x59e9838[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x59e9f78[0m <[0;33mline:1723:5[0m, [0;33mline:1728:5[0m> [0;33mline:1724:5[0m constexpr[0;1;36m remainder[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59e9e20[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __x[0m [0;32m'_Tp'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x59e9e98[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __y[0m [0;32m'_Up'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x59ea7c0[0m <[0;33mline:1725:5[0m, [0;33mline:1728:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x59ea638[0m <[0;33mline:1726:7[0m, [0;33mcol:71[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x59ea5e0[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m __type[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x59ea570[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m dependent
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x59ea7b0[0m <[0;33mline:1727:7[0m, [0;33mcol:48[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x59ea780[0m <[0;33mcol:14[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x59ea650[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'remainder'[0;33m 0x59ea018[0m[0;33m 0x59e9408[0m[0;33m 0x59e8f10[0m[0;33m 0x59c19c0[0m
[0;34m        |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x59ea700[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m[0;36m[0m[0;36m[0m [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59ea6e0[0m <[0;33mcol:31[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x59e9e20[0m[0;1;36m '__x'[0m [0;32m'_Tp'[0m
[0;34m        `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x59ea758[0m <[0;33mcol:37[0m, [0;33mcol:47[0m> [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m[0;36m[0m[0;36m[0m [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x59ea738[0m <[0;33mcol:44[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x59e9e98[0m[0;1;36m '__y'[0m [0;32m'_Up'[0m

Dumping std::errc::argument_out_of_domain:
[0;1;32mEnumConstantDecl[0m[0;33m 0x5a2aa00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m[0;1;36m argument_out_of_domain[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x5a2a9e0[0m <[0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5a2a9c0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x5a8e1d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:54:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a8e2a8[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a8e278[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a8e238[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5a8dc70[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a8e290[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a8e258[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a8de08[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x5a8fd50[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:88:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5a8fe28[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a8fdf8[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a8fdb8[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5a8f7f0[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a8fe10[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a8fdd8[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5a8f988[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remainder:
[0;1;32mVarDecl[0m[0;33m 0x5d830b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:297:7[0m, [0;33mcol:35[0m> [0;33mcol:21[0m referenced[0;1;36m __remainder[0m [0;32m'_DistanceType':'typename std::iterator_traits<_RandomAccessIter>::difference_type'[0m cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d83118[0m <[0;33mcol:35[0m> [0;32m'_Integer'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5d81d40[0m[0;1;36m '__count'[0m [0;32m'_Integer'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x60159b8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/amylase/1460488_1285485_amylase.cpp:90:1[0m, [0;33mline:96:1[0m> [0;33mline:90:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6016960[0m <[0;33mcol:11[0m, [0;33mline:96:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6015ad0[0m <[0;33mline:91:3[0m, [0;33mcol:7[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6015a68[0m <[0;33mcol:3[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m t[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6016570[0m <[0;33mline:92:3[0m, [0;33mcol:10[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6016558[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6016538[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5bec448[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6015ae8[0m <[0;33mcol:3[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5ccd6a8[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6015b08[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6015a68[0m[0;1;36m 't'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x60168f8[0m <[0;33mline:22:25[0m, [0;33mline:93:22[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6016658[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60165b8[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:93:7[0m used[0;1;36m i[0m [0;32m'li':'long long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6016640[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6016620[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6016738[0m <[0;33mline:93:7[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6016720[0m <[0;33mline:93:7[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6016670[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60165b8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6016700[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x60166d8[0m <[0;33mcol:39[0m, [0;33mline:93:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60166c0[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6016690[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6015a68[0m[0;1;36m 't'[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6016778[0m <[0;33mcol:7[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6016758[0m <[0;33mline:93:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60165b8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x60168d0[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60168b8[0m <[0;33mcol:13[0m> [0;32m'void (*)(li)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6016868[0m <[0;33mcol:13[0m> [0;32m'void (li)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e17c38[0m[0;1;36m 'solve'[0m [0;32m'void (li)'[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6016848[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6016818[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60167d8[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60165b8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6016830[0m <[0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60167f8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6016950[0m <[0;33mline:95:3[0m, [0;33mcol:10[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6016930[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

