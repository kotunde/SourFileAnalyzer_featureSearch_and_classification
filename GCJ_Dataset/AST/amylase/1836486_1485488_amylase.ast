Dumping std::bit_and:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635ab80[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:601:3[0m, [0;33mline:602:12[0m> [0;33mcol:12[0m[0;1;36m bit_and[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635aa68[0m <[0;33mline:601:12[0m, [0;33mcol:27[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635aaf0[0m <[0;33mline:602:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m bit_and[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x635d0f8[0m[0;1;36m 'bit_and'[0m

Dumping std::bit_or:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635ae90[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:604:3[0m, [0;33mline:605:12[0m> [0;33mcol:12[0m[0;1;36m bit_or[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635ad78[0m <[0;33mline:604:12[0m, [0;33mcol:27[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635ae00[0m <[0;33mline:605:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m bit_or[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x635e110[0m[0;1;36m 'bit_or'[0m

Dumping std::bit_xor:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635b1a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:607:3[0m, [0;33mline:608:12[0m> [0;33mcol:12[0m[0;1;36m bit_xor[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635b088[0m <[0;33mline:607:12[0m, [0;33mcol:27[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635b110[0m <[0;33mline:608:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m bit_xor[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6361b10[0m[0;1;36m 'bit_xor'[0m

Dumping std::bit_not:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635b4b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:610:3[0m, [0;33mline:611:12[0m> [0;33mcol:12[0m[0;1;36m bit_not[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635b398[0m <[0;33mline:610:12[0m, [0;33mcol:27[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635b420[0m <[0;33mline:611:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m struct[0;1;36m bit_not[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6362b20[0m[0;1;36m 'bit_not'[0m

Dumping std::bit_and:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635b7b0[0m prev 0x635ab80 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:616:3[0m, [0;33mline:623:5[0m> [0;33mline:617:12[0m[0;1;36m bit_and[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635b698[0m <[0;33mline:616:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0minherited from [0;1;32mTemplateTypeParm[0m[0;33m 0x635aa68[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635b720[0m prev 0x635aaf0 <[0;33mline:617:5[0m, [0;33mline:623:5[0m> [0;33mline:617:12[0m struct[0;1;36m bit_and[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'binary_function<_Tp, _Tp, _Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635b9a0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_and[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635bbe8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:622:27[0m> [0;33mline:621:7[0m constexpr[0;1;36m operator()[0m [0;32m'_Tp (const _Tp &, const _Tp &) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ba68[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635bae0[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __y[0m [0;32m'const _Tp &'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635bd48[0m <[0;33mline:622:7[0m, [0;33mcol:27[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635bd38[0m <[0;33mcol:9[0m, [0;33mcol:22[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635bd18[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&'
[0;34m|         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635bcd8[0m <[0;33mcol:16[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ba68[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635bcf8[0m <[0;33mcol:22[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635bae0[0m[0;1;36m '__y'[0m [0;32m'const _Tp &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x635d0f8[0m[0;1;36m 'bit_and'[0m

Dumping std::bit_or:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635be80[0m prev 0x635ae90 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:625:3[0m, [0;33mline:632:5[0m> [0;33mline:626:12[0m[0;1;36m bit_or[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635bd60[0m <[0;33mline:625:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0minherited from [0;1;32mTemplateTypeParm[0m[0;33m 0x635ad78[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635bdf0[0m prev 0x635ae00 <[0;33mline:626:5[0m, [0;33mline:632:5[0m> [0;33mline:626:12[0m struct[0;1;36m bit_or[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'binary_function<_Tp, _Tp, _Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635c070[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_or[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635c2b8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:631:27[0m> [0;33mline:630:7[0m constexpr[0;1;36m operator()[0m [0;32m'_Tp (const _Tp &, const _Tp &) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c138[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c1b0[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __y[0m [0;32m'const _Tp &'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635c418[0m <[0;33mline:631:7[0m, [0;33mcol:27[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635c408[0m <[0;33mcol:9[0m, [0;33mcol:22[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635c3e8[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '|'
[0;34m|         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c3a8[0m <[0;33mcol:16[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c138[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635c3c8[0m <[0;33mcol:22[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c1b0[0m[0;1;36m '__y'[0m [0;32m'const _Tp &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x635e110[0m[0;1;36m 'bit_or'[0m

Dumping std::bit_xor:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635c550[0m prev 0x635b1a0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:634:3[0m, [0;33mline:641:5[0m> [0;33mline:635:12[0m[0;1;36m bit_xor[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635c430[0m <[0;33mline:634:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0minherited from [0;1;32mTemplateTypeParm[0m[0;33m 0x635b088[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635c4c0[0m prev 0x635b110 <[0;33mline:635:5[0m, [0;33mline:641:5[0m> [0;33mline:635:12[0m struct[0;1;36m bit_xor[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'binary_function<_Tp, _Tp, _Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635c740[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_xor[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635c988[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:640:27[0m> [0;33mline:639:7[0m constexpr[0;1;36m operator()[0m [0;32m'_Tp (const _Tp &, const _Tp &) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c808[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635c880[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;33mcol:45[0m referenced[0;1;36m __y[0m [0;32m'const _Tp &'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635cae8[0m <[0;33mline:640:7[0m, [0;33mcol:27[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635cad8[0m <[0;33mcol:9[0m, [0;33mcol:22[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635cab8[0m <[0;33mcol:16[0m, [0;33mcol:22[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '^'
[0;34m|         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635ca78[0m <[0;33mcol:16[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c808[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635ca98[0m <[0;33mcol:22[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635c880[0m[0;1;36m '__y'[0m [0;32m'const _Tp &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6361b10[0m[0;1;36m 'bit_xor'[0m

Dumping std::bit_not:
[0;1;32mClassTemplateDecl[0m[0;33m 0x635cc20[0m prev 0x635b4b0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:643:3[0m, [0;33mline:650:5[0m> [0;33mline:644:12[0m[0;1;36m bit_not[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635cb00[0m <[0;33mline:643:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|   `-[0minherited from [0;1;32mTemplateTypeParm[0m[0;33m 0x635b398[0m[0;1;36m '_Tp'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635cb90[0m prev 0x635b420 <[0;33mline:644:5[0m, [0;33mline:650:5[0m> [0;33mline:644:12[0m struct[0;1;36m bit_not[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'unary_function<_Tp, _Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635cdd0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_not[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635cf88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:649:22[0m> [0;33mline:648:7[0m constexpr[0;1;36m operator()[0m [0;32m'_Tp (const _Tp &) const'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635ce98[0m <[0;33mcol:18[0m, [0;33mcol:29[0m> [0;33mcol:29[0m referenced[0;1;36m __x[0m [0;32m'const _Tp &'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635d0c0[0m <[0;33mline:649:7[0m, [0;33mcol:22[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635d0b0[0m <[0;33mcol:9[0m, [0;33mcol:17[0m>
[0;34m|       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x635d098[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '~' cannot overflow
[0;34m|         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635d078[0m <[0;33mcol:17[0m> [0;32m'const _Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635ce98[0m[0;1;36m '__x'[0m [0;32m'const _Tp &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6362b20[0m[0;1;36m 'bit_not'[0m

Dumping std::bit_and:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x635d0f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:653:3[0m, [0;33mline:665:5[0m> [0;33mline:654:12[0m struct[0;1;36m bit_and[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635d318[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_and[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x635da50[0m <[0;33mline:656:7[0m, [0;33mline:662:60[0m> [0;33mline:659:2[0m[0;1;36m operator()[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635d3a8[0m <[0;33mline:656:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635d418[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x635d9b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:662:60[0m> [0;33mline:659:2[0m constexpr[0;1;36m operator()[0m [0;32m'auto (_Tp &&, _Up &&) const noexcept(noexcept(std::forward<_Tp>(__t) & std::forward<_Up>(__u))) -> decltype(std::forward<_Tp>(__t) & std::forward<_Up>(__u))'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d4e8[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x635d588[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __u[0m [0;32m'_Up &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x635e0d8[0m <[0;33mline:662:2[0m, [0;33mcol:60[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x635e0c8[0m <[0;33mcol:4[0m, [0;33mcol:57[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x635e0a8[0m <[0;33mcol:11[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '&'
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x635df60[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635deb0[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x61fa7d0[0m[0;33m 0x61fac90[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635df40[0m <[0;33mcol:29[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635d4e8[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x635e080[0m <[0;33mcol:36[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x635dfd0[0m <[0;33mcol:36[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x61fa7d0[0m[0;33m 0x61fac90[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x635e060[0m <[0;33mcol:54[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x635d588[0m[0;1;36m '__u'[0m [0;32m'_Up &&'[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x635dac8[0m <[0;33mline:664:7[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m is_transparent[0m [0;32m'std::__is_transparent'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x63345a0[0m [0;32m'std::__is_transparent'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x6334510[0m[0;1;36m '__is_transparent'[0m

Dumping std::bit_or:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x635e110[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:667:3[0m, [0;33mline:679:5[0m> [0;33mline:668:12[0m struct[0;1;36m bit_or[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x635e328[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_or[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6361450[0m <[0;33mline:670:7[0m, [0;33mline:676:60[0m> [0;33mline:673:2[0m[0;1;36m operator()[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635e3b8[0m <[0;33mline:670:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x635e428[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x63613b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:676:60[0m> [0;33mline:673:2[0m constexpr[0;1;36m operator()[0m [0;32m'auto (_Tp &&, _Up &&) const noexcept(noexcept(std::forward<_Tp>(__t) | std::forward<_Up>(__u))) -> decltype(std::forward<_Tp>(__t) | std::forward<_Up>(__u))'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6360ee8[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6360f88[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __u[0m [0;32m'_Up &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6361ad8[0m <[0;33mline:676:2[0m, [0;33mcol:60[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6361ac8[0m <[0;33mcol:4[0m, [0;33mcol:57[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6361aa8[0m <[0;33mcol:11[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '|'
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x6361960[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63618b0[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x61fa7d0[0m[0;33m 0x61fac90[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6361940[0m <[0;33mcol:29[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6360ee8[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6361a80[0m <[0;33mcol:36[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63619d0[0m <[0;33mcol:36[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x61fa7d0[0m[0;33m 0x61fac90[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6361a60[0m <[0;33mcol:54[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6360f88[0m[0;1;36m '__u'[0m [0;32m'_Up &&'[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x63614c8[0m <[0;33mline:678:7[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m is_transparent[0m [0;32m'std::__is_transparent'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x63345a0[0m [0;32m'std::__is_transparent'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x6334510[0m[0;1;36m '__is_transparent'[0m

Dumping std::bit_xor:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6361b10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:681:3[0m, [0;33mline:693:5[0m> [0;33mline:682:12[0m struct[0;1;36m bit_xor[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6361d28[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_xor[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6362460[0m <[0;33mline:684:7[0m, [0;33mline:690:60[0m> [0;33mline:687:2[0m[0;1;36m operator()[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6361db8[0m <[0;33mline:684:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6361e28[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;33mcol:40[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x63623c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:690:60[0m> [0;33mline:687:2[0m constexpr[0;1;36m operator()[0m [0;32m'auto (_Tp &&, _Up &&) const noexcept(noexcept(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u))) -> decltype(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u))'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6361ef8[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6361f98[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m referenced[0;1;36m __u[0m [0;32m'_Up &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6362ae8[0m <[0;33mline:690:2[0m, [0;33mcol:60[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6362ad8[0m <[0;33mcol:4[0m, [0;33mcol:57[0m>
[0;34m|       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6362ab8[0m <[0;33mcol:11[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '^'
[0;34m|         |-[0m[0;1;35mCallExpr[0m[0;33m 0x6362970[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|         | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63628c0[0m <[0;33mcol:11[0m, [0;33mcol:27[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x61fa7d0[0m[0;33m 0x61fac90[0m
[0;34m|         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6362950[0m <[0;33mcol:29[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6361ef8[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x6362a90[0m <[0;33mcol:36[0m, [0;33mcol:57[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63629e0[0m <[0;33mcol:36[0m, [0;33mcol:52[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x61fa7d0[0m[0;33m 0x61fac90[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6362a70[0m <[0;33mcol:54[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6361f98[0m[0;1;36m '__u'[0m [0;32m'_Up &&'[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x63624d8[0m <[0;33mline:692:7[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m is_transparent[0m [0;32m'std::__is_transparent'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x63345a0[0m [0;32m'std::__is_transparent'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x6334510[0m[0;1;36m '__is_transparent'[0m

Dumping std::bit_not:
[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6362b20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:695:3[0m, [0;33mline:707:5[0m> [0;33mline:696:12[0m struct[0;1;36m bit_not[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6362d38[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m bit_not[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6363200[0m <[0;33mline:698:7[0m, [0;33mline:704:36[0m> [0;33mline:701:2[0m[0;1;36m operator()[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6362dc8[0m <[0;33mline:698:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6363160[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:111:32[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_function.h:704:36[0m> [0;33mline:701:2[0m constexpr[0;1;36m operator()[0m [0;32m'auto (_Tp &&) const noexcept(noexcept(~std::forward<_Tp>(__t))) -> decltype(~std::forward<_Tp>(__t))'[0m
[0;34m|   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6362e88[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __t[0m [0;32m'_Tp &&'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6363630[0m <[0;33mline:704:2[0m, [0;33mcol:36[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6363620[0m <[0;33mcol:4[0m, [0;33mcol:33[0m>
[0;34m|       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6363608[0m <[0;33mcol:11[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '~' cannot overflow
[0;34m|         `-[0m[0;1;35mCallExpr[0m[0;33m 0x63635e0[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|           |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6363530[0m <[0;33mcol:12[0m, [0;33mcol:28[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = 'forward'[0;33m 0x61fa7d0[0m[0;33m 0x61fac90[0m
[0;34m|           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x63635c0[0m <[0;33mcol:30[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6362e88[0m[0;1;36m '__t'[0m [0;32m'_Tp &&'[0m
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6363270[0m <[0;33mline:706:7[0m, [0;33mcol:32[0m> [0;33mcol:32[0m[0;1;36m is_transparent[0m [0;32m'std::__is_transparent'[0m
[0;34m  `-[0m[0;32mRecordType[0m[0;33m 0x63345a0[0m [0;32m'std::__is_transparent'[0m
[0;34m    `-[0m[0;1;32mCXXRecord[0m[0;33m 0x6334510[0m[0;1;36m '__is_transparent'[0m

Dumping (anonymous struct)::__bits:
[0;1;32mFieldDecl[0m[0;33m 0x6602878[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/cpu-set.h:41:3[0m, [0;33mcol:47[0m> [0;33mcol:14[0m[0;1;36m __bits[0m [0;32m'__cpu_mask [16]'[0m

Dumping (anonymous struct)::fds_bits:
[0;1;32mFieldDecl[0m[0;33m 0x6737d28[0m <[0;33m/usr/include/x86_64-linux-gnu/sys/select.h:64:5[0m, [0;33mcol:48[0m> [0;33mcol:15[0m[0;1;36m fds_bits[0m [0;32m'__fd_mask [16]'[0m

Dumping std::_S_word_bit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6b19e28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:10[0m, [0;33mcol:60[0m> [0;33mcol:10[0m referenced[0;1;36m _S_word_bit[0m [0;32m'std::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:3)'[0m
[0;34m`-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b19e78[0m <[0;33mcol:24[0m, [0;33mcol:60[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6b19e08[0m <[0;33mcol:24[0m, [0;33mcol:60[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 64[0m
[0;34m    `-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x6b19de0[0m <[0;33mcol:24[0m, [0;33mcol:60[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m functional cast to int <NoOp>
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b19dc8[0m <[0;33m<built-in>:71:22[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:59[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m        `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b19da8[0m <[0;33m<built-in>:71:22[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:59[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '*'
[0;34m          |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b19d90[0m <[0;33m<built-in>:71:22[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m          | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6b19d18[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 8[0m
[0;34m          `-[0m[0;1;35mUnaryExprOrTypeTraitExpr[0m[0;33m 0x6b19d70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:43[0m, [0;33mcol:59[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m sizeof [0;32m'std::_Bit_type':'unsigned long'[0m

Dumping _S_word_bit:
[0;1;32mUsingDecl[0m[0;33m 0x6b981a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/vector.tcc:873:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m std::_S_word_bit

Dumping __extrabits:
[0;1;32mVarDecl[0m[0;33m 0x6b98878[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/vector.tcc:883:7[0m, [0;33mcol:47[0m> [0;33mcol:20[0m referenced[0;1;36m __extrabits[0m [0;32m'const std::size_t':'const unsigned long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b98990[0m <[0;33mcol:34[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '%'
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6b98948[0m <[0;33mcol:34[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x6b98900[0m <[0;33mcol:34[0m, [0;33mcol:38[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .size
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b988e0[0m <[0;33mcol:34[0m> [0;32m'const std::vector<bool, _Alloc>':'const vector<bool, _Alloc>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6b97f28[0m[0;1;36m '__b'[0m [0;32m'const std::vector<bool, _Alloc> &'[0m
[0;34m  `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b98968[0m <[0;33mcol:47[0m> [0;32m'std::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:3)'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6b19e28[0m[0;1;36m '_S_word_bit'[0m [0;32m'std::(anonymous enum at /usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_bvector.h:68:3)'[0m ([0;1;32mUsingShadow[0m[0;33m 0x6b98200[0m[0;1;36m '_S_word_bit'[0m)

Dumping __signbit:
[0;1;32mFunctionDecl[0m[0;33m 0x6bbff18[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32[0m> [0;33mline:25:20[0m[0;1;36m __signbit[0m [0;32m'int (double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6bbfe78[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43[0m> [0;33mcol:43[0m[0;1;36m __value[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;34mConstAttr[0m[0;33m 0x6bbffc0[0m <[0;33mline:26:22[0m>

Dumping __signbitf:
[0;1;32mFunctionDecl[0m[0;33m 0x6be0318[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32[0m> [0;33m<scratch space>:152:1[0m[0;1;36m __signbitf[0m [0;32m'int (float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6be0278[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43[0m> [0;33mcol:43[0m[0;1;36m __value[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;34mConstAttr[0m[0;33m 0x6be03c0[0m <[0;33mline:26:22[0m>

Dumping __signbitl:
[0;1;32mFunctionDecl[0m[0;33m 0x6c3f7f8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:26:32[0m> [0;33m<scratch space>:35:1[0m[0;1;36m __signbitl[0m [0;32m'int (long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6c3f758[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:25:43[0m> [0;33mcol:43[0m[0;1;36m __value[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;34mConstAttr[0m[0;33m 0x6c3f8a0[0m <[0;33mline:26:22[0m>

Dumping std::signbit:
[0;1;32mFunctionDecl[0m[0;33m 0x6d6e338[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:667:3[0m, [0;33mline:669:36[0m> [0;33mline:668:3[0m constexpr[0;1;36m signbit[0m [0;32m'bool (float)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d6e2a8[0m <[0;33mcol:11[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m __x[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d6e5f8[0m <[0;33mline:669:3[0m, [0;33mcol:36[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6d6e5e8[0m <[0;33mcol:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6e5d0[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6d6e578[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6e560[0m <[0;33mcol:12[0m> [0;32m'int (*)(...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d6e520[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d6e430[0m[0;1;36m '__builtin_signbit'[0m [0;32m'int (...) noexcept'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6e5a0[0m <[0;33mcol:30[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d6e540[0m <[0;33mcol:30[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d6e2a8[0m[0;1;36m '__x'[0m [0;32m'float'[0m

Dumping std::signbit:
[0;1;32mFunctionDecl[0m[0;33m 0x6d6e6b8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:671:3[0m, [0;33mline:673:36[0m> [0;33mline:672:3[0m constexpr[0;1;36m signbit[0m [0;32m'bool (double)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d6e628[0m <[0;33mcol:11[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m __x[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d6e820[0m <[0;33mline:673:3[0m, [0;33mcol:36[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6d6e810[0m <[0;33mcol:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6e7f8[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6d6e7b8[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6e7a0[0m <[0;33mcol:12[0m> [0;32m'int (*)(...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d6e760[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d6e430[0m[0;1;36m '__builtin_signbit'[0m [0;32m'int (...) noexcept'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6e7e0[0m <[0;33mcol:30[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d6e780[0m <[0;33mcol:30[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d6e628[0m[0;1;36m '__x'[0m [0;32m'double'[0m

Dumping std::signbit:
[0;1;32mFunctionDecl[0m[0;33m 0x6d6e8e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:675:3[0m, [0;33mline:677:36[0m> [0;33mline:676:3[0m constexpr[0;1;36m signbit[0m [0;32m'bool (long double)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d6e850[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d6ea48[0m <[0;33mline:677:3[0m, [0;33mcol:36[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6d6ea38[0m <[0;33mcol:5[0m, [0;33mcol:33[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6ea20[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6d6e9e0[0m <[0;33mcol:12[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6e9c8[0m <[0;33mcol:12[0m> [0;32m'int (*)(...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d6e988[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6d6e430[0m[0;1;36m '__builtin_signbit'[0m [0;32m'int (...) noexcept'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d6ea08[0m <[0;33mcol:30[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d6e9a8[0m <[0;33mcol:30[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d6e850[0m[0;1;36m '__x'[0m [0;32m'long double'[0m

Dumping std::signbit:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6d6eed8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:681:3[0m, [0;33mline:685:38[0m> [0;33mline:684:5[0m[0;1;36m signbit[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6d6ea60[0m <[0;33mline:681:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6d6ee38[0m <[0;33mline:682:5[0m, [0;33mline:685:38[0m> [0;33mline:684:5[0m constexpr[0;1;36m signbit[0m [0;32m'typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, bool>::__type (_Tp)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6d6ed60[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m __x[0m [0;32m'_Tp'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6d6f0f8[0m <[0;33mline:685:5[0m, [0;33mcol:38[0m>
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6d6f0e8[0m <[0;33mcol:7[0m, [0;33mcol:31[0m>
[0;34m      `-[0m[0;1;35mConditionalOperator[0m[0;33m 0x6d6f0b8[0m <[0;33mcol:14[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6d6f060[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6d6ef78[0m <[0;33mcol:18[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'operator<'[0;33m 0x623ba18[0m[0;33m 0x6260718[0m[0;33m 0x6262c88[0m[0;33m 0x6287198[0m[0;33m 0x6287808[0m[0;33m 0x6419418[0m[0;33m 0x6721840[0m[0;33m 0x6721f78[0m[0;33m 0x67226b8[0m[0;33m 0x68e5318[0m[0;33m 0x69b01c8[0m[0;33m 0x69e4128[0m[0;33m 0x69fd758[0m[0;33m 0x6a13a38[0m[0;33m 0x6a2bd28[0m[0;33m 0x6a614e0[0m[0;33m 0x6a62300[0m[0;33m 0x6abbe38[0m[0;33m 0x6aea1e8[0m[0;33m 0x6b17208[0m[0;33m 0x6bb18d8[0m
[0;34m        | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d6ef38[0m <[0;33mcol:14[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d6ed60[0m[0;1;36m '__x'[0m [0;32m'_Tp'[0m
[0;34m        | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6d6ef58[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m        |-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6d6f098[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m        `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x6d6f0a8[0m <[0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping std::_S_goodbit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6e156f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:155:7[0m, [0;33mcol:22[0m> [0;33mcol:7[0m referenced[0;1;36m _S_goodbit[0m [0;32m'std::_Ios_Iostate'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x6e156d0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e156b0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::_S_badbit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6e157c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:156:7[0m, [0;33mcol:27[0m> [0;33mcol:7[0m referenced[0;1;36m _S_badbit[0m [0;32m'std::_Ios_Iostate'[0m
[0;34m`-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e15bb8[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6e157a0[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6e15780[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e15740[0m <[0;33mcol:21[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e15760[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::_S_eofbit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6e15890[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:157:7[0m, [0;33mcol:27[0m> [0;33mcol:7[0m referenced[0;1;36m _S_eofbit[0m [0;32m'std::_Ios_Iostate'[0m
[0;34m`-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e15bd0[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6e15870[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6e15850[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e15810[0m <[0;33mcol:21[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e15830[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m

Dumping std::_S_failbit:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6e15960[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:158:7[0m, [0;33mcol:27[0m> [0;33mcol:7[0m referenced[0;1;36m _S_failbit[0m [0;32m'std::_Ios_Iostate'[0m
[0;34m`-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e15be8[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  `-[0m[0;1;35mConstantExpr[0m[0;33m 0x6e15940[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6e15920[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e158e0[0m <[0;33mcol:21[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e15900[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m

Dumping std::ios_base::badbit:
[0;1;32mVarDecl[0m[0;33m 0x6e1aa10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:402:5[0m, [0;33mcol:35[0m> [0;33mcol:26[0m referenced[0;1;36m badbit[0m [0;32m'const std::ios_base::iostate':'const std::_Ios_Iostate'[0m static cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e1aa78[0m <[0;33mcol:35[0m> [0;32m'std::_Ios_Iostate'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6e157c0[0m[0;1;36m '_S_badbit'[0m [0;32m'std::_Ios_Iostate'[0m

Dumping std::ios_base::eofbit:
[0;1;32mVarDecl[0m[0;33m 0x6e1ab00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:405:5[0m, [0;33mcol:35[0m> [0;33mcol:26[0m referenced[0;1;36m eofbit[0m [0;32m'const std::ios_base::iostate':'const std::_Ios_Iostate'[0m static cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e1ab68[0m <[0;33mcol:35[0m> [0;32m'std::_Ios_Iostate'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6e15890[0m[0;1;36m '_S_eofbit'[0m [0;32m'std::_Ios_Iostate'[0m

Dumping std::ios_base::failbit:
[0;1;32mVarDecl[0m[0;33m 0x6e1abf0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:410:5[0m, [0;33mcol:36[0m> [0;33mcol:26[0m referenced[0;1;36m failbit[0m [0;32m'const std::ios_base::iostate':'const std::_Ios_Iostate'[0m static cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e1ac58[0m <[0;33mcol:36[0m> [0;32m'std::_Ios_Iostate'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6e15960[0m[0;1;36m '_S_failbit'[0m [0;32m'std::_Ios_Iostate'[0m

Dumping std::ios_base::goodbit:
[0;1;32mVarDecl[0m[0;33m 0x6e1ace0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:413:5[0m, [0;33mcol:36[0m> [0;33mcol:26[0m referenced[0;1;36m goodbit[0m [0;32m'const std::ios_base::iostate':'const std::_Ios_Iostate'[0m static cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e1ad48[0m <[0;33mcol:36[0m> [0;32m'std::_Ios_Iostate'[0m[0;36m[0m[0;36m[0m [0;1;32mEnumConstant[0m[0;33m 0x6e156f0[0m[0;1;36m '_S_goodbit'[0m [0;32m'std::_Ios_Iostate'[0m

Dumping std::ctype<wchar_t>::_M_bit:
[0;1;32mFieldDecl[0m[0;33m 0x6eb1f08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:1199:7[0m, [0;33mcol:42[0m> [0;33mcol:33[0m[0;1;36m _M_bit[0m [0;32m'std::ctype_base::mask [16]'[0m

Dumping bit:
[0;1;32mFunctionDecl[0m[0;33m 0x71d4c68[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/amylase/1836486_1485488_amylase.cpp:20:1[0m, [0;33mcol:37[0m> [0;33mcol:11[0m[0;1;36m bit[0m [0;32m'li (li)'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x71d4ba8[0m <[0;33mcol:15[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m n[0m [0;32m'li':'long long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x71d4d98[0m <[0;33mcol:20[0m, [0;33mcol:37[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x71d4d88[0m <[0;33mcol:22[0m, [0;33mcol:34[0m>
[0;34m    `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x71d4d68[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m      |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x71d4d10[0m <[0;33mcol:29[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x71d4d50[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71d4d30[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x71d4ba8[0m[0;1;36m 'n'[0m [0;32m'li':'long long'[0m

Dumping __resolved:
[0;1;32mParmVarDecl[0m[0;33m 0x51d8880[0m <[0;33m/usr/include/stdlib.h:798:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __resolved[0m [0;32m'char *__restrict'[0m

Dumping solve:
[0;1;32mFunctionDecl[0m[0;33m 0x5c52578[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/amylase/1836486_1485488_amylase.cpp:31:1[0m, [0;33mline:106:1[0m> [0;33mline:31:6[0m used[0;1;36m solve[0m [0;32m'void (li)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c52488[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;33mcol:15[0m used[0;1;36m casenum[0m [0;32m'li':'long long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5ed64b0[0m <[0;33mcol:23[0m, [0;33mline:106:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c527a8[0m <[0;33mline:32:3[0m, [0;33mcol:14[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5c52630[0m <[0;33mcol:3[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m wl[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5c526a8[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m used[0;1;36m w[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c52720[0m <[0;33mcol:3[0m, [0;33mcol:13[0m> [0;33mcol:13[0m used[0;1;36m h[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5c55680[0m <[0;33mline:33:3[0m, [0;33mcol:21[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55668[0m <[0;33mcol:18[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55648[0m <[0;33mcol:18[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a277a8[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5c54be0[0m <[0;33mcol:3[0m, [0;33mcol:16[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c54bc8[0m <[0;33mcol:13[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c54ba8[0m <[0;33mcol:13[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a277a8[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5c54140[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c54128[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c540b0[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a277a8[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c527c0[0m <[0;33mcol:3[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b08688[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c527e0[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52630[0m[0;1;36m 'wl'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c54178[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52720[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c54c18[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c526a8[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c55a00[0m <[0;33mline:34:3[0m, [0;33mcol:37[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5c55868[0m <[0;33mcol:3[0m, [0;33mcol:19[0m> [0;33mcol:6[0m used[0;1;36m ceil[0m [0;32m'li [105][105]'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c55980[0m <[0;33mcol:3[0m, [0;33mcol:36[0m> [0;33mcol:22[0m used[0;1;36m floor[0m [0;32m'li [105][105]'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5c56a80[0m <[0;33mline:22:25[0m, [0;33mline:35:39[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c55ac8[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c55a28[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:35:7[0m used[0;1;36m i[0m [0;32m'li':'long long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55ab0[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c55a90[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c55ba8[0m <[0;33mline:35:7[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55b90[0m <[0;33mline:35:7[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55ae0[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55a28[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5c55b70[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5c55b48[0m <[0;33mcol:39[0m, [0;33mline:35:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55b30[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55b00[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52720[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c55be8[0m <[0;33mcol:7[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55bc8[0m <[0;33mline:35:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55a28[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mForStmt[0m[0;33m 0x5c56a48[0m <[0;33mline:22:25[0m, [0;33mline:35:39[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c55cb0[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c55c10[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:35:17[0m used[0;1;36m j[0m [0;32m'li':'long long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55c98[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c55c78[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c55d90[0m <[0;33mline:35:17[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55d78[0m <[0;33mline:35:17[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55cc8[0m <[0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55c10[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5c55d58[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5c55d30[0m <[0;33mcol:39[0m, [0;33mline:35:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55d18[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55ce8[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c526a8[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c55dd0[0m <[0;33mcol:17[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55db0[0m <[0;33mline:35:17[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55c10[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5c56a10[0m <[0;33mcol:23[0m, [0;33mcol:39[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c569f8[0m <[0;33mcol:27[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c569d8[0m <[0;33mcol:27[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a277a8[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55de8[0m <[0;33mcol:23[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b08688[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5c55fa8[0m <[0;33mcol:30[0m, [0;33mcol:39[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55f78[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5c55ed8[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55ea8[0m <[0;33mcol:30[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55e08[0m <[0;33mcol:30[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55ec0[0m <[0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55e28[0m <[0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55a28[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c55f90[0m <[0;33mcol:38[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c55ef8[0m <[0;33mcol:38[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55c10[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5c57a60[0m <[0;33mline:22:25[0m, [0;33mline:36:40[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c56b68[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c56ac8[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:36:7[0m used[0;1;36m i[0m [0;32m'li':'long long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56b50[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c56b30[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c56c48[0m <[0;33mline:36:7[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56c30[0m <[0;33mline:36:7[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56b80[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c56ac8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5c56c10[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5c56be8[0m <[0;33mcol:39[0m, [0;33mline:36:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56bd0[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56ba0[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52720[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c56c88[0m <[0;33mcol:7[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56c68[0m <[0;33mline:36:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c56ac8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mForStmt[0m[0;33m 0x5c57a28[0m <[0;33mline:22:25[0m, [0;33mline:36:40[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c56d50[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c56cb0[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:36:17[0m used[0;1;36m j[0m [0;32m'li':'long long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56d38[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c56d18[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c56e30[0m <[0;33mline:36:17[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56e18[0m <[0;33mline:36:17[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56d68[0m <[0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c56cb0[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5c56df8[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5c56dd0[0m <[0;33mcol:39[0m, [0;33mline:36:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56db8[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56d88[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c526a8[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c56e70[0m <[0;33mcol:17[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56e50[0m <[0;33mline:36:17[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c56cb0[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5c579f0[0m <[0;33mcol:23[0m, [0;33mcol:40[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c579d8[0m <[0;33mcol:27[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c579b8[0m <[0;33mcol:27[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a277a8[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56e88[0m <[0;33mcol:23[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b08688[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5c56f88[0m <[0;33mcol:30[0m, [0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56f58[0m <[0;33mcol:30[0m, [0;33mcol:37[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5c56f18[0m <[0;33mcol:30[0m, [0;33mcol:37[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56ee8[0m <[0;33mcol:30[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56ea8[0m <[0;33mcol:30[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55980[0m[0;1;36m 'floor'[0m [0;32m'li [105][105]'[0m
[0;34m  |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56f00[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56ec8[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c56ac8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c56f70[0m <[0;33mcol:39[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c56f38[0m <[0;33mcol:39[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c56cb0[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c57c38[0m <[0;33mline:38:3[0m, [0;33mcol:22[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c57bd0[0m <[0;33mcol:3[0m, [0;33mcol:21[0m> [0;33mcol:10[0m used[0;1;36m dp[0m [0;32m'double [105][105]'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c57de0[0m <[0;33mline:39:3[0m, [0;33mcol:22[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c57d78[0m <[0;33mcol:3[0m, [0;33mcol:21[0m> [0;33mcol:8[0m used[0;1;36m bvis[0m [0;32m'bool [105][105]'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5c58560[0m <[0;33mline:22:25[0m, [0;33mline:43:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c57ea8[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c57e08[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:40:7[0m used[0;1;36m i[0m [0;32m'li':'long long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c57e90[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c57e70[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c57f88[0m <[0;33mline:40:7[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c57f70[0m <[0;33mline:40:7[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c57ec0[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57e08[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5c57f50[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5c57f28[0m <[0;33mcol:39[0m, [0;33mline:40:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c57f10[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c57ee0[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52720[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c57fc8[0m <[0;33mcol:7[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c57fa8[0m <[0;33mline:40:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57e08[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mForStmt[0m[0;33m 0x5c58528[0m <[0;33mline:22:25[0m, [0;33mline:43:3[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c58090[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c57ff0[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:40:17[0m used[0;1;36m j[0m [0;32m'li':'long long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c58078[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c58058[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c58170[0m <[0;33mline:40:17[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c58158[0m <[0;33mline:40:17[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c580a8[0m <[0;33mcol:17[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57ff0[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5c58138[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5c58110[0m <[0;33mcol:39[0m, [0;33mline:40:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c580f8[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c580c8[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c526a8[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5c581b0[0m <[0;33mcol:17[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c58190[0m <[0;33mline:40:17[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57ff0[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c58508[0m <[0;33mcol:22[0m, [0;33mline:43:3[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c58330[0m <[0;33mline:41:5[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5c582d8[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c582a8[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5c58268[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;32m'double [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c58238[0m <[0;33mcol:5[0m> [0;32m'double (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c581c8[0m <[0;33mcol:5[0m> [0;32m'double [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57bd0[0m[0;1;36m 'dp'[0m [0;32m'double [105][105]'[0m
[0;34m  |     | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c58250[0m <[0;33mcol:8[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c581e8[0m <[0;33mcol:8[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57e08[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c582c0[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c58288[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57ff0[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c58318[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c582f8[0m <[0;33mcol:16[0m> [0;32m'const double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c51e78[0m[0;1;36m 'DOUBLE_MAX'[0m [0;32m'const double'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5c584e8[0m <[0;33mline:42:5[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5c584b8[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c58488[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5c58448[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'bool [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c58418[0m <[0;33mcol:5[0m> [0;32m'bool (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c583a8[0m <[0;33mcol:5[0m> [0;32m'bool [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57d78[0m[0;1;36m 'bvis'[0m [0;32m'bool [105][105]'[0m
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c58430[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c583c8[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57e08[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c584a0[0m <[0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c58468[0m <[0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57ff0[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |       `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5c584d8[0m <[0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5c91a40[0m <[0;33mline:45:3[0m, [0;33mcol:38[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c76fe0[0m <[0;33mcol:3[0m, [0;33mcol:37[0m> [0;33mcol:37[0m used[0;1;36m q[0m [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5c91a08[0m <[0;33mcol:37[0m> [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m[0;36m[0m[0;36m[0m [0;32m'void ()'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5ccf220[0m <[0;33mline:47:3[0m, [0;33mcol:16[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5c91ff0[0m <[0;33mcol:3[0m, [0;33mcol:13[0m> [0;33mcol:13[0m used[0;1;36m bfs[0m [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5ccf1e8[0m <[0;33mcol:13[0m> [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m[0;36m[0m[0;36m[0m [0;32m'void ()'[0m
[0;34m  |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5d94988[0m <[0;33mline:48:3[0m, [0;33mcol:26[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5d91748[0m <[0;33mcol:3[0m, [0;33mcol:26[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5d91718[0m <[0;33mcol:3[0m, [0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push[0;33m 0x5cca7e8[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ccf238[0m <[0;33mcol:3[0m> [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c91ff0[0m[0;1;36m 'bfs'[0m [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m
[0;34m  |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5d94970[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >::value_type':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94958[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >::value_type':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m <[0;31mConstructorConversion[0m>
[0;34m  |       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5d94928[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >::value_type':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m [0;32m'void (pair<int, int> &&)'[0m
[0;34m  |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5d93b38[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<int>::__type>':'std::pair<int, int>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x5d3dbb0[0m <[0;33mcol:12[0m, [0;33mcol:25[0m> [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<int>::__type>':'std::pair<int, int>'[0m[0;36m[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d3db98[0m <[0;33mcol:12[0m> [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<int>::__type> (*)(int &&, int &&)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cd26e0[0m <[0;33mcol:12[0m> [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<int>::__type> (int &&, int &&)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5cd25c0[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<int>::__type, typename __decay_and_strip<int>::__type> (int &&, int &&)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4cbe120[0m[0;1;36m 'make_pair'[0m)
[0;34m  |             |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5d3dbe0[0m <[0;33mcol:22[0m> [0;32m'int':'int'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |             | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ccf300[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |             `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5d3dbf8[0m <[0;33mcol:24[0m> [0;32m'int':'int'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |               `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ccf320[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x5eadd20[0m <[0;33mline:49:3[0m, [0;33mline:67:3[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5d94a50[0m <[0;33mline:49:9[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5d949f0[0m <[0;33mcol:10[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5d949c0[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .empty[0;33m 0x5cc9f68[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94a38[0m <[0;33mcol:10[0m> [0;32m'const std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d949a0[0m <[0;33mcol:10[0m> [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c91ff0[0m[0;1;36m 'bfs'[0m [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5eadce0[0m <[0;33mcol:22[0m, [0;33mline:67:3[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5d94da0[0m <[0;33mline:50:5[0m, [0;33mcol:53[0m>
[0;34m  |   | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5d94a78[0m <[0;33mcol:5[0m, [0;33mcol:24[0m> [0;33mcol:8[0m used[0;1;36m i[0m [0;32m'li':'long long'[0m cinit
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94be0[0m <[0;33mcol:12[0m, [0;33mcol:24[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5d94bb0[0m <[0;33mcol:12[0m, [0;33mcol:24[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x5d3e998[0m
[0;34m  |   | |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5d94b90[0m <[0;33mcol:12[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::pair<long long, long long> > >::value_type':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5d94b60[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .front[0;33m 0x5cca1a8[0m
[0;34m  |   | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94ae0[0m <[0;33mcol:12[0m> [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c91ff0[0m[0;1;36m 'bfs'[0m [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5d94c08[0m <[0;33mcol:5[0m, [0;33mcol:47[0m> [0;33mcol:31[0m used[0;1;36m j[0m [0;32m'li':'long long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94d70[0m <[0;33mcol:35[0m, [0;33mcol:47[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5d94d40[0m <[0;33mcol:35[0m, [0;33mcol:47[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x5d3e9f8[0m
[0;34m  |   |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5d94d20[0m <[0;33mcol:35[0m, [0;33mcol:45[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::pair<long long, long long> > >::value_type':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5d94cf0[0m <[0;33mcol:35[0m, [0;33mcol:39[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .front[0;33m 0x5cca1a8[0m
[0;34m  |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94c70[0m <[0;33mcol:35[0m> [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c91ff0[0m[0;1;36m 'bfs'[0m [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m
[0;34m  |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5d94e08[0m <[0;33mcol:55[0m, [0;33mcol:63[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5d94dd8[0m <[0;33mcol:55[0m, [0;33mcol:59[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .pop[0;33m 0x5ccabf8[0m
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94db8[0m <[0;33mcol:55[0m> [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c91ff0[0m[0;1;36m 'bfs'[0m [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x5d94f48[0m <[0;33mline:51:5[0m, [0;33mcol:20[0m>
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94f28[0m <[0;33mcol:8[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5d94f08[0m <[0;33mcol:8[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94ed8[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5d94e98[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'bool [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94e68[0m <[0;33mcol:8[0m> [0;32m'bool (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94e28[0m <[0;33mcol:8[0m> [0;32m'bool [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57d78[0m[0;1;36m 'bvis'[0m [0;32m'bool [105][105]'[0m
[0;34m  |   | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94e80[0m <[0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94e48[0m <[0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94a78[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94ef0[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94eb8[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94c08[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5d94f40[0m <[0;33mcol:20[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5d95070[0m <[0;33mline:52:5[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5d95040[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d95010[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'bool *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5d94fd0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'bool [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94fa0[0m <[0;33mcol:5[0m> [0;32m'bool (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94f60[0m <[0;33mcol:5[0m> [0;32m'bool [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57d78[0m[0;1;36m 'bvis'[0m [0;32m'bool [105][105]'[0m
[0;34m  |   | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d94fb8[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94f80[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94a78[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5d95028[0m <[0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d94ff0[0m <[0;33mcol:13[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94c08[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5d95060[0m <[0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |   |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5eac7d0[0m <[0;33mline:54:5[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5eac760[0m <[0;33mcol:5[0m, [0;33mcol:42[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eac730[0m <[0;33mcol:5[0m, [0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push[0;33m 0x5c7cf88[0m
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d95090[0m <[0;33mcol:5[0m> [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c76fe0[0m[0;1;36m 'q'[0m [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m
[0;34m  |   |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5eac7b8[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'pair<typename __decay_and_strip<double>::__type, typename __decay_and_strip<pair<long long, long long> >::__type>':'std::pair<double, std::pair<long long, long long> >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x5eac6d0[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'pair<typename __decay_and_strip<double>::__type, typename __decay_and_strip<pair<long long, long long> >::__type>':'std::pair<double, std::pair<long long, long long> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eac6b8[0m <[0;33mcol:12[0m> [0;32m'pair<typename __decay_and_strip<double>::__type, typename __decay_and_strip<pair<long long, long long> >::__type> (*)(double &&, std::pair<long long, long long> &&)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5dd15d0[0m <[0;33mcol:12[0m> [0;32m'pair<typename __decay_and_strip<double>::__type, typename __decay_and_strip<pair<long long, long long> >::__type> (double &&, std::pair<long long, long long> &&)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5dd14b0[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<double>::__type, typename __decay_and_strip<pair<long long, long long> >::__type> (double &&, std::pair<long long, long long> &&)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4cbe120[0m[0;1;36m 'make_pair'[0m)
[0;34m  |   |       |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5eac700[0m <[0;33mcol:22[0m> [0;32m'double':'double'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |       | `-[0m[0;1;35mFloatingLiteral[0m[0;33m 0x5d95158[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m[0;1;36m 0.000000e+00[0m
[0;34m  |   |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5eac718[0m <[0;33mcol:27[0m, [0;33mcol:40[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type>':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5dcc290[0m <[0;33mcol:27[0m, [0;33mcol:40[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type>':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5dcc278[0m <[0;33mcol:27[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (*)(long long &, long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d97060[0m <[0;33mcol:27[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (long long &, long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5d96f40[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (long long &, long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4cbe120[0m[0;1;36m 'make_pair'[0m)
[0;34m  |   |           |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d951c0[0m <[0;33mcol:37[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94a78[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5d951e0[0m <[0;33mcol:39[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94c08[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x5eadca8[0m <[0;33mline:22:25[0m, [0;33mline:66:5[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eac898[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eac7f8[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:57:9[0m used[0;1;36m d[0m [0;32m'li':'long long'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eac880[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eac860[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eac978[0m <[0;33mline:57:9[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eac960[0m <[0;33mline:57:9[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eac8b0[0m <[0;33mcol:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac7f8[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |     | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5eac940[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5eac918[0m <[0;33mcol:39[0m, [0;33mline:57:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eac900[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |     |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eac8d0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5eac9b8[0m <[0;33mcol:9[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eac998[0m <[0;33mline:57:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac7f8[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5eadc60[0m <[0;33mcol:13[0m, [0;33mline:66:5[0m>
[0;34m  |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eaccd8[0m <[0;33mline:58:7[0m, [0;33mcol:36[0m>
[0;34m  |       | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5eac9e0[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;33mcol:10[0m used[0;1;36m ni[0m [0;32m'li':'long long'[0m cinit
[0;34m  |       | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eacb28[0m <[0;33mcol:15[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacaf8[0m <[0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eaca48[0m <[0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94a78[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacb10[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eacad8[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacaa8[0m <[0;33mcol:17[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eaca68[0m <[0;33mcol:17[0m> [0;32m'li [4]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c51fd8[0m[0;1;36m 'vx'[0m [0;32m'li [4]'[0m
[0;34m  |       | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacac0[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eaca88[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac7f8[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eacb58[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:24[0m used[0;1;36m nj[0m [0;32m'li':'long long'[0m cinit
[0;34m  |       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eacca0[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacc70[0m <[0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacbc0[0m <[0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94c08[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacc88[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eacc50[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacc20[0m <[0;33mcol:31[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacbe0[0m <[0;33mcol:31[0m> [0;32m'li [4]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52258[0m[0;1;36m 'vy'[0m [0;32m'li [4]'[0m
[0;34m  |       |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacc38[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacc00[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac7f8[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eacf98[0m <[0;33mline:59:7[0m, [0;33mcol:42[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eacf70[0m <[0;33mcol:10[0m, [0;33mcol:38[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eacec0[0m <[0;33mcol:10[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |       | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eace10[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |       | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eacd60[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |       | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacd30[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eaccf0[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac9e0[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacd48[0m <[0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eacd10[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |       | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eacdf0[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |       | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacdc0[0m <[0;33mcol:18[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacd80[0m <[0;33mcol:18[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52720[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacdd8[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacda0[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac9e0[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eacea0[0m <[0;33mcol:27[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |       | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eace70[0m <[0;33mcol:27[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eace30[0m <[0;33mcol:27[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eacb58[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eace88[0m <[0;33mcol:30[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eace50[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |       | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eacf50[0m <[0;33mcol:35[0m, [0;33mcol:38[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |       | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacf20[0m <[0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacee0[0m <[0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c526a8[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacf38[0m <[0;33mcol:38[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacf00[0m <[0;33mcol:38[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eacb58[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5eacf90[0m <[0;33mcol:42[0m>
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5ead260[0m <[0;33mline:60:7[0m, [0;33mcol:45[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ead238[0m <[0;33mcol:10[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ead100[0m <[0;33mcol:10[0m, [0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead0d0[0m <[0;33mcol:10[0m, [0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead090[0m <[0;33mcol:10[0m, [0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead060[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead020[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eacff0[0m <[0;33mcol:10[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacfb0[0m <[0;33mcol:10[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55980[0m[0;1;36m 'floor'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead008[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eacfd0[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94a78[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead078[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead040[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94c08[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead0e8[0m <[0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ead0b0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead220[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead200[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead1d0[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead190[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead160[0m <[0;33mcol:31[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead120[0m <[0;33mcol:31[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead178[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead140[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac9e0[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead1e8[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead1b0[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eacb58[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5ead258[0m <[0;33mcol:45[0m>
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5ead528[0m <[0;33mline:61:7[0m, [0;33mcol:45[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ead500[0m <[0;33mcol:10[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ead3c8[0m <[0;33mcol:10[0m, [0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead398[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead358[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead328[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead2e8[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead2b8[0m <[0;33mcol:10[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead278[0m <[0;33mcol:10[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55980[0m[0;1;36m 'floor'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead2d0[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead298[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac9e0[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead340[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead308[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eacb58[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead3b0[0m <[0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ead378[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead4e8[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead4c8[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead498[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead458[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead428[0m <[0;33mcol:31[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead3e8[0m <[0;33mcol:31[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead440[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead408[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac9e0[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead4b0[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead478[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eacb58[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5ead520[0m <[0;33mcol:45[0m>
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5ead710[0m <[0;33mline:62:7[0m, [0;33mcol:45[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ead6e8[0m <[0;33mcol:10[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ead5b0[0m <[0;33mcol:10[0m, [0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead580[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead540[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52630[0m[0;1;36m 'wl'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead598[0m <[0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ead560[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead6d0[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead6b0[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead680[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead640[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead610[0m <[0;33mcol:31[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead5d0[0m <[0;33mcol:31[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead628[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead5f0[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac9e0[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead698[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead660[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eacb58[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5ead708[0m <[0;33mcol:45[0m>
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5ead9d8[0m <[0;33mline:63:7[0m, [0;33mcol:43[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ead9b0[0m <[0;33mcol:10[0m, [0;33mcol:40[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ead878[0m <[0;33mcol:10[0m, [0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead848[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead808[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead7d8[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead798[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead768[0m <[0;33mcol:10[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead728[0m <[0;33mcol:10[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55980[0m[0;1;36m 'floor'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead780[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead748[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac9e0[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead7f0[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead7b8[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eacb58[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead860[0m <[0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ead828[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead998[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead978[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead948[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ead908[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead8d8[0m <[0;33mcol:31[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead898[0m <[0;33mcol:31[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead8f0[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead8b8[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94a78[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ead960[0m <[0;33mcol:39[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead928[0m <[0;33mcol:39[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d94c08[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5ead9d0[0m <[0;33mcol:43[0m>
[0;34m  |       `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5eadc48[0m <[0;33mline:65:7[0m, [0;33mcol:33[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5eadc08[0m <[0;33mcol:7[0m, [0;33mcol:33[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eadbd8[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push[0;33m 0x5cca7e8[0m
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ead9f0[0m <[0;33mcol:7[0m> [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c91ff0[0m[0;1;36m 'bfs'[0m [0;32m'queue<pi>':'std::queue<std::pair<long long, long long>, std::deque<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >'[0m
[0;34m  |           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5eadc30[0m <[0;33mcol:16[0m, [0;33mcol:32[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type>':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |             `-[0m[0;1;35mCallExpr[0m[0;33m 0x5eadba8[0m <[0;33mcol:16[0m, [0;33mcol:32[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type>':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m
[0;34m  |               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eadb90[0m <[0;33mcol:16[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (*)(long long &, long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eadb68[0m <[0;33mcol:16[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (long long &, long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5d96f40[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (long long &, long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4cbe120[0m[0;1;36m 'make_pair'[0m)
[0;34m  |               |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eadab8[0m <[0;33mcol:26[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eac9e0[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eadad8[0m <[0;33mcol:30[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eacb58[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x5ed6130[0m <[0;33mline:69:3[0m, [0;33mline:102:3[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5eaddf0[0m <[0;33mline:69:9[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5eadd88[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eadd58[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .empty[0;33m 0x5c7c9c8[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eaddd8[0m <[0;33mcol:10[0m> [0;32m'const std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eadd38[0m <[0;33mcol:10[0m> [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c76fe0[0m[0;1;36m 'q'[0m [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5ed60e8[0m <[0;33mcol:20[0m, [0;33mline:102:3[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eb5550[0m <[0;33mline:70:5[0m, [0;33mcol:35[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eadf18[0m <[0;33mcol:5[0m, [0;33mcol:34[0m> [0;33mcol:22[0m used[0;1;36m top[0m [0;32m'pair<double, pi>':'std::pair<double, std::pair<long long, long long> >'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5eb5520[0m <[0;33mcol:28[0m, [0;33mcol:34[0m> [0;32m'pair<double, pi>':'std::pair<double, std::pair<long long, long long> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::pair<double, std::pair<long long, long long> > &) noexcept'[0m
[0;34m  |   |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5eadfd0[0m <[0;33mcol:28[0m, [0;33mcol:34[0m> [0;32m'const __gnu_cxx::__alloc_traits<std::allocator<std::pair<double, std::pair<long long, long long> > > >::value_type':'const std::pair<double, std::pair<long long, long long> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eadfa0[0m <[0;33mcol:28[0m, [0;33mcol:30[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .top[0;33m 0x5c7cc08[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eadff0[0m <[0;33mcol:28[0m> [0;32m'const std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eadf80[0m <[0;33mcol:28[0m> [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c76fe0[0m[0;1;36m 'q'[0m [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m
[0;34m  |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5eb55b8[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eb5588[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .pop[0;33m 0x5c7d398[0m
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5568[0m <[0;33mcol:37[0m> [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c76fe0[0m[0;1;36m 'q'[0m [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eb56c0[0m <[0;33mline:71:5[0m, [0;33mcol:28[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb55f0[0m <[0;33mcol:5[0m, [0;33mcol:23[0m> [0;33mcol:12[0m used[0;1;36m time[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb56a8[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'double':'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eb5678[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'double':'double'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x5dd2378[0m
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5658[0m <[0;33mcol:19[0m> [0;32m'pair<double, pi>':'std::pair<double, std::pair<long long, long long> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eadf18[0m[0;1;36m 'top'[0m [0;32m'pair<double, pi>':'std::pair<double, std::pair<long long, long long> >'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eb5910[0m <[0;33mline:72:5[0m, [0;33mcol:51[0m>
[0;34m  |   | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb56e8[0m <[0;33mcol:5[0m, [0;33mcol:23[0m> [0;33mcol:8[0m used[0;1;36m i[0m [0;32m'li':'long long'[0m cinit
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb57d0[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eb57a0[0m <[0;33mcol:12[0m, [0;33mcol:23[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x5d3e998[0m
[0;34m  |   | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eb5770[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'std::pair<long long, long long>':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x5dd23d8[0m
[0;34m  |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5750[0m <[0;33mcol:12[0m> [0;32m'pair<double, pi>':'std::pair<double, std::pair<long long, long long> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eadf18[0m[0;1;36m 'top'[0m [0;32m'pair<double, pi>':'std::pair<double, std::pair<long long, long long> >'[0m
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb57f8[0m <[0;33mcol:5[0m, [0;33mcol:45[0m> [0;33mcol:30[0m used[0;1;36m j[0m [0;32m'li':'long long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb58e0[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eb58b0[0m <[0;33mcol:34[0m, [0;33mcol:45[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x5d3e9f8[0m
[0;34m  |   |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5eb5880[0m <[0;33mcol:34[0m, [0;33mcol:38[0m> [0;32m'std::pair<long long, long long>':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x5dd23d8[0m
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5860[0m <[0;33mcol:34[0m> [0;32m'pair<double, pi>':'std::pair<double, std::pair<long long, long long> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eadf18[0m[0;1;36m 'top'[0m [0;32m'pair<double, pi>':'std::pair<double, std::pair<long long, long long> >'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eb5aa0[0m <[0;33mline:75:5[0m, [0;33mcol:26[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb5a78[0m <[0;33mcol:8[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5a48[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb5a08[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb59d8[0m <[0;33mcol:8[0m, [0;33mcol:12[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb5998[0m <[0;33mcol:8[0m, [0;33mcol:12[0m> [0;32m'double [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5968[0m <[0;33mcol:8[0m> [0;32m'double (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5928[0m <[0;33mcol:8[0m> [0;32m'double [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57bd0[0m[0;1;36m 'dp'[0m [0;32m'double [105][105]'[0m
[0;34m  |   | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5980[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5948[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb56e8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |   | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb59f0[0m <[0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb59b8[0m <[0;33mcol:14[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb57f8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5a60[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5a28[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb55f0[0m[0;1;36m 'time'[0m [0;32m'double'[0m
[0;34m  |   | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5eb5a98[0m <[0;33mcol:26[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb5bf0[0m <[0;33mline:76:5[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb5b98[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5b68[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb5b28[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;32m'double [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5af8[0m <[0;33mcol:5[0m> [0;32m'double (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5ab8[0m <[0;33mcol:5[0m> [0;32m'double [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57bd0[0m[0;1;36m 'dp'[0m [0;32m'double [105][105]'[0m
[0;34m  |   | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5b10[0m <[0;33mcol:8[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5ad8[0m <[0;33mcol:8[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb56e8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5b80[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5b48[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb57f8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5bd8[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5bb8[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb55f0[0m[0;1;36m 'time'[0m [0;32m'double'[0m
[0;34m  |   `-[0m[0;1;35mForStmt[0m[0;33m 0x5ed60b0[0m <[0;33mline:22:25[0m, [0;33mline:101:5[0m>
[0;34m  |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eb5cc0[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb5c20[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:78:9[0m used[0;1;36m d[0m [0;32m'li':'long long'[0m cinit
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5ca8[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb5c88[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb5da0[0m <[0;33mline:78:9[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5d88[0m <[0;33mline:78:9[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5cd8[0m <[0;33mcol:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5c20[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |     | `-[0m[0;1;35mParenExpr[0m[0;33m 0x5eb5d68[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x5eb5d40[0m <[0;33mcol:39[0m, [0;33mline:78:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5d28[0m <[0;33mcol:11[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m> part_of_explicit_cast
[0;34m  |     |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb5cf8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5eb5de0[0m <[0;33mcol:9[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5dc0[0m <[0;33mline:78:9[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5c20[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5ed6058[0m <[0;33mcol:13[0m, [0;33mline:101:5[0m>
[0;34m  |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eb6100[0m <[0;33mline:79:7[0m, [0;33mcol:36[0m>
[0;34m  |       | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb5e08[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;33mcol:10[0m used[0;1;36m ni[0m [0;32m'li':'long long'[0m cinit
[0;34m  |       | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb5f50[0m <[0;33mcol:15[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5f20[0m <[0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5e70[0m <[0;33mcol:15[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb56e8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5f38[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb5f00[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5ed0[0m <[0;33mcol:17[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5e90[0m <[0;33mcol:17[0m> [0;32m'li [4]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c51fd8[0m[0;1;36m 'vx'[0m [0;32m'li [4]'[0m
[0;34m  |       | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb5ee8[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5eb0[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5c20[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb5f80[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:24[0m used[0;1;36m nj[0m [0;32m'li':'long long'[0m cinit
[0;34m  |       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb60c8[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6098[0m <[0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb5fe8[0m <[0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb57f8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb60b0[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6078[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6048[0m <[0;33mcol:31[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6008[0m <[0;33mcol:31[0m> [0;32m'li [4]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52258[0m[0;1;36m 'vy'[0m [0;32m'li [4]'[0m
[0;34m  |       |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6060[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6028[0m <[0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5c20[0m[0;1;36m 'd'[0m [0;32m'li':'long long'[0m
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eb63c0[0m <[0;33mline:80:7[0m, [0;33mcol:42[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6398[0m <[0;33mcol:10[0m, [0;33mcol:38[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb62e8[0m <[0;33mcol:10[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |       | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6238[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |       | | | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6188[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |       | | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6158[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6118[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6170[0m <[0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb6138[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |       | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6218[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |       | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb61e8[0m <[0;33mcol:18[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb61a8[0m <[0;33mcol:18[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52720[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6200[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb61c8[0m <[0;33mcol:21[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb62c8[0m <[0;33mcol:27[0m, [0;33mcol:30[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |       | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6298[0m <[0;33mcol:27[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6258[0m <[0;33mcol:27[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb62b0[0m <[0;33mcol:30[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb6278[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |       | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6378[0m <[0;33mcol:35[0m, [0;33mcol:38[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |       | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6348[0m <[0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6308[0m <[0;33mcol:35[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c526a8[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6360[0m <[0;33mcol:38[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6328[0m <[0;33mcol:38[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5eb63b8[0m <[0;33mcol:42[0m>
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eb6688[0m <[0;33mline:81:7[0m, [0;33mcol:45[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6660[0m <[0;33mcol:10[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6528[0m <[0;33mcol:10[0m, [0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb64f8[0m <[0;33mcol:10[0m, [0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb64b8[0m <[0;33mcol:10[0m, [0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6488[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6448[0m <[0;33mcol:10[0m, [0;33mcol:17[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6418[0m <[0;33mcol:10[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb63d8[0m <[0;33mcol:10[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55980[0m[0;1;36m 'floor'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6430[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb63f8[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb56e8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb64a0[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6468[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb57f8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6510[0m <[0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb64d8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6648[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6628[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb65f8[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb65b8[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6588[0m <[0;33mcol:31[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6548[0m <[0;33mcol:31[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb65a0[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6568[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6610[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb65d8[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5eb6680[0m <[0;33mcol:45[0m>
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eb6950[0m <[0;33mline:82:7[0m, [0;33mcol:45[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6928[0m <[0;33mcol:10[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb67f0[0m <[0;33mcol:10[0m, [0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb67c0[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6780[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6750[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6710[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb66e0[0m <[0;33mcol:10[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb66a0[0m <[0;33mcol:10[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55980[0m[0;1;36m 'floor'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb66f8[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb66c0[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6768[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6730[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb67d8[0m <[0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb67a0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6910[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb68f0[0m <[0;33mcol:31[0m, [0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb68c0[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6880[0m <[0;33mcol:31[0m, [0;33mcol:38[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6850[0m <[0;33mcol:31[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6810[0m <[0;33mcol:31[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6868[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6830[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb68d8[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb68a0[0m <[0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5eb6948[0m <[0;33mcol:45[0m>
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eb6c18[0m <[0;33mline:83:7[0m, [0;33mcol:43[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6bf0[0m <[0;33mcol:10[0m, [0;33mcol:40[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6ab8[0m <[0;33mcol:10[0m, [0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6a88[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6a48[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6a18[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb69d8[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | | | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb69a8[0m <[0;33mcol:10[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | | | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6968[0m <[0;33mcol:10[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55980[0m[0;1;36m 'floor'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb69c0[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6988[0m <[0;33mcol:16[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6a30[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb69f8[0m <[0;33mcol:20[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6aa0[0m <[0;33mcol:26[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb6a68[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6bd8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6bb8[0m <[0;33mcol:31[0m, [0;33mcol:40[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6b88[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6b48[0m <[0;33mcol:31[0m, [0;33mcol:37[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6b18[0m <[0;33mcol:31[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6ad8[0m <[0;33mcol:31[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6b30[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6af8[0m <[0;33mcol:36[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb56e8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6ba0[0m <[0;33mcol:39[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6b68[0m <[0;33mcol:39[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb57f8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x5eb6c10[0m <[0;33mcol:43[0m>
[0;34m  |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eb6e68[0m <[0;33mline:84:7[0m, [0;33mcol:52[0m>
[0;34m  |       | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb6c48[0m <[0;33mcol:7[0m, [0;33mcol:34[0m> [0;33mcol:14[0m used[0;1;36m water[0m [0;32m'double'[0m cinit
[0;34m  |       | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6d78[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6d60[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6d48[0m <[0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6cb0[0m <[0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52630[0m[0;1;36m 'wl'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6d28[0m <[0;33mcol:27[0m, [0;33mcol:34[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6d10[0m <[0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6cd0[0m <[0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb55f0[0m[0;1;36m 'time'[0m [0;32m'double'[0m
[0;34m  |       | |     `-[0m[0;1;35mFloatingLiteral[0m[0;33m 0x5eb6cf0[0m <[0;33mcol:34[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m[0;1;36m 1.000000e+01[0m
[0;34m  |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb6db0[0m <[0;33mcol:7[0m, [0;33mcol:48[0m> [0;33mcol:40[0m used[0;1;36m ntime[0m [0;32m'double'[0m cinit
[0;34m  |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6e38[0m <[0;33mcol:48[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6e18[0m <[0;33mcol:48[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb55f0[0m[0;1;36m 'time'[0m [0;32m'double'[0m
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eb75f8[0m <[0;33mline:86:7[0m, [0;33mline:90:7[0m>
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb7040[0m <[0;33mline:86:10[0m, [0;33mcol:34[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |       | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb6ef0[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6ec0[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6e80[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6c48[0m[0;1;36m 'water'[0m [0;32m'double'[0m
[0;34m  |       | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6ed8[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb6ea0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7028[0m <[0;33mcol:23[0m, [0;33mcol:34[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7010[0m <[0;33mcol:23[0m, [0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6ff0[0m <[0;33mcol:23[0m, [0;33mcol:34[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6fc0[0m <[0;33mcol:23[0m, [0;33mcol:30[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |       | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb6f80[0m <[0;33mcol:23[0m, [0;33mcol:30[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6f50[0m <[0;33mcol:23[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6f10[0m <[0;33mcol:23[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6f68[0m <[0;33mcol:28[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6f30[0m <[0;33mcol:28[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb6fd8[0m <[0;33mcol:32[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb6fa0[0m <[0;33mcol:32[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5eb75d0[0m <[0;33mcol:36[0m, [0;33mline:90:7[0m>
[0;34m  |       |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5eb7320[0m <[0;33mline:87:9[0m, [0;33mcol:57[0m>
[0;34m  |       |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5eb7078[0m <[0;33mcol:9[0m, [0;33mcol:53[0m> [0;33mcol:16[0m used[0;1;36m wait[0m [0;32m'double'[0m cinit
[0;34m  |       |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb7300[0m <[0;33mcol:23[0m, [0;33mcol:53[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |       |   |     |-[0m[0;1;35mParenExpr[0m[0;33m 0x5eb72c0[0m <[0;33mcol:23[0m, [0;33mcol:49[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb72a0[0m <[0;33mcol:24[0m, [0;33mcol:48[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       |   |     |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb7150[0m <[0;33mcol:24[0m, [0;33mcol:32[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |   |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7120[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb70e0[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6c48[0m[0;1;36m 'water'[0m [0;32m'double'[0m
[0;34m  |       |   |     |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7138[0m <[0;33mcol:32[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       |   |     |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb7100[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7288[0m <[0;33mcol:37[0m, [0;33mcol:48[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7270[0m <[0;33mcol:37[0m, [0;33mcol:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |     |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb7250[0m <[0;33mcol:37[0m, [0;33mcol:48[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |   |     |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7220[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |   |     |         | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb71e0[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |   |     |         |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb71b0[0m <[0;33mcol:37[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |   |     |         |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7170[0m <[0;33mcol:37[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       |   |     |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb71c8[0m <[0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |     |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7190[0m <[0;33mcol:42[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       |   |     |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7238[0m <[0;33mcol:46[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |     |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7200[0m <[0;33mcol:46[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       |   |     `-[0m[0;1;35mFloatingLiteral[0m[0;33m 0x5eb72e0[0m <[0;33mcol:53[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m[0;1;36m 1.000000e+01[0m
[0;34m  |       |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb74e0[0m <[0;33mline:88:9[0m, [0;33mcol:32[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7338[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6c48[0m[0;1;36m 'water'[0m [0;32m'double'[0m
[0;34m  |       |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb74c8[0m <[0;33mcol:17[0m, [0;33mcol:32[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb74a8[0m <[0;33mcol:17[0m, [0;33mcol:32[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7478[0m <[0;33mcol:17[0m, [0;33mcol:28[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb7438[0m <[0;33mcol:17[0m, [0;33mcol:28[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7408[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |   |     |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb73c8[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |   |     |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7398[0m <[0;33mcol:17[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       |   |     |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7358[0m <[0;33mcol:17[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55868[0m[0;1;36m 'ceil'[0m [0;32m'li [105][105]'[0m
[0;34m  |       |   |     |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb73b0[0m <[0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |     |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7378[0m <[0;33mcol:22[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |       |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7420[0m <[0;33mcol:26[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb73e8[0m <[0;33mcol:26[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |       |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7490[0m <[0;33mcol:32[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |   |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb7458[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 50[0m
[0;34m  |       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb75b0[0m <[0;33mline:89:9[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |       |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7500[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6db0[0m[0;1;36m 'ntime'[0m [0;32m'double'[0m
[0;34m  |       |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb7590[0m <[0;33mcol:17[0m, [0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7560[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7520[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb55f0[0m[0;1;36m 'time'[0m [0;32m'double'[0m
[0;34m  |       |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7578[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7540[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb7078[0m[0;1;36m 'wait'[0m [0;32m'double'[0m
[0;34m  |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x5eb7930[0m <[0;33mline:92:7[0m, [0;33mline:98:7[0m> has_else
[0;34m  |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb77d0[0m <[0;33mline:92:10[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |       | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb77a0[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7610[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6c48[0m[0;1;36m 'water'[0m [0;32m'double'[0m
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb77b8[0m <[0;33mcol:19[0m, [0;33mcol:33[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb7780[0m <[0;33mcol:19[0m, [0;33mcol:33[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7750[0m <[0;33mcol:19[0m, [0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb7710[0m <[0;33mcol:19[0m, [0;33mcol:29[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb76e0[0m <[0;33mcol:19[0m, [0;33mcol:26[0m> [0;32m'li *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5eb76a0[0m <[0;33mcol:19[0m, [0;33mcol:26[0m> [0;32m'li [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7670[0m <[0;33mcol:19[0m> [0;32m'li (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | |     |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7630[0m <[0;33mcol:19[0m> [0;32m'li [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c55980[0m[0;1;36m 'floor'[0m [0;32m'li [105][105]'[0m
[0;34m  |       | |     |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7688[0m <[0;33mcol:25[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7650[0m <[0;33mcol:25[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb56e8[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb76f8[0m <[0;33mcol:28[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb76c0[0m <[0;33mcol:28[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb57f8[0m[0;1;36m 'j'[0m [0;32m'li':'long long'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7768[0m <[0;33mcol:33[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb7730[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 20[0m
[0;34m  |       | |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5eb7878[0m <[0;33mcol:36[0m, [0;33mline:95:7[0m>
[0;34m  |       | | `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x5eb7848[0m <[0;33mline:94:9[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |       | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb77f0[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6db0[0m[0;1;36m 'ntime'[0m [0;32m'double'[0m
[0;34m  |       | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7830[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb7810[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5eb7918[0m <[0;33mline:95:14[0m, [0;33mline:98:7[0m>
[0;34m  |       |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x5eb78e8[0m <[0;33mline:97:9[0m, [0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |       |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7890[0m <[0;33mcol:9[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6db0[0m[0;1;36m 'ntime'[0m [0;32m'double'[0m
[0;34m  |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb78d0[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5eb78b0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 10[0m
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x5ed6040[0m <[0;33mline:100:7[0m, [0;33mcol:71[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5eb79c8[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7998[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7958[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6db0[0m[0;1;36m 'ntime'[0m [0;32m'double'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb79b0[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7978[0m <[0;33mcol:18[0m> [0;32m'const double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c51e78[0m[0;1;36m 'DOUBLE_MAX'[0m [0;32m'const double'[0m
[0;34m  |         `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5ed6028[0m <[0;33mcol:30[0m, [0;33mcol:71[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5ed5fe8[0m <[0;33mcol:30[0m, [0;33mcol:71[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |             |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5ed5fb8[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push[0;33m 0x5c7cf88[0m
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb79e8[0m <[0;33mcol:30[0m> [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c76fe0[0m[0;1;36m 'q'[0m [0;32m'priority_queue<pair<double, pi> >':'std::priority_queue<std::pair<double, std::pair<long long, long long> >, std::vector<std::pair<double, std::pair<long long, long long> >, std::allocator<std::pair<double, std::pair<long long, long long> > > >, std::less<std::pair<double, std::pair<long long, long long> > > >'[0m
[0;34m  |             `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5ed6010[0m <[0;33mcol:37[0m, [0;33mcol:70[0m> [0;32m'pair<typename __decay_and_strip<double &>::__type, typename __decay_and_strip<pair<long long, long long> >::__type>':'std::pair<double, std::pair<long long, long long> >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |               `-[0m[0;1;35mCallExpr[0m[0;33m 0x5ed5f70[0m <[0;33mcol:37[0m, [0;33mcol:70[0m> [0;32m'pair<typename __decay_and_strip<double &>::__type, typename __decay_and_strip<pair<long long, long long> >::__type>':'std::pair<double, std::pair<long long, long long> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |                 |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed5f58[0m <[0;33mcol:37[0m> [0;32m'pair<typename __decay_and_strip<double &>::__type, typename __decay_and_strip<pair<long long, long long> >::__type> (*)(double &, std::pair<long long, long long> &&)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |                 | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb9240[0m <[0;33mcol:37[0m> [0;32m'pair<typename __decay_and_strip<double &>::__type, typename __decay_and_strip<pair<long long, long long> >::__type> (double &, std::pair<long long, long long> &&)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5eb9120[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<double &>::__type, typename __decay_and_strip<pair<long long, long long> >::__type> (double &, std::pair<long long, long long> &&)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4cbe120[0m[0;1;36m 'make_pair'[0m)
[0;34m  |                 |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7ab0[0m <[0;33mcol:47[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb6db0[0m[0;1;36m 'ntime'[0m [0;32m'double'[0m
[0;34m  |                 `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5ed5fa0[0m <[0;33mcol:54[0m, [0;33mcol:69[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type>':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |                   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5eb7c08[0m <[0;33mcol:54[0m, [0;33mcol:69[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type>':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m
[0;34m  |                     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5eb7bf0[0m <[0;33mcol:54[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (*)(long long &, long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |                     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7bc8[0m <[0;33mcol:54[0m> [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (long long &, long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5d96f40[0m[0;1;36m 'make_pair'[0m [0;32m'pair<typename __decay_and_strip<long long &>::__type, typename __decay_and_strip<long long &>::__type> (long long &, long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4cbe120[0m[0;1;36m 'make_pair'[0m)
[0;34m  |                     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7b18[0m <[0;33mcol:64[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5e08[0m[0;1;36m 'ni'[0m [0;32m'li':'long long'[0m
[0;34m  |                     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5eb7b38[0m <[0;33mcol:67[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5eb5f80[0m[0;1;36m 'nj'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5ed6420[0m <[0;33mline:104:3[0m, [0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6408[0m <[0;33mcol:3[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ed6390[0m <[0;33mcol:3[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x52046a0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6458[0m <[0;33mcol:10[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5ed6190[0m <[0;33mcol:10[0m> [0;32m'const char [19]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%lld: %.09f\n"[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6470[0m <[0;33mcol:33[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ed61c0[0m <[0;33mcol:33[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5c52488[0m[0;1;36m 'casenum'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6488[0m <[0;33mcol:42[0m, [0;33mcol:53[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ed6370[0m <[0;33mcol:42[0m, [0;33mcol:53[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6358[0m <[0;33mcol:42[0m, [0;33mcol:48[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5ed62a8[0m <[0;33mcol:42[0m, [0;33mcol:48[0m> [0;32m'double [105]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6290[0m <[0;33mcol:42[0m> [0;32m'double (*)[105]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ed61e0[0m <[0;33mcol:42[0m> [0;32m'double [105][105]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c57bd0[0m[0;1;36m 'dp'[0m [0;32m'double [105][105]'[0m
[0;34m  |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ed6270[0m <[0;33mcol:45[0m, [0;33mcol:47[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6240[0m <[0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ed6200[0m <[0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c52720[0m[0;1;36m 'h'[0m [0;32m'li':'long long'[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6258[0m <[0;33mcol:47[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ed6220[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5ed6338[0m <[0;33mcol:50[0m, [0;33mcol:52[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6308[0m <[0;33mcol:50[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5ed62c8[0m <[0;33mcol:50[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5c526a8[0m[0;1;36m 'w'[0m [0;32m'li':'long long'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5ed6320[0m <[0;33mcol:52[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5ed62e8[0m <[0;33mcol:52[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5ed64a0[0m <[0;33mline:105:3[0m>

Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x58bd818[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58bd788[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x5ecd770[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x616abc8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x616ad28[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x616adb8[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x616aec8[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x616adf0[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x616b020[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x616af90[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x616b120[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x616aa18 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x616b1f8[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x616b1f8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x616b308[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x616b3a8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x616b3a8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x616b4b8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x646ea38[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:13[0m[0;1;36m remainder[0m [0;32m'double (double, double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x646e910[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x646e990[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x646eae8[0m <[0;33mcol:13[0m> Implicit

Dumping __remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x646ec68[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:123:1[0m[0;1;36m __remainder[0m [0;32m'double (double, double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x646eb40[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x646ebc0[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'double'[0m

Dumping remainderf:
[0;1;32mFunctionDecl[0m[0;33m 0x64ad5c8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:342:1[0m[0;1;36m remainderf[0m [0;32m'float (float, float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64ad4a0[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64ad520[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x64ad678[0m <[0;33m<scratch space>:342:1[0m> Implicit

Dumping __remainderf:
[0;1;32mFunctionDecl[0m[0;33m 0x64ad7f8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:344:1[0m[0;1;36m __remainderf[0m [0;32m'float (float, float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64ad6d0[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64ad750[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'float'[0m

Dumping remainderl:
[0;1;32mFunctionDecl[0m[0;33m 0x64e23a8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:225:1[0m[0;1;36m remainderl[0m [0;32m'long double (long double, long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64e2280[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64e2300[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x64e2458[0m <[0;33m<scratch space>:225:1[0m> Implicit

Dumping __remainderl:
[0;1;32mFunctionDecl[0m[0;33m 0x64e25d8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:227:1[0m[0;1;36m __remainderl[0m [0;32m'long double (long double, long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64e24b0[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64e2530[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'long double'[0m

Dumping remainderf32:
[0;1;32mFunctionDecl[0m[0;33m 0x651b568[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:80:1[0m[0;1;36m remainderf32[0m [0;32m'_Float32 (_Float32, _Float32) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x651b450[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32':'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x651b4c8[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32':'float'[0m

Dumping __remainderf32:
[0;1;32mFunctionDecl[0m[0;33m 0x651b740[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:82:1[0m[0;1;36m __remainderf32[0m [0;32m'_Float32 (_Float32, _Float32) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x651b628[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32':'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x651b6a0[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32':'float'[0m

Dumping remainderf64:
[0;1;32mFunctionDecl[0m[0;33m 0x6555268[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:332:1[0m[0;1;36m remainderf64[0m [0;32m'_Float64 (_Float64, _Float64) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6555150[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65551c8[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64':'double'[0m

Dumping __remainderf64:
[0;1;32mFunctionDecl[0m[0;33m 0x6555440[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:334:1[0m[0;1;36m __remainderf64[0m [0;32m'_Float64 (_Float64, _Float64) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6555328[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65553a0[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64':'double'[0m

Dumping remainderf32x:
[0;1;32mFunctionDecl[0m[0;33m 0x6583268[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:214:1[0m[0;1;36m remainderf32x[0m [0;32m'_Float32x (_Float32x, _Float32x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6583150[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32x':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65831c8[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32x':'double'[0m

Dumping __remainderf32x:
[0;1;32mFunctionDecl[0m[0;33m 0x65ac6a8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:216:1[0m[0;1;36m __remainderf32x[0m [0;32m'_Float32x (_Float32x, _Float32x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65ac590[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32x':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65ac608[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32x':'double'[0m

Dumping remainderf64x:
[0;1;32mFunctionDecl[0m[0;33m 0x65c7390[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:122:1[0m[0;1;36m remainderf64x[0m [0;32m'_Float64x (_Float64x, _Float64x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65c7278[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64x':'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65c72f0[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64x':'long double'[0m

Dumping __remainderf64x:
[0;1;32mFunctionDecl[0m[0;33m 0x65c7568[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:124:1[0m[0;1;36m __remainderf64x[0m [0;32m'_Float64x (_Float64x, _Float64x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65c7450[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64x':'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65c74c8[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64x':'long double'[0m

Dumping std::remainder:
[0;1;32mUsingDecl[0m[0;33m 0x6613b88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1194:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainder

Dumping std::remainder:
[0;1;32mUsingShadowDecl[0m[0;33m 0x6613be0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1194:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x646ea38[0m[0;1;36m 'remainder'[0m [0;32m'double (double, double) throw()'[0m

Dumping std::remainderf:
[0;1;32mUsingDecl[0m[0;33m 0x6613c38[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1195:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainderf

Dumping std::remainderf:
[0;1;32mUsingShadowDecl[0m[0;33m 0x6613c90[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1195:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x64ad5c8[0m[0;1;36m 'remainderf'[0m [0;32m'float (float, float) throw()'[0m

Dumping std::remainderl:
[0;1;32mUsingDecl[0m[0;33m 0x6613ce8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1196:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainderl

Dumping std::remainderl:
[0;1;32mUsingShadowDecl[0m[0;33m 0x6613d40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1196:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x64e23a8[0m[0;1;36m 'remainderl'[0m [0;32m'long double (long double, long double) throw()'[0m

Dumping std::remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x663b130[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1712:3[0m, [0;33mline:1714:44[0m> [0;33mline:1713:3[0m constexpr[0;1;36m remainder[0m [0;32m'float (float, float)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663b010[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m __x[0m [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663b090[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m used[0;1;36m __y[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663b4d8[0m <[0;33mline:1714:3[0m, [0;33mcol:44[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x663b4c8[0m <[0;33mcol:5[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x663b468[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663b450[0m <[0;33mcol:12[0m> [0;32m'float (*)(float, float) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663b3f0[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x663b230[0m[0;1;36m '__builtin_remainderf'[0m [0;32m'float (float, float) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663b498[0m <[0;33mcol:33[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663b410[0m <[0;33mcol:33[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663b010[0m[0;1;36m '__x'[0m [0;32m'float'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663b4b0[0m <[0;33mcol:38[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663b430[0m <[0;33mcol:38[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663b090[0m[0;1;36m '__y'[0m [0;32m'float'[0m

Dumping std::remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x663b628[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1716:3[0m, [0;33mline:1718:44[0m> [0;33mline:1717:3[0m constexpr[0;1;36m remainder[0m [0;32m'long double (long double, long double)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663b508[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663b588[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;33mcol:42[0m used[0;1;36m __y[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663b9d0[0m <[0;33mline:1718:3[0m, [0;33mcol:44[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x663b9c0[0m <[0;33mcol:5[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x663b960[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663b948[0m <[0;33mcol:12[0m> [0;32m'long double (*)(long double, long double) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663b8e8[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x663b728[0m[0;1;36m '__builtin_remainderl'[0m [0;32m'long double (long double, long double) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663b990[0m <[0;33mcol:33[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663b908[0m <[0;33mcol:33[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663b508[0m[0;1;36m '__x'[0m [0;32m'long double'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x663b9a8[0m <[0;33mcol:38[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663b928[0m <[0;33mcol:38[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663b588[0m[0;1;36m '__y'[0m [0;32m'long double'[0m

Dumping std::remainder:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x663c238[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1722:3[0m, [0;33mline:1728:5[0m> [0;33mline:1724:5[0m[0;1;36m remainder[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x663b9e8[0m <[0;33mline:1722:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x663ba58[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x663c198[0m <[0;33mline:1723:5[0m, [0;33mline:1728:5[0m> [0;33mline:1724:5[0m constexpr[0;1;36m remainder[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663c040[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __x[0m [0;32m'_Tp'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x663c0b8[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __y[0m [0;32m'_Up'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x663c9e0[0m <[0;33mline:1725:5[0m, [0;33mline:1728:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x663c858[0m <[0;33mline:1726:7[0m, [0;33mcol:71[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x663c800[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m __type[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x663c790[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m dependent
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x663c9d0[0m <[0;33mline:1727:7[0m, [0;33mcol:48[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x663c9a0[0m <[0;33mcol:14[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x663c870[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'remainder'[0;33m 0x663c238[0m[0;33m 0x663b628[0m[0;33m 0x663b130[0m[0;33m 0x6613be0[0m
[0;34m        |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x663c920[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m[0;36m[0m[0;36m[0m [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663c900[0m <[0;33mcol:31[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663c040[0m[0;1;36m '__x'[0m [0;32m'_Tp'[0m
[0;34m        `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x663c978[0m <[0;33mcol:37[0m, [0;33mcol:47[0m> [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m[0;36m[0m[0;36m[0m [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x663c958[0m <[0;33mcol:44[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x663c0b8[0m[0;1;36m '__y'[0m [0;32m'_Up'[0m

Dumping std::errc::argument_out_of_domain:
[0;1;32mEnumConstantDecl[0m[0;33m 0x667cc20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m[0;1;36m argument_out_of_domain[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x667cc00[0m <[0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x667cbe0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x66e0a70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:54:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x66e0b48[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x66e0b18[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66e0ad8[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66e0510[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x66e0b30[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66e0af8[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x66e06a8[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x66e25f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:88:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x66e26c8[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x66e2698[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66e2658[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x66e2090[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x66e26b0[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x66e2678[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x66e2228[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remainder:
[0;1;32mVarDecl[0m[0;33m 0x69d5ea0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:297:7[0m, [0;33mcol:35[0m> [0;33mcol:21[0m referenced[0;1;36m __remainder[0m [0;32m'_DistanceType':'typename std::iterator_traits<_RandomAccessIter>::difference_type'[0m cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69d5f08[0m <[0;33mcol:35[0m> [0;32m'_Integer'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x69d4ae0[0m[0;1;36m '__count'[0m [0;32m'_Integer'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x6cee450[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/amylase/1836486_1485488_amylase.cpp:108:1[0m, [0;33mline:114:1[0m> [0;33mline:108:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6cef3f0[0m <[0;33mcol:11[0m, [0;33mline:114:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6cee568[0m <[0;33mline:109:3[0m, [0;33mcol:7[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6cee500[0m <[0;33mcol:3[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m t[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6cef000[0m <[0;33mline:110:3[0m, [0;33mcol:10[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ceefe8[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ceefc8[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x683f078[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(long long &)'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cee580[0m <[0;33mcol:3[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6920c68[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cee5a0[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cee500[0m[0;1;36m 't'[0m [0;32m'li':'long long'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6cef388[0m <[0;33mline:22:25[0m, [0;33mline:111:22[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6cef0e8[0m <[0;33mline:22:29[0m, [0;33mcol:35[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6cef048[0m <[0;33mcol:29[0m, [0;33mcol:34[0m> [0;33mline:111:7[0m used[0;1;36m i[0m [0;32m'li':'long long'[0m cinit
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cef0d0[0m <[0;33mline:22:34[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cef0b0[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6cef1c8[0m <[0;33mline:111:7[0m, [0;33mline:22:45[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cef1b0[0m <[0;33mline:111:7[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cef100[0m <[0;33mcol:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cef048[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6cef190[0m <[0;33mline:22:38[0m, [0;33mcol:45[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mCStyleCastExpr[0m[0;33m 0x6cef168[0m <[0;33mcol:39[0m, [0;33mline:111:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cef150[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m> part_of_explicit_cast
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cef120[0m <[0;33mcol:10[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cee500[0m[0;1;36m 't'[0m [0;32m'li':'long long'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6cef208[0m <[0;33mcol:7[0m, [0;33mline:22:48[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cef1e8[0m <[0;33mline:111:7[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cef048[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6cef360[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cef348[0m <[0;33mcol:13[0m> [0;32m'void (*)(li)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cef2f8[0m <[0;33mcol:13[0m> [0;32m'void (li)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a6a398[0m[0;1;36m 'solve'[0m [0;32m'void (li)'[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6cef2d8[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cef2a8[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6cef268[0m <[0;33mcol:19[0m> [0;32m'li':'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6cef048[0m[0;1;36m 'i'[0m [0;32m'li':'long long'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6cef2c0[0m <[0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cef288[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6cef3e0[0m <[0;33mline:113:3[0m, [0;33mcol:10[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cef3c0[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

