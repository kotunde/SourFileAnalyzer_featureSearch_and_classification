Dumping solve:
[0;1;32mFunctionDecl[0m[0;33m 0x5babeb8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/akrasuski1/2974486_5690574640250880_akrasuski1.cpp:20:1[0m, [0;33mline:85:1[0m> [0;33mline:20:14[0m used[0;1;36m solve[0m [0;32m'vector<rect> (vector<rect>, int, int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ba9920[0m <[0;33mcol:20[0m, [0;33mcol:32[0m> [0;33mcol:32[0m used[0;1;36m solution[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ba99a0[0m <[0;33mcol:41[0m, [0;33mcol:45[0m> [0;33mcol:45[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ba9a20[0m <[0;33mcol:47[0m, [0;33mcol:51[0m> [0;33mcol:51[0m used[0;1;36m r[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ba9aa0[0m <[0;33mcol:53[0m, [0;33mcol:57[0m> [0;33mcol:57[0m used[0;1;36m c[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd6018[0m <[0;33mcol:59[0m, [0;33mline:85:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bca868[0m <[0;33mline:24:2[0m, [0;33mcol:64[0m>
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bca620[0m <[0;33mline:18:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bca600[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bca850[0m <[0;33mline:24:16[0m, [0;33mcol:64[0m>
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5bca7b0[0m <[0;33mcol:17[0m, [0;33mcol:62[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bca798[0m <[0;33mcol:17[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bca718[0m <[0;33mcol:17[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x57abca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bca7f0[0m <[0;33mcol:24[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5bca680[0m <[0;33mcol:24[0m> [0;32m'const char [30]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Called with n=%d, r=%d, c=%d\n"[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bca808[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bca6b8[0m <[0;33mcol:57[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bca820[0m <[0;33mcol:59[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bca6d8[0m <[0;33mcol:59[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bca838[0m <[0;33mcol:61[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bca6f8[0m <[0;33mcol:61[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bd1e48[0m <[0;33mline:26:2[0m, [0;33mcol:18[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bca9f0[0m <[0;33mcol:2[0m, [0;33mcol:15[0m> [0;33mcol:15[0m used[0;1;36m emp[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd1e20[0m <[0;33mcol:15[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<rect> >::value)'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd2e08[0m <[0;33mline:29:2[0m, [0;33mline:31:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd1eb8[0m <[0;33mline:29:5[0m, [0;33mcol:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd1ea0[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd1e60[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd1e80[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd2df0[0m <[0;33mcol:10[0m, [0;33mline:31:2[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd2de0[0m <[0;33mline:30:3[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd2db0[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd2d98[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd1ed8[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd2fa0[0m <[0;33mline:32:2[0m, [0;33mline:34:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd2ee8[0m <[0;33mline:32:5[0m, [0;33mcol:9[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd2ed0[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd2e20[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd2eb0[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd2e80[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd2e40[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd2e98[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd2e60[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd2f88[0m <[0;33mcol:11[0m, [0;33mline:34:2[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd2f70[0m <[0;33mline:33:3[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd2f40[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m elidable
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd2f28[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd2f08[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bca9f0[0m[0;1;36m 'emp'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd3420[0m <[0;33mline:35:2[0m, [0;33mline:39:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd3080[0m <[0;33mline:35:5[0m, [0;33mcol:10[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3068[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd2fb8[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd3048[0m <[0;33mcol:8[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3018[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd2fd8[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3030[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd2ff8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd33f8[0m <[0;33mcol:12[0m, [0;33mline:39:2[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bd3228[0m <[0;33mline:36:3[0m, [0;33mcol:15[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bd30b0[0m <[0;33mcol:3[0m, [0;33mcol:14[0m> [0;33mcol:8[0m used[0;1;36m p[0m [0;32m'rect'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x5bd31a8[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;32m'rect'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd31f8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3118[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3210[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3138[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5bd3310[0m <[0;33mline:37:3[0m, [0;33mcol:23[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5bd32e0[0m <[0;33mcol:3[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x5bbfa28[0m
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3240[0m <[0;33mcol:3[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3368[0m <[0;33mcol:22[0m> [0;32m'const rect'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd32c0[0m <[0;33mcol:22[0m> [0;32m'rect'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd30b0[0m[0;1;36m 'p'[0m [0;32m'rect'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd33e8[0m <[0;33mline:38:3[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd33b8[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd33a0[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3380[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd4450[0m <[0;33mline:40:2[0m, [0;33mline:51:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd3490[0m <[0;33mline:40:5[0m, [0;33mcol:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3478[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3438[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd3458[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd4430[0m <[0;33mcol:10[0m, [0;33mline:51:2[0m>
[0;34m  |   |-[0m[0;1;35mParenExpr[0m[0;33m 0x5bd3ef0[0m <[0;33m/usr/include/assert.h:93:6[0m, [0;33mline:95:69[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mConditionalOperator[0m[0;33m 0x5bd3ec0[0m <[0;33mline:93:7[0m, [0;33mline:95:68[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5bd35c8[0m <[0;33mline:93:7[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m static_cast<_Bool> <NoOp>
[0;34m  |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd3598[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/akrasuski1/2974486_5690574640250880_akrasuski1.cpp:42:10[0m, [0;33mcol:26[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |   |   |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5bd3500[0m <[0;33mcol:10[0m, [0;33mcol:24[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5bd34d0[0m <[0;33mcol:10[0m, [0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5bbe230[0m
[0;34m  |   |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3548[0m <[0;33mcol:10[0m> [0;32m'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd34b0[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3580[0m <[0;33mcol:26[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd3560[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   |-[0m[0;1;35mCXXFunctionalCastExpr[0m[0;33m 0x5bd3628[0m <[0;33m/usr/include/assert.h:94:9[0m, [0;33mcol:16[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m functional cast to void <ToVoid>
[0;34m  |   |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd3608[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5bd3e20[0m <[0;33mline:95:9[0m, [0;33mcol:68[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3e08[0m <[0;33mcol:9[0m> [0;32m'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3d90[0m <[0;33mcol:9[0m> [0;32m'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5ba88c0[0m[0;1;36m '__assert_fail'[0m [0;32m'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3e60[0m <[0;33m<scratch space>:172:1[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5bd3718[0m <[0;33mcol:1[0m> [0;32m'const char [18]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "solution.size()>0"[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3e78[0m <[0;33mline:173:1[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5bd37c8[0m <[0;33mcol:1[0m> [0;32m'const char [111]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/akrasuski1/2974486_5690574640250880_akrasuski1.cpp"[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3e90[0m <[0;33mline:174:1[0m> [0;32m'unsigned int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd3850[0m <[0;33mcol:1[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 42[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3ea8[0m <[0;33m/usr/include/assert.h:129:30[0m, [0;33mcol:44[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5bd3d78[0m <[0;33mcol:30[0m, [0;33mcol:44[0m> [0;32m'const char [48]'[0m[0;36m lvalue[0m[0;36m[0m prefix '__extension__' cannot overflow
[0;34m  |   |         `-[0m[0;1;35mPredefinedExpr[0m[0;33m 0x5bd3d60[0m <[0;33mcol:44[0m> [0;32m'const char [48]'[0m[0;36m lvalue[0m[0;36m[0m __PRETTY_FUNCTION__
[0;34m  |   |           `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5bd38e8[0m <[0;33mcol:44[0m> [0;32m'const char [48]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "vector<rect> solve(vector<rect>, int, int, int)"[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd4408[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/akrasuski1/2974486_5690574640250880_akrasuski1.cpp:43:3[0m, [0;33mline:50:3[0m> has_else
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4018[0m <[0;33mline:43:6[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd3f68[0m <[0;33mcol:6[0m, [0;33mcol:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3f50[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3f10[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd3f30[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd3ff8[0m <[0;33mcol:11[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3fc8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3f88[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd3fe0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd3fa8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd4348[0m <[0;33mcol:16[0m, [0;33mline:47:3[0m>
[0;34m  |     | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bd41a8[0m <[0;33mline:44:4[0m, [0;33mcol:16[0m>
[0;34m  |     | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bd4048[0m <[0;33mcol:4[0m, [0;33mcol:15[0m> [0;33mcol:9[0m used[0;1;36m p[0m [0;32m'rect'[0m cinit
[0;34m  |     | |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x5bd4140[0m <[0;33mcol:11[0m, [0;33mcol:15[0m> [0;32m'rect'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |     |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd40b0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4190[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd40d0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |     | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5bd4290[0m <[0;33mline:45:4[0m, [0;33mcol:24[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5bd4260[0m <[0;33mcol:4[0m, [0;33mcol:13[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x5bbfa28[0m
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd41c0[0m <[0;33mcol:4[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd42b8[0m <[0;33mcol:23[0m> [0;32m'const rect'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4240[0m <[0;33mcol:23[0m> [0;32m'rect'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4048[0m[0;1;36m 'p'[0m [0;32m'rect'[0m
[0;34m  |     | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd4338[0m <[0;33mline:46:4[0m, [0;33mcol:11[0m>
[0;34m  |     |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd4308[0m <[0;33mcol:11[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd42f0[0m <[0;33mcol:11[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd42d0[0m <[0;33mcol:11[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd43f0[0m <[0;33mline:48:7[0m, [0;33mline:50:3[0m>
[0;34m  |       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd43d8[0m <[0;33mline:49:4[0m, [0;33mcol:11[0m>
[0;34m  |         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd43a8[0m <[0;33mcol:11[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m elidable
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4390[0m <[0;33mcol:11[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4370[0m <[0;33mcol:11[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bca9f0[0m[0;1;36m 'emp'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd4cc8[0m <[0;33mline:52:2[0m, [0;33mline:66:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd44c0[0m <[0;33mline:52:5[0m, [0;33mcol:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd44a8[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4468[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd4488[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd4ca0[0m <[0;33mcol:10[0m, [0;33mline:66:2[0m>
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd46a8[0m <[0;33mline:53:3[0m, [0;33mline:57:3[0m>
[0;34m  |   | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5bd4530[0m <[0;33mline:53:6[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5bd4500[0m <[0;33mcol:6[0m, [0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .empty[0;33m 0x5bbe808[0m
[0;34m  |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4550[0m <[0;33mcol:6[0m> [0;32m'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd44e0[0m <[0;33mcol:6[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd4690[0m <[0;33mcol:23[0m, [0;33mline:57:3[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd4678[0m <[0;33mline:54:4[0m, [0;33mline:56:4[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd45c0[0m <[0;33mline:54:7[0m, [0;33mcol:9[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd45a8[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4568[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd4588[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 4[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd4660[0m <[0;33mcol:11[0m, [0;33mline:56:4[0m>
[0;34m  |   |       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd4648[0m <[0;33mline:55:5[0m, [0;33mcol:12[0m>
[0;34m  |   |         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd4618[0m <[0;33mcol:12[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m elidable
[0;34m  |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4600[0m <[0;33mcol:12[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd45e0[0m <[0;33mcol:12[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bca9f0[0m[0;1;36m 'emp'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd4c08[0m <[0;33mline:58:3[0m, [0;33mline:64:3[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4758[0m <[0;33mline:58:6[0m, [0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4718[0m <[0;33mcol:6[0m, [0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '%'
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4700[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd46c0[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd46e0[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd4738[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd4bf0[0m <[0;33mcol:13[0m, [0;33mline:64:3[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd4bd8[0m <[0;33mline:59:4[0m, [0;33mline:63:4[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4840[0m <[0;33mline:59:7[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4828[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4778[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4808[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd47d8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4798[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd47f0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd47b8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd4bb0[0m <[0;33mcol:14[0m, [0;33mline:63:4[0m>
[0;34m  |   |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bd4a10[0m <[0;33mline:60:5[0m, [0;33mcol:19[0m>
[0;34m  |   |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bd4870[0m <[0;33mcol:5[0m, [0;33mcol:18[0m> [0;33mcol:10[0m used[0;1;36m p[0m [0;32m'rect'[0m cinit
[0;34m  |   |       |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x5bd49c0[0m <[0;33mcol:12[0m, [0;33mcol:18[0m> [0;32m'rect'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4930[0m <[0;33mcol:13[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   |       |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4918[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd48d8[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |       |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd48f8[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |       |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd4950[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |       |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5bd4af8[0m <[0;33mline:61:5[0m, [0;33mcol:25[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |       | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5bd4ac8[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x5bbfa28[0m
[0;34m  |   |       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4a28[0m <[0;33mcol:5[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4b20[0m <[0;33mcol:24[0m> [0;32m'const rect'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4aa8[0m <[0;33mcol:24[0m> [0;32m'rect'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4870[0m[0;1;36m 'p'[0m [0;32m'rect'[0m
[0;34m  |   |       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd4ba0[0m <[0;33mline:62:5[0m, [0;33mcol:12[0m>
[0;34m  |   |         `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd4b70[0m <[0;33mcol:12[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m
[0;34m  |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4b58[0m <[0;33mcol:12[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4b38[0m <[0;33mcol:12[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd4c88[0m <[0;33mline:65:3[0m, [0;33mcol:10[0m>
[0;34m  |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd4c58[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m elidable
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4c40[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4c20[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bca9f0[0m[0;1;36m 'emp'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5bd5f60[0m <[0;33mline:69:2[0m, [0;33mline:83:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bd4d80[0m <[0;33mline:69:6[0m, [0;33mcol:13[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bd4cf8[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;33mcol:10[0m used[0;1;36m a[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd4d60[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4e08[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4dd8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4d98[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4df0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4db8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5bd4e48[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4e28[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd5f48[0m <[0;33mcol:22[0m, [0;33mline:83:2[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd5f30[0m <[0;33mline:70:3[0m, [0;33mline:82:3[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4f78[0m <[0;33mline:70:6[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd4eb8[0m <[0;33mcol:6[0m, [0;33mcol:9[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4ea0[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4e60[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd4e80[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5bd4f60[0m <[0;33mcol:12[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5bd4f28[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5bd4ef8[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .empty[0;33m 0x5bbe808[0m
[0;34m  |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4f48[0m <[0;33mcol:13[0m> [0;32m'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4ed8[0m <[0;33mcol:13[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd5f18[0m <[0;33mcol:30[0m, [0;33mline:82:3[0m>
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd5f00[0m <[0;33mline:71:4[0m, [0;33mline:81:4[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5190[0m <[0;33mline:71:7[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |         | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd50a0[0m <[0;33mcol:7[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |         | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5060[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |         | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5048[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4f98[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |         | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5028[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |         | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd4ff8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4fb8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  |         | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5010[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd4fd8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  |         | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd5080[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |         | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5170[0m <[0;33mcol:17[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  |         |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5130[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |         |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5100[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd50c0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  |         |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5118[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd50e0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  |         |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd5150[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd5ed0[0m <[0;33mcol:24[0m, [0;33mline:81:4[0m>
[0;34m  |           |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bd53f0[0m <[0;33mline:72:5[0m, [0;33mcol:30[0m>
[0;34m  |           | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bd5320[0m <[0;33mcol:5[0m, [0;33mcol:22[0m> [0;33mcol:17[0m used[0;1;36m sol2[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m cinit
[0;34m  |           |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd53c0[0m <[0;33mcol:22[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::vector<rect, std::allocator<rect> > &)'[0m
[0;34m  |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd53a8[0m <[0;33mcol:22[0m> [0;32m'const vector<rect>':'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5388[0m <[0;33mcol:22[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9920[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |           |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd5750[0m <[0;33mline:73:5[0m, [0;33mline:76:5[0m>
[0;34m  |           | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5460[0m <[0;33mline:73:8[0m, [0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |           | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5448[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5408[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  |           | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd5428[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |           | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd5730[0m <[0;33mcol:13[0m, [0;33mline:76:5[0m>
[0;34m  |           |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bd5608[0m <[0;33mline:74:6[0m, [0;33mcol:18[0m>
[0;34m  |           |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bd5490[0m <[0;33mcol:6[0m, [0;33mcol:17[0m> [0;33mcol:11[0m used[0;1;36m p[0m [0;32m'rect'[0m cinit
[0;34m  |           |   |   `-[0m[0;1;35mInitListExpr[0m[0;33m 0x5bd5588[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;32m'rect'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd55d8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd54f8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  |           |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd55f0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5518[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  |           |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5bd56f0[0m <[0;33mline:75:6[0m, [0;33mcol:22[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5bd56c0[0m <[0;33mcol:6[0m, [0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x5bbfa28[0m
[0;34m  |           |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5620[0m <[0;33mcol:6[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd5320[0m[0;1;36m 'sol2'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5718[0m <[0;33mcol:21[0m> [0;32m'const rect'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd56a0[0m <[0;33mcol:21[0m> [0;32m'rect'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd5490[0m[0;1;36m 'p'[0m [0;32m'rect'[0m
[0;34m  |           |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bd5d68[0m <[0;33mline:77:5[0m, [0;33mcol:47[0m>
[0;34m  |           | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bd58e0[0m <[0;33mcol:5[0m, [0;33mcol:46[0m> [0;33mcol:17[0m used[0;1;36m sol3[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m nrvo cinit
[0;34m  |           |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5bd5d50[0m <[0;33mcol:22[0m, [0;33mcol:46[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd5d20[0m <[0;33mcol:22[0m, [0;33mcol:46[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m elidable
[0;34m  |           |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5bd5d08[0m <[0;33mcol:22[0m, [0;33mcol:46[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |           |         `-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x5bd5ce8[0m <[0;33mcol:22[0m, [0;33mcol:46[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x5bd5ce8[0m)
[0;34m  |           |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x5bd5c30[0m <[0;33mcol:22[0m, [0;33mcol:46[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5c18[0m <[0;33mcol:22[0m> [0;32m'vector<rect> (*)(vector<rect>, int, int, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5ba0[0m <[0;33mcol:22[0m> [0;32m'vector<rect> (vector<rect>, int, int, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5babeb8[0m[0;1;36m 'solve'[0m [0;32m'vector<rect> (vector<rect>, int, int, int)'[0m
[0;34m  |           |             |-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x5bd5cc0[0m <[0;33mcol:28[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x5bd5cc0[0m)
[0;34m  |           |             | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd5c88[0m <[0;33mcol:28[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::vector<rect, std::allocator<rect> > &)'[0m
[0;34m  |           |             |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5c70[0m <[0;33mcol:28[0m> [0;32m'const vector<rect>':'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |           |             |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5990[0m <[0;33mcol:28[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd5320[0m[0;1;36m 'sol2'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |           |             |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5a78[0m <[0;33mcol:33[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |           |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5a60[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd59b0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba99a0[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |           |             | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5a40[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |           |             |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5a10[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |             |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd59d0[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  |           |             |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5a28[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |             |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd59f0[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  |           |             |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5af0[0m <[0;33mcol:39[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |           |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5ad8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5a98[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9a20[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m  |           |             | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bd5ab8[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |           |             `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bd5b80[0m <[0;33mcol:43[0m, [0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |           |               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5b50[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5b10[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5ba9aa0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  |           |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5b68[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5b30[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd4cf8[0m[0;1;36m 'a'[0m [0;32m'int'[0m
[0;34m  |           `-[0m[0;1;35mIfStmt[0m[0;33m 0x5bd5eb8[0m <[0;33mline:78:5[0m, [0;33mline:80:5[0m>
[0;34m  |             |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5bd5e08[0m <[0;33mline:78:8[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |             | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5bd5dd0[0m <[0;33mcol:9[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |             |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5bd5da0[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .empty[0;33m 0x5bbe808[0m
[0;34m  |             |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5df0[0m <[0;33mcol:9[0m> [0;32m'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |             |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5d80[0m <[0;33mcol:9[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd58e0[0m[0;1;36m 'sol3'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  |             `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bd5ea0[0m <[0;33mcol:22[0m, [0;33mline:80:5[0m>
[0;34m  |               `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd5e88[0m <[0;33mline:79:6[0m, [0;33mcol:13[0m>
[0;34m  |                 `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd5e58[0m <[0;33mcol:13[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m elidable
[0;34m  |                   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5e40[0m <[0;33mcol:13[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |                     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5e20[0m <[0;33mcol:13[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bd58e0[0m[0;1;36m 'sol3'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bd6000[0m <[0;33mline:84:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5bd5fd0[0m <[0;33mcol:9[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m elidable
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bd5fb8[0m <[0;33mcol:9[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bd5f98[0m <[0;33mcol:9[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bca9f0[0m[0;1;36m 'emp'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m

Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x6008050[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6007fc0[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x6418008[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/akrasuski1/2974486_5690574640250880_akrasuski1.cpp:87:1[0m, [0;33mline:200:1[0m> [0;33mline:87:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641e268[0m <[0;33mcol:11[0m, [0;33mline:200:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6418128[0m <[0;33mline:88:2[0m, [0;33mcol:7[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64180c0[0m <[0;33mcol:2[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m t[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6418298[0m <[0;33mline:89:2[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418280[0m <[0;33mcol:2[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418260[0m <[0;33mcol:2[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5ff0480[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64182c8[0m <[0;33mcol:8[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6418208[0m <[0;33mcol:8[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6418248[0m <[0;33mcol:13[0m, [0;33mcol:14[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418228[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64180c0[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mForStmt[0m[0;33m 0x641e230[0m <[0;33mline:90:2[0m, [0;33mline:196:2[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6418380[0m <[0;33mline:90:6[0m, [0;33mcol:13[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64182f8[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;33mcol:10[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6418360[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6418408[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64183d8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418398[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64182f8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64183f0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64183b8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64180c0[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6418448[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418428[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64182f8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641e1f8[0m <[0;33mcol:22[0m, [0;33mline:196:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6418688[0m <[0;33mline:91:3[0m, [0;33mcol:14[0m>
[0;34m      | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6418478[0m <[0;33mcol:3[0m, [0;33mcol:7[0m> [0;33mcol:7[0m used[0;1;36m r[0m [0;32m'int'[0m
[0;34m      | |-[0m[0;1;32mVarDecl[0m[0;33m 0x64184f8[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m c[0m [0;32m'int'[0m
[0;34m      | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6418578[0m <[0;33mcol:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m used[0;1;36m m[0m [0;32m'int'[0m
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64185f8[0m <[0;33mcol:3[0m, [0;33mcol:13[0m> [0;33mcol:13[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x6418868[0m <[0;33mline:92:3[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418850[0m <[0;33mcol:3[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418830[0m <[0;33mcol:3[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5ff0480[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64188a8[0m <[0;33mcol:9[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6418768[0m <[0;33mcol:9[0m> [0;32m'const char [9]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d %d %d"[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64187a8[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418788[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64187e0[0m <[0;33mcol:23[0m, [0;33mcol:24[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64187c0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64184f8[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m      | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6418818[0m <[0;33mcol:26[0m, [0;33mcol:27[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64187f8[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418578[0m[0;1;36m 'm'[0m [0;32m'int'[0m
[0;34m      |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64189c8[0m <[0;33mline:93:3[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64188c0[0m <[0;33mcol:3[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64189a8[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m      |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6418950[0m <[0;33mcol:5[0m, [0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '*'
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418920[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64188e0[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m      |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418938[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418900[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64184f8[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m      |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418990[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418970[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418578[0m[0;1;36m 'm'[0m [0;32m'int'[0m
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x6418b80[0m <[0;33mline:94:3[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418b68[0m <[0;33mcol:3[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418b48[0m <[0;33mcol:3[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418bb0[0m <[0;33mcol:10[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6418aa8[0m <[0;33mcol:10[0m> [0;32m'const char [11]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d:\n"[0m
[0;34m      | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6418b28[0m <[0;33mcol:24[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m      |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418b10[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418ad0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64182f8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m      |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6418af0[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      `-[0m[0;1;35mIfStmt[0m[0;33m 0x641e1d0[0m <[0;33mline:95:3[0m, [0;33mline:195:3[0m> has_else
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6418c20[0m <[0;33mline:95:6[0m, [0;33mcol:9[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418c08[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418bc8[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m        | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6418be8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m        |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6419658[0m <[0;33mcol:11[0m, [0;33mline:107:3[0m>
[0;34m        | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6418ce0[0m <[0;33mline:96:4[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418cc8[0m <[0;33mcol:4[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418ca8[0m <[0;33mcol:4[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418d08[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6418c88[0m <[0;33mcol:11[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "c"[0m
[0;34m        | |-[0m[0;1;35mForStmt[0m[0;33m 0x6418fd8[0m <[0;33mline:97:4[0m, [0;33mline:99:4[0m>
[0;34m        | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6418dc0[0m <[0;33mline:97:8[0m, [0;33mcol:15[0m>
[0;34m        | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6418d38[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m        | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6418da0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m        | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m        | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6418e88[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m        | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418e70[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418dd8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418d38[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m        | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6418e50[0m <[0;33mcol:18[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m        | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418e38[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418df8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64184f8[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m        | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6418e18[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m        | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6418ec8[0m <[0;33mcol:22[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m        | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418ea8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418d38[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m        | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6418fc0[0m <[0;33mcol:26[0m, [0;33mline:99:4[0m>
[0;34m        | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6418f80[0m <[0;33mline:98:5[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418f68[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6418f48[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m        | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6418fa8[0m <[0;33mcol:12[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6418f28[0m <[0;33mcol:12[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "*"[0m
[0;34m        | |-[0m[0;1;35mCallExpr[0m[0;33m 0x64190b0[0m <[0;33mline:100:4[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419098[0m <[0;33mcol:4[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419078[0m <[0;33mcol:4[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64190d8[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6419058[0m <[0;33mcol:11[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m
[0;34m        | `-[0m[0;1;35mForStmt[0m[0;33m 0x6419620[0m <[0;33mline:101:4[0m, [0;33mline:106:4[0m>
[0;34m        |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6419190[0m <[0;33mline:101:8[0m, [0;33mcol:15[0m>
[0;34m        |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6419108[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m        |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6419170[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m        |   |-[0m[0;34m<<<NULL>>>[0m
[0;34m        |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6419218[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m        |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64191e8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64191a8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6419108[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m        |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419200[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64191c8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m        |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6419258[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m        |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419238[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6419108[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m        |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6419600[0m <[0;33mcol:24[0m, [0;33mline:106:4[0m>
[0;34m        |     |-[0m[0;1;35mForStmt[0m[0;33m 0x64194e8[0m <[0;33mline:102:5[0m, [0;33mline:104:5[0m>
[0;34m        |     | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6419310[0m <[0;33mline:102:9[0m, [0;33mcol:16[0m>
[0;34m        |     | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6419288[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m        |     | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64192f0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m        |     | |-[0m[0;34m<<<NULL>>>[0m
[0;34m        |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6419398[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m        |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419368[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419328[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6419288[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m        |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419380[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419348[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64184f8[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m        |     | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x64193d8[0m <[0;33mcol:21[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m        |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64193b8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6419288[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m        |     | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x64194d0[0m <[0;33mcol:25[0m, [0;33mline:104:5[0m>
[0;34m        |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6419490[0m <[0;33mline:103:6[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419478[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419458[0m <[0;33mcol:6[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m        |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64194b8[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        |     |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6419438[0m <[0;33mcol:13[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "*"[0m
[0;34m        |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x64195c0[0m <[0;33mline:105:5[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64195a8[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419588[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m        |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64195e8[0m <[0;33mcol:12[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        |         `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6419568[0m <[0;33mcol:12[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m
[0;34m        `-[0m[0;1;35mIfStmt[0m[0;33m 0x641e1a8[0m <[0;33mline:108:8[0m, [0;33mline:195:3[0m> has_else
[0;34m          |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x64196e0[0m <[0;33mline:108:11[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64196c8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419688[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m          | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x64196a8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m          |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6419e50[0m <[0;33mcol:16[0m, [0;33mline:117:3[0m>
[0;34m          | |-[0m[0;1;35mCallExpr[0m[0;33m 0x64197a0[0m <[0;33mline:109:4[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419788[0m <[0;33mcol:4[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419768[0m <[0;33mcol:4[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m          | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64197c8[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m          | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6419748[0m <[0;33mcol:11[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "c"[0m
[0;34m          | |-[0m[0;1;35mForStmt[0m[0;33m 0x6419a58[0m <[0;33mline:110:4[0m, [0;33mline:112:4[0m>
[0;34m          | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6419880[0m <[0;33mline:110:8[0m, [0;33mcol:15[0m>
[0;34m          | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x64197f8[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m          | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6419860[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m          | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m          | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6419908[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m          | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64198d8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419898[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64197f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m          | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64198f0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64198b8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m          | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6419948[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m          | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419928[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64197f8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m          | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6419a40[0m <[0;33mcol:24[0m, [0;33mline:112:4[0m>
[0;34m          | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6419a00[0m <[0;33mline:111:5[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64199e8[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64199c8[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m          | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419a28[0m <[0;33mcol:12[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m          | |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x64199a8[0m <[0;33mcol:12[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "."[0m
[0;34m          | |-[0m[0;1;35mForStmt[0m[0;33m 0x6419d38[0m <[0;33mline:113:4[0m, [0;33mline:115:4[0m>
[0;34m          | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6419b30[0m <[0;33mline:113:8[0m, [0;33mcol:15[0m>
[0;34m          | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6419aa8[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m          | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6419b10[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m          | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m          | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6419bb8[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m          | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419b88[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419b48[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6419aa8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m          | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419ba0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419b68[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418578[0m[0;1;36m 'm'[0m [0;32m'int'[0m
[0;34m          | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6419bf8[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m          | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419bd8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6419aa8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m          | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6419d20[0m <[0;33mcol:24[0m, [0;33mline:115:4[0m>
[0;34m          | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6419ce0[0m <[0;33mline:114:5[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419c98[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419c78[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m          | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419d08[0m <[0;33mcol:12[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m          | |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6419c58[0m <[0;33mcol:12[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "*"[0m
[0;34m          | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6419e10[0m <[0;33mline:116:4[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419df8[0m <[0;33mcol:4[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419dd8[0m <[0;33mcol:4[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m          |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419e38[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m          |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6419db8[0m <[0;33mcol:11[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m
[0;34m          `-[0m[0;1;35mIfStmt[0m[0;33m 0x641e180[0m <[0;33mline:118:8[0m, [0;33mline:195:3[0m> has_else
[0;34m            |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6419ed8[0m <[0;33mline:118:11[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m            | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419ec0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419e80[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64184f8[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m            | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6419ea0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m            |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641a538[0m <[0;33mcol:16[0m, [0;33mline:126:3[0m>
[0;34m            | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6419f98[0m <[0;33mline:119:4[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419f80[0m <[0;33mcol:4[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6419f60[0m <[0;33mcol:4[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m            | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6419fc0[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m            | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6419f40[0m <[0;33mcol:11[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "c\n"[0m
[0;34m            | |-[0m[0;1;35mForStmt[0m[0;33m 0x641a250[0m <[0;33mline:120:4[0m, [0;33mline:122:4[0m>
[0;34m            | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641a078[0m <[0;33mline:120:8[0m, [0;33mcol:15[0m>
[0;34m            | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6419ff0[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m            | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641a058[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m            | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m            | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641a100[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m            | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a0d0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a090[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6419ff0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m            | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a0e8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a0b0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m            | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641a140[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m            | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a120[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6419ff0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m            | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641a238[0m <[0;33mcol:24[0m, [0;33mline:122:4[0m>
[0;34m            | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641a1f8[0m <[0;33mline:121:5[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a1e0[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a1c0[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m            | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a220[0m <[0;33mcol:12[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m            | |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641a1a0[0m <[0;33mcol:12[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ".\n"[0m
[0;34m            | `-[0m[0;1;35mForStmt[0m[0;33m 0x641a500[0m <[0;33mline:123:4[0m, [0;33mline:125:4[0m>
[0;34m            |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641a328[0m <[0;33mline:123:8[0m, [0;33mcol:15[0m>
[0;34m            |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641a2a0[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m            |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641a308[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m            |   |-[0m[0;34m<<<NULL>>>[0m
[0;34m            |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641a3b0[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m            |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a380[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a340[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641a2a0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m            |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a398[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m            |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a360[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418578[0m[0;1;36m 'm'[0m [0;32m'int'[0m
[0;34m            |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641a3f0[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m            |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a3d0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641a2a0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m            |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641a4e8[0m <[0;33mcol:24[0m, [0;33mline:125:4[0m>
[0;34m            |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x641a4a8[0m <[0;33mline:124:5[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m            |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a490[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m            |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a470[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m            |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a4d0[0m <[0;33mcol:12[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m            |         `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641a450[0m <[0;33mcol:12[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "*\n"[0m
[0;34m            `-[0m[0;1;35mIfStmt[0m[0;33m 0x641e158[0m <[0;33mline:127:8[0m, [0;33mline:195:3[0m> has_else
[0;34m              |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641a5b8[0m <[0;33mline:127:11[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m              | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a5a0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a560[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m              | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641a580[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m              |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641b7f0[0m <[0;33mcol:16[0m, [0;33mline:152:3[0m>
[0;34m              | `-[0m[0;1;35mIfStmt[0m[0;33m 0x641b7c8[0m <[0;33mline:128:4[0m, [0;33mline:151:4[0m> has_else
[0;34m              |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641a670[0m <[0;33mline:128:7[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m              |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641a630[0m <[0;33mcol:7[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '%'
[0;34m              |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a618[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a5d8[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418578[0m[0;1;36m 'm'[0m [0;32m'int'[0m
[0;34m              |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641a5f8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m              |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641a650[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m              |   |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641a7f8[0m <[0;33mcol:14[0m, [0;33mline:130:4[0m>
[0;34m              |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x641a7b8[0m <[0;33mline:129:5[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a7a0[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a780[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m              |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a7e0[0m <[0;33mcol:12[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m              |   |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641a758[0m <[0;33mcol:12[0m> [0;32m'const char [12]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Impossible\n"[0m
[0;34m              |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641b7b0[0m <[0;33mline:131:8[0m, [0;33mline:151:4[0m>
[0;34m              |     `-[0m[0;1;35mIfStmt[0m[0;33m 0x641b788[0m <[0;33mline:132:5[0m, [0;33mline:150:5[0m> has_else
[0;34m              |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641a868[0m <[0;33mline:132:8[0m, [0;33mcol:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m              |       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a850[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a810[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m              |       | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641a830[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m              |       |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641a970[0m <[0;33mcol:13[0m, [0;33mline:134:5[0m>
[0;34m              |       | `-[0m[0;1;35mCallExpr[0m[0;33m 0x641a930[0m <[0;33mline:133:6[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a918[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641a8f8[0m <[0;33mcol:6[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m              |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641a958[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m              |       |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641a8d0[0m <[0;33mcol:13[0m> [0;32m'const char [12]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Impossible\n"[0m
[0;34m              |       `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641b748[0m <[0;33mline:135:9[0m, [0;33mline:150:5[0m>
[0;34m              |         |-[0m[0;1;35mForStmt[0m[0;33m 0x641ac40[0m <[0;33mline:136:6[0m, [0;33mline:138:6[0m>
[0;34m              |         | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641aa28[0m <[0;33mline:136:10[0m, [0;33mcol:17[0m>
[0;34m              |         | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641a9a0[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m              |         | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641aa08[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m              |         | |-[0m[0;34m<<<NULL>>>[0m
[0;34m              |         | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641aaf0[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m              |         | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641aad8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641aa40[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641a9a0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m              |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641aab8[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '/'
[0;34m              |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641aaa0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |         | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641aa60[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418578[0m[0;1;36m 'm'[0m [0;32m'int'[0m
[0;34m              |         | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641aa80[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m              |         | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641ab30[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m              |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ab10[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641a9a0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m              |         | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641ac28[0m <[0;33mcol:28[0m, [0;33mline:138:6[0m>
[0;34m              |         |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641abe8[0m <[0;33mline:137:7[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |         |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641abd0[0m <[0;33mcol:7[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641abb0[0m <[0;33mcol:7[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m              |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641ac10[0m <[0;33mcol:14[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m              |         |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641ab90[0m <[0;33mcol:14[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "*"[0m
[0;34m              |         |-[0m[0;1;35mForStmt[0m[0;33m 0x641af30[0m <[0;33mline:139:6[0m, [0;33mline:141:6[0m>
[0;34m              |         | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641ad18[0m <[0;33mline:139:10[0m, [0;33mcol:17[0m>
[0;34m              |         | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641ac90[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m              |         | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641acf8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m              |         | |-[0m[0;34m<<<NULL>>>[0m
[0;34m              |         | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641ade0[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m              |         | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641adc8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ad30[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ac90[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m              |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641ada8[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '/'
[0;34m              |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641ad90[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |         | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ad50[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m              |         | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641ad70[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m              |         | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641ae20[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m              |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ae00[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ac90[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m              |         | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641af18[0m <[0;33mcol:28[0m, [0;33mline:141:6[0m>
[0;34m              |         |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641aed8[0m <[0;33mline:140:7[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |         |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641aec0[0m <[0;33mcol:7[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641aea0[0m <[0;33mcol:7[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m              |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641af00[0m <[0;33mcol:14[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m              |         |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641ae80[0m <[0;33mcol:14[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "."[0m
[0;34m              |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x641b008[0m <[0;33mline:142:6[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641aff0[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641afd0[0m <[0;33mcol:6[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m              |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b030[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m              |         |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641afb0[0m <[0;33mcol:13[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m
[0;34m              |         |-[0m[0;1;35mForStmt[0m[0;33m 0x641b300[0m <[0;33mline:143:6[0m, [0;33mline:145:6[0m>
[0;34m              |         | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641b0e8[0m <[0;33mline:143:10[0m, [0;33mcol:17[0m>
[0;34m              |         | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641b060[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m              |         | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641b0c8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m              |         | |-[0m[0;34m<<<NULL>>>[0m
[0;34m              |         | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641b1b0[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m              |         | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b198[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b100[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641b060[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m              |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641b178[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '/'
[0;34m              |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b160[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |         | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b120[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418578[0m[0;1;36m 'm'[0m [0;32m'int'[0m
[0;34m              |         | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641b140[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m              |         | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641b1f0[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m              |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b1d0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641b060[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m              |         | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641b2e8[0m <[0;33mcol:28[0m, [0;33mline:145:6[0m>
[0;34m              |         |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641b2a8[0m <[0;33mline:144:7[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |         |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b290[0m <[0;33mcol:7[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b270[0m <[0;33mcol:7[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m              |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b2d0[0m <[0;33mcol:14[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m              |         |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641b250[0m <[0;33mcol:14[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "*"[0m
[0;34m              |         |-[0m[0;1;35mForStmt[0m[0;33m 0x641b630[0m <[0;33mline:146:6[0m, [0;33mline:148:6[0m>
[0;34m              |         | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641b3d8[0m <[0;33mline:146:10[0m, [0;33mcol:17[0m>
[0;34m              |         | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641b350[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m              |         | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641b3b8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m              |         | |-[0m[0;34m<<<NULL>>>[0m
[0;34m              |         | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641b4e0[0m <[0;33mcol:18[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m              |         | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b4c8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b3f0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641b350[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m              |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641b4a8[0m <[0;33mcol:20[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m              |         | |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641b468[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '/'
[0;34m              |         | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b450[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |         | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b410[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m              |         | |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641b430[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m              |         | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641b488[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m              |         | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641b520[0m <[0;33mcol:26[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m              |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b500[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641b350[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m              |         | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641b618[0m <[0;33mcol:30[0m, [0;33mline:148:6[0m>
[0;34m              |         |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641b5d8[0m <[0;33mline:147:7[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |         |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b5c0[0m <[0;33mcol:7[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b5a0[0m <[0;33mcol:7[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m              |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b600[0m <[0;33mcol:14[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m              |         |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641b580[0m <[0;33mcol:14[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "."[0m
[0;34m              |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x641b708[0m <[0;33mline:149:6[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m              |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b6f0[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641b6d0[0m <[0;33mcol:6[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m              |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641b730[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m              |             `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641b6b0[0m <[0;33mcol:13[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "c\n"[0m
[0;34m              `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641e130[0m <[0;33mline:153:7[0m, [0;33mline:195:3[0m>
[0;34m                |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641ba10[0m <[0;33mline:154:4[0m, [0;33mcol:19[0m>
[0;34m                | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641b980[0m <[0;33mcol:4[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m emp[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m callinit
[0;34m                |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x641b9e8[0m <[0;33mcol:16[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<rect> >::value)'[0m
[0;34m                |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641be88[0m <[0;33mline:155:4[0m, [0;33mcol:42[0m>
[0;34m                | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641bba0[0m <[0;33mcol:4[0m, [0;33mcol:41[0m> [0;33mcol:17[0m used[0;1;36m solution[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m cinit
[0;34m                |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x641be70[0m <[0;33mcol:26[0m, [0;33mcol:41[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m
[0;34m                |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x641be40[0m <[0;33mcol:26[0m, [0;33mcol:41[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::vector<rect, std::allocator<rect> > &&) noexcept'[0m elidable
[0;34m                |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x641be28[0m <[0;33mcol:26[0m, [0;33mcol:41[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m                |         `-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x641be08[0m <[0;33mcol:26[0m, [0;33mcol:41[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x641be08[0m)
[0;34m                |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x641bd08[0m <[0;33mcol:26[0m, [0;33mcol:41[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m
[0;34m                |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bcf0[0m <[0;33mcol:26[0m> [0;32m'vector<rect> (*)(vector<rect>, int, int, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bcd0[0m <[0;33mcol:26[0m> [0;32m'vector<rect> (vector<rect>, int, int, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x63ee878[0m[0;1;36m 'solve'[0m [0;32m'vector<rect> (vector<rect>, int, int, int)'[0m
[0;34m                |             |-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x641bd98[0m <[0;33mcol:32[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x641bd98[0m)
[0;34m                |             | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x641bd60[0m <[0;33mcol:32[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::vector<rect, std::allocator<rect> > &)'[0m
[0;34m                |             |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bd48[0m <[0;33mcol:32[0m> [0;32m'const vector<rect>':'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                |             |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bc50[0m <[0;33mcol:32[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641b980[0m[0;1;36m 'emp'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m                |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bdb8[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bc70[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m                |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bdd0[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bc90[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m                |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bde8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bcb0[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64184f8[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m                `-[0m[0;1;35mIfStmt[0m[0;33m 0x641e108[0m <[0;33mline:156:4[0m, [0;33mline:194:4[0m> has_else
[0;34m                  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641bf60[0m <[0;33mline:156:7[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m                  | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x641bef0[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m                  | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x641bec0[0m <[0;33mcol:7[0m, [0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6400bf0[0m
[0;34m                  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bf10[0m <[0;33mcol:7[0m> [0;32m'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641bea0[0m <[0;33mcol:7[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641bba0[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m                  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bf48[0m <[0;33mcol:23[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641bf28[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641dfd8[0m <[0;33mcol:25[0m, [0;33mline:191:4[0m>
[0;34m                  | |-[0m[0;1;35mIfStmt[0m[0;33m 0x641c950[0m <[0;33mline:157:5[0m, [0;33mline:163:5[0m>
[0;34m                  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641bfa0[0m <[0;33mline:18:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m                  | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641bf80[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641c928[0m <[0;33mline:157:19[0m, [0;33mline:163:5[0m>
[0;34m                  | |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x641c0d0[0m <[0;33mline:158:6[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                  | |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c0b8[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c098[0m <[0;33mcol:6[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m                  | |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c0f8[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  | |   |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641c078[0m <[0;33mcol:13[0m> [0;32m'const char [5]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "YAY\n"[0m
[0;34m                  | |   |-[0m[0;1;35mForStmt[0m[0;33m 0x641c6b8[0m <[0;33mline:159:6[0m, [0;33mline:161:6[0m>
[0;34m                  | |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641c1b0[0m <[0;33mline:159:10[0m, [0;33mcol:17[0m>
[0;34m                  | |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641c128[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m                  | |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641c190[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  | |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m                  | |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641c2a0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                  | |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c288[0m <[0;33mcol:18[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  | |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c270[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c1c8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641c128[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  | |   | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x641c238[0m <[0;33mcol:20[0m, [0;33mcol:34[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m                  | |   | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x641c208[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6400bf0[0m
[0;34m                  | |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c258[0m <[0;33mcol:20[0m> [0;32m'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  | |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c1e8[0m <[0;33mcol:20[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641bba0[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m                  | |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641c2e0[0m <[0;33mcol:36[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m                  | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c2c0[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641c128[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  | |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641c6a0[0m <[0;33mcol:40[0m, [0;33mline:161:6[0m>
[0;34m                  | |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641c620[0m <[0;33mline:160:7[0m, [0;33mcol:68[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                  | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c608[0m <[0;33mcol:7[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c5e8[0m <[0;33mcol:7[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m                  | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c658[0m <[0;33mcol:14[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  | |   |     | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641c340[0m <[0;33mcol:14[0m> [0;32m'const char [24]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "width: %d, height: %d;\n"[0m
[0;34m                  | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c670[0m <[0;33mcol:41[0m, [0;33mcol:53[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x641c4a8[0m <[0;33mcol:41[0m, [0;33mcol:53[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m .a[0;33m 0x63ead00[0m
[0;34m                  | |   |     |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x641c470[0m <[0;33mcol:41[0m, [0;33mcol:51[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<rect> >::value_type':'rect'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  | |   |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c458[0m <[0;33mcol:49[0m, [0;33mcol:51[0m> [0;32m'std::vector<rect, std::allocator<rect> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  | |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c3e0[0m <[0;33mcol:49[0m, [0;33mcol:51[0m> [0;32m'std::vector<rect, std::allocator<rect> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64014e0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<rect, std::allocator<rect> >::reference (std::vector::size_type) noexcept'[0m
[0;34m                  | |   |     |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c370[0m <[0;33mcol:41[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641bba0[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m                  | |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c3c8[0m <[0;33mcol:50[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  | |   |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c3b0[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |     |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c390[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641c128[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c688[0m <[0;33mcol:55[0m, [0;33mcol:67[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x641c5b8[0m <[0;33mcol:55[0m, [0;33mcol:67[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m .h[0;33m 0x63ead68[0m
[0;34m                  | |   |         `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x641c580[0m <[0;33mcol:55[0m, [0;33mcol:65[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<rect> >::value_type':'rect'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  | |   |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c568[0m <[0;33mcol:63[0m, [0;33mcol:65[0m> [0;32m'std::vector<rect, std::allocator<rect> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  | |   |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c548[0m <[0;33mcol:63[0m, [0;33mcol:65[0m> [0;32m'std::vector<rect, std::allocator<rect> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64014e0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<rect, std::allocator<rect> >::reference (std::vector::size_type) noexcept'[0m
[0;34m                  | |   |           |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c4d8[0m <[0;33mcol:55[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641bba0[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m                  | |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c530[0m <[0;33mcol:64[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  | |   |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c518[0m <[0;33mcol:64[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c4f8[0m <[0;33mcol:64[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641c128[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641c888[0m <[0;33mline:162:6[0m, [0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c870[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c850[0m <[0;33mcol:6[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m                  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c8c8[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  | |     | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641c7b8[0m <[0;33mcol:13[0m> [0;32m'const char [32]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\nWas to write n=%d, r=%d, c=%d\n"[0m
[0;34m                  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c8e0[0m <[0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c7f0[0m <[0;33mcol:49[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64185f8[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m                  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c8f8[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c810[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m                  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641c910[0m <[0;33mcol:53[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641c830[0m <[0;33mcol:53[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64184f8[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m                  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641ca88[0m <[0;33mline:164:5[0m, [0;33mcol:23[0m>
[0;34m                  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641ca20[0m <[0;33mcol:5[0m, [0;33mcol:22[0m> [0;33mcol:9[0m used[0;1;36m free_number[0m [0;32m'int [r]'[0m
[0;34m                  | |-[0m[0;1;35mForStmt[0m[0;33m 0x641d348[0m <[0;33mline:165:5[0m, [0;33mline:174:5[0m>
[0;34m                  | | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641cb40[0m <[0;33mline:165:9[0m, [0;33mcol:16[0m>
[0;34m                  | | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641cab8[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m                  | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641cb20[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  | | |-[0m[0;34m<<<NULL>>>[0m
[0;34m                  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641cbc8[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641cb98[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cb58[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641cab8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641cbb0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cb78[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m                  | | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641cc08[0m <[0;33mcol:21[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m                  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cbe8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641cab8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  | | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641d320[0m <[0;33mcol:25[0m, [0;33mline:174:5[0m>
[0;34m                  | |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641ccc0[0m <[0;33mline:166:6[0m, [0;33mcol:15[0m>
[0;34m                  | |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641cc38[0m <[0;33mcol:6[0m, [0;33mcol:14[0m> [0;33mcol:10[0m used[0;1;36m cnt[0m [0;32m'int'[0m cinit
[0;34m                  | |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641cca0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  | |   |-[0m[0;1;35mForStmt[0m[0;33m 0x641d200[0m <[0;33mline:168:6[0m, [0;33mline:172:6[0m>
[0;34m                  | |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641cd78[0m <[0;33mline:168:10[0m, [0;33mcol:17[0m>
[0;34m                  | |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641ccf0[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m                  | |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641cd58[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  | |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m                  | |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641ce68[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                  | |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641ce50[0m <[0;33mcol:18[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  | |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641ce38[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cd90[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ccf0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  | |   | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x641ce00[0m <[0;33mcol:20[0m, [0;33mcol:34[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m                  | |   | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x641cdd0[0m <[0;33mcol:20[0m, [0;33mcol:29[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6400bf0[0m
[0;34m                  | |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641ce20[0m <[0;33mcol:20[0m> [0;32m'const std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m                  | |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cdb0[0m <[0;33mcol:20[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641bba0[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m                  | |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641cea8[0m <[0;33mcol:36[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m                  | |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ce88[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ccf0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  | |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641d1e8[0m <[0;33mcol:40[0m, [0;33mline:172:6[0m>
[0;34m                  | |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x641d1d0[0m <[0;33mline:169:7[0m, [0;33mline:171:7[0m>
[0;34m                  | |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641d020[0m <[0;33mline:169:10[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m                  | |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641cff0[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |     | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x641cfa0[0m <[0;33mcol:10[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m .h[0;33m 0x63ead68[0m
[0;34m                  | |   |     | |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x641cf68[0m <[0;33mcol:10[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<rect> >::value_type':'rect'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  | |   |     | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641cf50[0m <[0;33mcol:18[0m, [0;33mcol:20[0m> [0;32m'std::vector<rect, std::allocator<rect> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  | |   |     | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cf30[0m <[0;33mcol:18[0m, [0;33mcol:20[0m> [0;32m'std::vector<rect, std::allocator<rect> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64014e0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<rect, std::allocator<rect> >::reference (std::vector::size_type) noexcept'[0m
[0;34m                  | |   |     | |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cec0[0m <[0;33mcol:10[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641bba0[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m                  | |   |     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641cf18[0m <[0;33mcol:19[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  | |   |     | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641cf00[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |     | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cee0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ccf0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  | |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d008[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641cfd0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641cab8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  | |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641d1b8[0m <[0;33mcol:26[0m, [0;33mline:171:7[0m>
[0;34m                  | |   |       `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x641d188[0m <[0;33mline:170:8[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'int'[0m ComputeResultTy=[0;32m'int'[0m
[0;34m                  | |   |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d040[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641cc38[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m                  | |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d170[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x641d140[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m .a[0;33m 0x63ead00[0m
[0;34m                  | |   |             `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x641d108[0m <[0;33mcol:13[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<rect> >::value_type':'rect'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  | |   |               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d0f0[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'std::vector<rect, std::allocator<rect> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  | |   |               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d0d0[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'std::vector<rect, std::allocator<rect> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x64014e0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<rect, std::allocator<rect> >::reference (std::vector::size_type) noexcept'[0m
[0;34m                  | |   |               |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d060[0m <[0;33mcol:13[0m> [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641bba0[0m[0;1;36m 'solution'[0m [0;32m'vector<rect>':'std::vector<rect, std::allocator<rect> >'[0m
[0;34m                  | |   |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d0b8[0m <[0;33mcol:22[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m                  | |   |                 `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d0a0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |   |                   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d080[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ccf0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641d300[0m <[0;33mline:173:6[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m                  | |     |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x641d2a8[0m <[0;33mcol:6[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  | |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d278[0m <[0;33mcol:6[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  | |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d238[0m <[0;33mcol:6[0m> [0;32m'int [r]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ca20[0m[0;1;36m 'free_number'[0m [0;32m'int [r]'[0m
[0;34m                  | |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d290[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d258[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641cab8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d2e8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d2c8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641cc38[0m[0;1;36m 'cnt'[0m [0;32m'int'[0m
[0;34m                  | `-[0m[0;1;35mForStmt[0m[0;33m 0x641dfa0[0m <[0;33mline:176:5[0m, [0;33mline:190:5[0m>
[0;34m                  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641d420[0m <[0;33mline:176:9[0m, [0;33mcol:16[0m>
[0;34m                  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641d398[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m                  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641d400[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  |   |-[0m[0;34m<<<NULL>>>[0m
[0;34m                  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641d4a8[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d478[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d438[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d398[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d490[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d458[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6418478[0m[0;1;36m 'r'[0m [0;32m'int'[0m
[0;34m                  |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641d4e8[0m <[0;33mcol:21[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m                  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d4c8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d398[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641df70[0m <[0;33mcol:25[0m, [0;33mline:190:5[0m>
[0;34m                  |     |-[0m[0;1;35mIfStmt[0m[0;33m 0x641d670[0m <[0;33mline:177:6[0m, [0;33mline:179:6[0m>
[0;34m                  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641d558[0m <[0;33mline:177:9[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m                  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d540[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d500[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d398[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641d520[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  |     | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641d658[0m <[0;33mcol:14[0m, [0;33mline:179:6[0m>
[0;34m                  |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641d618[0m <[0;33mline:178:7[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d600[0m <[0;33mcol:7[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d5e0[0m <[0;33mcol:7[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m                  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d640[0m <[0;33mcol:14[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  |     |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641d5c0[0m <[0;33mcol:14[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "c"[0m
[0;34m                  |     |-[0m[0;1;35mForStmt[0m[0;33m 0x641dac0[0m <[0;33mline:180:6[0m, [0;33mline:185:6[0m>
[0;34m                  |     | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641d728[0m <[0;33mline:180:10[0m, [0;33mcol:17[0m>
[0;34m                  |     | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641d6a0[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m                  |     | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641d708[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  |     | |-[0m[0;34m<<<NULL>>>[0m
[0;34m                  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641d820[0m <[0;33mcol:18[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d7f0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d740[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d6a0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d808[0m <[0;33mcol:20[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x641d7d0[0m <[0;33mcol:20[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  |     | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d7a0[0m <[0;33mcol:20[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  |     | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d760[0m <[0;33mcol:20[0m> [0;32m'int [r]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ca20[0m[0;1;36m 'free_number'[0m [0;32m'int [r]'[0m
[0;34m                  |     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d7b8[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d780[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d398[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  |     | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641d860[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m                  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d840[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d6a0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  |     | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641daa0[0m <[0;33mcol:39[0m, [0;33mline:185:6[0m>
[0;34m                  |     |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x641d9a8[0m <[0;33mline:181:7[0m, [0;33mline:183:7[0m>
[0;34m                  |     |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641d968[0m <[0;33mline:181:10[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m                  |     |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641d8d0[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m                  |     |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d8b8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d878[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d398[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  |     |   | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641d898[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  |     |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641d948[0m <[0;33mcol:16[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m                  |     |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641d930[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641d8f0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d6a0[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  |     |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641d910[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  |     |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641d990[0m <[0;33mcol:21[0m, [0;33mline:183:7[0m>
[0;34m                  |     |   |   `-[0m[0;1;35mContinueStmt[0m[0;33m 0x641d988[0m <[0;33mline:182:8[0m>
[0;34m                  |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641da60[0m <[0;33mline:184:7[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641da48[0m <[0;33mcol:7[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641da28[0m <[0;33mcol:7[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m                  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641da88[0m <[0;33mcol:14[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  |     |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641da08[0m <[0;33mcol:14[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "."[0m
[0;34m                  |     |-[0m[0;1;35mForStmt[0m[0;33m 0x641de58[0m <[0;33mline:186:6[0m, [0;33mline:188:6[0m>
[0;34m                  |     | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x641db98[0m <[0;33mline:186:10[0m, [0;33mcol:17[0m>
[0;34m                  |     | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x641db10[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;33mcol:14[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m                  |     | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x641db78[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m                  |     | |-[0m[0;34m<<<NULL>>>[0m
[0;34m                  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641dd08[0m <[0;33mcol:18[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m                  |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641dcf0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641dbb0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641db10[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  |     | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x641dcb0[0m <[0;33mcol:20[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m                  |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641dc80[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641dbd0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x64184f8[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m                  |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641dc98[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x641dc60[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m                  |     | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641dc30[0m <[0;33mcol:22[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  |     | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641dbf0[0m <[0;33mcol:22[0m> [0;32m'int [r]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641ca20[0m[0;1;36m 'free_number'[0m [0;32m'int [r]'[0m
[0;34m                  |     | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641dc48[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m                  |     | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641dc10[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641d398[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m                  |     | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x641dd48[0m <[0;33mcol:37[0m, [0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m                  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641dd28[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x641db10[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m                  |     | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641de40[0m <[0;33mcol:41[0m, [0;33mline:188:6[0m>
[0;34m                  |     |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x641de00[0m <[0;33mline:187:7[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641dde8[0m <[0;33mcol:7[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641ddc8[0m <[0;33mcol:7[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m                  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641de28[0m <[0;33mcol:14[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  |     |       `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641dda8[0m <[0;33mcol:14[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "*"[0m
[0;34m                  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x641df30[0m <[0;33mline:189:6[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641df18[0m <[0;33mcol:6[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641def8[0m <[0;33mcol:6[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m                  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641df58[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                  |         `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641ded8[0m <[0;33mcol:13[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m
[0;34m                  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x641e0f0[0m <[0;33mline:192:8[0m, [0;33mline:194:4[0m>
[0;34m                    `-[0m[0;1;35mCallExpr[0m[0;33m 0x641e0b0[0m <[0;33mline:193:5[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m                      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641e098[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m                      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x641e078[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fecca0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m                      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x641e0d8[0m <[0;33mcol:12[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m                        `-[0m[0;1;35mStringLiteral[0m[0;33m 0x641e050[0m <[0;33mcol:12[0m> [0;32m'const char [12]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Impossible\n"[0m

