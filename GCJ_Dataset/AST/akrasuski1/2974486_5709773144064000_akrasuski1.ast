Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x5cab418[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/akrasuski1/2974486_5709773144064000_akrasuski1.cpp:11:1[0m, [0;33mline:30:1[0m> [0;33mline:11:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cad800[0m <[0;33mcol:11[0m, [0;33mline:30:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cab538[0m <[0;33mline:12:2[0m, [0;33mcol:7[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cab4d0[0m <[0;33mcol:2[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m t[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5cab700[0m <[0;33mline:13:2[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cab6e8[0m <[0;33mcol:2[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cab670[0m <[0;33mcol:2[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5c985c0[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cab730[0m <[0;33mcol:8[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5cab618[0m <[0;33mcol:8[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5cab658[0m <[0;33mcol:13[0m, [0;33mcol:14[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cab638[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab4d0[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mForStmt[0m[0;33m 0x5cad7c8[0m <[0;33mline:14:2[0m, [0;33mline:28:2[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cab7e8[0m <[0;33mline:14:6[0m, [0;33mcol:13[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cab760[0m <[0;33mcol:6[0m, [0;33mcol:12[0m> [0;33mcol:10[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cab7c8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cab870[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cab840[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cab800[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab760[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cab858[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cab820[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab4d0[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5cab8b0[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cab890[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab760[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cad788[0m <[0;33mcol:22[0m, [0;33mline:28:2[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5caba68[0m <[0;33mline:15:3[0m, [0;33mcol:15[0m>
[0;34m      | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5cab8e0[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m used[0;1;36m c[0m [0;32m'double'[0m
[0;34m      | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5cab960[0m <[0;33mcol:3[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m f[0m [0;32m'double'[0m
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cab9e0[0m <[0;33mcol:3[0m, [0;33mcol:14[0m> [0;33mcol:14[0m used[0;1;36m x[0m [0;32m'double'[0m
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x5cacdf0[0m <[0;33mline:16:3[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cacdd8[0m <[0;33mcol:3[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cacdb8[0m <[0;33mcol:3[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5c985c0[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cace30[0m <[0;33mcol:9[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5cabb48[0m <[0;33mcol:9[0m> [0;32m'const char [12]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%lf %lf %lf"[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5cabbb8[0m <[0;33mcol:23[0m, [0;33mcol:24[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cabb70[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab8e0[0m[0;1;36m 'c'[0m [0;32m'double'[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5cabbf0[0m <[0;33mcol:26[0m, [0;33mcol:27[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cabbd0[0m <[0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab960[0m[0;1;36m 'f'[0m [0;32m'double'[0m
[0;34m      | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5cacda0[0m <[0;33mcol:29[0m, [0;33mcol:30[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cacd80[0m <[0;33mcol:30[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab9e0[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cacee8[0m <[0;33mline:17:3[0m, [0;33mcol:18[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cace60[0m <[0;33mcol:3[0m, [0;33mcol:15[0m> [0;33mcol:10[0m used[0;1;36m time[0m [0;32m'double'[0m cinit
[0;34m      |   `-[0m[0;1;35mFloatingLiteral[0m[0;33m 0x5cacec8[0m <[0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m[0;1;36m 0.000000e+00[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5cacfa0[0m <[0;33mline:18:3[0m, [0;33mcol:19[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5cacf18[0m <[0;33mcol:3[0m, [0;33mcol:16[0m> [0;33mcol:10[0m used[0;1;36m speed[0m [0;32m'double'[0m cinit
[0;34m      |   `-[0m[0;1;35mFloatingLiteral[0m[0;33m 0x5cacf80[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m[0;1;36m 2.000000e+00[0m
[0;34m      |-[0m[0;1;35mWhileStmt[0m[0;33m 0x5cad548[0m <[0;33mline:19:3[0m, [0;33mline:26:3[0m>
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cacfd8[0m <[0;33mline:19:9[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m      | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cacfb8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cad520[0m <[0;33mcol:11[0m, [0;33mline:26:3[0m>
[0;34m      |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x5cad0a0[0m <[0;33mline:20:4[0m, [0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m      |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cacff0[0m <[0;33mcol:4[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cace60[0m[0;1;36m 'time'[0m [0;32m'double'[0m
[0;34m      |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad080[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m      |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad050[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad010[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab8e0[0m[0;1;36m 'c'[0m [0;32m'double'[0m
[0;34m      |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad068[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad030[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cacf18[0m[0;1;36m 'speed'[0m [0;32m'double'[0m
[0;34m      |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x5cad480[0m <[0;33mline:21:4[0m, [0;33mline:24:4[0m>
[0;34m      |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad2e0[0m <[0;33mline:21:7[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m      |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad1d8[0m <[0;33mcol:7[0m, [0;33mcol:13[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m      |   | | | |-[0m[0;1;35mParenExpr[0m[0;33m 0x5cad160[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | | | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad140[0m <[0;33mcol:8[0m, [0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m      |   | | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad110[0m <[0;33mcol:8[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad0d0[0m <[0;33mcol:8[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab9e0[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m      |   | | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad128[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad0f0[0m <[0;33mcol:10[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab8e0[0m[0;1;36m 'c'[0m [0;32m'double'[0m
[0;34m      |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad1c0[0m <[0;33mcol:13[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad180[0m <[0;33mcol:13[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cacf18[0m[0;1;36m 'speed'[0m [0;32m'double'[0m
[0;34m      |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad2c0[0m <[0;33mcol:19[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m      |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad2a8[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad1a0[0m <[0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab9e0[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m      |   | |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x5cad288[0m <[0;33mcol:21[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad268[0m <[0;33mcol:22[0m, [0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m      |   | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad238[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad1f8[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cacf18[0m[0;1;36m 'speed'[0m [0;32m'double'[0m
[0;34m      |   | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad250[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad218[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab960[0m[0;1;36m 'f'[0m [0;32m'double'[0m
[0;34m      |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5cad460[0m <[0;33mcol:31[0m, [0;33mline:24:4[0m>
[0;34m      |   |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x5cad428[0m <[0;33mline:22:5[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m      |   |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad300[0m <[0;33mcol:5[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cace60[0m[0;1;36m 'time'[0m [0;32m'double'[0m
[0;34m      |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad408[0m <[0;33mcol:11[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m      |   |   |   |-[0m[0;1;35mParenExpr[0m[0;33m 0x5cad3b0[0m <[0;33mcol:11[0m, [0;33mcol:15[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad390[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m      |   |   |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad360[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |   |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad320[0m <[0;33mcol:12[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab9e0[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m      |   |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad378[0m <[0;33mcol:14[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad340[0m <[0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab8e0[0m[0;1;36m 'c'[0m [0;32m'double'[0m
[0;34m      |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad3f0[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad3d0[0m <[0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cacf18[0m[0;1;36m 'speed'[0m [0;32m'double'[0m
[0;34m      |   |   `-[0m[0;1;35mBreakStmt[0m[0;33m 0x5cad458[0m <[0;33mline:23:5[0m>
[0;34m      |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x5cad4f0[0m <[0;33mline:25:4[0m, [0;33mcol:11[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m      |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad498[0m <[0;33mcol:4[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cacf18[0m[0;1;36m 'speed'[0m [0;32m'double'[0m
[0;34m      |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad4d8[0m <[0;33mcol:11[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad4b8[0m <[0;33mcol:11[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab960[0m[0;1;36m 'f'[0m [0;32m'double'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x5cad720[0m <[0;33mline:27:3[0m, [0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad708[0m <[0;33mcol:3[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad6e8[0m <[0;33mcol:3[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5c94de0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad758[0m <[0;33mcol:10[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5cad628[0m <[0;33mcol:10[0m> [0;32m'const char [16]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d: %.7f\n"[0m
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5cad6a8[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad690[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad650[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cab760[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m        | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5cad670[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5cad770[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5cad6c8[0m <[0;33mcol:33[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5cace60[0m[0;1;36m 'time'[0m [0;32m'double'[0m

