Dumping std::__is_convertible_helper:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5c3b9c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1516:3[0m, [0;33mline:1520:49[0m> [0;33mline:1519:12[0m[0;1;36m __is_convertible_helper[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3b338[0m <[0;33mline:1516:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3b3a8[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5c3b898[0m <[0;33mline:1517:12[0m, [0;33mline:1518:41[0m> [0;33mline:1517:17[0m [0;32m'bool'[0m depth 0 index 2
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c3b8f8[0m <[0;33mcol:19[0m, [0;33mline:1518:41[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5c3b850[0m <[0;33mline:1517:19[0m, [0;33mline:1518:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c3b938[0m <[0;33mline:1519:5[0m, [0;33mline:1520:49[0m> [0;33mline:1519:12[0m struct[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c3bca0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_helper[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c3c4a0[0m <[0;33mline:1520:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m type[0m [0;32m'typename is_void<_To>::type'[0m
[0;34m|   `-[0m[0;32mDependentNameType[0m[0;33m 0x5c3c430[0m [0;32m'typename is_void<_To>::type'[0m dependent
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6817b28[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument integral 0
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6817ea0[0m prev 0x6817b28 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6818138[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6817f30[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6818098[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m  | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6817fd0[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6823428[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (std::input_iterator_tag)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6823338[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'std::input_iterator_tag':'std::input_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x68186b0[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6818218[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6818288[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x68182f8[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m  | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6818610[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m  | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6818580[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6823810[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6823780[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6818938[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6818790[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6818808[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6818898[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6818c48[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |   `-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6818a10[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6823a78[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<std::random_access_iterator_tag, std::input_iterator_tag>(0))':'std::integral_constant<bool, true>'[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x6823a40[0m [0;32m'decltype(__test<std::random_access_iterator_tag, std::input_iterator_tag>(0))'[0m sugar
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x68239f0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x68239d8[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6823940[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6823810[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x68186b0[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c3d6c0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      `-[0m[0;32mTypedefType[0m[0;33m 0x5ba1470[0m [0;32m'std::true_type'[0m sugar
[0;34m        |-[0m[0;1;32mTypedef[0m[0;33m 0x5b99c48[0m[0;1;36m 'true_type'[0m
[0;34m        `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5b99b60[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m          |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m          |-[0mTemplateArgument expr
[0;34m          | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5b99a28[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m          |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5b999d0[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m          `-[0m[0;32mRecordType[0m[0;33m 0x5b99b40[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m            `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5b99a48[0m[0;1;36m 'integral_constant'[0m

Dumping std::__is_convertible_helper:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5c3c7f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-1'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3c510[0m <[0;33mline:1522:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3c588[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c3cae8[0m <[0;33mline:1523:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5c3cdd8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3cb78[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 1 index 0[0;1;36m _To1[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5c3cd38[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c3cc10[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5c3d328[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3ce38[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _From1[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3cea8[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced typename depth 1 index 1[0;1;36m _To1[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3d148[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 1 index 2
[0;34m| | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5c3d288[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c3d1f8[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5c3d548[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3d388[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 1 index 0
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3d3f8[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 1 index 1
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5c3d4a8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x5c3d5a0[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c3d748[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m[0;1;36m type[0m [0;32m'decltype(__test<_From, _To>(0))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x5c3d710[0m [0;32m'decltype(__test<_From, _To>(0))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5c3d6e0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5c3d600[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__test'[0;33m 0x5c3d548[0m[0;33m 0x5c3d328[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5c3d6c0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::is_convertible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5c3d948[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3d7b8[0m <[0;33mline:1543:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5c3d828[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c3d8b8[0m <[0;33mline:1544:5[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<_From, _To>::type'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c3e1f0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x68142a0[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_helper<random_access_iterator_tag, input_iterator_tag>::type':'std::integral_constant<bool, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6823b90[0m prev 0x68142a0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m

Dumping __do_converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5d13018[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:128:2[0m, [0;33mline:129:33[0m> [0;33mline:128:8[0m referenced[0;1;36m __do_converts[0m [0;32m'__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5d12f30[0m [0;32m'__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >'[0m dependent __and_
[0;34m  |-[0mTemplateArgument type [0;32m'is_convertible<const _U1 &, _T1>'[0m
[0;34m  `-[0mTemplateArgument type [0;32m'is_convertible<_U2 &&, _T2>'[0m

Dumping __converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5d133f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:130:2[0m, [0;33mline:132:36[0m> [0;33mline:130:8[0m referenced[0;1;36m __converts[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m
[0;34m`-[0m[0;32mDependentNameType[0m[0;33m 0x5d13380[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m dependent

Dumping __do_converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5d15998[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:142:2[0m, [0;33mline:143:38[0m> [0;33mline:142:8[0m referenced[0;1;36m __do_converts[0m [0;32m'__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5d158b0[0m [0;32m'__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >'[0m dependent __and_
[0;34m  |-[0mTemplateArgument type [0;32m'is_convertible<_U1 &&, _T1>'[0m
[0;34m  `-[0mTemplateArgument type [0;32m'is_convertible<const _U2 &, _T2>'[0m

Dumping __converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5d15d70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:144:2[0m, [0;33mline:146:36[0m> [0;33mline:144:8[0m referenced[0;1;36m __converts[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m
[0;34m`-[0m[0;32mDependentNameType[0m[0;33m 0x5d15d00[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m dependent

Dumping lconv:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5e25a38[0m <[0;33m/usr/include/locale.h:51:1[0m, [0;33mline:118:1[0m> [0;33mline:51:8[0m struct[0;1;36m lconv[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5e25b58[0m <[0;33mcol:1[0m, [0;33mcol:8[0m> [0;33mcol:8[0m implicit struct[0;1;36m lconv[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25c00[0m <[0;33mline:55:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m decimal_point[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25c68[0m <[0;33mline:56:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m thousands_sep[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25cd0[0m <[0;33mline:62:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m grouping[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25d38[0m <[0;33mline:68:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m int_curr_symbol[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25da0[0m <[0;33mline:69:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m currency_symbol[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25e08[0m <[0;33mline:70:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m mon_decimal_point[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25e70[0m <[0;33mline:71:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m mon_thousands_sep[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25ed8[0m <[0;33mline:72:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m mon_grouping[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25f40[0m <[0;33mline:73:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m positive_sign[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e25fa8[0m <[0;33mline:74:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m[0;1;36m negative_sign[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26008[0m <[0;33mline:75:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_frac_digits[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26068[0m <[0;33mline:76:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m frac_digits[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e260c8[0m <[0;33mline:78:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m p_cs_precedes[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26128[0m <[0;33mline:80:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m p_sep_by_space[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26188[0m <[0;33mline:82:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m n_cs_precedes[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e261e8[0m <[0;33mline:84:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m n_sep_by_space[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26248[0m <[0;33mline:91:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m p_sign_posn[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e262a8[0m <[0;33mline:92:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m n_sign_posn[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26308[0m <[0;33mline:95:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_p_cs_precedes[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26368[0m <[0;33mline:97:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_p_sep_by_space[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e263c8[0m <[0;33mline:99:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_n_cs_precedes[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26428[0m <[0;33mline:101:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_n_sep_by_space[0m [0;32m'char'[0m
[0;34m|-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e26488[0m <[0;33mline:108:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_p_sign_posn[0m [0;32m'char'[0m
[0;34m`-[0m[0;1;32mFieldDecl[0m[0;33m 0x5e264e8[0m <[0;33mline:109:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_n_sign_posn[0m [0;32m'char'[0m

Dumping localeconv:
[0;1;32mFunctionDecl[0m[0;33m 0x5e26958[0m <[0;33m/usr/include/locale.h:125:1[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/locale.h:125:22[0m[0;1;36m localeconv[0m [0;32m'struct lconv *() throw()'[0m extern

Dumping std::lconv:
[0;1;32mUsingDecl[0m[0;33m 0x5e27210[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/clocale:53:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::lconv

Dumping std::lconv:
[0;1;32mUsingShadowDecl[0m[0;33m 0x5e27268[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/clocale:53:11[0m> [0;33mcol:11[0m implicit [0;1;32mCXXRecord[0m[0;33m 0x5e25a38[0m[0;1;36m 'lconv'[0m
[0;34m`-[0m[0;32mRecordType[0m[0;33m 0x5e25ad0[0m [0;32m'lconv'[0m
[0;34m  `-[0m[0;1;32mCXXRecord[0m[0;33m 0x5e25a38[0m[0;1;36m 'lconv'[0m

Dumping std::localeconv:
[0;1;32mUsingDecl[0m[0;33m 0x5e27370[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/clocale:55:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::localeconv

Dumping std::localeconv:
[0;1;32mUsingShadowDecl[0m[0;33m 0x5e273c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/clocale:55:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5e26958[0m[0;1;36m 'localeconv'[0m [0;32m'struct lconv *() throw()'[0m

Dumping std::__convert_from_v:
[0;1;32mFunctionDecl[0m[0;33m 0x5e27c00[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++locale.h:68:3[0m, [0;33mline:109:3[0m> [0;33mline:69:3[0m referenced[0;1;36m __convert_from_v[0m [0;32m'int (const std::__c_locale &, char *, const int, const char *, ...)'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e278b8[0m <[0;33mcol:20[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __cloc[0m [0;32m'const std::__c_locale &'[0m
[0;34m| `-[0m[0;1;34mUnusedAttr[0m[0;33m 0x5e27920[0m <[0;33mcol:61[0m> unused
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e27978[0m <[0;33mline:70:6[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m __out[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e279f8[0m <[0;33mline:71:6[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __size[0m [0;32m'const int'[0m
[0;34m| `-[0m[0;1;34mUnusedAttr[0m[0;33m 0x5e27a60[0m <[0;33mcol:39[0m> unused
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e27ab8[0m <[0;33mline:72:6[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m __fmt[0m [0;32m'const char *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5e34020[0m <[0;33mline:73:3[0m, [0;33mline:109:3[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5e27e70[0m <[0;33mline:75:5[0m, [0;33mcol:54[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5e27cd0[0m <[0;33mcol:5[0m, [0;33mcol:53[0m> [0;33mcol:16[0m used[0;1;36m __old[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5e27e30[0m <[0;33mcol:24[0m, [0;33mcol:53[0m> [0;32m'locale_t':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e27e18[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'typeof (uselocale) *'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e27d70[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e275d8[0m[0;1;36m '__uselocale'[0m [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e27e58[0m <[0;33mcol:47[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e27da0[0m <[0;33mcol:47[0m> [0;32m'const std::__c_locale':'struct __locale_struct *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e278b8[0m[0;1;36m '__cloc'[0m [0;32m'const std::__c_locale &'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5e33210[0m <[0;33mline:88:5[0m, [0;33mcol:29[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5e27e98[0m <[0;33mcol:5[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __args[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5e330e8[0m <[0;33mcol:23[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5e33500[0m <[0;33mline:89:5[0m, [0;33mcol:37[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e334e8[0m <[0;33mcol:5[0m> [0;32m'void (*)(__va_list_tag *, ...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33430[0m <[0;33mcol:5[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e332e0[0m[0;1;36m '__builtin_va_start'[0m [0;32m'void (__va_list_tag *, ...) noexcept'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33530[0m <[0;33mcol:24[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33450[0m <[0;33mcol:24[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e27e98[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33470[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e27ab8[0m[0;1;36m '__fmt'[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5e33c00[0m <[0;33mline:92:5[0m, [0;33mcol:72[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5e33560[0m <[0;33mcol:5[0m, [0;33mcol:71[0m> [0;33mcol:15[0m used[0;1;36m __ret[0m [0;32m'const int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x5e33af0[0m <[0;33mcol:23[0m, [0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33ad8[0m <[0;33mcol:23[0m> [0;32m'int (*)(char *, unsigned long, const char *, __va_list_tag *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33978[0m <[0;33mcol:23[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e336b8[0m[0;1;36m '__builtin_vsnprintf'[0m [0;32m'int (char *, unsigned long, const char *, __va_list_tag *) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33b30[0m <[0;33mcol:43[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33998[0m <[0;33mcol:43[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e27978[0m[0;1;36m '__out'[0m [0;32m'char *'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33b60[0m <[0;33mcol:50[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33b48[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e339b8[0m <[0;33mcol:50[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e279f8[0m[0;1;36m '__size'[0m [0;32m'const int'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33b78[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e339d8[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e27ab8[0m[0;1;36m '__fmt'[0m [0;32m'const char *'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33b90[0m <[0;33mcol:65[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e339f8[0m <[0;33mcol:65[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e27e98[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5e33ed0[0m <[0;33mline:97:5[0m, [0;33mcol:28[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33eb8[0m <[0;33mcol:5[0m> [0;32m'void (*)(__va_list_tag *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33e20[0m <[0;33mcol:5[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e33cd0[0m[0;1;36m '__builtin_va_end'[0m [0;32m'void (__va_list_tag *) noexcept'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33ef8[0m <[0;33mcol:22[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33e40[0m <[0;33mcol:22[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e27e98[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5e33f98[0m <[0;33mline:100:5[0m, [0;33mcol:33[0m> [0;32m'locale_t':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33f80[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;32m'typeof (uselocale) *'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33f30[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e275d8[0m[0;1;36m '__uselocale'[0m [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33fc0[0m <[0;33mcol:28[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33f60[0m <[0;33mcol:28[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e27cd0[0m[0;1;36m '__old'[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5e34010[0m <[0;33mline:108:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e33ff8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e33fd8[0m <[0;33mcol:12[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e33560[0m[0;1;36m '__ret'[0m [0;32m'const int'[0m

Dumping __codecvt_noconv:
[0;1;32mEnumConstantDecl[0m[0;33m 0x60879a0[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/libio.h:185:3[0m> [0;33mcol:3[0m[0;1;36m __codecvt_noconv[0m [0;32m'__codecvt_result'[0m

Dumping __convf:
[0;1;32mParmVarDecl[0m[0;33m 0x60abca0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/string_conversions.h:54:12[0m, [0;33mcol:63[0m> [0;33mcol:20[0m referenced[0;1;36m __convf[0m [0;32m'_TRet (*)(const _CharT *, _CharT **, _Base...)'[0m

Dumping __convf:
[0;1;32mParmVarDecl[0m[0;33m 0x60c2050[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/string_conversions.h:99:18[0m, [0;33mline:100:23[0m> [0;33mline:99:24[0m referenced[0;1;36m __convf[0m [0;32m'int (*)(_CharT *, std::size_t, const _CharT *, __va_list_tag *)'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x62f7150[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:71:3[0m, [0;33mline:74:31[0m> [0;33mline:73:5[0m[0;1;36m __convert_to_v[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x62f6c80[0m <[0;33mline:71:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x62f70b0[0m <[0;33mline:72:5[0m, [0;33mline:74:31[0m> [0;33mline:73:5[0m[0;1;36m __convert_to_v[0m [0;32m'void (const char *, _Tp &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f6d28[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f6dc8[0m <[0;33mcol:33[0m, [0;33mcol:36[0m> [0;33mcol:37[0m [0;32m'_Tp &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f6ef0[0m <[0;33mcol:39[0m, [0;33mcol:56[0m> [0;33mcol:57[0m [0;32m'ios_base::iostate &'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f6f68[0m <[0;33mline:74:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m
[0;34m|-[0m[0;1;32mFunction[0m[0;33m 0x62f7500[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, float &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0m[0;1;32mFunction[0m[0;33m 0x62f7de0[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m`-[0m[0;1;32mFunction[0m[0;33m 0x62f8640[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, long double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x62f7500[0m prev 0x62f7950 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:77:3[0m, [0;33mline:80:31[0m> [0;33mline:79:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, float &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f71f0[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f7270[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;33mcol:39[0m [0;32m'float &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f7340[0m <[0;33mcol:41[0m, [0;33mcol:58[0m> [0;33mcol:59[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f73b8[0m <[0;33mline:80:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x62f7de0[0m prev 0x62f81b0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:82:3[0m, [0;33mline:85:31[0m> [0;33mline:84:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f7ad0[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f7b50[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;33mcol:40[0m [0;32m'double &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f7c20[0m <[0;33mcol:42[0m, [0;33mcol:59[0m> [0;33mcol:60[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f7c98[0m <[0;33mline:85:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x62f8640[0m prev 0x62f8a10 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:87:3[0m, [0;33mline:90:31[0m> [0;33mline:89:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, long double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f8330[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f83b0[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'long double &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f8480[0m <[0;33mcol:47[0m, [0;33mcol:64[0m> [0;33mcol:65[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x62f84f8[0m <[0;33mline:90:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::ctype<wchar_t>::_M_convert_to_wmask:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5f16d30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:1229:7[0m, [0;33mline:1230:55[0m> [0;33mcol:7[0m[0;1;36m _M_convert_to_wmask[0m [0;32m'std::ctype<wchar_t>::__wmask_type (const std::ctype_base::mask) const throw()'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f16c38[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __m[0m [0;32m'const std::ctype_base::mask':'const unsigned short'[0m

Dumping std::__is_convertible_to_basic_ostream_test:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x63ba378[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:616:3[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_ostream_test[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63b9e78[0m <[0;33mline:616:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Ch[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63b9ee8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x63ba2d8[0m <[0;33mline:617:5[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_ostream_test[0m [0;32m'basic_ostream<_Ch, _Up> &(basic_ostream<_Ch, _Up> *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x63ba178[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_ostream<_Ch, _Up> *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x67e0408[0m <[0;33mline:617:5[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_ostream_test[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::char_traits<char>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67e02d8[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_ostream<char, std::char_traits<char> > *'[0m

Dumping std::__is_convertible_to_basic_ostream_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x63ba578[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:620:3[0m, [0;33mline:624:5[0m> [0;33mline:621:12[0m[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63ba3d8[0m <[0;33mline:620:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63ba458[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63ba4e8[0m <[0;33mline:621:5[0m, [0;33mline:624:5[0m> [0;33mline:621:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63ba810[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x63ba8b0[0m <[0;33mline:623:7[0m, [0;33mcol:30[0m> [0;33mcol:13[0m[0;1;36m __ostream_type[0m [0;32m'void'[0m
[0;34m|   `-[0m[0;32mBuiltinType[0m[0;33m 0x5a63dc0[0m [0;32m'void'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x67d8db8[0m <[0;33mline:631:3[0m, [0;33mline:638:5[0m> [0;33mline:632:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x67e07c0[0m prev 0x67d8db8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m  `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x67e0e78[0m <[0;33mline:636:7[0m, [0;33mline:637:47[0m> [0;33mline:636:13[0m referenced[0;1;36m __ostream_type[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>':'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m    `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x67e0e00[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>'[0m sugar alias __do_is_convertible_to_basic_ostream_impl
[0;34m      |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &':'std::basic_ostream<char> &'[0m
[0;34m      |-[0m[0;32mDecltypeType[0m[0;33m 0x67e0dc0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<basic_ostream<char> &>::type *>()))'[0m sugar
[0;34m      | |-[0m[0;1;35mCallExpr[0m[0;33m 0x67e0d78[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67e0d60[0m <[0;33mline:628:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67e0d38[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67e0408[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x63ba378[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m) non_odr_use_unevaluated
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67e0da0[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x67e0cb8[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67e0ca0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67e0c38[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67dfe00[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5c7bb80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x67e01b0[0m [0;32m'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x67e0150[0m [0;32m'basic_ostream<char, std::char_traits<char> >'[0m sugar basic_ostream
[0;34m      |     |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m      |     `-[0m[0;32mRecordType[0m[0;33m 0x5b66c30[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m      |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5b66b30[0m[0;1;36m 'basic_ostream'[0m
[0;34m      `-[0m[0;32mDecltypeType[0m[0;33m 0x67e0dc0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<basic_ostream<char> &>::type *>()))'[0m sugar
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x67e0d78[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67e0d60[0m <[0;33mline:628:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67e0d38[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67e0408[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x63ba378[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m) non_odr_use_unevaluated
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67e0da0[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x67e0cb8[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67e0ca0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67e0c38[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67dfe00[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5c7bb80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m        `-[0m[0;32mLValueReferenceType[0m[0;33m 0x67e01b0[0m [0;32m'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m          `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x67e0150[0m [0;32m'basic_ostream<char, std::char_traits<char> >'[0m sugar basic_ostream
[0;34m            |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m            |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m            `-[0m[0;32mRecordType[0m[0;33m 0x5b66c30[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m              `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5b66b30[0m[0;1;36m 'basic_ostream'[0m

Dumping std::__do_is_convertible_to_basic_ostream_impl:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x63bace8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:626:3[0m, [0;33mline:628:5[0m> [0;33mline:627:5[0m[0;1;36m __do_is_convertible_to_basic_ostream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63ba928[0m <[0;33mline:626:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x63bac88[0m <[0;33mline:627:5[0m, [0;33mline:628:5[0m> [0;33mline:627:11[0m[0;1;36m __do_is_convertible_to_basic_ostream_impl[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x63bac50[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x63babe8[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63ba9b0[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x63ba378[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x63babc8[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63bab40[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5c7bb80[0m

Dumping std::__is_convertible_to_basic_ostream_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x63bb358[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:631:3[0m, [0;33mline:638:5[0m> [0;33mline:632:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63bad40[0m <[0;33mline:631:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63bb5d8[0m <[0;33mline:632:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x63bb9b8[0m <[0;33mline:636:7[0m, [0;33mline:637:47[0m> [0;33mline:636:13[0m[0;1;36m __ostream_type[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<_Tp>':'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x63bb910[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<_Tp>'[0m sugar dependent alias __do_is_convertible_to_basic_ostream_impl
[0;34m    |-[0mTemplateArgument type [0;32m'_Tp'[0m
[0;34m    |-[0m[0;32mDecltypeType[0m[0;33m 0x63bb8d0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x63bb8a8[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63bb688[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x63ba378[0m
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x63bb888[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63bb800[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5c7bb80[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x63bb8d0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x63bb8a8[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63bb688[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x63ba378[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x63bb888[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x63bb800[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5c7bb80[0m

Dumping std::__is_convertible_to_basic_ostream:
[0;1;32mClassTemplateDecl[0m[0;33m 0x63bbb50[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:640:3[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x63bba30[0m <[0;33mline:640:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63bbac0[0m <[0;33mline:641:5[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m struct[0;1;36m __is_convertible_to_basic_ostream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_ostream_impl<_Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x63bbe50[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x63bbee0[0m <[0;33mline:644:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x63bc230[0m <[0;33mline:645:7[0m, [0;33mline:646:78[0m> [0;33mline:645:13[0m referenced[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x63bc190[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type> >'[0m dependent __not_
[0;34m| |   `-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type>'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x63bc2a0[0m <[0;33mline:647:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x63bc380[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x67d8a50[0m <[0;33mline:640:3[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m struct[0;1;36m __is_convertible_to_basic_ostream[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>':'std::__is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &, void>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x67e0f20[0m prev 0x67d8a50 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x67e0fb0[0m <[0;33mline:644:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x67e13e0[0m <[0;33mline:645:7[0m, [0;33mline:646:78[0m> [0;33mline:645:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type> >':'std::__not_<std::is_void<std::basic_ostream<char> &> >'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x67e1370[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type> >'[0m sugar __not_
[0;34m  |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type>':'std::is_void<std::basic_ostream<char> &>'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x67e1350[0m [0;32m'std::__not_<std::is_void<std::basic_ostream<char> &> >'[0m
[0;34m  |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x67e1270[0m[0;1;36m '__not_'[0m
[0;34m  `-[0m[0;1;32mVarDecl[0m[0;33m 0x67e1440[0m <[0;33mline:647:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67e2a20[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67e29f0[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x629a468[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant

Dumping std::__is_convertible_to_basic_istream_test:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6413b88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:911:3[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_istream_test[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6413658[0m <[0;33mline:911:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Ch[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x64136c8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6413ae8[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<_Ch, _Up> &(basic_istream<_Ch, _Up> *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6413988[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<_Ch, _Up> *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6456208[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::char_traits<char>'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x64560d8[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<char, std::char_traits<char> > *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6470cd8[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6470ba8[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > *'[0m

Dumping std::__is_convertible_to_basic_istream_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6413d88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:915:3[0m, [0;33mline:919:5[0m> [0;33mline:916:12[0m[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6413be8[0m <[0;33mline:915:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6413c68[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6413cf8[0m <[0;33mline:916:5[0m, [0;33mline:919:5[0m> [0;33mline:916:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6414020[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x64140c0[0m <[0;33mline:918:7[0m, [0;33mcol:30[0m> [0;33mcol:13[0m[0;1;36m __istream_type[0m [0;32m'void'[0m
[0;34m|   `-[0m[0;32mBuiltinType[0m[0;33m 0x5a63dc0[0m [0;32m'void'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x644eb18[0m <[0;33mline:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x64565c0[0m prev 0x644eb18 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6456c78[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m referenced[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<char> &>':'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6456c00[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<char> &>'[0m sugar alias __do_is_convertible_to_basic_istream_impl
[0;34m|     |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &':'std::basic_istream<char> &'[0m
[0;34m|     |-[0m[0;32mDecltypeType[0m[0;33m 0x6456bc0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<char> &>::type *>()))'[0m sugar
[0;34m|     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6456b78[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<char, std::char_traits<char> >':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6456b60[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(*)(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6456b38[0m <[0;33mcol:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6456208[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6413b88[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m|     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6456ba0[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|     | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6456ab8[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6456aa0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6456a38[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6455c00[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5c7bb80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6455fb0[0m [0;32m'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|     |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6455f50[0m [0;32m'basic_istream<char, std::char_traits<char> >'[0m sugar basic_istream
[0;34m|     |     |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m|     |     |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m|     |     `-[0m[0;32mRecordType[0m[0;33m 0x5b66950[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|     |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5b66850[0m[0;1;36m 'basic_istream'[0m
[0;34m|     `-[0m[0;32mDecltypeType[0m[0;33m 0x6456bc0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<char> &>::type *>()))'[0m sugar
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x6456b78[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<char, std::char_traits<char> >':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6456b60[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(*)(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6456b38[0m <[0;33mcol:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6456208[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6413b88[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m|       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6456ba0[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6456ab8[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6456aa0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6456a38[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6455c00[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5c7bb80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m|       `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6455fb0[0m [0;32m'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|         `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6455f50[0m [0;32m'basic_istream<char, std::char_traits<char> >'[0m sugar basic_istream
[0;34m|           |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m|           |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5b66950[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5b66850[0m[0;1;36m 'basic_istream'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x64684f8[0m <[0;33mline:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6471090[0m prev 0x64684f8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m  `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6471748[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m referenced[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>':'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m    `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x64716d0[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>'[0m sugar alias __do_is_convertible_to_basic_istream_impl
[0;34m      |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'[0m
[0;34m      |-[0m[0;32mDecltypeType[0m[0;33m 0x6471690[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<wchar_t> &>::type *>()))'[0m sugar
[0;34m      | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6471648[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >':'std::basic_istream<wchar_t>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6471630[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(*)(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6471608[0m <[0;33mcol:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6470cd8[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6413b88[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6471670[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6471588[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6471570[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6471508[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6470750[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5c7bb80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6470a80[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6470a20[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >'[0m sugar basic_istream
[0;34m      |     |-[0mTemplateArgument type [0;32m'wchar_t':'wchar_t'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>':'std::char_traits<wchar_t>'[0m
[0;34m      |     `-[0m[0;32mRecordType[0m[0;33m 0x5b6b420[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m      |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5b6b320[0m[0;1;36m 'basic_istream'[0m
[0;34m      `-[0m[0;32mDecltypeType[0m[0;33m 0x6471690[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<wchar_t> &>::type *>()))'[0m sugar
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x6471648[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >':'std::basic_istream<wchar_t>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6471630[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(*)(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6471608[0m <[0;33mcol:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6470cd8[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6413b88[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6471670[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6471588[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6471570[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6471508[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6470750[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5c7bb80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m        `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6470a80[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m          `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6470a20[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >'[0m sugar basic_istream
[0;34m            |-[0mTemplateArgument type [0;32m'wchar_t':'wchar_t'[0m
[0;34m            |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>':'std::char_traits<wchar_t>'[0m
[0;34m            `-[0m[0;32mRecordType[0m[0;33m 0x5b6b420[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m              `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5b6b320[0m[0;1;36m 'basic_istream'[0m

Dumping std::__do_is_convertible_to_basic_istream_impl:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x64144f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:921:3[0m, [0;33mline:923:5[0m> [0;33mline:922:5[0m[0;1;36m __do_is_convertible_to_basic_istream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6414138[0m <[0;33mline:921:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6414498[0m <[0;33mline:922:5[0m, [0;33mline:923:5[0m> [0;33mline:922:11[0m[0;1;36m __do_is_convertible_to_basic_istream_impl[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x6414460[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x64143f8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x64141c0[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x6413b88[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x64143d8[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6414350[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5c7bb80[0m

Dumping std::__is_convertible_to_basic_istream_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x6414b68[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6414550[0m <[0;33mline:926:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6414de8[0m <[0;33mline:927:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x64151c8[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<_Tp>':'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6415120[0m [0;32m'__do_is_convertible_to_basic_istream_impl<_Tp>'[0m sugar dependent alias __do_is_convertible_to_basic_istream_impl
[0;34m    |-[0mTemplateArgument type [0;32m'_Tp'[0m
[0;34m    |-[0m[0;32mDecltypeType[0m[0;33m 0x64150e0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x64150b8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6414e98[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x6413b88[0m
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6415098[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6415010[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5c7bb80[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x64150e0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x64150b8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6414e98[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x6413b88[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6415098[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6415010[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5c7bb80[0m

Dumping std::__is_convertible_to_basic_istream:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6415360[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6415240[0m <[0;33mline:935:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x64152d0[0m <[0;33mline:936:5[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<_Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6415660[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x64156f0[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6415a40[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m referenced[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x64159a0[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type> >'[0m dependent __not_
[0;34m| |   `-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type>'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x6415ab0[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x6415b90[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x644e7b0[0m <[0;33mline:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<std::basic_istream<char> &>':'std::__is_convertible_to_basic_istream_impl<std::basic_istream<char> &, void>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6456d20[0m prev 0x644e7b0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6456db0[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x64571e0[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type> >':'std::__not_<std::is_void<std::basic_istream<char> &> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6457170[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type> >'[0m sugar __not_
[0;34m| |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type>':'std::is_void<std::basic_istream<char> &>'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x6457150[0m [0;32m'std::__not_<std::is_void<std::basic_istream<char> &> >'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6457070[0m[0;1;36m '__not_'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x6457240[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x645b7a8[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x645b778[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x629a468[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6468190[0m <[0;33mline:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>':'std::__is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &, void>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x64717f0[0m prev 0x6468190 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6471880[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6471cb0[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type> >':'std::__not_<std::is_void<std::basic_istream<wchar_t> &> >'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6471c40[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type> >'[0m sugar __not_
[0;34m  |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type>':'std::is_void<std::basic_istream<wchar_t> &>'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x6471c20[0m [0;32m'std::__not_<std::is_void<std::basic_istream<wchar_t> &> >'[0m
[0;34m  |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6471b40[0m[0;1;36m '__not_'[0m
[0;34m  `-[0m[0;1;32mVarDecl[0m[0;33m 0x6471d10[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x64732f0[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x64732c0[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x629a468[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant

Dumping conv:
[0;1;32mFunctionDecl[0m[0;33m 0x674c578[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/AizukiKoh/2994486_5751500831719424_AizukiKoh.cpp:8:1[0m, [0;33mline:29:1[0m> [0;33mline:8:6[0m used[0;1;36m conv[0m [0;32m'void (std::__cxx11::string, vector<vector<int *> > &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x674bc18[0m <[0;33mcol:11[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m s[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x674c460[0m <[0;33mcol:21[0m, [0;33mcol:44[0m> [0;33mcol:44[0m used[0;1;36m dataset[0m [0;32m'vector<vector<int *> > &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x679ed90[0m <[0;33mcol:53[0m, [0;33mline:29:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x674c6a0[0m <[0;33mline:9:2[0m, [0;33mcol:10[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x674c638[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;33mcol:7[0m used[0;1;36m now[0m [0;32m'char'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6777fd8[0m <[0;33mline:10:2[0m, [0;33mcol:18[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x674c830[0m <[0;33mcol:2[0m, [0;33mcol:15[0m> [0;33mcol:15[0m used[0;1;36m ans[0m [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6777fb0[0m <[0;33mcol:15[0m> [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<int *> >::value)'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6779220[0m <[0;33mline:11:2[0m, [0;33mline:27:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6778090[0m <[0;33mline:11:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6778008[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778070[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6778180[0m <[0;33mcol:18[0m, [0;33mcol:31[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778168[0m <[0;33mcol:18[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778150[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67780a8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6778008[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6778118[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x67780e8[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .length[0;33m 0x60dac58[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778138[0m <[0;33mcol:22[0m> [0;32m'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67780c8[0m <[0;33mcol:22[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x674bc18[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x67781c0[0m <[0;33mcol:34[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67781a0[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6778008[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6779208[0m <[0;33mcol:39[0m, [0;33mline:27:2[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x67791e0[0m <[0;33mline:12:3[0m, [0;33mline:26:3[0m> has_else
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6778230[0m <[0;33mline:12:7[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778218[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67781d8[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6778008[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67781f8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67787c0[0m <[0;33mcol:15[0m, [0;33mline:18:3[0m>
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6778398[0m <[0;33mline:13:4[0m, [0;33mcol:16[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778250[0m <[0;33mcol:4[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c638[0m[0;1;36m 'now'[0m [0;32m'char'[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778380[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6778340[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6778310[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x60dbb60[0m
[0;34m  |     | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778270[0m <[0;33mcol:10[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x674bc18[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778368[0m <[0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67782f0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67784c8[0m <[0;33mline:14:4[0m, [0;33mcol:26[0m>
[0;34m  |     | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67783d0[0m <[0;33mcol:4[0m, [0;33mcol:25[0m> [0;33mcol:9[0m used[0;1;36m temp[0m [0;32m'int *'[0m cinit
[0;34m  |     | |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x6778488[0m <[0;33mcol:16[0m, [0;33mcol:25[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x5b88430[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(std::size_t)'[0m
[0;34m  |     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778470[0m <[0;33mcol:24[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778438[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67785a8[0m <[0;33mline:15:4[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6778538[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778520[0m <[0;33mcol:4[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67784e0[0m <[0;33mcol:4[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67783d0[0m[0;1;36m 'temp'[0m [0;32m'int *'[0m
[0;34m  |     | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778500[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778590[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778578[0m <[0;33mcol:14[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778558[0m <[0;33mcol:14[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c638[0m[0;1;36m 'now'[0m [0;32m'char'[0m
[0;34m  |     | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6778660[0m <[0;33mline:16:4[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     | | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6778620[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778608[0m <[0;33mcol:4[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67785c8[0m <[0;33mcol:4[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67783d0[0m[0;1;36m 'temp'[0m [0;32m'int *'[0m
[0;34m  |     | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67785e8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778640[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6778750[0m <[0;33mline:17:4[0m, [0;33mcol:22[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6778720[0m <[0;33mcol:4[0m, [0;33mcol:8[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x6765848[0m
[0;34m  |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778680[0m <[0;33mcol:4[0m> [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c830[0m[0;1;36m 'ans'[0m [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67787a8[0m <[0;33mcol:18[0m> [0;32m'int *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778700[0m <[0;33mcol:18[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67783d0[0m[0;1;36m 'temp'[0m [0;32m'int *'[0m
[0;34m  |     `-[0m[0;1;35mIfStmt[0m[0;33m 0x67791b8[0m <[0;33mline:18:10[0m, [0;33mline:26:3[0m> has_else
[0;34m  |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x67789a0[0m <[0;33mline:18:14[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778970[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778940[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x67788c8[0m <[0;33mcol:14[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6778898[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x60dbb60[0m
[0;34m  |       | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67787f8[0m <[0;33mcol:14[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x674bc18[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |       | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778908[0m <[0;33mcol:19[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67788f0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778878[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6778008[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778988[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778958[0m <[0;33mcol:25[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778920[0m <[0;33mcol:25[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c638[0m[0;1;36m 'now'[0m [0;32m'char'[0m
[0;34m  |       |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6778c10[0m <[0;33mcol:30[0m, [0;33mline:20:3[0m>
[0;34m  |       | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6778bf8[0m <[0;33mline:19:4[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |       |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6778bd8[0m <[0;33mcol:6[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778bc0[0m <[0;33mcol:6[0m, [0;33mcol:25[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6778b78[0m <[0;33mcol:6[0m, [0;33mcol:25[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |     |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6778b48[0m <[0;33mcol:6[0m, [0;33mcol:10[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x6764e38[0m
[0;34m  |       |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67789c0[0m <[0;33mcol:6[0m> [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c830[0m[0;1;36m 'ans'[0m [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m
[0;34m  |       |     |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6778b28[0m <[0;33mcol:13[0m, [0;33mcol:24[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       |     |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6778a90[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |     |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6778a60[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x6764050[0m
[0;34m  |       |     |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778ad8[0m <[0;33mcol:13[0m> [0;32m'const std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       |     |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778a40[0m <[0;33mcol:13[0m> [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c830[0m[0;1;36m 'ans'[0m [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m
[0;34m  |       |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778b10[0m <[0;33mcol:24[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |     |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778af0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778ba0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6779180[0m <[0;33mline:20:10[0m, [0;33mline:26:3[0m>
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6778d88[0m <[0;33mline:21:4[0m, [0;33mcol:16[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |         | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778c28[0m <[0;33mcol:4[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c638[0m[0;1;36m 'now'[0m [0;32m'char'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778d70[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6778d18[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type':'char'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6778ce8[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x60dbb60[0m
[0;34m  |         |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778c48[0m <[0;33mcol:10[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x674bc18[0m[0;1;36m 's'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778d58[0m <[0;33mcol:15[0m> [0;32m'std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778d40[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778cc8[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6778008[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6778eb8[0m <[0;33mline:22:4[0m, [0;33mcol:26[0m>
[0;34m  |         | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6778dc0[0m <[0;33mcol:4[0m, [0;33mcol:25[0m> [0;33mcol:9[0m used[0;1;36m temp[0m [0;32m'int *'[0m cinit
[0;34m  |         |   `-[0m[0;1;35mCXXNewExpr[0m[0;33m 0x6778e78[0m <[0;33mcol:16[0m, [0;33mcol:25[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m array [0;1;32mFunction[0m[0;33m 0x5b88430[0m[0;1;36m 'operator new[]'[0m [0;32m'void *(std::size_t)'[0m
[0;34m  |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778e60[0m <[0;33mcol:24[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778e28[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6778f98[0m <[0;33mline:23:4[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |         | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6778f28[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778f10[0m <[0;33mcol:4[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778ed0[0m <[0;33mcol:4[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6778dc0[0m[0;1;36m 'temp'[0m [0;32m'int *'[0m
[0;34m  |         | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778ef0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778f80[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778f68[0m <[0;33mcol:14[0m> [0;32m'char'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778f48[0m <[0;33mcol:14[0m> [0;32m'char'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c638[0m[0;1;36m 'now'[0m [0;32m'char'[0m
[0;34m  |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6779050[0m <[0;33mline:24:4[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |         | |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6779010[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6778ff8[0m <[0;33mcol:4[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6778fb8[0m <[0;33mcol:4[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6778dc0[0m[0;1;36m 'temp'[0m [0;32m'int *'[0m
[0;34m  |         | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6778fd8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |         | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6779030[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6779140[0m <[0;33mline:25:4[0m, [0;33mcol:22[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mMemberExpr[0m[0;33m 0x6779110[0m <[0;33mcol:4[0m, [0;33mcol:8[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x6765848[0m
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6779070[0m <[0;33mcol:4[0m> [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c830[0m[0;1;36m 'ans'[0m [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m
[0;34m  |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6779168[0m <[0;33mcol:18[0m> [0;32m'int *const'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67790f0[0m <[0;33mcol:18[0m> [0;32m'int *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6778dc0[0m[0;1;36m 'temp'[0m [0;32m'int *'[0m
[0;34m  `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x679ed20[0m <[0;33mline:28:2[0m, [0;33mcol:23[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mMemberExpr[0m[0;33m 0x679ecf0[0m <[0;33mcol:2[0m, [0;33mcol:10[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x67904c8[0m
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6779258[0m <[0;33mcol:2[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x674c460[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> > &'[0m
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x679ed78[0m <[0;33mcol:20[0m> [0;32m'const vector<int *>':'const std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x679ecd0[0m <[0;33mcol:20[0m> [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x674c830[0m[0;1;36m 'ans'[0m [0;32m'vector<int *>':'std::vector<int *, std::allocator<int *> >'[0m

Dumping convert:
[0;1;32mFunctionDecl[0m[0;33m 0x679f608[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/AizukiKoh/2994486_5751500831719424_AizukiKoh.cpp:31:1[0m, [0;33mline:37:1[0m> [0;33mline:31:6[0m used[0;1;36m convert[0m [0;32m'void (vector<std::__cxx11::string>, vector<vector<int *> > &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x679f180[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m input[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x679f4f0[0m <[0;33mcol:36[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m dataset[0m [0;32m'vector<vector<int *> > &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67cb298[0m <[0;33mcol:68[0m, [0;33mline:37:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x67c9098[0m <[0;33mline:32:2[0m, [0;33mcol:45[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x67c5150[0m <[0;33mcol:2[0m, [0;33mcol:44[0m> [0;33mcol:27[0m used[0;1;36m it[0m [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m cinit
[0;34m  |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x67c9080[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x67c9050[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &&) noexcept'[0m elidable
[0;34m  |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x67c8f08[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;32m'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x67c5268[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;32m'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x67c5238[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x67b5e20[0m
[0;34m  |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67c51b8[0m <[0;33mcol:32[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x679f180[0m[0;1;36m 'input'[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m  `-[0m[0;1;35mWhileStmt[0m[0;33m 0x67cb280[0m <[0;33mline:33:2[0m, [0;33mline:36:2[0m>
[0;34m    |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x67cae58[0m <[0;33mline:33:9[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x67cae20[0m <[0;33mcol:9[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67cae08[0m <[0;33mcol:12[0m> [0;32m'bool (*)(const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &, const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67cad88[0m <[0;33mcol:12[0m> [0;32m'bool (const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &, const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67cabf0[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &, const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &) noexcept'[0m
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67cad40[0m <[0;33mcol:9[0m> [0;32m'const vector<string>::iterator':'const __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67c90b0[0m <[0;33mcol:9[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67c5150[0m[0;1;36m 'it'[0m [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m
[0;34m    |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x67cad70[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;32m'const std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'const __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67cad58[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;32m'const std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'const __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x67c9180[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;32m'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x67c9150[0m <[0;33mcol:15[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x67b6028[0m
[0;34m    |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67c90d0[0m <[0;33mcol:15[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x679f180[0m[0;1;36m 'input'[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x67cb260[0m <[0;33mcol:28[0m, [0;33mline:36:2[0m>
[0;34m      |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x67cb130[0m <[0;33mline:34:3[0m, [0;33mcol:20[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x67cb090[0m <[0;33mcol:3[0m, [0;33mcol:20[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67cb078[0m <[0;33mcol:3[0m> [0;32m'void (*)(std::__cxx11::string, vector<vector<int *> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67cb000[0m <[0;33mcol:3[0m> [0;32m'void (std::__cxx11::string, vector<vector<int *> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x674c578[0m[0;1;36m 'conv'[0m [0;32m'void (std::__cxx11::string, vector<vector<int *> > &)'[0m
[0;34m      |   |-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x67cb110[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x67cb110[0m)
[0;34m      |   | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x67cb0d8[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::__cxx11::basic_string<char> &)'[0m
[0;34m      |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67cb0c0[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'const std::__cxx11::basic_string<char>':'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x67cafb0[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'std::__cxx11::basic_string<char>':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67caf98[0m <[0;33mcol:8[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67caf20[0m <[0;33mcol:8[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67c6c80[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >::reference () const noexcept'[0m
[0;34m      |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67caf08[0m <[0;33mcol:9[0m> [0;32m'const __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67caeb8[0m <[0;33mcol:9[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67c5150[0m[0;1;36m 'it'[0m [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67cafe0[0m <[0;33mcol:13[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x679f4f0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> > &'[0m
[0;34m      `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x67cb230[0m <[0;33mline:35:3[0m, [0;33mcol:5[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67cb218[0m <[0;33mcol:3[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67cb198[0m <[0;33mcol:3[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x67c6f30[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &() noexcept'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x67cb148[0m <[0;33mcol:5[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x67c5150[0m[0;1;36m 'it'[0m [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m

Dumping std::__is_convertible_helper:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f139c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1516:3[0m, [0;33mline:1520:49[0m> [0;33mline:1519:12[0m[0;1;36m __is_convertible_helper[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f13338[0m <[0;33mline:1516:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f133a8[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mNonTypeTemplateParmDecl[0m[0;33m 0x5f13898[0m <[0;33mline:1517:12[0m, [0;33mline:1518:41[0m> [0;33mline:1517:17[0m [0;32m'bool'[0m depth 0 index 2
[0;34m| `-[0mTemplateArgument expr
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5f138f8[0m <[0;33mcol:19[0m, [0;33mline:1518:41[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mDependent[0m>
[0;34m|     `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x5f13850[0m <[0;33mline:1517:19[0m, [0;33mline:1518:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f13938[0m <[0;33mline:1519:5[0m, [0;33mline:1520:49[0m> [0;33mline:1519:12[0m struct[0;1;36m __is_convertible_helper[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f13ca0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_helper[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5f144a0[0m <[0;33mline:1520:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m type[0m [0;32m'typename is_void<_To>::type'[0m
[0;34m|   `-[0m[0;32mDependentNameType[0m[0;33m 0x5f14430[0m [0;32m'typename is_void<_To>::type'[0m dependent
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aee6d8[0m <[0;33mline:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument integral 0
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6aeea50[0m prev 0x6aee6d8 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6aeece8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aeeae0[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 0[0;1;36m _To1[0m
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aeec48[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m  | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aeeb80[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6af9fd8[0m <[0;33mcol:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m referenced[0;1;36m __test_aux[0m [0;32m'void (std::input_iterator_tag)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6af9ee8[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'std::input_iterator_tag':'std::input_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6aef260[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aeedc8[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _From1[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aeee38[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m typename depth 0 index 1[0;1;36m _To1[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aeeea8[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 0 index 2
[0;34m  | | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aef1c0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m  | | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6aef130[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6afa3c0[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |   |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6afa330[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6aef4e8[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aef340[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 0 index 0
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6aef3b8[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m  | |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aef448[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  | `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6aef7f8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  |   |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |   `-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6aef5c0[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6afa628[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<std::random_access_iterator_tag, std::input_iterator_tag>(0))':'std::integral_constant<bool, true>'[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x6afa5f0[0m [0;32m'decltype(__test<std::random_access_iterator_tag, std::input_iterator_tag>(0))'[0m sugar
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x6afa5a0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6afa588[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6afa4f0[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6afa3c0[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6aef260[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5f156c0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      `-[0m[0;32mTypedefType[0m[0;33m 0x5e79470[0m [0;32m'std::true_type'[0m sugar
[0;34m        |-[0m[0;1;32mTypedef[0m[0;33m 0x5e71c48[0m[0;1;36m 'true_type'[0m
[0;34m        `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5e71b60[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m          |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m          |-[0mTemplateArgument expr
[0;34m          | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x5e71a28[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m          |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5e719d0[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m          `-[0m[0;32mRecordType[0m[0;33m 0x5e71b40[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m            `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5e71a48[0m[0;1;36m 'integral_constant'[0m

Dumping std::__is_convertible_helper:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x5f147f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1522:3[0m, [0;33mline:1539:5[0m> [0;33mline:1523:11[0m class[0;1;36m __is_convertible_helper[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-1'[0m
[0;34m|-[0mTemplateArgument integral 0
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f14510[0m <[0;33mline:1522:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f14588[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f14ae8[0m <[0;33mline:1523:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __is_convertible_helper[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5f14dd8[0m <[0;33mline:1525:8[0m, [0;33mline:1526:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f14b78[0m <[0;33mline:1525:17[0m, [0;33mcol:26[0m> [0;33mcol:26[0m referenced typename depth 1 index 0[0;1;36m _To1[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5f14d38[0m <[0;33mline:1526:2[0m, [0;33mcol:29[0m> [0;33mcol:14[0m[0;1;36m __test_aux[0m [0;32m'void (_To1)'[0m static
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f14c10[0m <[0;33mcol:25[0m> [0;33mcol:29[0m [0;32m'_To1'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5f15328[0m <[0;33mline:1528:7[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f14e38[0m <[0;33mline:1528:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _From1[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f14ea8[0m <[0;33mcol:33[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced typename depth 1 index 1[0;1;36m _To1[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f15148[0m <[0;33mline:1529:9[0m, [0;33mcol:20[0m> [0;33mcol:9[0m typename depth 1 index 2
[0;34m| | `-[0mTemplateArgument type [0;32m'decltype(__test_aux<_To1>(std::declval<_From1>()))'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5f15288[0m <[0;33mline:1530:2[0m, [0;33mline:1531:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f151f8[0m <[0;33mcol:9[0m> [0;33mcol:12[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x5f15548[0m <[0;33mline:1533:7[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f15388[0m <[0;33mline:1533:16[0m> [0;33mcol:16[0m typename depth 1 index 0
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f153f8[0m <[0;33mcol:26[0m> [0;33mcol:26[0m typename depth 1 index 1
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5f154a8[0m <[0;33mline:1534:2[0m, [0;33mline:1535:12[0m> [0;33mcol:2[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x5f155a0[0m <[0;33mline:1537:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m`-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5f15748[0m <[0;33mline:1538:7[0m, [0;33mcol:47[0m> [0;33mcol:47[0m[0;1;36m type[0m [0;32m'decltype(__test<_From, _To>(0))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x5f15710[0m [0;32m'decltype(__test<_From, _To>(0))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x5f156e0[0m <[0;33mcol:24[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x5f15600[0m <[0;33mcol:24[0m, [0;33mcol:41[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__test'[0;33m 0x5f15548[0m[0;33m 0x5f15328[0m
[0;34m      `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5f156c0[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

Dumping std::is_convertible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x5f15948[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m[0;1;36m is_convertible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f157b8[0m <[0;33mline:1543:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _From[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5f15828[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _To[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f158b8[0m <[0;33mline:1544:5[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_helper<_From, _To>::type'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5f161f0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aeae50[0m <[0;33mline:1543:3[0m, [0;33mline:1546:7[0m> [0;33mline:1544:12[0m struct[0;1;36m is_convertible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_helper<random_access_iterator_tag, input_iterator_tag>::type':'std::integral_constant<bool, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::input_iterator_tag'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6afa740[0m prev 0x6aeae50 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m is_convertible[0m

Dumping __do_converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5feb018[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:128:2[0m, [0;33mline:129:33[0m> [0;33mline:128:8[0m referenced[0;1;36m __do_converts[0m [0;32m'__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5feaf30[0m [0;32m'__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >'[0m dependent __and_
[0;34m  |-[0mTemplateArgument type [0;32m'is_convertible<const _U1 &, _T1>'[0m
[0;34m  `-[0mTemplateArgument type [0;32m'is_convertible<_U2 &&, _T2>'[0m

Dumping __converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5feb3f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:130:2[0m, [0;33mline:132:36[0m> [0;33mline:130:8[0m referenced[0;1;36m __converts[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m
[0;34m`-[0m[0;32mDependentNameType[0m[0;33m 0x5feb380[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m dependent

Dumping __do_converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5fed998[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:142:2[0m, [0;33mline:143:38[0m> [0;33mline:142:8[0m referenced[0;1;36m __do_converts[0m [0;32m'__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >'[0m
[0;34m`-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x5fed8b0[0m [0;32m'__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >'[0m dependent __and_
[0;34m  |-[0mTemplateArgument type [0;32m'is_convertible<_U1 &&, _T1>'[0m
[0;34m  `-[0mTemplateArgument type [0;32m'is_convertible<const _U2 &, _T2>'[0m

Dumping __converts:
[0;1;32mTypeAliasDecl[0m[0;33m 0x5fedd70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_pair.h:144:2[0m, [0;33mline:146:36[0m> [0;33mline:144:8[0m referenced[0;1;36m __converts[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m
[0;34m`-[0m[0;32mDependentNameType[0m[0;33m 0x5fedd00[0m [0;32m'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'[0m dependent

Dumping std::__convert_from_v:
[0;1;32mFunctionDecl[0m[0;33m 0x60ffbf0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++locale.h:68:3[0m, [0;33mline:109:3[0m> [0;33mline:69:3[0m referenced[0;1;36m __convert_from_v[0m [0;32m'int (const std::__c_locale &, char *, const int, const char *, ...)'[0m inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ff8a8[0m <[0;33mcol:20[0m, [0;33mcol:38[0m> [0;33mcol:38[0m used[0;1;36m __cloc[0m [0;32m'const std::__c_locale &'[0m
[0;34m| `-[0m[0;1;34mUnusedAttr[0m[0;33m 0x60ff910[0m <[0;33mcol:61[0m> unused
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ff968[0m <[0;33mline:70:6[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m __out[0m [0;32m'char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ff9e8[0m <[0;33mline:71:6[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m __size[0m [0;32m'const int'[0m
[0;34m| `-[0m[0;1;34mUnusedAttr[0m[0;33m 0x60ffa50[0m <[0;33mcol:39[0m> unused
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ffaa8[0m <[0;33mline:72:6[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m __fmt[0m [0;32m'const char *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x610c010[0m <[0;33mline:73:3[0m, [0;33mline:109:3[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60ffe60[0m <[0;33mline:75:5[0m, [0;33mcol:54[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60ffcc0[0m <[0;33mcol:5[0m, [0;33mcol:53[0m> [0;33mcol:16[0m used[0;1;36m __old[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x60ffe20[0m <[0;33mcol:24[0m, [0;33mcol:53[0m> [0;32m'locale_t':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ffe08[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'typeof (uselocale) *'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ffd60[0m <[0;33mcol:24[0m, [0;33mcol:35[0m> [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60ff5c8[0m[0;1;36m '__uselocale'[0m [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ffe48[0m <[0;33mcol:47[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ffd90[0m <[0;33mcol:47[0m> [0;32m'const std::__c_locale':'struct __locale_struct *const'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ff8a8[0m[0;1;36m '__cloc'[0m [0;32m'const std::__c_locale &'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x610b200[0m <[0;33mline:88:5[0m, [0;33mcol:29[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60ffe88[0m <[0;33mcol:5[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m __args[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x610b0d8[0m <[0;33mcol:23[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x610b4f0[0m <[0;33mline:89:5[0m, [0;33mcol:37[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610b4d8[0m <[0;33mcol:5[0m> [0;32m'void (*)(__va_list_tag *, ...) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b420[0m <[0;33mcol:5[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x610b2d0[0m[0;1;36m '__builtin_va_start'[0m [0;32m'void (__va_list_tag *, ...) noexcept'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610b520[0m <[0;33mcol:24[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b440[0m <[0;33mcol:24[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60ffe88[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b460[0m <[0;33mcol:32[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ffaa8[0m[0;1;36m '__fmt'[0m [0;32m'const char *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x610bbf0[0m <[0;33mline:92:5[0m, [0;33mcol:72[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x610b550[0m <[0;33mcol:5[0m, [0;33mcol:71[0m> [0;33mcol:15[0m used[0;1;36m __ret[0m [0;32m'const int'[0m cinit
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x610bae0[0m <[0;33mcol:23[0m, [0;33mcol:71[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bac8[0m <[0;33mcol:23[0m> [0;32m'int (*)(char *, unsigned long, const char *, __va_list_tag *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b968[0m <[0;33mcol:23[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x610b6a8[0m[0;1;36m '__builtin_vsnprintf'[0m [0;32m'int (char *, unsigned long, const char *, __va_list_tag *) noexcept'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bb20[0m <[0;33mcol:43[0m> [0;32m'char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b988[0m <[0;33mcol:43[0m> [0;32m'char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ff968[0m[0;1;36m '__out'[0m [0;32m'char *'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bb50[0m <[0;33mcol:50[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bb38[0m <[0;33mcol:50[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b9a8[0m <[0;33mcol:50[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ff9e8[0m[0;1;36m '__size'[0m [0;32m'const int'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bb68[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b9c8[0m <[0;33mcol:58[0m> [0;32m'const char *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ffaa8[0m[0;1;36m '__fmt'[0m [0;32m'const char *'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bb80[0m <[0;33mcol:65[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610b9e8[0m <[0;33mcol:65[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60ffe88[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x610bec0[0m <[0;33mline:97:5[0m, [0;33mcol:28[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bea8[0m <[0;33mcol:5[0m> [0;32m'void (*)(__va_list_tag *) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610be10[0m <[0;33mcol:5[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x610bcc0[0m[0;1;36m '__builtin_va_end'[0m [0;32m'void (__va_list_tag *) noexcept'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bee8[0m <[0;33mcol:22[0m> [0;32m'__va_list_tag *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610be30[0m <[0;33mcol:22[0m> [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60ffe88[0m[0;1;36m '__args'[0m [0;32m'__builtin_va_list':'__va_list_tag [1]'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x610bf88[0m <[0;33mline:100:5[0m, [0;33mcol:33[0m> [0;32m'locale_t':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bf70[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;32m'typeof (uselocale) *'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610bf20[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60ff5c8[0m[0;1;36m '__uselocale'[0m [0;32m'typeof (uselocale)':'locale_t (locale_t) throw()'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bfb0[0m <[0;33mcol:28[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610bf50[0m <[0;33mcol:28[0m> [0;32m'std::__c_locale':'struct __locale_struct *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60ffcc0[0m[0;1;36m '__old'[0m [0;32m'std::__c_locale':'struct __locale_struct *'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x610c000[0m <[0;33mline:108:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x610bfe8[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x610bfc8[0m <[0;33mcol:12[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x610b550[0m[0;1;36m '__ret'[0m [0;32m'const int'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x65d03e0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:71:3[0m, [0;33mline:74:31[0m> [0;33mline:73:5[0m[0;1;36m __convert_to_v[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x65cff10[0m <[0;33mline:71:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x65d0340[0m <[0;33mline:72:5[0m, [0;33mline:74:31[0m> [0;33mline:73:5[0m[0;1;36m __convert_to_v[0m [0;32m'void (const char *, _Tp &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65cffb8[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0058[0m <[0;33mcol:33[0m, [0;33mcol:36[0m> [0;33mcol:37[0m [0;32m'_Tp &'[0m
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0180[0m <[0;33mcol:39[0m, [0;33mcol:56[0m> [0;33mcol:57[0m [0;32m'ios_base::iostate &'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d01f8[0m <[0;33mline:74:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m
[0;34m|-[0m[0;1;32mFunction[0m[0;33m 0x65d0790[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, float &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0m[0;1;32mFunction[0m[0;33m 0x65d1070[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m`-[0m[0;1;32mFunction[0m[0;33m 0x65d18d0[0m[0;1;36m '__convert_to_v'[0m [0;32m'void (const char *, long double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x65d0790[0m prev 0x65d0be0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:77:3[0m, [0;33mline:80:31[0m> [0;33mline:79:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, float &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0480[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0500[0m <[0;33mcol:33[0m, [0;33mcol:38[0m> [0;33mcol:39[0m [0;32m'float &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d05d0[0m <[0;33mcol:41[0m, [0;33mcol:58[0m> [0;33mcol:59[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0648[0m <[0;33mline:80:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x65d1070[0m prev 0x65d1440 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:82:3[0m, [0;33mline:85:31[0m> [0;33mline:84:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0d60[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0de0[0m <[0;33mcol:33[0m, [0;33mcol:39[0m> [0;33mcol:40[0m [0;32m'double &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0eb0[0m <[0;33mcol:42[0m, [0;33mcol:59[0m> [0;33mcol:60[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d0f28[0m <[0;33mline:85:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::__convert_to_v:
[0;1;32mFunctionDecl[0m[0;33m 0x65d18d0[0m prev 0x65d1ca0 <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:87:3[0m, [0;33mline:90:31[0m> [0;33mline:89:5[0m referenced[0;1;36m __convert_to_v[0m [0;32m'void (const char *, long double &, ios_base::iostate &, const std::__c_locale &) throw()'[0m
[0;34m|-[0mTemplateArgument type [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d15c0[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;33mcol:31[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d1640[0m <[0;33mcol:33[0m, [0;33mcol:44[0m> [0;33mcol:45[0m [0;32m'long double &'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d1710[0m <[0;33mcol:47[0m, [0;33mcol:64[0m> [0;33mcol:65[0m [0;32m'ios_base::iostate &'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x65d1788[0m <[0;33mline:90:6[0m, [0;33mcol:22[0m> [0;33mcol:23[0m [0;32m'const std::__c_locale &'[0m

Dumping std::ctype<wchar_t>::_M_convert_to_wmask:
[0;1;32mCXXMethodDecl[0m[0;33m 0x61edb10[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.h:1229:7[0m, [0;33mline:1230:55[0m> [0;33mcol:7[0m[0;1;36m _M_convert_to_wmask[0m [0;32m'std::ctype<wchar_t>::__wmask_type (const std::ctype_base::mask) const throw()'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61eda18[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;33mcol:38[0m[0;1;36m __m[0m [0;32m'const std::ctype_base::mask':'const unsigned short'[0m

Dumping std::__is_convertible_to_basic_ostream_test:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6692658[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:616:3[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_ostream_test[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6692158[0m <[0;33mline:616:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Ch[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66921c8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x66925b8[0m <[0;33mline:617:5[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_ostream_test[0m [0;32m'basic_ostream<_Ch, _Up> &(basic_ostream<_Ch, _Up> *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6692458[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_ostream<_Ch, _Up> *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6ab6df8[0m <[0;33mline:617:5[0m, [0;33mline:618:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_ostream_test[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::char_traits<char>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6ab6cc8[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_ostream<char, std::char_traits<char> > *'[0m

Dumping std::__is_convertible_to_basic_ostream_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6692858[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:620:3[0m, [0;33mline:624:5[0m> [0;33mline:621:12[0m[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66926b8[0m <[0;33mline:620:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6692738[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66927c8[0m <[0;33mline:621:5[0m, [0;33mline:624:5[0m> [0;33mline:621:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6692af0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6692b90[0m <[0;33mline:623:7[0m, [0;33mcol:30[0m> [0;33mcol:13[0m[0;1;36m __ostream_type[0m [0;32m'void'[0m
[0;34m|   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d3bdc0[0m [0;32m'void'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aaf7a8[0m <[0;33mline:631:3[0m, [0;33mline:638:5[0m> [0;33mline:632:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ab71b0[0m prev 0x6aaf7a8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m  `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6ab7868[0m <[0;33mline:636:7[0m, [0;33mline:637:47[0m> [0;33mline:636:13[0m referenced[0;1;36m __ostream_type[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>':'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m    `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6ab77f0[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>'[0m sugar alias __do_is_convertible_to_basic_ostream_impl
[0;34m      |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &':'std::basic_ostream<char> &'[0m
[0;34m      |-[0m[0;32mDecltypeType[0m[0;33m 0x6ab77b0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<basic_ostream<char> &>::type *>()))'[0m sugar
[0;34m      | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6ab7768[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ab7750[0m <[0;33mline:628:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ab7728[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ab6df8[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6692658[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m) non_odr_use_unevaluated
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ab7790[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ab76a8[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ab7690[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ab7628[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ab67f0[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5f53b80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6ab6ba0[0m [0;32m'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6ab6b40[0m [0;32m'basic_ostream<char, std::char_traits<char> >'[0m sugar basic_ostream
[0;34m      |     |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m      |     `-[0m[0;32mRecordType[0m[0;33m 0x5e3ec30[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m      |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5e3eb30[0m[0;1;36m 'basic_ostream'[0m
[0;34m      `-[0m[0;32mDecltypeType[0m[0;33m 0x6ab77b0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<basic_ostream<char> &>::type *>()))'[0m sugar
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x6ab7768[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ab7750[0m <[0;33mline:628:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ab7728[0m <[0;33mcol:14[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ab6df8[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x6692658[0m[0;1;36m '__is_convertible_to_basic_ostream_test'[0m) non_odr_use_unevaluated
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ab7790[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6ab76a8[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_ostream<char> *':'std::basic_ostream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ab7690[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ab7628[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6ab67f0[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_ostream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5f53b80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m        `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6ab6ba0[0m [0;32m'basic_ostream<char, std::char_traits<char> > &'[0m
[0;34m          `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6ab6b40[0m [0;32m'basic_ostream<char, std::char_traits<char> >'[0m sugar basic_ostream
[0;34m            |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m            |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m            `-[0m[0;32mRecordType[0m[0;33m 0x5e3ec30[0m [0;32m'std::basic_ostream<char>'[0m
[0;34m              `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5e3eb30[0m[0;1;36m 'basic_ostream'[0m

Dumping std::__do_is_convertible_to_basic_ostream_impl:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x6692fc8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:626:3[0m, [0;33mline:628:5[0m> [0;33mline:627:5[0m[0;1;36m __do_is_convertible_to_basic_ostream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6692c08[0m <[0;33mline:626:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6692f68[0m <[0;33mline:627:5[0m, [0;33mline:628:5[0m> [0;33mline:627:11[0m[0;1;36m __do_is_convertible_to_basic_ostream_impl[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x6692f30[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x6692ec8[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6692c90[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x6692658[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6692ea8[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6692e20[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5f53b80[0m

Dumping std::__is_convertible_to_basic_ostream_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x6693638[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:631:3[0m, [0;33mline:638:5[0m> [0;33mline:632:12[0m struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6693020[0m <[0;33mline:631:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66938b8[0m <[0;33mline:632:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream_impl[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6693c98[0m <[0;33mline:636:7[0m, [0;33mline:637:47[0m> [0;33mline:636:13[0m[0;1;36m __ostream_type[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<_Tp>':'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6693bf0[0m [0;32m'__do_is_convertible_to_basic_ostream_impl<_Tp>'[0m sugar dependent alias __do_is_convertible_to_basic_ostream_impl
[0;34m    |-[0mTemplateArgument type [0;32m'_Tp'[0m
[0;34m    |-[0m[0;32mDecltypeType[0m[0;33m 0x6693bb0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6693b88[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6693968[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x6692658[0m
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6693b68[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6693ae0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5f53b80[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x6693bb0[0m [0;32m'decltype(__is_convertible_to_basic_ostream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x6693b88[0m <[0;33mline:628:14[0m, [0;33mline:629:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6693968[0m <[0;33mline:628:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_ostream_test'[0;33m 0x6692658[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x6693b68[0m <[0;33mline:629:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x6693ae0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5f53b80[0m

Dumping std::__is_convertible_to_basic_ostream:
[0;1;32mClassTemplateDecl[0m[0;33m 0x6693e30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ostream:640:3[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6693d10[0m <[0;33mline:640:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6693da0[0m <[0;33mline:641:5[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m struct[0;1;36m __is_convertible_to_basic_ostream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_ostream_impl<_Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6694130[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x66941c0[0m <[0;33mline:644:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6694510[0m <[0;33mline:645:7[0m, [0;33mline:646:78[0m> [0;33mline:645:13[0m referenced[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6694470[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type> >'[0m dependent __not_
[0;34m| |   `-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_ostream_impl<_Tp>::__ostream_type>'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x6694580[0m <[0;33mline:647:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x6694660[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6aaf440[0m <[0;33mline:640:3[0m, [0;33mline:648:5[0m> [0;33mline:641:12[0m struct[0;1;36m __is_convertible_to_basic_ostream[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &>':'std::__is_convertible_to_basic_ostream_impl<std::basic_ostream<char> &, void>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_ostream<char> &'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6ab7910[0m prev 0x6aaf440 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_ostream[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6ab79a0[0m <[0;33mline:644:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6ab7dd0[0m <[0;33mline:645:7[0m, [0;33mline:646:78[0m> [0;33mline:645:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type> >':'std::__not_<std::is_void<std::basic_ostream<char> &> >'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6ab7d60[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type> >'[0m sugar __not_
[0;34m  |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_ostream_impl<basic_ostream<char> &>::__ostream_type>':'std::is_void<std::basic_ostream<char> &>'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x6ab7d40[0m [0;32m'std::__not_<std::is_void<std::basic_ostream<char> &> >'[0m
[0;34m  |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6ab7c60[0m[0;1;36m '__not_'[0m
[0;34m  `-[0m[0;1;32mVarDecl[0m[0;33m 0x6ab7e30[0m <[0;33mline:647:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ab9410[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ab93e0[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65726e8[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant

Dumping std::__is_convertible_to_basic_istream_test:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x66ebef8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:911:3[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_istream_test[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66eb9c8[0m <[0;33mline:911:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Ch[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66eba38[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x66ebe58[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<_Ch, _Up> &(basic_istream<_Ch, _Up> *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x66ebcf8[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<_Ch, _Up> *'[0m
[0;34m|-[0m[0;1;32mFunctionDecl[0m[0;33m 0x672c588[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'char'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::char_traits<char>'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x672c458[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<char, std::char_traits<char> > *'[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x6748b28[0m <[0;33mline:912:5[0m, [0;33mline:913:68[0m> [0;33mcol:5[0m referenced[0;1;36m __is_convertible_to_basic_istream_test[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'wchar_t'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>'[0m
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67489f8[0m <[0;33mcol:44[0m, [0;33mcol:67[0m> [0;33mcol:68[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > *'[0m

Dumping std::__is_convertible_to_basic_istream_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x66ec0f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:915:3[0m, [0;33mline:919:5[0m> [0;33mline:916:12[0m[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66ebf58[0m <[0;33mline:915:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66ebfd8[0m <[0;33mcol:26[0m, [0;33mcol:37[0m> [0;33mcol:26[0m typename depth 0 index 1
[0;34m| `-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66ec068[0m <[0;33mline:916:5[0m, [0;33mline:919:5[0m> [0;33mline:916:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66ec390[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x66ec430[0m <[0;33mline:918:7[0m, [0;33mcol:30[0m> [0;33mcol:13[0m[0;1;36m __istream_type[0m [0;32m'void'[0m
[0;34m|   `-[0m[0;32mBuiltinType[0m[0;33m 0x5d3bdc0[0m [0;32m'void'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6724478[0m <[0;33mline:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x672c940[0m prev 0x6724478 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m| `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x672cff8[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m referenced[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<char> &>':'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x672cf80[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<char> &>'[0m sugar alias __do_is_convertible_to_basic_istream_impl
[0;34m|     |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &':'std::basic_istream<char> &'[0m
[0;34m|     |-[0m[0;32mDecltypeType[0m[0;33m 0x672cf40[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<char> &>::type *>()))'[0m sugar
[0;34m|     | |-[0m[0;1;35mCallExpr[0m[0;33m 0x672cef8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<char, std::char_traits<char> >':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x672cee0[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(*)(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x672ceb8[0m <[0;33mcol:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x672c588[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66ebef8[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m|     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x672cf20[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|     | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x672ce38[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|     | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x672ce20[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x672cdb8[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x672bf80[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5f53b80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x672c330[0m [0;32m'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|     |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x672c2d0[0m [0;32m'basic_istream<char, std::char_traits<char> >'[0m sugar basic_istream
[0;34m|     |     |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m|     |     |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m|     |     `-[0m[0;32mRecordType[0m[0;33m 0x5e3e950[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|     |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5e3e850[0m[0;1;36m 'basic_istream'[0m
[0;34m|     `-[0m[0;32mDecltypeType[0m[0;33m 0x672cf40[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<char> &>::type *>()))'[0m sugar
[0;34m|       |-[0m[0;1;35mCallExpr[0m[0;33m 0x672cef8[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<char, std::char_traits<char> >':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|       | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x672cee0[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(*)(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x672ceb8[0m <[0;33mcol:14[0m> [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x672c588[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<char, std::char_traits<char> > &(basic_istream<char, std::char_traits<char> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66ebef8[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m|       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x672cf20[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|       |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x672ce38[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<char> *':'std::basic_istream<char> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m|       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x672ce20[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|       |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x672cdb8[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x672bf80[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<char> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5f53b80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m|       `-[0m[0;32mLValueReferenceType[0m[0;33m 0x672c330[0m [0;32m'basic_istream<char, std::char_traits<char> > &'[0m
[0;34m|         `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x672c2d0[0m [0;32m'basic_istream<char, std::char_traits<char> >'[0m sugar basic_istream
[0;34m|           |-[0mTemplateArgument type [0;32m'char':'char'[0m
[0;34m|           |-[0mTemplateArgument type [0;32m'std::char_traits<char>':'std::char_traits<char>'[0m
[0;34m|           `-[0m[0;32mRecordType[0m[0;33m 0x5e3e950[0m [0;32m'std::basic_istream<char>'[0m
[0;34m|             `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5e3e850[0m[0;1;36m 'basic_istream'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x673f888[0m <[0;33mline:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'void'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6748ee0[0m prev 0x673f888 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m  `-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6749598[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m referenced[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>':'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m    `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6749520[0m [0;32m'__do_is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>'[0m sugar alias __do_is_convertible_to_basic_istream_impl
[0;34m      |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &':'std::basic_istream<wchar_t> &'[0m
[0;34m      |-[0m[0;32mDecltypeType[0m[0;33m 0x67494e0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<wchar_t> &>::type *>()))'[0m sugar
[0;34m      | |-[0m[0;1;35mCallExpr[0m[0;33m 0x6749498[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >':'std::basic_istream<wchar_t>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6749480[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(*)(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6749458[0m <[0;33mcol:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6748b28[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66ebef8[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67494c0[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x67493d8[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67493c0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6749358[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67485a0[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5f53b80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;32mLValueReferenceType[0m[0;33m 0x67488d0[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m      |   `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6748870[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >'[0m sugar basic_istream
[0;34m      |     |-[0mTemplateArgument type [0;32m'wchar_t':'wchar_t'[0m
[0;34m      |     |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>':'std::char_traits<wchar_t>'[0m
[0;34m      |     `-[0m[0;32mRecordType[0m[0;33m 0x5e43420[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m      |       `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5e43320[0m[0;1;36m 'basic_istream'[0m
[0;34m      `-[0m[0;32mDecltypeType[0m[0;33m 0x67494e0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<basic_istream<wchar_t> &>::type *>()))'[0m sugar
[0;34m        |-[0m[0;1;35mCallExpr[0m[0;33m 0x6749498[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >':'std::basic_istream<wchar_t>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6749480[0m <[0;33mline:923:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(*)(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6749458[0m <[0;33mcol:14[0m> [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6748b28[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &(basic_istream<wchar_t, std::char_traits<wchar_t> > *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x66ebef8[0m[0;1;36m '__is_convertible_to_basic_istream_test'[0m) non_odr_use_unevaluated
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67494c0[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x67493d8[0m <[0;33mcol:8[0m, [0;33mcol:55[0m> [0;32m'std::basic_istream<wchar_t> *':'std::basic_istream<wchar_t> *'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m        |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x67493c0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type (*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6749358[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67485a0[0m[0;1;36m 'declval'[0m [0;32m'typename add_rvalue_reference<basic_istream<wchar_t> *>::type () noexcept'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5f53b80[0m[0;1;36m 'declval'[0m) non_odr_use_unevaluated
[0;34m        `-[0m[0;32mLValueReferenceType[0m[0;33m 0x67488d0[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> > &'[0m
[0;34m          `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6748870[0m [0;32m'basic_istream<wchar_t, std::char_traits<wchar_t> >'[0m sugar basic_istream
[0;34m            |-[0mTemplateArgument type [0;32m'wchar_t':'wchar_t'[0m
[0;34m            |-[0mTemplateArgument type [0;32m'std::char_traits<wchar_t>':'std::char_traits<wchar_t>'[0m
[0;34m            `-[0m[0;32mRecordType[0m[0;33m 0x5e43420[0m [0;32m'std::basic_istream<wchar_t>'[0m
[0;34m              `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x5e43320[0m[0;1;36m 'basic_istream'[0m

Dumping std::__do_is_convertible_to_basic_istream_impl:
[0;1;32mTypeAliasTemplateDecl[0m[0;33m 0x66ec868[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:921:3[0m, [0;33mline:923:5[0m> [0;33mline:922:5[0m[0;1;36m __do_is_convertible_to_basic_istream_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66ec4a8[0m <[0;33mline:921:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x66ec808[0m <[0;33mline:922:5[0m, [0;33mline:923:5[0m> [0;33mline:922:11[0m[0;1;36m __do_is_convertible_to_basic_istream_impl[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m
[0;34m  `-[0m[0;32mDecltypeType[0m[0;33m 0x66ec7d0[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<_Tp>::type *>()))'[0m dependent
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x66ec768[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66ec530[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x66ebef8[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x66ec748[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66ec6c0[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5f53b80[0m

Dumping std::__is_convertible_to_basic_istream_impl:
[0;1;32mClassTemplatePartialSpecializationDecl[0m[0;33m 0x66eced8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:926:3[0m, [0;33mline:933:5[0m> [0;33mline:927:12[0m struct[0;1;36m __is_convertible_to_basic_istream_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0mTemplateArgument type [0;32m'type-parameter-0-0'[0m
[0;34m|-[0mTemplateArgument type [0;32m'void'[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66ec8c0[0m <[0;33mline:926:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66ed158[0m <[0;33mline:927:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream_impl[0m
[0;34m`-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x66ed538[0m <[0;33mline:931:7[0m, [0;33mline:932:47[0m> [0;33mline:931:13[0m[0;1;36m __istream_type[0m [0;32m'__do_is_convertible_to_basic_istream_impl<_Tp>':'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m
[0;34m  `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x66ed490[0m [0;32m'__do_is_convertible_to_basic_istream_impl<_Tp>'[0m sugar dependent alias __do_is_convertible_to_basic_istream_impl
[0;34m    |-[0mTemplateArgument type [0;32m'_Tp'[0m
[0;34m    |-[0m[0;32mDecltypeType[0m[0;33m 0x66ed450[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m    | `-[0m[0;1;35mCallExpr[0m[0;33m 0x66ed428[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66ed208[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x66ebef8[0m
[0;34m    |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x66ed408[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66ed380[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5f53b80[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x66ed450[0m [0;32m'decltype(__is_convertible_to_basic_istream_test(declval<typename remove_reference<type-parameter-0-0>::type *>()))'[0m dependent
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x66ed428[0m <[0;33mline:923:14[0m, [0;33mline:924:56[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66ed208[0m <[0;33mline:923:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = '__is_convertible_to_basic_istream_test'[0;33m 0x66ebef8[0m
[0;34m        `-[0m[0;1;35mCallExpr[0m[0;33m 0x66ed408[0m <[0;33mline:924:8[0m, [0;33mcol:55[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m          `-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x66ed380[0m <[0;33mcol:8[0m, [0;33mcol:53[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'declval'[0;33m 0x5f53b80[0m

Dumping std::__is_convertible_to_basic_istream:
[0;1;32mClassTemplateDecl[0m[0;33m 0x66ed6d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/istream:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x66ed5b0[0m <[0;33mline:935:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66ed640[0m <[0;33mline:936:5[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<_Tp>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x66ed9d0[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x66eda60[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x66eddb0[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m referenced[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x66edd10[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type> >'[0m dependent __not_
[0;34m| |   `-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<_Tp>::__istream_type>'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x66ede20[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mDependentScopeDeclRefExpr[0m[0;33m 0x66edf00[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x6724110[0m <[0;33mline:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<std::basic_istream<char> &>':'std::__is_convertible_to_basic_istream_impl<std::basic_istream<char> &, void>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::basic_istream<char> &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x672d0a0[0m prev 0x6724110 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x672d130[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x672d560[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type> >':'std::__not_<std::is_void<std::basic_istream<char> &> >'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x672d4f0[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type> >'[0m sugar __not_
[0;34m| |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<char> &>::__istream_type>':'std::is_void<std::basic_istream<char> &>'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x672d4d0[0m [0;32m'std::__not_<std::is_void<std::basic_istream<char> &> >'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x672d3f0[0m[0;1;36m '__not_'[0m
[0;34m| `-[0m[0;1;32mVarDecl[0m[0;33m 0x672d5c0[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m|   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6732b38[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m|     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6732b08[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65726e8[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x673f520[0m <[0;33mline:935:3[0m, [0;33mline:943:5[0m> [0;33mline:936:12[0m struct[0;1;36m __is_convertible_to_basic_istream[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &>':'std::__is_convertible_to_basic_istream_impl<std::basic_istream<wchar_t> &, void>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::basic_istream<wchar_t> &'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6749640[0m prev 0x673f520 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_convertible_to_basic_istream[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x67496d0[0m <[0;33mline:939:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypeAliasDecl[0m[0;33m 0x6749b00[0m <[0;33mline:940:7[0m, [0;33mline:941:78[0m> [0;33mline:940:13[0m[0;1;36m type[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type> >':'std::__not_<std::is_void<std::basic_istream<wchar_t> &> >'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6749a90[0m [0;32m'__not_<is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type> >'[0m sugar __not_
[0;34m  |   |-[0mTemplateArgument type [0;32m'is_void<typename __is_convertible_to_basic_istream_impl<basic_istream<wchar_t> &>::__istream_type>':'std::is_void<std::basic_istream<wchar_t> &>'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x6749a70[0m [0;32m'std::__not_<std::is_void<std::basic_istream<wchar_t> &> >'[0m
[0;34m  |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6749990[0m[0;1;36m '__not_'[0m
[0;34m  `-[0m[0;1;32mVarDecl[0m[0;33m 0x6749b60[0m <[0;33mline:942:7[0m, [0;33mcol:43[0m> [0;33mcol:29[0m[0;1;36m value[0m [0;32m'const bool'[0m static constexpr cinit
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x674b140[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'bool':'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x674b110[0m <[0;33mcol:37[0m, [0;33mcol:43[0m> [0;32m'const bool':'const bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x65726e8[0m[0;1;36m 'value'[0m [0;32m'const bool':'const bool'[0m non_odr_use_constant

Dumping convert:
[0;1;32mFunctionDecl[0m[0;33m 0x6a76208[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/AizukiKoh/2994486_5751500831719424_AizukiKoh.cpp:31:1[0m, [0;33mline:37:1[0m> [0;33mline:31:6[0m used[0;1;36m convert[0m [0;32m'void (vector<std::__cxx11::string>, vector<vector<int *> > &)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a75d80[0m <[0;33mcol:14[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m input[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6a760f0[0m <[0;33mcol:36[0m, [0;33mcol:59[0m> [0;33mcol:59[0m used[0;1;36m dataset[0m [0;32m'vector<vector<int *> > &'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aa1e98[0m <[0;33mcol:68[0m, [0;33mline:37:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6a9fc98[0m <[0;33mline:32:2[0m, [0;33mcol:45[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6a9bd50[0m <[0;33mcol:2[0m, [0;33mcol:44[0m> [0;33mcol:27[0m used[0;1;36m it[0m [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m cinit
[0;34m  |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6a9fc80[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6a9fc50[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &&) noexcept'[0m elidable
[0;34m  |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6a9fb08[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;32m'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a9be68[0m <[0;33mcol:32[0m, [0;33mcol:44[0m> [0;32m'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a9be38[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x6a8ca20[0m
[0;34m  |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a9bdb8[0m <[0;33mcol:32[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a75d80[0m[0;1;36m 'input'[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m  `-[0m[0;1;35mWhileStmt[0m[0;33m 0x6aa1e80[0m <[0;33mline:33:2[0m, [0;33mline:36:2[0m>
[0;34m    |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6aa1a58[0m <[0;33mline:33:9[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m    | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aa1a20[0m <[0;33mcol:9[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m adl
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aa1a08[0m <[0;33mcol:12[0m> [0;32m'bool (*)(const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &, const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aa1988[0m <[0;33mcol:12[0m> [0;32m'bool (const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &, const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6aa17f0[0m[0;1;36m 'operator!='[0m [0;32m'bool (const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &, const __normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &) noexcept'[0m
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aa1940[0m <[0;33mcol:9[0m> [0;32m'const vector<string>::iterator':'const __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a9fcb0[0m <[0;33mcol:9[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a9bd50[0m[0;1;36m 'it'[0m [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m
[0;34m    |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x6aa1970[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;32m'const std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'const __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aa1958[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;32m'const std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'const __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m    |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x6a9fd80[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;32m'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m[0m[0;36m[0m
[0;34m    |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x6a9fd50[0m <[0;33mcol:15[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x6a8cc28[0m
[0;34m    |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a9fcd0[0m <[0;33mcol:15[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a75d80[0m[0;1;36m 'input'[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6aa1e60[0m <[0;33mcol:28[0m, [0;33mline:36:2[0m>
[0;34m      |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x6aa1d30[0m <[0;33mline:34:3[0m, [0;33mcol:20[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      | `-[0m[0;1;35mCallExpr[0m[0;33m 0x6aa1c90[0m <[0;33mcol:3[0m, [0;33mcol:20[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aa1c78[0m <[0;33mcol:3[0m> [0;32m'void (*)(std::__cxx11::string, vector<vector<int *> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aa1c00[0m <[0;33mcol:3[0m> [0;32m'void (std::__cxx11::string, vector<vector<int *> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a23128[0m[0;1;36m 'conv'[0m [0;32m'void (std::__cxx11::string, vector<vector<int *> > &)'[0m
[0;34m      |   |-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x6aa1d10[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x6aa1d10[0m)
[0;34m      |   | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x6aa1cd8[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::__cxx11::basic_string<char> &)'[0m
[0;34m      |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aa1cc0[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'const std::__cxx11::basic_string<char>':'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aa1bb0[0m <[0;33mcol:8[0m, [0;33mcol:9[0m> [0;32m'std::__cxx11::basic_string<char>':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aa1b98[0m <[0;33mcol:8[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >::reference (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aa1b20[0m <[0;33mcol:8[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >::reference () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a9d880[0m[0;1;36m 'operator*'[0m [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >::reference () const noexcept'[0m
[0;34m      |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aa1b08[0m <[0;33mcol:9[0m> [0;32m'const __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aa1ab8[0m <[0;33mcol:9[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a9bd50[0m[0;1;36m 'it'[0m [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aa1be0[0m <[0;33mcol:13[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a760f0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> > &'[0m
[0;34m      `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6aa1e30[0m <[0;33mline:35:3[0m, [0;33mcol:5[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6aa1e18[0m <[0;33mcol:3[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &(*)() noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aa1d98[0m <[0;33mcol:3[0m> [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &() noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a9db30[0m[0;1;36m 'operator++'[0m [0;32m'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > > &() noexcept'[0m
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6aa1d48[0m <[0;33mcol:5[0m> [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a9bd50[0m[0;1;36m 'it'[0m [0;32m'vector<string>::iterator':'__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char> *, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >'[0m

Dumping __resolved:
[0;1;32mParmVarDecl[0m[0;33m 0x505f220[0m <[0;33m/usr/include/stdlib.h:798:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __resolved[0m [0;32m'char *__restrict'[0m

Dumping solve:
[0;1;32mFunctionDecl[0m[0;33m 0x57bd760[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/AizukiKoh/2994486_5751500831719424_AizukiKoh.cpp:39:1[0m, [0;33mline:79:1[0m> [0;33mline:39:5[0m used[0;1;36m solve[0m [0;32m'int (vector<std::__cxx11::string>)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x57bd660[0m <[0;33mcol:11[0m, [0;33mcol:26[0m> [0;33mcol:26[0m used[0;1;36m input[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c9c80[0m <[0;33mcol:33[0m, [0;33mline:79:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c2d98[0m <[0;33mline:40:2[0m, [0;33mcol:31[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57bdae0[0m <[0;33mcol:2[0m, [0;33mcol:24[0m> [0;33mcol:24[0m used[0;1;36m dataset[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m callinit
[0;34m  |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x57c2d70[0m <[0;33mcol:24[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<vector<int *, allocator<int *> > > >::value)'[0m
[0;34m  |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x57c3e08[0m <[0;33mline:41:2[0m, [0;33mcol:24[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCallExpr[0m[0;33m 0x57c2ed0[0m <[0;33mcol:2[0m, [0;33mcol:24[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c2eb8[0m <[0;33mcol:2[0m> [0;32m'void (*)(vector<std::__cxx11::string>, vector<vector<int *> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c2e38[0m <[0;33mcol:2[0m> [0;32m'void (vector<std::__cxx11::string>, vector<vector<int *> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5791838[0m[0;1;36m 'convert'[0m [0;32m'void (vector<std::__cxx11::string>, vector<vector<int *> > &)'[0m
[0;34m  |   |-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x57c3de8[0m <[0;33mcol:10[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x57c3de8[0m)
[0;34m  |   | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x57c3db0[0m <[0;33mcol:10[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > &)'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c3d98[0m <[0;33mcol:10[0m> [0;32m'const vector<std::__cxx11::string>':'const std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c2df8[0m <[0;33mcol:10[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x57bd660[0m[0;1;36m 'input'[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c2e18[0m <[0;33mcol:17[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c3ea8[0m <[0;33mline:42:2[0m, [0;33mcol:20[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c3e30[0m <[0;33mcol:2[0m, [0;33mcol:16[0m> [0;33mcol:7[0m used[0;1;36m canAns[0m [0;32m'bool'[0m cinit
[0;34m  |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x57c3e98[0m <[0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x57c4490[0m <[0;33mline:43:2[0m, [0;33mline:47:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c3f60[0m <[0;33mline:43:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c3ed8[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c3f40[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c4080[0m <[0;33mcol:18[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4068[0m <[0;33mcol:18[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4050[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c3f78[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c3ed8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c3fe8[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c3fb8[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5781070[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4038[0m <[0;33mcol:22[0m> [0;32m'const std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c3f98[0m <[0;33mcol:22[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c40c0[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c40a0[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c3ed8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c4478[0m <[0;33mcol:43[0m, [0;33mline:47:2[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x57c4460[0m <[0;33mline:44:3[0m, [0;33mline:46:3[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c43e0[0m <[0;33mline:44:7[0m, [0;33mcol:50[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |     | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c4218[0m <[0;33mcol:7[0m, [0;33mcol:26[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c41e8[0m <[0;33mcol:7[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5756240[0m
[0;34m  |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4238[0m <[0;33mcol:7[0m, [0;33mcol:19[0m> [0;32m'const std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     | |     `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c41a8[0m <[0;33mcol:7[0m, [0;33mcol:19[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |       |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c4178[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |     | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c40d8[0m <[0;33mcol:7[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |     | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c41d0[0m <[0;33mcol:18[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     | |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c4158[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |     | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c43a8[0m <[0;33mcol:31[0m, [0;33mcol:50[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c4378[0m <[0;33mcol:31[0m, [0;33mcol:45[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5756240[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c43c8[0m <[0;33mcol:31[0m, [0;33mcol:43[0m> [0;32m'const std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c4320[0m <[0;33mcol:31[0m, [0;33mcol:43[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c42f0[0m <[0;33mcol:31[0m, [0;33mcol:39[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |     |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4250[0m <[0;33mcol:31[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |     |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4360[0m <[0;33mcol:42[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4348[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c42d0[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c3ed8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c4448[0m <[0;33mcol:53[0m, [0;33mline:46:3[0m>
[0;34m  |       `-[0m[0;1;35mReturnStmt[0m[0;33m 0x57c4438[0m <[0;33mline:45:4[0m, [0;33mcol:12[0m>
[0;34m  |         `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c4420[0m <[0;33mcol:11[0m, [0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c4400[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x57c8620[0m <[0;33mline:48:2[0m, [0;33mline:58:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c4568[0m <[0;33mline:48:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c44e0[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c4548[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c4658[0m <[0;33mcol:18[0m, [0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4640[0m <[0;33mcol:18[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4628[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4580[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c44e0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c45f0[0m <[0;33mcol:22[0m, [0;33mcol:35[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c45c0[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5781070[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4610[0m <[0;33mcol:22[0m> [0;32m'const std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c45a0[0m <[0;33mcol:22[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c4698[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4678[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c44e0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c8600[0m <[0;33mcol:43[0m, [0;33mline:58:2[0m>
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x57c8540[0m <[0;33mline:49:3[0m, [0;33mline:54:3[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c4750[0m <[0;33mline:49:8[0m, [0;33mcol:17[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c46c8[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;33mcol:12[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c4730[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c4930[0m <[0;33mcol:19[0m, [0;33mcol:42[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4918[0m <[0;33mcol:19[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4900[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4768[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c46c8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c48c8[0m <[0;33mcol:23[0m, [0;33mcol:42[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c4898[0m <[0;33mcol:23[0m, [0;33mcol:37[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5756240[0m
[0;34m  |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c48e8[0m <[0;33mcol:23[0m, [0;33mcol:35[0m> [0;32m'const std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   | |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c4858[0m <[0;33mcol:23[0m, [0;33mcol:35[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c4828[0m <[0;33mcol:23[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |   | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4788[0m <[0;33mcol:23[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |   | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4880[0m <[0;33mcol:34[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c4808[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c4970[0m <[0;33mcol:45[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4950[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c46c8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c8528[0m <[0;33mcol:50[0m, [0;33mline:54:3[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x57c8510[0m <[0;33mline:50:4[0m, [0;33mline:53:4[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c8478[0m <[0;33mline:50:8[0m, [0;33mcol:55[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8448[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x57c4bd8[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4bc0[0m <[0;33mcol:8[0m, [0;33mcol:26[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c4b48[0m <[0;33mcol:8[0m, [0;33mcol:26[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c4b18[0m <[0;33mcol:8[0m, [0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5757028[0m
[0;34m  |   |     | |   |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c4a58[0m <[0;33mcol:8[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c4a28[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |   |     | |   |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4988[0m <[0;33mcol:8[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |   |     | |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4a80[0m <[0;33mcol:19[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     | |   |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c4a08[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |     | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4b88[0m <[0;33mcol:25[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4b70[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4af8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c46c8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |     | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c4ba0[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8460[0m <[0;33mcol:34[0m, [0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x57c8428[0m <[0;33mcol:34[0m, [0;33mcol:55[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8410[0m <[0;33mcol:34[0m, [0;33mcol:52[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c4dd0[0m <[0;33mcol:34[0m, [0;33mcol:52[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |     |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c4da0[0m <[0;33mcol:34[0m, [0;33mcol:48[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5757028[0m
[0;34m  |   |     |     |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c4cc8[0m <[0;33mcol:34[0m, [0;33mcol:46[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |     |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c4c98[0m <[0;33mcol:34[0m, [0;33mcol:42[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |   |     |     |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4bf8[0m <[0;33mcol:34[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |   |     |     |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4d08[0m <[0;33mcol:45[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     |     |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4cf0[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4c78[0m <[0;33mcol:45[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c44e0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4e10[0m <[0;33mcol:51[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c4df8[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c4d80[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c46c8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |     |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c83f0[0m <[0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c84f0[0m <[0;33mcol:58[0m, [0;33mline:53:4[0m>
[0;34m  |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c84c8[0m <[0;33mline:51:5[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8498[0m <[0;33mcol:5[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c3e30[0m[0;1;36m 'canAns'[0m [0;32m'bool'[0m
[0;34m  |   |       | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x57c84b8[0m <[0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   |       `-[0m[0;1;35mBreakStmt[0m[0;33m 0x57c84e8[0m <[0;33mline:52:5[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x57c85e8[0m <[0;33mline:55:3[0m, [0;33mline:57:3[0m>
[0;34m  |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c85b0[0m <[0;33mline:55:7[0m, [0;33mcol:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8598[0m <[0;33mcol:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8578[0m <[0;33mcol:8[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c3e30[0m[0;1;36m 'canAns'[0m [0;32m'bool'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c85d0[0m <[0;33mcol:16[0m, [0;33mline:57:3[0m>
[0;34m  |       `-[0m[0;1;35mBreakStmt[0m[0;33m 0x57c85c8[0m <[0;33mline:56:4[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x57c8708[0m <[0;33mline:59:2[0m, [0;33mline:61:2[0m>
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c8690[0m <[0;33mline:59:6[0m, [0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8678[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8658[0m <[0;33mcol:7[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c3e30[0m[0;1;36m 'canAns'[0m [0;32m'bool'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c86f0[0m <[0;33mcol:15[0m, [0;33mline:61:2[0m>
[0;34m  |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x57c86e0[0m <[0;33mline:60:3[0m, [0;33mcol:11[0m>
[0;34m  |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c86c8[0m <[0;33mcol:10[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c86a8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c87a0[0m <[0;33mline:62:2[0m, [0;33mcol:9[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c8738[0m <[0;33mcol:2[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m min[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c8838[0m <[0;33mline:63:2[0m, [0;33mcol:9[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c87d0[0m <[0;33mcol:2[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m max[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c88f0[0m <[0;33mline:64:2[0m, [0;33mcol:13[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c8868[0m <[0;33mcol:2[0m, [0;33mcol:12[0m> [0;33mcol:6[0m used[0;1;36m ans[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c88d0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x57c9c00[0m <[0;33mline:65:2[0m, [0;33mline:77:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c89a8[0m <[0;33mline:65:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c8920[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c8988[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c8b88[0m <[0;33mcol:18[0m, [0;33mcol:41[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8b70[0m <[0;33mcol:18[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8b58[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c89c0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8920[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c8b20[0m <[0;33mcol:22[0m, [0;33mcol:41[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c8af0[0m <[0;33mcol:22[0m, [0;33mcol:36[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5756240[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8b40[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;32m'const std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c8ab0[0m <[0;33mcol:22[0m, [0;33mcol:34[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c8a80[0m <[0;33mcol:22[0m, [0;33mcol:30[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c89e0[0m <[0;33mcol:22[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8ad8[0m <[0;33mcol:33[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c8a60[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c8bc8[0m <[0;33mcol:44[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8ba8[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8920[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c9bd0[0m <[0;33mcol:49[0m, [0;33mline:77:2[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c8c20[0m <[0;33mline:66:3[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8be0[0m <[0;33mcol:3[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8738[0m[0;1;36m 'min'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c8c00[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 100[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c8c80[0m <[0;33mline:67:3[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8c40[0m <[0;33mcol:3[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c87d0[0m[0;1;36m 'max'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c8c60[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x57c9ab8[0m <[0;33mline:68:3[0m, [0;33mline:75:3[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57c8d40[0m <[0;33mline:68:8[0m, [0;33mcol:17[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x57c8cb8[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c8d20[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c8e30[0m <[0;33mcol:19[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8e18[0m <[0;33mcol:19[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8e00[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8d58[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8cb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c8dc8[0m <[0;33mcol:23[0m, [0;33mcol:36[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c8d98[0m <[0;33mcol:23[0m, [0;33mcol:31[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5781070[0m
[0;34m  |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8de8[0m <[0;33mcol:23[0m> [0;32m'const std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8d78[0m <[0;33mcol:23[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x57c8e70[0m <[0;33mcol:39[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8e50[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8cb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c9a98[0m <[0;33mcol:44[0m, [0;33mline:75:3[0m>
[0;34m  |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x57c9478[0m <[0;33mline:69:4[0m, [0;33mline:71:4[0m>
[0;34m  |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c9160[0m <[0;33mline:69:8[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9130[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x57c90f0[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c90d8[0m <[0;33mcol:8[0m, [0;33mcol:26[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c9060[0m <[0;33mcol:8[0m, [0;33mcol:26[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c9030[0m <[0;33mcol:8[0m, [0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5757028[0m
[0;34m  |   |   | | |   |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c8f58[0m <[0;33mcol:8[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | | |   |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c8f28[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |   |   | | |   |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8e88[0m <[0;33mcol:8[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |   |   | | |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8f98[0m <[0;33mcol:19[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   | | |   |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c8f80[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | |   |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c8f08[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8cb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c90a0[0m <[0;33mcol:25[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   | | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9088[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9010[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8920[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c90b8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9148[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9110[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c87d0[0m[0;1;36m 'max'[0m [0;32m'int'[0m
[0;34m  |   |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c9460[0m <[0;33mcol:38[0m, [0;33mline:71:4[0m>
[0;34m  |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c9440[0m <[0;33mline:70:5[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9180[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c87d0[0m[0;1;36m 'max'[0m [0;32m'int'[0m
[0;34m  |   |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9428[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |       `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x57c9408[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c93f0[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |         | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c9378[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |         |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c9348[0m <[0;33mcol:11[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5757028[0m
[0;34m  |   |   |         |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c9270[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   |         |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c9240[0m <[0;33mcol:11[0m, [0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |   |   |         |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c91a0[0m <[0;33mcol:11[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |   |   |         |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c92b0[0m <[0;33mcol:22[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9298[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |         |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9220[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8cb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c93b8[0m <[0;33mcol:28[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |         |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c93a0[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |         |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9328[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8920[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c93d0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x57c9a80[0m <[0;33mline:72:4[0m, [0;33mline:74:4[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c9768[0m <[0;33mline:72:8[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9738[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x57c96f8[0m <[0;33mcol:8[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c96e0[0m <[0;33mcol:8[0m, [0;33mcol:26[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c9668[0m <[0;33mcol:8[0m, [0;33mcol:26[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c9638[0m <[0;33mcol:8[0m, [0;33mcol:22[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5757028[0m
[0;34m  |   |     | |   |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c9560[0m <[0;33mcol:8[0m, [0;33mcol:20[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c9530[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |   |     | |   |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9490[0m <[0;33mcol:8[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |   |     | |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c95a0[0m <[0;33mcol:19[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     | |   |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9588[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |   |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9510[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8cb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c96a8[0m <[0;33mcol:25[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9690[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9618[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8920[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |     | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c96c0[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9750[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9718[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8738[0m[0;1;36m 'min'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57c9a68[0m <[0;33mcol:38[0m, [0;33mline:74:4[0m>
[0;34m  |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c9a48[0m <[0;33mline:73:5[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9788[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8738[0m[0;1;36m 'min'[0m [0;32m'int'[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9a30[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x57c9a10[0m <[0;33mcol:11[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c99f8[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c9980[0m <[0;33mcol:11[0m, [0;33mcol:29[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int *> >::value_type':'int *'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c9950[0m <[0;33mcol:11[0m, [0;33mcol:25[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5757028[0m
[0;34m  |   |             |   | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x57c9878[0m <[0;33mcol:11[0m, [0;33mcol:23[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int *, std::allocator<int *> > > >::value_type':'std::vector<int *, std::allocator<int *> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             |   |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x57c9848[0m <[0;33mcol:11[0m, [0;33mcol:19[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .at[0;33m 0x5781e58[0m
[0;34m  |   |             |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c97a8[0m <[0;33mcol:11[0m> [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57bdae0[0m[0;1;36m 'dataset'[0m [0;32m'vector<vector<int *> >':'std::vector<std::vector<int *, std::allocator<int *> >, std::allocator<std::vector<int *, std::allocator<int *> > > >'[0m
[0;34m  |   |             |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c98b8[0m <[0;33mcol:22[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |             |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c98a0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9828[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8cb8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |             |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c99c0[0m <[0;33mcol:28[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |             |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c99a8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9930[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8920[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |             `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57c99d8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x57c9ba0[0m <[0;33mline:76:3[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'int'[0m ComputeResultTy=[0;32m'int'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9af0[0m <[0;33mcol:3[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8868[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57c9b80[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9b50[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9b10[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c87d0[0m[0;1;36m 'max'[0m [0;32m'int'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9b68[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9b30[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8738[0m[0;1;36m 'min'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x57c9c70[0m <[0;33mline:78:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57c9c58[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57c9c38[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57c8868[0m[0;1;36m 'ans'[0m [0;32m'int'[0m

Dumping printAnswer:
[0;1;32mFunctionDecl[0m[0;33m 0x6e6ad08[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/AizukiKoh/2994486_5751500831719424_AizukiKoh.cpp:81:1[0m, [0;33mline:87:1[0m> [0;33mline:81:6[0m used[0;1;36m printAnswer[0m [0;32m'void (int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6e6abb0[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;33mcol:22[0m used[0;1;36m x[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6e6ac30[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m ans[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6e81f90[0m <[0;33mcol:34[0m, [0;33mline:87:1[0m>
[0;34m  `-[0m[0;1;35mIfStmt[0m[0;33m 0x6e81f68[0m <[0;33mline:82:2[0m, [0;33mline:86:2[0m> has_else
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6e6ae28[0m <[0;33mline:82:6[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e6ae10[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e6adb8[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6e6ac30[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m    | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6e6adf8[0m <[0;33mcol:13[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6e6add8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6e7bbf0[0m <[0;33mcol:17[0m, [0;33mline:84:2[0m>
[0;34m    | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6e7bbb8[0m <[0;33mline:83:3[0m, [0;33mcol:28[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e7bba0[0m <[0;33mcol:25[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e7bb80[0m <[0;33mcol:25[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a74a68[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6e79f20[0m <[0;33mcol:3[0m, [0;33mcol:23[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e79f08[0m <[0;33mcol:20[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e79e90[0m <[0;33mcol:20[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a6be08[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m    |   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6e778e0[0m <[0;33mcol:3[0m, [0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e778c8[0m <[0;33mcol:8[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e77848[0m <[0;33mcol:8[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a74a68[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e6ae48[0m <[0;33mcol:3[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b0dc10[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m    |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e77830[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    |   | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6e6ae68[0m <[0;33mcol:11[0m> [0;32m'const char [7]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #"[0m
[0;34m    |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e79e78[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e77918[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6e6abb0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m    |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e7bb68[0m <[0;33mcol:28[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m    |     `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6e79f58[0m <[0;33mcol:28[0m> [0;32m'const char [13]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ": Fegla Won\n"[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6e81f50[0m <[0;33mline:84:9[0m, [0;33mline:86:2[0m>
[0;34m      `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6e81f18[0m <[0;33mline:85:3[0m, [0;33mcol:43[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e81f00[0m <[0;33mcol:40[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e81ee0[0m <[0;33mcol:40[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a74a68[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m        |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6e80288[0m <[0;33mcol:3[0m, [0;33mcol:36[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e80270[0m <[0;33mcol:33[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e80250[0m <[0;33mcol:33[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a6be08[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m        | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6e7f478[0m <[0;33mcol:3[0m, [0;33mcol:28[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e7f460[0m <[0;33mcol:25[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e7f440[0m <[0;33mcol:25[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a74a68[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m        | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6e7d7e8[0m <[0;33mcol:3[0m, [0;33mcol:23[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e7d7d0[0m <[0;33mcol:20[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e7d7b0[0m <[0;33mcol:20[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6a6be08[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m        | | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6e7c9d8[0m <[0;33mcol:3[0m, [0;33mcol:11[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        | | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e7c9c0[0m <[0;33mcol:8[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e7c9a0[0m <[0;33mcol:8[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6a74a68[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m        | | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e7bc08[0m <[0;33mcol:3[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b0dc10[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m        | | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e7c988[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6e7bc28[0m <[0;33mcol:11[0m> [0;32m'const char [7]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #"[0m
[0;34m        | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e7d798[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e7ca10[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6e6abb0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m        | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e7f428[0m <[0;33mcol:28[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6e7d820[0m <[0;33mcol:28[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ": "[0m
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e80238[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6e7f4b0[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6e6ac30[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6e81ec8[0m <[0;33mcol:43[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m          `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6e802c0[0m <[0;33mcol:43[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "\n"[0m

Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x559a788[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x559a6f8[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x576a680[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::errc::argument_out_of_domain:
[0;1;32mEnumConstantDecl[0m[0;33m 0x5b175a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m[0;1;36m argument_out_of_domain[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x5b17580[0m <[0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5b17560[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x5b1bfd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5b1c138[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x5b1c1c8[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5b1c2d8[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5b1c200[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5b1c430[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5b1c3a0[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x5b1c530[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x5b1be28 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x5b1c608[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x5b1c608
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5b1c718[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5b1c7b8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x5b1c7b8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5b1c8c8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x5b90238[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:54:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5b90310[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b902e0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b902a0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5b8fcf0[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b902f8[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b902c0[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b8fe88[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x5b91d98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:88:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5b91e70[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b91e40[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b91e00[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5b91850[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5b91e58[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5b91e20[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5b919e8[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x5e62b68[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:13[0m[0;1;36m remainder[0m [0;32m'double (double, double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e62a40[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e62ac0[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x5e62c18[0m <[0;33mcol:13[0m> Implicit

Dumping __remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x5e62d98[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:95:1[0m[0;1;36m __remainder[0m [0;32m'double (double, double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e62c70[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e62cf0[0m <[0;33m/usr/include/math.h:285:20[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'double'[0m

Dumping remainderf:
[0;1;32mFunctionDecl[0m[0;33m 0x5e98548[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:314:1[0m[0;1;36m remainderf[0m [0;32m'float (float, float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e98420[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e984a0[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x5e985f8[0m <[0;33m<scratch space>:314:1[0m> Implicit

Dumping __remainderf:
[0;1;32mFunctionDecl[0m[0;33m 0x5e98778[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:316:1[0m[0;1;36m __remainderf[0m [0;32m'float (float, float) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e98650[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e986d0[0m <[0;33m/usr/include/math.h:302:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'float'[0m

Dumping remainderl:
[0;1;32mFunctionDecl[0m[0;33m 0x5eda0d0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:214:1[0m[0;1;36m remainderl[0m [0;32m'long double (long double, long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ed9fa8[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5eda028[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;34mNoThrowAttr[0m[0;33m 0x5eda180[0m <[0;33m<scratch space>:214:1[0m> Implicit

Dumping __remainderl:
[0;1;32mFunctionDecl[0m[0;33m 0x5eda300[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:216:1[0m[0;1;36m __remainderl[0m [0;32m'long double (long double, long double) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5eda1d8[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5eda258[0m <[0;33m/usr/include/math.h:344:22[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'long double'[0m

Dumping remainderf32:
[0;1;32mFunctionDecl[0m[0;33m 0x5f1e1a8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:67:1[0m[0;1;36m remainderf32[0m [0;32m'_Float32 (_Float32, _Float32) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f1e090[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32':'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f1e108[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32':'float'[0m

Dumping __remainderf32:
[0;1;32mFunctionDecl[0m[0;33m 0x5f1e380[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:69:1[0m[0;1;36m __remainderf32[0m [0;32m'_Float32 (_Float32, _Float32) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f1e268[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32':'float'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f1e2e0[0m <[0;33m/usr/include/math.h:381:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32':'float'[0m

Dumping remainderf64:
[0;1;32mFunctionDecl[0m[0;33m 0x5f4c1f0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:319:1[0m[0;1;36m remainderf64[0m [0;32m'_Float64 (_Float64, _Float64) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f4c0d8[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f4c150[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64':'double'[0m

Dumping __remainderf64:
[0;1;32mFunctionDecl[0m[0;33m 0x5f4c3c8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:321:1[0m[0;1;36m __remainderf64[0m [0;32m'_Float64 (_Float64, _Float64) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f4c2b0[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f4c328[0m <[0;33m/usr/include/math.h:398:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64':'double'[0m

Dumping remainderf32x:
[0;1;32mFunctionDecl[0m[0;33m 0x5f85180[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:202:1[0m[0;1;36m remainderf32x[0m [0;32m'_Float32x (_Float32x, _Float32x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f85068[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32x':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f850e0[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32x':'double'[0m

Dumping __remainderf32x:
[0;1;32mFunctionDecl[0m[0;33m 0x5f85358[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:204:1[0m[0;1;36m __remainderf32x[0m [0;32m'_Float32x (_Float32x, _Float32x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f85240[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float32x':'double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5f852b8[0m <[0;33m/usr/include/math.h:432:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float32x':'double'[0m

Dumping remainderf64x:
[0;1;32mFunctionDecl[0m[0;33m 0x5fb5dc8[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:113:1[0m[0;1;36m remainderf64x[0m [0;32m'_Float64x (_Float64x, _Float64x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb5cb0[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64x':'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb5d28[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64x':'long double'[0m

Dumping __remainderf64x:
[0;1;32mFunctionDecl[0m[0;33m 0x5fb5fa0[0m <[0;33m/usr/include/math.h:283:3[0m, [0;33m/usr/include/x86_64-linux-gnu/sys/cdefs.h:61:27[0m> [0;33m<scratch space>:115:1[0m[0;1;36m __remainderf64x[0m [0;32m'_Float64x (_Float64x, _Float64x) throw()'[0m extern
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb5e88[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:36[0m> [0;33mcol:36[0m[0;1;36m __x[0m [0;32m'_Float64x':'long double'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5fb5f00[0m <[0;33m/usr/include/math.h:449:21[0m, [0;33m/usr/include/x86_64-linux-gnu/bits/mathcalls.h:272:51[0m> [0;33mcol:51[0m[0;1;36m __y[0m [0;32m'_Float64x':'long double'[0m

Dumping std::remainder:
[0;1;32mUsingDecl[0m[0;33m 0x5ff1048[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1194:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainder

Dumping std::remainder:
[0;1;32mUsingShadowDecl[0m[0;33m 0x5ff10a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1194:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5e62b68[0m[0;1;36m 'remainder'[0m [0;32m'double (double, double) throw()'[0m

Dumping std::remainderf:
[0;1;32mUsingDecl[0m[0;33m 0x5ff10f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1195:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainderf

Dumping std::remainderf:
[0;1;32mUsingShadowDecl[0m[0;33m 0x5ff1150[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1195:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5e98548[0m[0;1;36m 'remainderf'[0m [0;32m'float (float, float) throw()'[0m

Dumping std::remainderl:
[0;1;32mUsingDecl[0m[0;33m 0x5ff11a8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1196:3[0m, [0;33mcol:11[0m> [0;33mcol:11[0m ::remainderl

Dumping std::remainderl:
[0;1;32mUsingShadowDecl[0m[0;33m 0x5ff1200[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1196:11[0m> [0;33mcol:11[0m implicit [0;1;32mFunction[0m[0;33m 0x5eda0d0[0m[0;1;36m 'remainderl'[0m [0;32m'long double (long double, long double) throw()'[0m

Dumping std::remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x601a450[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1712:3[0m, [0;33mline:1714:44[0m> [0;33mline:1713:3[0m constexpr[0;1;36m remainder[0m [0;32m'float (float, float)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x601a330[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m __x[0m [0;32m'float'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x601a3b0[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;33mcol:30[0m used[0;1;36m __y[0m [0;32m'float'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x601a7f8[0m <[0;33mline:1714:3[0m, [0;33mcol:44[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x601a7e8[0m <[0;33mcol:5[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x601a788[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x601a770[0m <[0;33mcol:12[0m> [0;32m'float (*)(float, float) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x601a710[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x601a550[0m[0;1;36m '__builtin_remainderf'[0m [0;32m'float (float, float) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x601a7b8[0m <[0;33mcol:33[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x601a730[0m <[0;33mcol:33[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x601a330[0m[0;1;36m '__x'[0m [0;32m'float'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x601a7d0[0m <[0;33mcol:38[0m> [0;32m'float'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x601a750[0m <[0;33mcol:38[0m> [0;32m'float'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x601a3b0[0m[0;1;36m '__y'[0m [0;32m'float'[0m

Dumping std::remainder:
[0;1;32mFunctionDecl[0m[0;33m 0x601a948[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1716:3[0m, [0;33mline:1718:44[0m> [0;33mline:1717:3[0m constexpr[0;1;36m remainder[0m [0;32m'long double (long double, long double)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x601a828[0m <[0;33mcol:13[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m __x[0m [0;32m'long double'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x601a8a8[0m <[0;33mcol:30[0m, [0;33mcol:42[0m> [0;33mcol:42[0m used[0;1;36m __y[0m [0;32m'long double'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x601acf0[0m <[0;33mline:1718:3[0m, [0;33mcol:44[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x601ace0[0m <[0;33mcol:5[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x601ac80[0m <[0;33mcol:12[0m, [0;33mcol:41[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x601ac68[0m <[0;33mcol:12[0m> [0;32m'long double (*)(long double, long double) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mBuiltinFnToFnPtr[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x601ac08[0m <[0;33mcol:12[0m> [0;32m'<builtin fn type>'[0m[0;36m[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x601aa48[0m[0;1;36m '__builtin_remainderl'[0m [0;32m'long double (long double, long double) noexcept'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x601acb0[0m <[0;33mcol:33[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x601ac28[0m <[0;33mcol:33[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x601a828[0m[0;1;36m '__x'[0m [0;32m'long double'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x601acc8[0m <[0;33mcol:38[0m> [0;32m'long double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x601ac48[0m <[0;33mcol:38[0m> [0;32m'long double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x601a8a8[0m[0;1;36m '__y'[0m [0;32m'long double'[0m

Dumping std::remainder:
[0;1;32mFunctionTemplateDecl[0m[0;33m 0x601b558[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cmath:1722:3[0m, [0;33mline:1728:5[0m> [0;33mline:1724:5[0m[0;1;36m remainder[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x601ad08[0m <[0;33mline:1722:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x601ad78[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Up[0m
[0;34m`-[0m[0;1;32mFunctionDecl[0m[0;33m 0x601b4b8[0m <[0;33mline:1723:5[0m, [0;33mline:1728:5[0m> [0;33mline:1724:5[0m constexpr[0;1;36m remainder[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type (_Tp, _Up)'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x601b360[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;33mcol:19[0m referenced[0;1;36m __x[0m [0;32m'_Tp'[0m
[0;34m  |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x601b3d8[0m <[0;33mcol:24[0m, [0;33mcol:28[0m> [0;33mcol:28[0m referenced[0;1;36m __y[0m [0;32m'_Up'[0m
[0;34m  `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x601bd00[0m <[0;33mline:1725:5[0m, [0;33mline:1728:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x601bb78[0m <[0;33mline:1726:7[0m, [0;33mcol:71[0m>
[0;34m    | `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x601bb20[0m <[0;33mcol:7[0m, [0;33mcol:65[0m> [0;33mcol:65[0m referenced[0;1;36m __type[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m    |   `-[0m[0;32mDependentNameType[0m[0;33m 0x601bab0[0m [0;32m'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m dependent
[0;34m    `-[0m[0;1;35mReturnStmt[0m[0;33m 0x601bcf0[0m <[0;33mline:1727:7[0m, [0;33mcol:48[0m>
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x601bcc0[0m <[0;33mcol:14[0m, [0;33mcol:48[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x601bb90[0m <[0;33mcol:14[0m> [0;32m'<overloaded function type>'[0m[0;36m lvalue[0m[0;36m[0m (ADL) = 'remainder'[0;33m 0x601b558[0m[0;33m 0x601a948[0m[0;33m 0x601a450[0m[0;33m 0x5ff10a0[0m
[0;34m        |-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x601bc40[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m[0;36m[0m[0;36m[0m [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x601bc20[0m <[0;33mcol:31[0m> [0;32m'_Tp'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x601b360[0m[0;1;36m '__x'[0m [0;32m'_Tp'[0m
[0;34m        `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x601bc98[0m <[0;33mcol:37[0m, [0;33mcol:47[0m> [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m[0;36m[0m[0;36m[0m [0;32m'__type':'typename __gnu_cxx::__promote_2<_Tp, _Up>::__type'[0m
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x601bc78[0m <[0;33mcol:44[0m> [0;32m'_Up'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x601b3d8[0m[0;1;36m '__y'[0m [0;32m'_Up'[0m

Dumping remainder:
[0;1;32mUsingDecl[0m[0;33m 0x602ad78[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/math.h:104:1[0m, [0;33mcol:12[0m> [0;33mcol:12[0m std::remainder

Dumping remainder:
[0;1;32mUsingShadowDecl[0m[0;33m 0x602add0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/math.h:104:12[0m> [0;33mcol:12[0m implicit [0;1;32mFunction[0m[0;33m 0x5e62b68[0m[0;1;36m 'remainder'[0m [0;32m'double (double, double) throw()'[0m

Dumping remainder:
[0;1;32mUsingShadowDecl[0m[0;33m 0x602ae20[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/math.h:104:12[0m> [0;33mcol:12[0m implicit [0;1;32mFunction[0m[0;33m 0x601a450[0m[0;1;36m 'remainder'[0m [0;32m'float (float, float)'[0m

Dumping remainder:
[0;1;32mUsingShadowDecl[0m[0;33m 0x602ae70[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/math.h:104:12[0m> [0;33mcol:12[0m implicit [0;1;32mFunction[0m[0;33m 0x601a948[0m[0;1;36m 'remainder'[0m [0;32m'long double (long double, long double)'[0m

Dumping remainder:
[0;1;32mUsingShadowDecl[0m[0;33m 0x602aec0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/math.h:104:12[0m> [0;33mcol:12[0m implicit [0;1;32mFunctionTemplate[0m[0;33m 0x601b558[0m[0;1;36m 'remainder'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x60ceca0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/AizukiKoh/2994486_5751500831719424_AizukiKoh.cpp:89:1[0m, [0;33mline:109:1[0m> [0;33mline:89:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60d9a70[0m <[0;33mcol:12[0m, [0;33mline:109:1[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x60cee30[0m <[0;33mline:90:2[0m, [0;33mcol:28[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60cee18[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'bool (*)(bool)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cedb0[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'bool (bool)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5b61d78[0m[0;1;36m 'sync_with_stdio'[0m [0;32m'bool (bool)'[0m
[0;34m  | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x60cede0[0m <[0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60ceed8[0m <[0;33mline:91:2[0m, [0;33mcol:7[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60cee70[0m <[0;33mcol:2[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m T[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cef70[0m <[0;33mline:92:2[0m, [0;33mcol:7[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60cef08[0m <[0;33mcol:2[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m N[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60cf028[0m <[0;33mline:93:2[0m, [0;33mcol:13[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60cefa0[0m <[0;33mcol:2[0m, [0;33mcol:12[0m> [0;33mcol:6[0m used[0;1;36m ans[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60cf008[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60d0990[0m <[0;33mline:95:2[0m, [0;33mcol:9[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d0978[0m <[0;33mcol:6[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(int &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0900[0m <[0;33mcol:6[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5cde498[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cf040[0m <[0;33mcol:2[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d5b4b8[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60cf060[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cee70[0m[0;1;36m 'T'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x60d9998[0m <[0;33mline:96:2[0m, [0;33mline:106:2[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60d0a68[0m <[0;33mline:96:7[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60d09e0[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;33mcol:11[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60d0a48[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60d0af0[0m <[0;33mcol:18[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d0ac0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0a80[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d09e0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d0ad8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0aa0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cee70[0m[0;1;36m 'T'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60d0b30[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d0b10[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d09e0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60d9958[0m <[0;33mcol:30[0m, [0;33mline:106:2[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60d5f78[0m <[0;33mline:97:3[0m, [0;33mcol:23[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60d0cc0[0m <[0;33mcol:3[0m, [0;33mcol:18[0m> [0;33mcol:18[0m used[0;1;36m input[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m callinit
[0;34m  |   |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x60d5f50[0m <[0;33mcol:18[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<basic_string<char> > >::value)'[0m
[0;34m  |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60d7830[0m <[0;33mline:98:3[0m, [0;33mcol:10[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d7818[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(int &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d77f8[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5cde498[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d5f90[0m <[0;33mcol:3[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d5b4b8[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d5fb0[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cef08[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60d7908[0m <[0;33mline:99:3[0m, [0;33mcol:14[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60d7878[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m used[0;1;36m temp[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m callinit
[0;34m  |   |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x60d78e0[0m <[0;33mcol:10[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<char> >::value)'[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x60d95a8[0m <[0;33mline:100:3[0m, [0;33mline:103:3[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x60d79c0[0m <[0;33mline:100:8[0m, [0;33mcol:17[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x60d7938[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;33mcol:12[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60d79a0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60d7a48[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d7a18[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d79d8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d7938[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d7a30[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d79f8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cef08[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x60d7a88[0m <[0;33mcol:26[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d7a68[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d7938[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60d9588[0m <[0;33mcol:31[0m, [0;33mline:103:3[0m>
[0;34m  |   |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x60d9440[0m <[0;33mline:101:4[0m, [0;33mcol:11[0m> [0;32m'basic_istream<char>':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d9428[0m <[0;33mcol:8[0m> [0;32m'basic_istream<char> &(*)(basic_istream<char> &, basic_string<char> &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d93a8[0m <[0;33mcol:8[0m> [0;32m'basic_istream<char> &(basic_istream<char> &, basic_string<char> &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x591ab90[0m[0;1;36m 'operator>>'[0m [0;32m'basic_istream<char> &(basic_istream<char> &, basic_string<char> &)'[0m
[0;34m  |   |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d7aa0[0m <[0;33mcol:4[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d5b4b8[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d7ac0[0m <[0;33mcol:11[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d7878[0m[0;1;36m 'temp'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60d9548[0m <[0;33mline:102:4[0m, [0;33mcol:24[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x60d9518[0m <[0;33mcol:4[0m, [0;33mcol:10[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x6098028[0m
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d9478[0m <[0;33mcol:4[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d0cc0[0m[0;1;36m 'input'[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d9570[0m <[0;33mcol:20[0m> [0;32m'const std::__cxx11::string':'const std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d94f8[0m <[0;33mcol:20[0m> [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d7878[0m[0;1;36m 'temp'[0m [0;32m'std::__cxx11::string':'std::__cxx11::basic_string<char>'[0m
[0;34m  |   |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x60d97b8[0m <[0;33mline:104:3[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60d9798[0m <[0;33mcol:3[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d95e0[0m <[0;33mcol:3[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cefa0[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m  |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x60d9700[0m <[0;33mcol:9[0m, [0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d96e8[0m <[0;33mcol:9[0m> [0;32m'int (*)(vector<std::__cxx11::string>)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d9668[0m <[0;33mcol:9[0m> [0;32m'int (vector<std::__cxx11::string>)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60ab430[0m[0;1;36m 'solve'[0m [0;32m'int (vector<std::__cxx11::string>)'[0m
[0;34m  |   |     `-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x60d9778[0m <[0;33mcol:15[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x60d9778[0m)
[0;34m  |   |       `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x60d9740[0m <[0;33mcol:15[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > &)'[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d9728[0m <[0;33mcol:15[0m> [0;32m'const vector<std::__cxx11::string>':'const std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d9648[0m <[0;33mcol:15[0m> [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d0cc0[0m[0;1;36m 'input'[0m [0;32m'vector<std::__cxx11::string>':'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x60d9910[0m <[0;33mline:105:3[0m, [0;33mcol:25[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d98f8[0m <[0;33mcol:3[0m> [0;32m'void (*)(int, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d98b0[0m <[0;33mcol:3[0m> [0;32m'void (int, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x60b7b28[0m[0;1;36m 'printAnswer'[0m [0;32m'void (int, int)'[0m
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60d9870[0m <[0;33mcol:15[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d9858[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d9818[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60d09e0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60d9838[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60d9940[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d9890[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60cefa0[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x60d9a20[0m <[0;33mline:107:2[0m, [0;33mcol:13[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x60d99f0[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .flush[0;33m 0x5cbac48[0m
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60d99d0[0m <[0;33mcol:2[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5d5b530[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60d9a60[0m <[0;33mline:108:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60d9a40[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

