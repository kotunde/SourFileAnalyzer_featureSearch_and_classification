Dumping deceit:
[0;1;32mFunctionDecl[0m[0;33m 0x6eb7900[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/anders/2974486_5644738749267968_anders.cpp:9:1[0m, [0;33mline:18:1[0m> [0;33mline:9:6[0m used[0;1;36m deceit[0m [0;32m'void (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6eb7870[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6ec80a8[0m <[0;33mcol:20[0m, [0;33mline:18:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6eb7b58[0m <[0;33mline:10:3[0m, [0;33mcol:27[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6eb79c0[0m <[0;33mcol:3[0m, [0;33mcol:17[0m> [0;33mcol:7[0m used[0;1;36m index[0m [0;32m'int'[0m cinit
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6eb7a80[0m <[0;33mcol:15[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7a68[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7a28[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6eb7870[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6eb7a48[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6eb7ab8[0m <[0;33mcol:3[0m, [0;33mcol:26[0m> [0;33mcol:20[0m used[0;1;36m ans[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6eb7b20[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6eb7f60[0m <[0;33mline:11:3[0m, [0;33mline:16:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6eb7c68[0m <[0;33mline:11:8[0m, [0;33mcol:19[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6eb7b88[0m <[0;33mcol:8[0m, [0;33mcol:18[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6eb7c48[0m <[0;33mcol:16[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7c30[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7bf0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6eb7870[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6eb7c10[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6eb7cd8[0m <[0;33mcol:21[0m, [0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7cc0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7c80[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb7b88[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6eb7ca0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6eb7d18[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7cf8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb7b88[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6eb7f48[0m <[0;33mcol:32[0m, [0;33mline:16:3[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x6eb7f30[0m <[0;33mline:12:5[0m, [0;33mline:15:5[0m>
[0;34m  |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6eb7e80[0m <[0;33mline:12:9[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7e50[0m <[0;33mcol:9[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6eb7da0[0m <[0;33mcol:9[0m, [0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7d70[0m <[0;33mcol:9[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7d30[0m <[0;33mcol:9[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb7720[0m[0;1;36m 'naomi'[0m [0;32m'double [1010]'[0m
[0;34m  |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7d88[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7d50[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb79c0[0m[0;1;36m 'index'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7e68[0m <[0;33mcol:24[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x6eb7e30[0m <[0;33mcol:24[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7e00[0m <[0;33mcol:24[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7dc0[0m <[0;33mcol:24[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb77f0[0m[0;1;36m 'ken'[0m [0;32m'double [1010]'[0m
[0;34m  |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6eb7e18[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7de0[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb7b88[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6eb7f10[0m <[0;33mcol:32[0m, [0;33mline:15:5[0m>
[0;34m  |       |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6eb7ec0[0m <[0;33mline:13:7[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7ea0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb79c0[0m[0;1;36m 'index'[0m [0;32m'int'[0m
[0;34m  |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6eb7ef8[0m <[0;33mline:14:7[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7ed8[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb7ab8[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6ec8070[0m <[0;33mline:17:3[0m, [0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ec8058[0m <[0;33mcol:15[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ec7fe0[0m <[0;33mcol:15[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6cc55f8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6ec6120[0m <[0;33mcol:3[0m, [0;33mcol:11[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ec6108[0m <[0;33mcol:8[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ec6088[0m <[0;33mcol:8[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6cbc998[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7f98[0m <[0;33mcol:3[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d5e900[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ec6070[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6eb7fb8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6eb7ab8[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6ec7fc8[0m <[0;33mcol:18[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6ec6158[0m <[0;33mcol:18[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m " "[0m

Dumping __gnu_cxx::__normal_iterator:
[0;1;32mClassTemplateDecl[0m[0;33m 0x580ab98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m[0;1;36m __normal_iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x580aa00[0m <[0;33mline:762:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Iterator[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x580aa78[0m <[0;33mcol:32[0m, [0;33mcol:41[0m> [0;33mcol:41[0m referenced typename depth 0 index 1[0;1;36m _Container[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x580ab08[0m <[0;33mline:763:5[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m standard_layout trivially_copyable has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x580ae30[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit referenced class[0;1;36m __normal_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x580aec0[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x580aef8[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_current[0m [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x580b000[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m referenced[0;1;36m __traits_type[0m [0;32m'iterator_traits<_Iterator>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x580af60[0m [0;32m'iterator_traits<_Iterator>'[0m dependent iterator_traits
[0;34m| |   `-[0mTemplateArgument type [0;32m'_Iterator'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x580b058[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x580b090[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'_Iterator'[0m
[0;34m| | `-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x580b1b0[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x580b140[0m [0;32m'typename __traits_type::iterator_category'[0m dependent
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x580b290[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x580b220[0m [0;32m'typename __traits_type::value_type'[0m dependent
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x580b370[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m referenced[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x580b300[0m [0;32m'typename __traits_type::difference_type'[0m dependent
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x580b450[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m reference[0m [0;32m'typename __traits_type::reference'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x580b3e0[0m [0;32m'typename __traits_type::reference'[0m dependent
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x580b530[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m referenced[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer'[0m
[0;34m| | `-[0m[0;32mDependentNameType[0m[0;33m 0x580b4c0[0m [0;32m'typename __traits_type::pointer'[0m dependent
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x580b5f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator<_Iterator, _Container>[0m [0;32m'void () noexcept'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x580aef8[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x580d258[0m <[0;33mline:779:19[0m, [0;33mcol:31[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x580d238[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;32m'_Iterator'[0m[0;36m[0m[0;36m[0m [0;32m'_Iterator'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d2a8[0m <[0;33mcol:33[0m, [0;33mcol:35[0m>
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x580b7a0[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator<_Iterator, _Container>[0m [0;32m'void (const _Iterator &) noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580b6d8[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m referenced[0;1;36m __i[0m [0;32m'const _Iterator &'[0m
[0;34m| | |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x580aef8[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m| | | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x580d2d8[0m <[0;33mline:783:19[0m, [0;33mcol:23[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x580d2b8[0m <[0;33mcol:20[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x580b6d8[0m[0;1;36m '__i'[0m [0;32m'const _Iterator &'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d328[0m <[0;33mcol:25[0m, [0;33mcol:27[0m>
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x580c138[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator<_Iterator, _Container>[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x580b850[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced typename depth 1 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x580c090[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator<_Iterator, _Container>[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &) noexcept'[0m
[0;34m| |   |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580bf98[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m referenced[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &'[0m
[0;34m| |   |-[0mCXXCtorInitializer [0;1;32mField[0m[0;33m 0x580aef8[0m[0;1;36m '_M_current'[0m [0;32m'_Iterator'[0m
[0;34m| |   | `-[0m[0;1;35mParenListExpr[0m[0;33m 0x580d3c0[0m <[0;33mline:791:21[0m, [0;33mcol:32[0m> [0;32m'NULL TYPE'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x580d3a0[0m <[0;33mcol:22[0m, [0;33mcol:31[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m| |   |     `-[0m[0;1;35mCXXDependentScopeMemberExpr[0m[0;33m 0x580d358[0m <[0;33mcol:22[0m, [0;33mcol:26[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m .base
[0;34m| |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x580d338[0m <[0;33mcol:22[0m> [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x580bf98[0m[0;1;36m '__i'[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &'[0m
[0;34m| |   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d410[0m <[0;33mcol:34[0m, [0;33mcol:36[0m>
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580c240[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator::reference () const noexcept'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d4b0[0m <[0;33mline:796:7[0m, [0;33mcol:29[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580d4a0[0m <[0;33mcol:9[0m, [0;33mcol:17[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580d488[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d458[0m <[0;33mcol:17[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d448[0m <[0;33mcol:17[0m> [0;32m'const __normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580c350[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator::pointer () const noexcept'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d518[0m <[0;33mline:800:7[0m, [0;33mcol:28[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580d508[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m| |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d4d8[0m <[0;33mcol:16[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d4c8[0m <[0;33mcol:16[0m> [0;32m'const __normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580c4a0[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__normal_iterator<_Iterator, _Container> &() noexcept'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d5c0[0m <[0;33mline:804:7[0m, [0;33mline:807:7[0m>
[0;34m| |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580d570[0m <[0;33mline:805:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '++' cannot overflow
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d540[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d530[0m <[0;33mcol:4[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580d5b0[0m <[0;33mline:806:2[0m, [0;33mcol:10[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580d598[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d588[0m <[0;33mcol:10[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580c650[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__normal_iterator<_Iterator, _Container> (int) noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580c558[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d6a0[0m <[0;33mline:811:7[0m, [0;33mcol:49[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580d690[0m <[0;33mcol:9[0m, [0;33mcol:46[0m>
[0;34m| |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x580d668[0m <[0;33mcol:16[0m, [0;33mcol:46[0m> [0;32m'__normal_iterator<_Iterator, _Container>'[0m[0;36m[0m[0;36m[0m [0;32m'__normal_iterator<_Iterator, _Container>'[0m
[0;34m| |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580d650[0m <[0;33mcol:34[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '++' cannot overflow
[0;34m| |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d600[0m <[0;33mcol:34[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d5f0[0m <[0;33mcol:34[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580c720[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__normal_iterator<_Iterator, _Container> &() noexcept'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d748[0m <[0;33mline:816:7[0m, [0;33mline:819:7[0m>
[0;34m| |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580d6f8[0m <[0;33mline:817:2[0m, [0;33mcol:4[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '--' cannot overflow
[0;34m| |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d6c8[0m <[0;33mcol:4[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |   |   `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d6b8[0m <[0;33mcol:4[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580d738[0m <[0;33mline:818:2[0m, [0;33mcol:10[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580d720[0m <[0;33mcol:9[0m, [0;33mcol:10[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d710[0m <[0;33mcol:10[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580c898[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__normal_iterator<_Iterator, _Container> (int) noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580c800[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d828[0m <[0;33mline:823:7[0m, [0;33mcol:49[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580d818[0m <[0;33mcol:9[0m, [0;33mcol:46[0m>
[0;34m| |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x580d7f0[0m <[0;33mcol:16[0m, [0;33mcol:46[0m> [0;32m'__normal_iterator<_Iterator, _Container>'[0m[0;36m[0m[0;36m[0m [0;32m'__normal_iterator<_Iterator, _Container>'[0m
[0;34m| |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580d7d8[0m <[0;33mcol:34[0m, [0;33mcol:44[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m postfix '--' cannot overflow
[0;34m| |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d788[0m <[0;33mcol:34[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |           `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d778[0m <[0;33mcol:34[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580ca40[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator::reference (__gnu_cxx::__normal_iterator::difference_type) const noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580c970[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d8d0[0m <[0;33mline:828:7[0m, [0;33mcol:33[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580d8c0[0m <[0;33mcol:9[0m, [0;33mcol:30[0m>
[0;34m| |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x580d8a0[0m <[0;33mcol:16[0m, [0;33mcol:30[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m| |       |-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d850[0m <[0;33mcol:16[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |       | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d840[0m <[0;33mcol:16[0m> [0;32m'const __normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x580d880[0m <[0;33mcol:27[0m> [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x580c970[0m[0;1;36m '__n'[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580cbf0[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__normal_iterator<_Iterator, _Container> &(__gnu_cxx::__normal_iterator::difference_type) noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580caf8[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580d9b0[0m <[0;33mline:832:7[0m, [0;33mcol:42[0m>
[0;34m| |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x580d948[0m <[0;33mcol:9[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m| |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d8f8[0m <[0;33mcol:9[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d8e8[0m <[0;33mcol:9[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x580d928[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x580caf8[0m[0;1;36m '__n'[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580d9a0[0m <[0;33mcol:28[0m, [0;33mcol:36[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580d988[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d978[0m <[0;33mcol:36[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580cda0[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__normal_iterator<_Iterator, _Container> (__gnu_cxx::__normal_iterator::difference_type) const noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580cca8[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580da98[0m <[0;33mline:836:7[0m, [0;33mcol:53[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580da88[0m <[0;33mcol:9[0m, [0;33mcol:50[0m>
[0;34m| |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x580da60[0m <[0;33mcol:16[0m, [0;33mcol:50[0m> [0;32m'__normal_iterator<_Iterator, _Container>'[0m[0;36m[0m[0;36m[0m [0;32m'__normal_iterator<_Iterator, _Container>'[0m
[0;34m| |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x580da40[0m <[0;33mcol:34[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '+'
[0;34m| |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x580d9f0[0m <[0;33mcol:34[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580d9e0[0m <[0;33mcol:34[0m> [0;32m'const __normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x580da20[0m <[0;33mcol:47[0m> [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x580cca8[0m[0;1;36m '__n'[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580cef0[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__normal_iterator<_Iterator, _Container> &(__gnu_cxx::__normal_iterator::difference_type) noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580ce58[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m referenced[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580db78[0m <[0;33mline:840:7[0m, [0;33mcol:42[0m>
[0;34m| |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x580db10[0m <[0;33mcol:9[0m, [0;33mcol:23[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m '-=' ComputeLHSTy=[0;32m'<dependent type>'[0m ComputeResultTy=[0;32m'<dependent type>'[0m
[0;34m| |   | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x580dac0[0m <[0;33mcol:9[0m> [0;32m'_Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |   | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580dab0[0m <[0;33mcol:9[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x580daf0[0m <[0;33mcol:23[0m> [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x580ce58[0m[0;1;36m '__n'[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580db68[0m <[0;33mcol:28[0m, [0;33mcol:36[0m>
[0;34m| |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x580db50[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m prefix '*' cannot overflow
[0;34m| |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580db40[0m <[0;33mcol:36[0m> [0;32m'__normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m this
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580d040[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__normal_iterator<_Iterator, _Container> (__gnu_cxx::__normal_iterator::difference_type) const noexcept'[0m
[0;34m| | |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x580cfa8[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m referenced[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580dc60[0m <[0;33mline:844:7[0m, [0;33mcol:53[0m>
[0;34m| |   `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580dc50[0m <[0;33mcol:9[0m, [0;33mcol:50[0m>
[0;34m| |     `-[0m[0;1;35mCXXUnresolvedConstructExpr[0m[0;33m 0x580dc28[0m <[0;33mcol:16[0m, [0;33mcol:50[0m> [0;32m'__normal_iterator<_Iterator, _Container>'[0m[0;36m[0m[0;36m[0m [0;32m'__normal_iterator<_Iterator, _Container>'[0m
[0;34m| |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x580dc08[0m <[0;33mcol:34[0m, [0;33mcol:47[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m '-'
[0;34m| |         |-[0m[0;1;35mMemberExpr[0m[0;33m 0x580dbb8[0m <[0;33mcol:34[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m| |         | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580dba8[0m <[0;33mcol:34[0m> [0;32m'const __normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m| |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x580dbe8[0m <[0;33mcol:47[0m> [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x580cfa8[0m[0;1;36m '__n'[0m [0;32m'__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x580d170[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'const _Iterator &() const noexcept'[0m
[0;34m|   `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x580dcc8[0m <[0;33mline:848:7[0m, [0;33mcol:28[0m>
[0;34m|     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x580dcb8[0m <[0;33mcol:9[0m, [0;33mcol:16[0m>
[0;34m|       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x580dc88[0m <[0;33mcol:16[0m> [0;32m'const _Iterator'[0m[0;36m lvalue[0m[0;36m[0m ->_M_current[0;33m 0x580aef8[0m
[0;34m|         `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x580dc78[0m <[0;33mcol:16[0m> [0;32m'const __normal_iterator<_Iterator, _Container> *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5b64ff0[0m <[0;33mline:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60bf440[0m prev 0x5b64ff0 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __normal_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x60bf4d0[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x60bf538[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m _M_current[0m [0;32m'char *':'char *'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bf610[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<char *>':'std::iterator_traits<char *>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x60bf5a0[0m [0;32m'iterator_traits<char *>'[0m sugar iterator_traits
[0;34m| |   |-[0mTemplateArgument type [0;32m'char *':'char *'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x60a7f10[0m [0;32m'std::iterator_traits<char *>'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x60a7e28[0m[0;1;36m 'iterator_traits'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x60bf668[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bf6a0[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'char *':'char *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60bf500[0m [0;32m'char *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x54fd8f0[0m [0;32m'char *'[0m
[0;34m| |     `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcc80[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bf7b0[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60bf760[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60a83e0[0m [0;32m'std::iterator_traits<char *>::iterator_category'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60a81a8[0m[0;1;36m 'iterator_category'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x57dc3f0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x57dc360[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bf8a0[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'char'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60bf850[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60bf830[0m [0;32m'std::iterator_traits<char *>::value_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60a8210[0m[0;1;36m 'value_type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60a8000[0m [0;32m'char'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcc80[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bf970[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60bf920[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60be670[0m [0;32m'std::iterator_traits<char *>::difference_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60a8268[0m[0;1;36m 'difference_type'[0m
[0;34m| |     `-[0m[0;32mTypedefType[0m[0;33m 0x55f1070[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m| |       |-[0m[0;1;32mTypedef[0m[0;33m 0x553e3f8[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcd00[0m [0;32m'long'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bfa60[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m reference[0m [0;32m'typename __traits_type::reference':'char &'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60bfa10[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60bf9f0[0m [0;32m'std::iterator_traits<char *>::reference'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60a8368[0m[0;1;36m 'reference'[0m
[0;34m| |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x60a8330[0m [0;32m'char &'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60a8000[0m [0;32m'char'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcc80[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60bfb50[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer':'char *'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60bfb00[0m [0;32m'typename __traits_type::pointer'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60bfae0[0m [0;32m'std::iterator_traits<char *>::pointer'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60a82d0[0m[0;1;36m 'pointer'[0m
[0;34m| |     `-[0m[0;32mPointerType[0m[0;33m 0x60a8030[0m [0;32m'char *'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60a8000[0m [0;32m'char'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcc80[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60bfbe0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60bfe20[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator[0m [0;32m'void (char *const &) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60bfd08[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __i[0m [0;32m'char *const &'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c06f8[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60bfee0[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60c0650[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char>::pointer>::__value), basic_string<char> >::__type> &) noexcept'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c0538[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char>::pointer>::__value), basic_string<char> >::__type> &'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c0880[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::reference () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c09a0[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::pointer () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c0b00[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c0cb0[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c0bb0[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c0d90[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c0ed8[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c0e40[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c10c0[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::reference (__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c0fc0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c1280[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &(__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c1188[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c1440[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > (__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c1348[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c15a0[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &(__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c1508[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c1700[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > (__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c1668[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c1840[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'char *const &() const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60c1938[0m <[0;33mline:763:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (const __gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &)'[0m inline default trivial noexcept-unevaluated 0x60c1938
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c1a48[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const __gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60c1ae8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &&)'[0m inline default trivial noexcept-unevaluated 0x60c1ae8
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c1bf8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'__gnu_cxx::__normal_iterator<char *, std::__cxx11::basic_string<char> > &&'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5b65290[0m <[0;33mline:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60c1d00[0m prev 0x5b65290 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __normal_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x60c1d90[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x60c1df8[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m _M_current[0m [0;32m'const char *':'const char *'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c1fd0[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<const char *>':'std::iterator_traits<const char *>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x60c1f60[0m [0;32m'iterator_traits<const char *>'[0m sugar iterator_traits
[0;34m| |   |-[0mTemplateArgument type [0;32m'const char *':'const char *'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x60c1f40[0m [0;32m'std::iterator_traits<const char *>'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x60c1e58[0m[0;1;36m 'iterator_traits'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x60c2028[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c2060[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'const char *':'const char *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60c1dc0[0m [0;32m'const char *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x54fd720[0m [0;32m'const char *'[0m
[0;34m| |     `-[0mQualType[0;33m 0x54fcc81[0m [0;32m'const char'[0m const
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcc80[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c26f0[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60c26a0[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60c2680[0m [0;32m'std::iterator_traits<const char *>::iterator_category'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60c2448[0m[0;1;36m 'iterator_category'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x57dc3f0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x57dc360[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c27e0[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'char'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60c2790[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60c2770[0m [0;32m'std::iterator_traits<const char *>::value_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60c24b0[0m[0;1;36m 'value_type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60c21f0[0m [0;32m'char'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcc80[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c28d0[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60c2880[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60c2860[0m [0;32m'std::iterator_traits<const char *>::difference_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60c2508[0m[0;1;36m 'difference_type'[0m
[0;34m| |     `-[0m[0;32mTypedefType[0m[0;33m 0x55f1070[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m| |       |-[0m[0;1;32mTypedef[0m[0;33m 0x553e3f8[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcd00[0m [0;32m'long'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c29c0[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m reference[0m [0;32m'typename __traits_type::reference':'const char &'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60c2970[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60c2950[0m [0;32m'std::iterator_traits<const char *>::reference'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60c2608[0m[0;1;36m 'reference'[0m
[0;34m| |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x60c25d0[0m [0;32m'const char &'[0m
[0;34m| |       `-[0mQualType[0;33m 0x60c21f1[0m [0;32m'const char'[0m const
[0;34m| |         `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60c21f0[0m [0;32m'char'[0m sugar
[0;34m| |           |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |           | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |           `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcc80[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60c2ab0[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer':'const char *'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60c2a60[0m [0;32m'typename __traits_type::pointer'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60c2a40[0m [0;32m'std::iterator_traits<const char *>::pointer'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60c2570[0m[0;1;36m 'pointer'[0m
[0;34m| |     `-[0m[0;32mPointerType[0m[0;33m 0x60c2220[0m [0;32m'const char *'[0m
[0;34m| |       `-[0mQualType[0;33m 0x60c21f1[0m [0;32m'const char'[0m const
[0;34m| |         `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60c21f0[0m [0;32m'char'[0m sugar
[0;34m| |           |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |           | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |           `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcc80[0m [0;32m'char'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60c2b40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60c2d80[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator[0m [0;32m'void (const char *const &) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c2c68[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __i[0m [0;32m'const char *const &'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60c3408[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60c2e40[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60c3360[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char>::pointer>::__value), basic_string<char> >::__type> &) noexcept'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3278[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char>::pointer>::__value), basic_string<char> >::__type> &'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c3560[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::reference () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c3680[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::pointer () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c37e0[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c3990[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3890[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c3a70[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c3bb8[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3b20[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c3da0[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::reference (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3ca0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c3f60[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &(__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c3e68[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c4120[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c4028[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c4280[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &(__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c41e8[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c43e0[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c4348[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60c4520[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'const char *const &() const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60c4618[0m <[0;33mline:763:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (const __gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &)'[0m inline default trivial noexcept-unevaluated 0x60c4618
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c4728[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const __gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60c47c8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &&)'[0m inline default trivial noexcept-unevaluated 0x60c47c8
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60c48d8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &&'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5bab8e0[0m <[0;33mline:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'wchar_t *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<wchar_t>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60ed630[0m prev 0x5bab8e0 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __normal_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x60ed6c0[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x60ed728[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m _M_current[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60ed800[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<wchar_t *>':'std::iterator_traits<wchar_t *>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x60ed790[0m [0;32m'iterator_traits<wchar_t *>'[0m sugar iterator_traits
[0;34m| |   |-[0mTemplateArgument type [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x60e5bc0[0m [0;32m'std::iterator_traits<wchar_t *>'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x60e5ad8[0m[0;1;36m 'iterator_traits'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x60ed858[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60ed890[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'wchar_t *':'wchar_t *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60ed6f0[0m [0;32m'wchar_t *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x55c7dc0[0m [0;32m'wchar_t *'[0m
[0;34m| |     `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd1c0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60ed9a0[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60ed950[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60e6090[0m [0;32m'std::iterator_traits<wchar_t *>::iterator_category'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60e5e58[0m[0;1;36m 'iterator_category'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x57dc3f0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x57dc360[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60eda90[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'wchar_t'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60eda40[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60eda20[0m [0;32m'std::iterator_traits<wchar_t *>::value_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60e5ec0[0m[0;1;36m 'value_type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60e5cb0[0m [0;32m'wchar_t'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd1c0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60edb60[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60edb10[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60ec860[0m [0;32m'std::iterator_traits<wchar_t *>::difference_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60e5f18[0m[0;1;36m 'difference_type'[0m
[0;34m| |     `-[0m[0;32mTypedefType[0m[0;33m 0x55f1070[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m| |       |-[0m[0;1;32mTypedef[0m[0;33m 0x553e3f8[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcd00[0m [0;32m'long'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60edc50[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m reference[0m [0;32m'typename __traits_type::reference':'wchar_t &'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60edc00[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60edbe0[0m [0;32m'std::iterator_traits<wchar_t *>::reference'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60e6018[0m[0;1;36m 'reference'[0m
[0;34m| |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x60e5fe0[0m [0;32m'wchar_t &'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60e5cb0[0m [0;32m'wchar_t'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd1c0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60edd40[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer':'wchar_t *'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60edcf0[0m [0;32m'typename __traits_type::pointer'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60edcd0[0m [0;32m'std::iterator_traits<wchar_t *>::pointer'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60e5f80[0m[0;1;36m 'pointer'[0m
[0;34m| |     `-[0m[0;32mPointerType[0m[0;33m 0x60e5ce0[0m [0;32m'wchar_t *'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60e5cb0[0m [0;32m'wchar_t'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd1c0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60eddd0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60ee010[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator[0m [0;32m'void (wchar_t *const &) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60edef8[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __i[0m [0;32m'wchar_t *const &'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60ee8e8[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60ee0d0[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60ee840[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &) noexcept'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ee728[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60eea70[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::reference () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60eeb90[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::pointer () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60eecf0[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60eeea0[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60eeda0[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60eef80[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60ef0c8[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ef030[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60ef2b0[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::reference (__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ef1b0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60ef470[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &(__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ef378[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60ef630[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > (__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ef538[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60ef790[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &(__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ef6f8[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60ef8f0[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > (__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ef858[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60efa30[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'wchar_t *const &() const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60efb28[0m <[0;33mline:763:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (const __gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &)'[0m inline default trivial noexcept-unevaluated 0x60efb28
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60efc38[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const __gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60efcd8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &&)'[0m inline default trivial noexcept-unevaluated 0x60efcd8
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60efde8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'__gnu_cxx::__normal_iterator<wchar_t *, std::__cxx11::basic_string<wchar_t> > &&'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5babb80[0m <[0;33mline:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const wchar_t *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<wchar_t>'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x60efef0[0m prev 0x5babb80 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __normal_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x60eff80[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x60effe8[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m _M_current[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60f01c0[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<const wchar_t *>':'std::iterator_traits<const wchar_t *>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x60f0150[0m [0;32m'iterator_traits<const wchar_t *>'[0m sugar iterator_traits
[0;34m| |   |-[0mTemplateArgument type [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x60f0130[0m [0;32m'std::iterator_traits<const wchar_t *>'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x60f0048[0m[0;1;36m 'iterator_traits'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x60f0218[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60f0250[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'const wchar_t *':'const wchar_t *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60effb0[0m [0;32m'const wchar_t *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x55c7e70[0m [0;32m'const wchar_t *'[0m
[0;34m| |     `-[0mQualType[0;33m 0x54fd1c1[0m [0;32m'const wchar_t'[0m const
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd1c0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60f0880[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60f0830[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60f0810[0m [0;32m'std::iterator_traits<const wchar_t *>::iterator_category'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60f05e0[0m[0;1;36m 'iterator_category'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x57dc3f0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x57dc360[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60f0970[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'wchar_t'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60f0920[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60f0900[0m [0;32m'std::iterator_traits<const wchar_t *>::value_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60f0648[0m[0;1;36m 'value_type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60f03e0[0m [0;32m'wchar_t'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd1c0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60f0a60[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60f0a10[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60f09f0[0m [0;32m'std::iterator_traits<const wchar_t *>::difference_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60f06a0[0m[0;1;36m 'difference_type'[0m
[0;34m| |     `-[0m[0;32mTypedefType[0m[0;33m 0x55f1070[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m| |       |-[0m[0;1;32mTypedef[0m[0;33m 0x553e3f8[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcd00[0m [0;32m'long'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60f0b50[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m reference[0m [0;32m'typename __traits_type::reference':'const wchar_t &'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60f0b00[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60f0ae0[0m [0;32m'std::iterator_traits<const wchar_t *>::reference'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60f0798[0m[0;1;36m 'reference'[0m
[0;34m| |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x60f0760[0m [0;32m'const wchar_t &'[0m
[0;34m| |       `-[0mQualType[0;33m 0x60f03e1[0m [0;32m'const wchar_t'[0m const
[0;34m| |         `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60f03e0[0m [0;32m'wchar_t'[0m sugar
[0;34m| |           |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |           | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |           `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd1c0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x60f0c40[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer':'const wchar_t *'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x60f0bf0[0m [0;32m'typename __traits_type::pointer'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x60f0bd0[0m [0;32m'std::iterator_traits<const wchar_t *>::pointer'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x60f0708[0m[0;1;36m 'pointer'[0m
[0;34m| |     `-[0m[0;32mPointerType[0m[0;33m 0x60f0410[0m [0;32m'const wchar_t *'[0m
[0;34m| |       `-[0mQualType[0;33m 0x60f03e1[0m [0;32m'const wchar_t'[0m const
[0;34m| |         `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x60f03e0[0m [0;32m'wchar_t'[0m sugar
[0;34m| |           |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |           | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |           `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd1c0[0m [0;32m'wchar_t'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60f0cd0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60f0f10[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator[0m [0;32m'void (const wchar_t *const &) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f0df8[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __i[0m [0;32m'const wchar_t *const &'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x60f3a68[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x60f0fd0[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60f39c0[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &) noexcept'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f38d8[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f3bc0[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::reference () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f3ce0[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::pointer () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f3e40[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f3ff0[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f3ef0[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f40d0[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f4218[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f4180[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f4400[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::reference (__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f4300[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f45c0[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &(__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f44c8[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f4780[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > (__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f4688[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f48e0[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &(__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f4848[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f4a40[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > (__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f49a8[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x60f4b80[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'const wchar_t *const &() const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60f4c78[0m <[0;33mline:763:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (const __gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &)'[0m inline default trivial noexcept-unevaluated 0x60f4c78
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f4d88[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const __gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x60f4e28[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &&)'[0m inline default trivial noexcept-unevaluated 0x60f4e28
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60f4f38[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'__gnu_cxx::__normal_iterator<const wchar_t *, std::__cxx11::basic_string<wchar_t> > &&'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c07ee0[0m <[0;33mline:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char16_t *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6110db0[0m prev 0x5c07ee0 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __normal_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6110e40[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6110ea8[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m _M_current[0m [0;32m'char16_t *':'char16_t *'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6111080[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<char16_t *>':'std::iterator_traits<char16_t *>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6111010[0m [0;32m'iterator_traits<char16_t *>'[0m sugar iterator_traits
[0;34m| |   |-[0mTemplateArgument type [0;32m'char16_t *':'char16_t *'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x6110ff0[0m [0;32m'std::iterator_traits<char16_t *>'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6110f08[0m[0;1;36m 'iterator_traits'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x61110d8[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6111110[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'char16_t *':'char16_t *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6110e70[0m [0;32m'char16_t *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x58b3d30[0m [0;32m'char16_t *'[0m
[0;34m| |     `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd200[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6111650[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6111600[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x61115e0[0m [0;32m'std::iterator_traits<char16_t *>::iterator_category'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x61113a8[0m[0;1;36m 'iterator_category'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x57dc3f0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x57dc360[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6111740[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'char16_t'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x61116f0[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x61116d0[0m [0;32m'std::iterator_traits<char16_t *>::value_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6111410[0m[0;1;36m 'value_type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6111200[0m [0;32m'char16_t'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd200[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6111830[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x61117e0[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x61117c0[0m [0;32m'std::iterator_traits<char16_t *>::difference_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6111468[0m[0;1;36m 'difference_type'[0m
[0;34m| |     `-[0m[0;32mTypedefType[0m[0;33m 0x55f1070[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m| |       |-[0m[0;1;32mTypedef[0m[0;33m 0x553e3f8[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcd00[0m [0;32m'long'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6111920[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m reference[0m [0;32m'typename __traits_type::reference':'char16_t &'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x61118d0[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x61118b0[0m [0;32m'std::iterator_traits<char16_t *>::reference'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6111568[0m[0;1;36m 'reference'[0m
[0;34m| |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6111530[0m [0;32m'char16_t &'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6111200[0m [0;32m'char16_t'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd200[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6111a10[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer':'char16_t *'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x61119c0[0m [0;32m'typename __traits_type::pointer'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x61119a0[0m [0;32m'std::iterator_traits<char16_t *>::pointer'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x61114d0[0m[0;1;36m 'pointer'[0m
[0;34m| |     `-[0m[0;32mPointerType[0m[0;33m 0x6111230[0m [0;32m'char16_t *'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6111200[0m [0;32m'char16_t'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd200[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6111aa0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6111ce0[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator[0m [0;32m'void (char16_t *const &) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6111bc8[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __i[0m [0;32m'char16_t *const &'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x61125b8[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6111da0[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6112510[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> >::pointer>::__value), basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >::__type> &) noexcept'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61123f8[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> >::pointer>::__value), basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >::__type> &'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6112740[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::reference () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6112860[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::pointer () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x61129c0[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6112b70[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6112a70[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6112c50[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6112d98[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6112d00[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6112f80[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::reference (__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6112e80[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6113140[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &(__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6113048[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6113300[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6113208[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6113460[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &(__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61133c8[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x61135c0[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6113528[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6113700[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'char16_t *const &() const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x61137f8[0m <[0;33mline:763:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (const __gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &)'[0m inline default trivial noexcept-unevaluated 0x61137f8
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6113908[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const __gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x61139a8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &&)'[0m inline default trivial noexcept-unevaluated 0x61139a8
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6113ab8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'__gnu_cxx::__normal_iterator<char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &&'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c08180[0m <[0;33mline:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'const char16_t *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6113bc0[0m prev 0x5c08180 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __normal_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6113c50[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6113cb8[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m _M_current[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6113d90[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<const char16_t *>':'std::iterator_traits<const char16_t *>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x6113d20[0m [0;32m'iterator_traits<const char16_t *>'[0m sugar iterator_traits
[0;34m| |   |-[0mTemplateArgument type [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x610e390[0m [0;32m'std::iterator_traits<const char16_t *>'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x610e2a8[0m[0;1;36m 'iterator_traits'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6113de8[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6113e20[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'const char16_t *':'const char16_t *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6113c80[0m [0;32m'const char16_t *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x58b3570[0m [0;32m'const char16_t *'[0m
[0;34m| |     `-[0mQualType[0;33m 0x54fd201[0m [0;32m'const char16_t'[0m const
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd200[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6113f30[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6113ee0[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x610e950[0m [0;32m'std::iterator_traits<const char16_t *>::iterator_category'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x610e720[0m[0;1;36m 'iterator_category'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x57dc3f0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x57dc360[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x6114020[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'char16_t'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6113fd0[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x6113fb0[0m [0;32m'std::iterator_traits<const char16_t *>::value_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x610e788[0m[0;1;36m 'value_type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x610e520[0m [0;32m'char16_t'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd200[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61140f0[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x61140a0[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x610ffe0[0m [0;32m'std::iterator_traits<const char16_t *>::difference_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x610e7e0[0m[0;1;36m 'difference_type'[0m
[0;34m| |     `-[0m[0;32mTypedefType[0m[0;33m 0x55f1070[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m| |       |-[0m[0;1;32mTypedef[0m[0;33m 0x553e3f8[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcd00[0m [0;32m'long'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61141e0[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m reference[0m [0;32m'typename __traits_type::reference':'const char16_t &'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6114190[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x6114170[0m [0;32m'std::iterator_traits<const char16_t *>::reference'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x610e8d8[0m[0;1;36m 'reference'[0m
[0;34m| |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x610e8a0[0m [0;32m'const char16_t &'[0m
[0;34m| |       `-[0mQualType[0;33m 0x610e521[0m [0;32m'const char16_t'[0m const
[0;34m| |         `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x610e520[0m [0;32m'char16_t'[0m sugar
[0;34m| |           |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |           | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |           `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd200[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x61142d0[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer':'const char16_t *'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x6114280[0m [0;32m'typename __traits_type::pointer'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x6114260[0m [0;32m'std::iterator_traits<const char16_t *>::pointer'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x610e848[0m[0;1;36m 'pointer'[0m
[0;34m| |     `-[0m[0;32mPointerType[0m[0;33m 0x610e550[0m [0;32m'const char16_t *'[0m
[0;34m| |       `-[0mQualType[0;33m 0x610e521[0m [0;32m'const char16_t'[0m const
[0;34m| |         `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x610e520[0m [0;32m'char16_t'[0m sugar
[0;34m| |           |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |           | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m| |           `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd200[0m [0;32m'char16_t'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6114360[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x61145a0[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator[0m [0;32m'void (const char16_t *const &) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6114488[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __i[0m [0;32m'const char16_t *const &'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x6114c28[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x6114660[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6114b80[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> >::pointer>::__value), basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >::__type> &) noexcept'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6114a98[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> >::pointer>::__value), basic_string<char16_t, char_traits<char16_t>, allocator<char16_t> > >::__type> &'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6114d80[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::reference () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6114ea0[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::pointer () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6115000[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x61151b0[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61150b0[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6115290[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x61153d8[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6115340[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x61155c0[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::reference (__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61154c0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6115780[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &(__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6115688[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6115940[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6115848[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6115aa0[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &(__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6115a08[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6115c00[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > (__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6115b68[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6115d40[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'const char16_t *const &() const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6115e38[0m <[0;33mline:763:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (const __gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &)'[0m inline default trivial noexcept-unevaluated 0x6115e38
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6115f48[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const __gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6115fe8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &&)'[0m inline default trivial noexcept-unevaluated 0x6115fe8
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x61160f8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'__gnu_cxx::__normal_iterator<const char16_t *, std::__cxx11::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> > > &&'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c371f0[0m <[0;33mline:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mTemplateArgument type [0;32m'char32_t *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6128020[0m prev 0x5c371f0 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __normal_iterator[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x61280b0[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m| |-[0m[0;1;32mFieldDecl[0m[0;33m 0x6128118[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m _M_current[0m [0;32m'char32_t *':'char32_t *'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612aeb0[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<char32_t *>':'std::iterator_traits<char32_t *>'[0m
[0;34m| | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x612ae40[0m [0;32m'iterator_traits<char32_t *>'[0m sugar iterator_traits
[0;34m| |   |-[0mTemplateArgument type [0;32m'char32_t *':'char32_t *'[0m
[0;34m| |   `-[0m[0;32mRecordType[0m[0;33m 0x612ae20[0m [0;32m'std::iterator_traits<char32_t *>'[0m
[0;34m| |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6128178[0m[0;1;36m 'iterator_traits'[0m
[0;34m| |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x612af08[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612af40[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'char32_t *':'char32_t *'[0m
[0;34m| | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x61280e0[0m [0;32m'char32_t *'[0m sugar
[0;34m| |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m| |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m| |   `-[0m[0;32mPointerType[0m[0;33m 0x58ba8b0[0m [0;32m'char32_t *'[0m
[0;34m| |     `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd220[0m [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612b480[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x612b430[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x612b410[0m [0;32m'std::iterator_traits<char32_t *>::iterator_category'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x612b1d8[0m[0;1;36m 'iterator_category'[0m
[0;34m| |     `-[0m[0;32mRecordType[0m[0;33m 0x57dc3f0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m| |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x57dc360[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612b570[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'char32_t'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x612b520[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x612b500[0m [0;32m'std::iterator_traits<char32_t *>::value_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x612b240[0m[0;1;36m 'value_type'[0m
[0;34m| |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x612b030[0m [0;32m'char32_t'[0m sugar
[0;34m| |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd220[0m [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612b660[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x612b610[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x612b5f0[0m [0;32m'std::iterator_traits<char32_t *>::difference_type'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x612b298[0m[0;1;36m 'difference_type'[0m
[0;34m| |     `-[0m[0;32mTypedefType[0m[0;33m 0x55f1070[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m| |       |-[0m[0;1;32mTypedef[0m[0;33m 0x553e3f8[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m| |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcd00[0m [0;32m'long'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612b750[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m reference[0m [0;32m'typename __traits_type::reference':'char32_t &'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x612b700[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x612b6e0[0m [0;32m'std::iterator_traits<char32_t *>::reference'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x612b398[0m[0;1;36m 'reference'[0m
[0;34m| |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x612b360[0m [0;32m'char32_t &'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x612b030[0m [0;32m'char32_t'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd220[0m [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612b840[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer':'char32_t *'[0m
[0;34m| | `-[0m[0;32mElaboratedType[0m[0;33m 0x612b7f0[0m [0;32m'typename __traits_type::pointer'[0m sugar
[0;34m| |   `-[0m[0;32mTypedefType[0m[0;33m 0x612b7d0[0m [0;32m'std::iterator_traits<char32_t *>::pointer'[0m sugar
[0;34m| |     |-[0m[0;1;32mTypedef[0m[0;33m 0x612b300[0m[0;1;36m 'pointer'[0m
[0;34m| |     `-[0m[0;32mPointerType[0m[0;33m 0x612b060[0m [0;32m'char32_t *'[0m
[0;34m| |       `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x612b030[0m [0;32m'char32_t'[0m sugar
[0;34m| |         |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e1a20[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m| |         | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e19d8[0m[0;1;36m '_Tp'[0m
[0;34m| |         `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd220[0m [0;32m'char32_t'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612b8d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator[0m [0;32m'void () noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612bb10[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator[0m [0;32m'void (char32_t *const &) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612b9f8[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __i[0m [0;32m'char32_t *const &'[0m
[0;34m| |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x612c3e8[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m
[0;34m| | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x612bbd0[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m| | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612c340[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> >::pointer>::__value), basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >::__type> &) noexcept'[0m
[0;34m| |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612c228[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> >::pointer>::__value), basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >::__type> &'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612c570[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::reference () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612c690[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::pointer () const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612c7f0[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612c9a0[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612c8a0[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612ca80[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &() noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612cbc8[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (int) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612cb30[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612cdb0[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::reference (__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612ccb0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612cf70[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &(__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612ce78[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612d130[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612d038[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612d290[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &(__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612d1f8[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612d3f0[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612d358[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612d530[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'char32_t *const &() const noexcept'[0m
[0;34m| |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612d628[0m <[0;33mline:763:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (const __gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &)'[0m inline default trivial noexcept-unevaluated 0x612d628
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612d738[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const __gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &'[0m
[0;34m| `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612d7d8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &&)'[0m inline default trivial noexcept-unevaluated 0x612d7d8
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612d8e8[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'__gnu_cxx::__normal_iterator<char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &&'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c37490[0m <[0;33mline:762:3[0m, [0;33mline:849:5[0m> [0;33mline:763:11[0m class[0;1;36m __normal_iterator[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists non_trivial user_provided constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mTemplateArgument type [0;32m'const char32_t *'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x612d9f0[0m prev 0x5c37490 <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m implicit class[0;1;36m __normal_iterator[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x612da80[0m <[0;33mline:765:5[0m, [0;33mcol:14[0m> [0;33mcol:5[0m protected
[0;34m  |-[0m[0;1;32mFieldDecl[0m[0;33m 0x612dae8[0m <[0;33mline:766:7[0m, [0;33mcol:17[0m> [0;33mcol:17[0m[0;1;36m _M_current[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612dbc0[0m <[0;33mline:768:7[0m, [0;33mcol:43[0m> [0;33mcol:43[0m[0;1;36m __traits_type[0m [0;32m'iterator_traits<const char32_t *>':'std::iterator_traits<const char32_t *>'[0m
[0;34m  | `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x612db50[0m [0;32m'iterator_traits<const char32_t *>'[0m sugar iterator_traits
[0;34m  |   |-[0mTemplateArgument type [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  |   `-[0m[0;32mRecordType[0m[0;33m 0x6125600[0m [0;32m'std::iterator_traits<const char32_t *>'[0m
[0;34m  |     `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x6125518[0m[0;1;36m 'iterator_traits'[0m
[0;34m  |-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x612dc18[0m <[0;33mline:770:5[0m, [0;33mcol:11[0m> [0;33mcol:5[0m public
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612dc50[0m <[0;33mline:771:7[0m, [0;33mcol:29[0m> [0;33mcol:29[0m[0;1;36m iterator_type[0m [0;32m'const char32_t *':'const char32_t *'[0m
[0;34m  | `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x612dab0[0m [0;32m'const char32_t *'[0m sugar
[0;34m  |   |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x580aa50[0m [0;32m'_Iterator'[0m dependent depth 0 index 0
[0;34m  |   | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x580aa00[0m[0;1;36m '_Iterator'[0m
[0;34m  |   `-[0m[0;32mPointerType[0m[0;33m 0x58ba0f0[0m [0;32m'const char32_t *'[0m
[0;34m  |     `-[0mQualType[0;33m 0x54fd221[0m [0;32m'const char32_t'[0m const
[0;34m  |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd220[0m [0;32m'char32_t'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612dd60[0m <[0;33mline:772:7[0m, [0;33mcol:57[0m> [0;33mcol:57[0m[0;1;36m iterator_category[0m [0;32m'typename __traits_type::iterator_category':'std::random_access_iterator_tag'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x612dd10[0m [0;32m'typename __traits_type::iterator_category'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x6125bc0[0m [0;32m'std::iterator_traits<const char32_t *>::iterator_category'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6125990[0m[0;1;36m 'iterator_category'[0m
[0;34m  |     `-[0m[0;32mRecordType[0m[0;33m 0x57dc3f0[0m [0;32m'std::random_access_iterator_tag'[0m
[0;34m  |       `-[0m[0;1;32mCXXRecord[0m[0;33m 0x57dc360[0m[0;1;36m 'random_access_iterator_tag'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612de50[0m <[0;33mline:773:7[0m, [0;33mcol:52[0m> [0;33mcol:52[0m[0;1;36m value_type[0m [0;32m'typename __traits_type::value_type':'char32_t'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x612de00[0m [0;32m'typename __traits_type::value_type'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x612dde0[0m [0;32m'std::iterator_traits<const char32_t *>::value_type'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x61259f8[0m[0;1;36m 'value_type'[0m
[0;34m  |     `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6125790[0m [0;32m'char32_t'[0m sugar
[0;34m  |       |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m  |       | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m  |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd220[0m [0;32m'char32_t'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612df20[0m <[0;33mline:774:7[0m, [0;33mcol:56[0m> [0;33mcol:56[0m[0;1;36m difference_type[0m [0;32m'typename __traits_type::difference_type':'long'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x612ded0[0m [0;32m'typename __traits_type::difference_type'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x6127250[0m [0;32m'std::iterator_traits<const char32_t *>::difference_type'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6125a50[0m[0;1;36m 'difference_type'[0m
[0;34m  |     `-[0m[0;32mTypedefType[0m[0;33m 0x55f1070[0m [0;32m'std::ptrdiff_t'[0m sugar
[0;34m  |       |-[0m[0;1;32mTypedef[0m[0;33m 0x553e3f8[0m[0;1;36m 'ptrdiff_t'[0m
[0;34m  |       `-[0m[0;32mBuiltinType[0m[0;33m 0x54fcd00[0m [0;32m'long'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612e010[0m <[0;33mline:775:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m reference[0m [0;32m'typename __traits_type::reference':'const char32_t &'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x612dfc0[0m [0;32m'typename __traits_type::reference'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x612dfa0[0m [0;32m'std::iterator_traits<const char32_t *>::reference'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6125b48[0m[0;1;36m 'reference'[0m
[0;34m  |     `-[0m[0;32mLValueReferenceType[0m[0;33m 0x6125b10[0m [0;32m'const char32_t &'[0m
[0;34m  |       `-[0mQualType[0;33m 0x6125791[0m [0;32m'const char32_t'[0m const
[0;34m  |         `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6125790[0m [0;32m'char32_t'[0m sugar
[0;34m  |           |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m  |           | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m  |           `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd220[0m [0;32m'char32_t'[0m
[0;34m  |-[0m[0;1;32mTypedefDecl[0m[0;33m 0x612e100[0m <[0;33mline:776:7[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pointer[0m [0;32m'typename __traits_type::pointer':'const char32_t *'[0m
[0;34m  | `-[0m[0;32mElaboratedType[0m[0;33m 0x612e0b0[0m [0;32m'typename __traits_type::pointer'[0m sugar
[0;34m  |   `-[0m[0;32mTypedefType[0m[0;33m 0x612e090[0m [0;32m'std::iterator_traits<const char32_t *>::pointer'[0m sugar
[0;34m  |     |-[0m[0;1;32mTypedef[0m[0;33m 0x6125ab8[0m[0;1;36m 'pointer'[0m
[0;34m  |     `-[0m[0;32mPointerType[0m[0;33m 0x61257c0[0m [0;32m'const char32_t *'[0m
[0;34m  |       `-[0mQualType[0;33m 0x6125791[0m [0;32m'const char32_t'[0m const
[0;34m  |         `-[0m[0;32mSubstTemplateTypeParmType[0m[0;33m 0x6125790[0m [0;32m'char32_t'[0m sugar
[0;34m  |           |-[0m[0;32mTemplateTypeParmType[0m[0;33m 0x57e20b0[0m [0;32m'_Tp'[0m dependent depth 0 index 0
[0;34m  |           | `-[0m[0;1;32mTemplateTypeParm[0m[0;33m 0x57e2068[0m[0;1;36m '_Tp'[0m
[0;34m  |           `-[0m[0;32mBuiltinType[0m[0;33m 0x54fd220[0m [0;32m'char32_t'[0m
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612e190[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:101:30[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator.h:779:35[0m> [0;33mline:778:26[0m constexpr[0;1;36m __normal_iterator[0m [0;32m'void () noexcept'[0m
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612e3d0[0m <[0;33mline:781:7[0m, [0;33mline:783:27[0m> [0;33mline:782:7[0m[0;1;36m __normal_iterator[0m [0;32m'void (const char32_t *const &) noexcept'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612e2b8[0m <[0;33mcol:25[0m, [0;33mcol:42[0m> [0;33mcol:42[0m[0;1;36m __i[0m [0;32m'const char32_t *const &'[0m
[0;34m  |-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x612ea58[0m <[0;33mline:786:7[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m
[0;34m  | |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x612e490[0m <[0;33mline:786:16[0m, [0;33mcol:25[0m> [0;33mcol:25[0m typename depth 0 index 0[0;1;36m _Iter[0m
[0;34m  | `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612e9b0[0m <[0;33mline:787:9[0m, [0;33mline:791:36[0m> [0;33mline:787:9[0m[0;1;36m __normal_iterator[0m [0;32m'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> >::pointer>::__value), basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >::__type> &) noexcept'[0m
[0;34m  |   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612e8c8[0m <[0;33mcol:27[0m, [0;33mline:790:31[0m> [0;33mcol:31[0m[0;1;36m __i[0m [0;32m'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> >::pointer>::__value), basic_string<char32_t, char_traits<char32_t>, allocator<char32_t> > >::__type> &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612ebb0[0m <[0;33mline:794:7[0m, [0;33mline:796:29[0m> [0;33mline:795:7[0m[0;1;36m operator*[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::reference () const noexcept'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612ecd0[0m <[0;33mline:798:7[0m, [0;33mline:800:28[0m> [0;33mline:799:7[0m[0;1;36m operator->[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::pointer () const noexcept'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612ee30[0m <[0;33mline:802:7[0m, [0;33mline:807:7[0m> [0;33mline:803:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &() noexcept'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612efe0[0m <[0;33mline:809:7[0m, [0;33mline:811:49[0m> [0;33mline:810:7[0m[0;1;36m operator++[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (int) noexcept'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612eee0[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612f0c0[0m <[0;33mline:814:7[0m, [0;33mline:819:7[0m> [0;33mline:815:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &() noexcept'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612f208[0m <[0;33mline:821:7[0m, [0;33mline:823:49[0m> [0;33mline:822:7[0m[0;1;36m operator--[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (int) noexcept'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612f170[0m <[0;33mcol:18[0m> [0;33mcol:21[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612f3f0[0m <[0;33mline:826:7[0m, [0;33mline:828:33[0m> [0;33mline:827:7[0m[0;1;36m operator[][0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::reference (__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612f2f0[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612f5b0[0m <[0;33mline:830:7[0m, [0;33mline:832:42[0m> [0;33mline:831:7[0m[0;1;36m operator+=[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &(__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) noexcept'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612f4b8[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612f770[0m <[0;33mline:834:7[0m, [0;33mline:836:53[0m> [0;33mline:835:7[0m[0;1;36m operator+[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612f678[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612f8d0[0m <[0;33mline:838:7[0m, [0;33mline:840:42[0m> [0;33mline:839:7[0m[0;1;36m operator-=[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &(__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) noexcept'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612f838[0m <[0;33mcol:18[0m, [0;33mcol:34[0m> [0;33mcol:34[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612fa30[0m <[0;33mline:842:7[0m, [0;33mline:844:53[0m> [0;33mline:843:7[0m[0;1;36m operator-[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > (__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type) const noexcept'[0m
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612f998[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:33[0m[0;1;36m __n[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >::difference_type':'long'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x612fb70[0m <[0;33mline:846:7[0m, [0;33mline:848:28[0m> [0;33mline:847:7[0m[0;1;36m base[0m [0;32m'const char32_t *const &() const noexcept'[0m
[0;34m  |-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612fc68[0m <[0;33mline:763:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (const __gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &)'[0m inline default trivial noexcept-unevaluated 0x612fc68
[0;34m  | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612fd78[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'const __gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &'[0m
[0;34m  `-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x612fe18[0m <[0;33mcol:11[0m> [0;33mcol:11[0m implicit constexpr[0;1;36m __normal_iterator[0m [0;32m'void (__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &&)'[0m inline default trivial noexcept-unevaluated 0x612fe18
[0;34m    `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x612ff28[0m <[0;33mcol:11[0m> [0;33mcol:11[0m [0;32m'__gnu_cxx::__normal_iterator<const char32_t *, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > &&'[0m

Dumping std::locale::_S_normalize_category:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5ca2f98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_classes.h:348:5[0m, [0;33mline:349:35[0m> [0;33mcol:5[0m[0;1;36m _S_normalize_category[0m [0;32m'std::locale::category (std::locale::category)'[0m static
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5ca2ed8[0m <[0;33mcol:27[0m> [0;33mcol:35[0m [0;32m'std::locale::category':'int'[0m

Dumping normal:
[0;1;32mFunctionDecl[0m[0;33m 0x607d0c8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/anders/2974486_5644738749267968_anders.cpp:20:1[0m, [0;33mline:35:1[0m> [0;33mline:20:6[0m used[0;1;36m normal[0m [0;32m'void (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x607d038[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x607f4e8[0m <[0;33mcol:20[0m, [0;33mline:35:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x607d228[0m <[0;33mline:21:3[0m, [0;33mcol:14[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x607d188[0m <[0;33mcol:3[0m, [0;33mcol:13[0m> [0;33mcol:7[0m used[0;1;36m ans[0m [0;32m'int'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d210[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d1f0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x607d038[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x607dc50[0m <[0;33mline:22:3[0m, [0;33mline:33:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x607d2e0[0m <[0;33mline:22:8[0m, [0;33mcol:17[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x607d258[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x607d2c0[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607d368[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d338[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d2f8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d258[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d350[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d318[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x607d038[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x607d3a8[0m <[0;33mcol:24[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d388[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d258[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x607dc28[0m <[0;33mcol:29[0m, [0;33mline:33:3[0m>
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x607d478[0m <[0;33mline:23:5[0m, [0;33mcol:19[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x607d3d8[0m <[0;33mcol:5[0m, [0;33mcol:18[0m> [0;33mcol:9[0m used[0;1;36m index[0m [0;32m'int'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x607d460[0m <[0;33mcol:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x607d440[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x607daf0[0m <[0;33mline:24:5[0m, [0;33mline:31:5[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x607d530[0m <[0;33mline:24:9[0m, [0;33mcol:18[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x607d4a8[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;33mcol:13[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x607d510[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607d5b8[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d588[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d548[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d4a8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d5a0[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d568[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x607d038[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x607d5f8[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d5d8[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d4a8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x607dad0[0m <[0;33mcol:30[0m, [0;33mline:31:5[0m>
[0;34m  |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x607d850[0m <[0;33mline:25:7[0m, [0;33mcol:47[0m>
[0;34m  |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607d7b8[0m <[0;33mcol:11[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '&&'
[0;34m  |   |   | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607d680[0m <[0;33mcol:11[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d668[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d610[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d3d8[0m[0;1;36m 'index'[0m [0;32m'int'[0m
[0;34m  |   |   | | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x607d650[0m <[0;33mcol:20[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |   |   | | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x607d630[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607d798[0m <[0;33mcol:26[0m, [0;33mcol:36[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d768[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x607d710[0m <[0;33mcol:26[0m, [0;33mcol:31[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d6e0[0m <[0;33mcol:26[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d6a0[0m <[0;33mcol:26[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x606c980[0m[0;1;36m 'ken'[0m [0;32m'double [1010]'[0m
[0;34m  |   |   | |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d6f8[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d6c0[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d4a8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d780[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   | |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x607d750[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |   |   | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x607d730[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607d830[0m <[0;33mcol:39[0m, [0;33mcol:47[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d7d8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d3d8[0m[0;1;36m 'index'[0m [0;32m'int'[0m
[0;34m  |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d818[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d7f8[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d4a8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x607dab8[0m <[0;33mline:26:7[0m, [0;33mline:30:7[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607d9b8[0m <[0;33mline:26:11[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d988[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x607d8d8[0m <[0;33mcol:11[0m, [0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d8a8[0m <[0;33mcol:11[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d868[0m <[0;33mcol:11[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x606c980[0m[0;1;36m 'ken'[0m [0;32m'double [1010]'[0m
[0;34m  |   |     | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d8c0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d888[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d4a8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d9a0[0m <[0;33mcol:20[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x607d968[0m <[0;33mcol:20[0m, [0;33mcol:27[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d938[0m <[0;33mcol:20[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d8f8[0m <[0;33mcol:20[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x606c8b0[0m[0;1;36m 'naomi'[0m [0;32m'double [1010]'[0m
[0;34m  |   |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607d950[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d918[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d258[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x607da90[0m <[0;33mcol:30[0m, [0;33mline:30:7[0m>
[0;34m  |   |       |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607da30[0m <[0;33mline:27:2[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |       | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d9d8[0m <[0;33mcol:2[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d3d8[0m[0;1;36m 'index'[0m [0;32m'int'[0m
[0;34m  |   |       | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607da18[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607d9f8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d4a8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |       |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x607da70[0m <[0;33mline:28:2[0m, [0;33mcol:4[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '--'
[0;34m  |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607da50[0m <[0;33mcol:4[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d188[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m  |   |       `-[0m[0;1;35mBreakStmt[0m[0;33m 0x607da88[0m <[0;33mline:29:2[0m>
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x607dc08[0m <[0;33mline:32:5[0m, [0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x607db98[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607db68[0m <[0;33mcol:5[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607db28[0m <[0;33mcol:5[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x606c980[0m[0;1;36m 'ken'[0m [0;32m'double [1010]'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607db80[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607db48[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d3d8[0m[0;1;36m 'index'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607dbf0[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |       `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x607dbd8[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  |         `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x607dbb8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x607f4b0[0m <[0;33mline:34:3[0m, [0;33mcol:18[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607f498[0m <[0;33mcol:15[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607f418[0m <[0;33mcol:15[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e71268[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char> >::__ostream_type &))'[0m
[0;34m    |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x607ea78[0m <[0;33mcol:3[0m, [0;33mcol:11[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607ea60[0m <[0;33mcol:8[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607ea40[0m <[0;33mcol:8[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e721c8[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m    | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607dc88[0m <[0;33mcol:3[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5f13830[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607ea28[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607dca8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x607d188[0m[0;1;36m 'ans'[0m [0;32m'int'[0m
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x607f400[0m <[0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x607f3d8[0m <[0;33mcol:18[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e75948[0m[0;1;36m 'endl'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5e52c58[0m[0;1;36m 'endl'[0m)

Dumping __resolved:
[0;1;32mParmVarDecl[0m[0;33m 0x5a49f70[0m <[0;33m/usr/include/stdlib.h:798:10[0m, [0;33mcol:27[0m> [0;33mcol:27[0m[0;1;36m __resolved[0m [0;32m'char *__restrict'[0m

Dumping solve:
[0;1;32mFunctionDecl[0m[0;33m 0x5fc43e0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/anders/2974486_5644738749267968_anders.cpp:37:1[0m, [0;33mline:50:1[0m> [0;33mline:37:6[0m used[0;1;36m solve[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fcd0f0[0m <[0;33mcol:14[0m, [0;33mline:50:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5fc4500[0m <[0;33mline:38:3[0m, [0;33mcol:8[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5fc4498[0m <[0;33mcol:3[0m, [0;33mcol:7[0m> [0;33mcol:7[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5fc5e70[0m <[0;33mline:39:3[0m, [0;33mcol:10[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc5e58[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(int &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc5de0[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5ddb368[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc4518[0m <[0;33mcol:3[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e583d8[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc4538[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc4498[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5fc7a40[0m <[0;33mline:40:3[0m, [0;33mline:42:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5fc5f48[0m <[0;33mline:40:8[0m, [0;33mcol:15[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5fc5ec0[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fc5f28[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fc5fd0[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc5fa0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc5f60[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc5ec0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc5fb8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc5f80[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc4498[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5fc6010[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc5ff0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc5ec0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fc7a28[0m <[0;33mcol:27[0m, [0;33mline:42:3[0m>
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5fc79f0[0m <[0;33mline:41:5[0m, [0;33mcol:19[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc79d8[0m <[0;33mcol:9[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(double &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc7958[0m <[0;33mcol:9[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(double &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5ddbf38[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(double &)'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc6028[0m <[0;33mcol:5[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e583d8[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fc60b8[0m <[0;33mcol:12[0m, [0;33mcol:19[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc6088[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc6048[0m <[0;33mcol:12[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fb15b0[0m[0;1;36m 'naomi'[0m [0;32m'double [1010]'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc60a0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc6068[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc5ec0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5fcc780[0m <[0;33mline:43:3[0m, [0;33mline:45:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5fc7b18[0m <[0;33mline:43:8[0m, [0;33mcol:15[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5fc7a90[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5fc7af8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fc7ba0[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc7b70[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc7b30[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc7a90[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc7b88[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc7b50[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc4498[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5fc7be0[0m <[0;33mcol:22[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc7bc0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc7a90[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5fcc768[0m <[0;33mcol:27[0m, [0;33mline:45:3[0m>
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5fcc730[0m <[0;33mline:44:5[0m, [0;33mcol:17[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcc718[0m <[0;33mcol:9[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(double &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcc6f8[0m <[0;33mcol:9[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(double &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5ddbf38[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(double &)'[0m
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc7bf8[0m <[0;33mcol:5[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e583d8[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5fc7c88[0m <[0;33mcol:12[0m, [0;33mcol:17[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc7c58[0m <[0;33mcol:12[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc7c18[0m <[0;33mcol:12[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fb1680[0m[0;1;36m 'ken'[0m [0;32m'double [1010]'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fc7c70[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fc7c38[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc7a90[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5fcccf0[0m <[0;33mline:46:3[0m, [0;33mcol:22[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcccd8[0m <[0;33mcol:3[0m> [0;32m'void (*)(double *, double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fccc50[0m <[0;33mcol:3[0m> [0;32m'void (double *, double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fccb48[0m[0;1;36m 'sort'[0m [0;32m'void (double *, double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5f9dee8[0m[0;1;36m 'sort'[0m)
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fccd20[0m <[0;33mcol:8[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcc808[0m <[0;33mcol:8[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fb15b0[0m[0;1;36m 'naomi'[0m [0;32m'double [1010]'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcc898[0m <[0;33mcol:15[0m, [0;33mcol:21[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcc868[0m <[0;33mcol:15[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcc828[0m <[0;33mcol:15[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fb15b0[0m[0;1;36m 'naomi'[0m [0;32m'double [1010]'[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcc880[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcc848[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc4498[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5fcceb8[0m <[0;33mline:47:3[0m, [0;33mcol:18[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fccea0[0m <[0;33mcol:3[0m> [0;32m'void (*)(double *, double *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcce78[0m <[0;33mcol:3[0m> [0;32m'void (double *, double *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fccb48[0m[0;1;36m 'sort'[0m [0;32m'void (double *, double *)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5f9dee8[0m[0;1;36m 'sort'[0m)
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fccee8[0m <[0;33mcol:8[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fccd88[0m <[0;33mcol:8[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fb1680[0m[0;1;36m 'ken'[0m [0;32m'double [1010]'[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5fcce18[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fccde8[0m <[0;33mcol:13[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fccda8[0m <[0;33mcol:13[0m> [0;32m'double [1010]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fb1680[0m[0;1;36m 'ken'[0m [0;32m'double [1010]'[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcce00[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fccdc8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc4498[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5fccfd0[0m <[0;33mline:48:3[0m, [0;33mcol:11[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fccfb8[0m <[0;33mcol:3[0m> [0;32m'void (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fccf68[0m <[0;33mcol:3[0m> [0;32m'void (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fb1790[0m[0;1;36m 'deceit'[0m [0;32m'void (int)'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fccff8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fccf48[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc4498[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mCallExpr[0m[0;33m 0x5fcd0b0[0m <[0;33mline:49:3[0m, [0;33mcol:11[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m    |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcd098[0m <[0;33mcol:3[0m> [0;32m'void (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcd078[0m <[0;33mcol:3[0m> [0;32m'void (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5fc1f78[0m[0;1;36m 'normal'[0m [0;32m'void (int)'[0m
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5fcd0d8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5fcd058[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5fc4498[0m[0;1;36m 'n'[0m [0;32m'int'[0m

Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x625a038[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6259fa8[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x642a250[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::errc::argument_out_of_domain:
[0;1;32mEnumConstantDecl[0m[0;33m 0x67d71f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m[0;1;36m argument_out_of_domain[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x67d71d0[0m <[0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x67d71b0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x67dbc28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x67dbd88[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x67dbe18[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x67dbf28[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67dbe50[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x67dc080[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67dbff0[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x67dc180[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x67dba78 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x67dc258[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x67dc258
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67dc368[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x67dc408[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x67dc408
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67dc518[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x684f938[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:54:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x684fa10[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x684f9e0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x684f9a0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x684f3f0[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x684f9f8[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x684f9c0[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x684f588[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x6851498[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:88:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6851570[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6851540[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6851500[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6850f50[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6851558[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6851520[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x68510e8[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remainder:
[0;1;32mVarDecl[0m[0;33m 0x6af0c18[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:297:7[0m, [0;33mcol:35[0m> [0;33mcol:21[0m referenced[0;1;36m __remainder[0m [0;32m'_DistanceType':'typename std::iterator_traits<_RandomAccessIter>::difference_type'[0m cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6af0c80[0m <[0;33mcol:35[0m> [0;32m'_Integer'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6af0510[0m[0;1;36m '__count'[0m [0;32m'_Integer'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x6b8fe68[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/anders/2974486_5644738749267968_anders.cpp:52:1[0m, [0;33mline:60:1[0m> [0;33mline:52:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b95448[0m <[0;33mcol:12[0m, [0;33mline:60:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b8ff88[0m <[0;33mline:53:3[0m, [0;33mcol:8[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6b8ff20[0m <[0;33mcol:3[0m, [0;33mcol:7[0m> [0;33mcol:7[0m used[0;1;36m c[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6b90a20[0m <[0;33mline:54:3[0m, [0;33mcol:10[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b90a08[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(*)(int &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b909e8[0m <[0;33mcol:7[0m> [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x699eb68[0m[0;1;36m 'operator>>'[0m [0;32m'std::basic_istream<char, std::char_traits<char> >::__istream_type &(int &)'[0m
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b8ffa0[0m <[0;33mcol:3[0m> [0;32m'std::istream':'std::basic_istream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a1bcb8[0m[0;1;36m 'cin'[0m [0;32m'std::istream':'std::basic_istream<char>'[0m
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b8ffc0[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b8ff20[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x6b953e0[0m <[0;33mline:55:3[0m, [0;33mline:58:3[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6b90af8[0m <[0;33mline:55:8[0m, [0;33mcol:15[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6b90a70[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6b90ad8[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6b90b80[0m <[0;33mcol:17[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b90b50[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b90b10[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b90a70[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b90b68[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b90b30[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b8ff20[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6b90bc0[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b90ba0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b90a70[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6b953c0[0m <[0;33mcol:28[0m, [0;33mline:58:3[0m>
[0;34m  |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6b952e8[0m <[0;33mline:56:5[0m, [0;33mcol:30[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b952d0[0m <[0;33mcol:27[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b952b0[0m <[0;33mcol:27[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x69822d8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |   | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6b93658[0m <[0;33mcol:5[0m, [0;33mcol:25[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b93640[0m <[0;33mcol:22[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b93620[0m <[0;33mcol:22[0m> [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x6979c98[0m[0;1;36m 'operator<<'[0m [0;32m'std::basic_ostream<char, std::char_traits<char> >::__ostream_type &(int)'[0m
[0;34m  |   | | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x6b92848[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;32m'basic_ostream<char, std::char_traits<char> >':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b92830[0m <[0;33mcol:10[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b92810[0m <[0;33mcol:10[0m> [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x69822d8[0m[0;1;36m 'operator<<'[0m [0;32m'basic_ostream<char, std::char_traits<char> > &(basic_ostream<char, std::char_traits<char> > &, const char *)'[0m
[0;34m  |   | | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b90bd8[0m <[0;33mcol:5[0m> [0;32m'std::ostream':'std::basic_ostream<char>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a1bd30[0m[0;1;36m 'cout'[0m [0;32m'std::ostream':'std::basic_ostream<char>'[0m
[0;34m  |   | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b927f8[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6b90bf8[0m <[0;33mcol:13[0m> [0;32m'const char [7]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #"[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b93608[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b92880[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6b90a70[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b95298[0m <[0;33mcol:30[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6b93690[0m <[0;33mcol:30[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m ": "[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6b953a0[0m <[0;33mline:57:5[0m, [0;33mcol:11[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6b95388[0m <[0;33mcol:5[0m> [0;32m'void (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6b95368[0m <[0;33mcol:5[0m> [0;32m'void ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b870e0[0m[0;1;36m 'solve'[0m [0;32m'void ()'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6b95438[0m <[0;33mline:59:3[0m, [0;33mcol:10[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6b95418[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

