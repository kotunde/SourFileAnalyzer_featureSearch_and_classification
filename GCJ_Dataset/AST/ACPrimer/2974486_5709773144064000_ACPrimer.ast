Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x6735158[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x67350c8[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x6905370[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::errc::argument_out_of_domain:
[0;1;32mEnumConstantDecl[0m[0;33m 0x6cb21a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m[0;1;36m argument_out_of_domain[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x6cb2180[0m <[0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6cb2160[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x6cb6bd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6cb6d38[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6cb6dc8[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cb6ed8[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cb6e00[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cb7030[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cb6fa0[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6cb7130[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6cb6a28 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6cb7208[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x6cb7208
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cb7318[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x6cb73b8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x6cb73b8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6cb74c8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x6d2a8e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:54:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2a9c0[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2a990[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2a950[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2a3a0[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2a9a8[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2a970[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2a538[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x6d2c448[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:88:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6d2c520[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c4f0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c4b0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6d2bf00[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6d2c508[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6d2c4d0[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6d2c098[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x69530d8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/ACPrimer/2974486_5709773144064000_ACPrimer.cpp:7:1[0m, [0;33mline:24:1[0m> [0;33mline:7:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x6954730[0m <[0;33mline:8:1[0m, [0;33mline:24:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6953338[0m <[0;33mline:9:5[0m, [0;33mcol:20[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6953190[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m T[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6953210[0m <[0;33mcol:5[0m, [0;33mcol:17[0m> [0;33mcol:11[0m used[0;1;36m ncase[0m [0;32m'int'[0m cinit
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6953278[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x69532b0[0m <[0;33mcol:5[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x69534f0[0m <[0;33mline:10:5[0m, [0;33mcol:17[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6953368[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m c[0m [0;32m'double'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x69533e8[0m <[0;33mcol:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m used[0;1;36m f[0m [0;32m'double'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6953468[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m x[0m [0;32m'double'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x6953640[0m <[0;33mline:11:5[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953628[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69535a8[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b1a360[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953670[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6953550[0m <[0;33mcol:11[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6953590[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953570[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953190[0m[0;1;36m 'T'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x69546e8[0m <[0;33mline:12:5[0m, [0;33mline:22:5[0m>
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69536c0[0m <[0;33mline:12:11[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x69536a8[0m <[0;33mcol:11[0m, [0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953688[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953190[0m[0;1;36m 'T'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69546b8[0m <[0;33mcol:15[0m, [0;33mline:22:5[0m>
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x69538a0[0m <[0;33mline:13:9[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953888[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953868[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b1a360[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69538e0[0m <[0;33mcol:15[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6953798[0m <[0;33mcol:15[0m> [0;32m'const char [10]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%lf%lf%lf"[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x69537e0[0m <[0;33mcol:27[0m, [0;33mcol:28[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69537c0[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953368[0m[0;1;36m 'c'[0m [0;32m'double'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6953818[0m <[0;33mcol:30[0m, [0;33mcol:31[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69537f8[0m <[0;33mcol:31[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69533e8[0m[0;1;36m 'f'[0m [0;32m'double'[0m
[0;34m  |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6953850[0m <[0;33mcol:33[0m, [0;33mcol:34[0m> [0;32m'double *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953830[0m <[0;33mcol:34[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953468[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x6953aa8[0m <[0;33mline:14:9[0m, [0;33mcol:31[0m>
[0;34m  |   | |-[0m[0;1;32mVarDecl[0m[0;33m 0x6953910[0m <[0;33mcol:9[0m, [0;33mcol:22[0m> [0;33mcol:16[0m used[0;1;36m ans[0m [0;32m'double'[0m cinit
[0;34m  |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69539d0[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69539b8[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953978[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953468[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   | |   `-[0m[0;1;35mFloatingLiteral[0m[0;33m 0x6953998[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m[0;1;36m 2.000000e+00[0m
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x6953a08[0m <[0;33mcol:9[0m, [0;33mcol:28[0m> [0;33mcol:26[0m used[0;1;36m t[0m [0;32m'double'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mFloatingLiteral[0m[0;33m 0x6953a70[0m <[0;33mcol:28[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m[0;1;36m 0.000000e+00[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x6954500[0m <[0;33mline:15:9[0m, [0;33mline:20:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953b00[0m <[0;33mline:15:13[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953ac0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69532b0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6953ae0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x6953b40[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953b20[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69532b0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x69544e0[0m <[0;33mcol:22[0m, [0;33mline:20:9[0m>
[0;34m  |   |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x6954380[0m <[0;33mline:16:13[0m, [0;33mline:17:30[0m> has_else
[0;34m  |   |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953bb0[0m <[0;33mline:16:16[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953b98[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953b58[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69532b0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6953b78[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   | |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x6954158[0m <[0;33mcol:21[0m, [0;33mcol:60[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'double'[0m ComputeResultTy=[0;32m'double'[0m
[0;34m  |   |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953bd0[0m <[0;33mcol:21[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953a08[0m[0;1;36m 't'[0m [0;32m'double'[0m
[0;34m  |   |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954138[0m <[0;33mcol:24[0m, [0;33mcol:60[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   | |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953f40[0m <[0;33mcol:24[0m, [0;33mcol:46[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   | |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953da8[0m <[0;33mcol:24[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   |   | |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953d90[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953bf0[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953368[0m[0;1;36m 'c'[0m [0;32m'double'[0m
[0;34m  |   |   | |   | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6953d70[0m <[0;33mcol:26[0m, [0;33mcol:36[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953d50[0m <[0;33mcol:27[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   | |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953d38[0m <[0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   | |   | |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6953c10[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |   | |   | |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953d18[0m <[0;33mcol:29[0m, [0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |   |   | |   | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953d00[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   | |   | |       | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6953ca8[0m <[0;33mcol:29[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |   | |       |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953c88[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   | |   | |       |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953c70[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   | |       |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953c30[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69532b0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | |   | |       |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6953c50[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   | |   | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953ce8[0m <[0;33mcol:35[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953cc8[0m <[0;33mcol:35[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69533e8[0m[0;1;36m 'f'[0m [0;32m'double'[0m
[0;34m  |   |   | |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953f20[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   |   | |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953f08[0m <[0;33mcol:38[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953dc8[0m <[0;33mcol:38[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953468[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   |   | |   |   `-[0m[0;1;35mParenExpr[0m[0;33m 0x6953ee8[0m <[0;33mcol:40[0m, [0;33mcol:46[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953ec8[0m <[0;33mcol:41[0m, [0;33mcol:45[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   | |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953eb0[0m <[0;33mcol:41[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   | |   |       | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6953de8[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |   | |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953e90[0m <[0;33mcol:43[0m, [0;33mcol:45[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |   |   | |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953e78[0m <[0;33mcol:43[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   | |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953e48[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953e08[0m <[0;33mcol:43[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69532b0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953e60[0m <[0;33mcol:45[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |   |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953e28[0m <[0;33mcol:45[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69533e8[0m[0;1;36m 'f'[0m [0;32m'double'[0m
[0;34m  |   |   | |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954118[0m <[0;33mcol:48[0m, [0;33mcol:60[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   |   | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954100[0m <[0;33mcol:48[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953f60[0m <[0;33mcol:48[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953468[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   |   | |     `-[0m[0;1;35mParenExpr[0m[0;33m 0x69540e0[0m <[0;33mcol:50[0m, [0;33mcol:60[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69540c0[0m <[0;33mcol:51[0m, [0;33mcol:59[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69540a8[0m <[0;33mcol:51[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   | |         | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6953f80[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |   | |         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954088[0m <[0;33mcol:53[0m, [0;33mcol:59[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '*'
[0;34m  |   |   | |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954070[0m <[0;33mcol:53[0m, [0;33mcol:57[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   | |           | `-[0m[0;1;35mParenExpr[0m[0;33m 0x6954018[0m <[0;33mcol:53[0m, [0;33mcol:57[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |           |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6953ff8[0m <[0;33mcol:54[0m, [0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |   | |           |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6953fe0[0m <[0;33mcol:54[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |           |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6953fa0[0m <[0;33mcol:54[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69532b0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |   | |           |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6953fc0[0m <[0;33mcol:56[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |   | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954058[0m <[0;33mcol:59[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6954038[0m <[0;33mcol:59[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69533e8[0m[0;1;36m 'f'[0m [0;32m'double'[0m
[0;34m  |   |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954360[0m <[0;33mline:17:18[0m, [0;33mcol:30[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6954188[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953a08[0m[0;1;36m 't'[0m [0;32m'double'[0m
[0;34m  |   |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954340[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954218[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69541e8[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69541a8[0m <[0;33mcol:20[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953368[0m[0;1;36m 'c'[0m [0;32m'double'[0m
[0;34m  |   |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954200[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x69541c8[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954320[0m <[0;33mcol:24[0m, [0;33mcol:30[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '/'
[0;34m  |   |   |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954308[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6954238[0m <[0;33mcol:24[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953468[0m[0;1;36m 'x'[0m [0;32m'double'[0m
[0;34m  |   |   |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x69542e8[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x69542c8[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69542b0[0m <[0;33mcol:27[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToFloating[0m>
[0;34m  |   |   |           | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6954258[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954298[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6954278[0m <[0;33mcol:29[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x69533e8[0m[0;1;36m 'f'[0m [0;32m'double'[0m
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x69544b8[0m <[0;33mline:18:13[0m, [0;33mline:19:22[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954418[0m <[0;33mline:18:16[0m, [0;33mcol:18[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '>'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69543e8[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69543a8[0m <[0;33mcol:16[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953a08[0m[0;1;36m 't'[0m [0;32m'double'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954400[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69543c8[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953910[0m[0;1;36m 'ans'[0m [0;32m'double'[0m
[0;34m  |   |     |-[0m[0;1;35mBreakStmt[0m[0;33m 0x6954438[0m <[0;33mcol:23[0m>
[0;34m  |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6954498[0m <[0;33mline:19:18[0m, [0;33mcol:22[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6954440[0m <[0;33mcol:18[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953910[0m[0;1;36m 'ans'[0m [0;32m'double'[0m
[0;34m  |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954480[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6954460[0m <[0;33mcol:22[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953a08[0m[0;1;36m 't'[0m [0;32m'double'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x6954638[0m <[0;33mline:21:9[0m, [0;33mcol:49[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954620[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6954600[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x6b17c30[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954670[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x6954580[0m <[0;33mcol:16[0m> [0;32m'const char [17]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d: %.7lf\n"[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6954688[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x69545c8[0m <[0;33mcol:37[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69545a8[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953210[0m[0;1;36m 'ncase'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x69546a0[0m <[0;33mcol:46[0m> [0;32m'double'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x69545e0[0m <[0;33mcol:46[0m> [0;32m'double'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6953910[0m[0;1;36m 'ans'[0m [0;32m'double'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x6954720[0m <[0;33mline:23:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6954700[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

