Dumping std::__do_is_direct_constructible_impl:
[0;1;32mCXXRecordDecl[0m[0;33m 0x4f85b28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:970:3[0m, [0;33mline:978:3[0m> [0;33mline:970:10[0m referenced struct[0;1;36m __do_is_direct_constructible_impl[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f85c48[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit struct[0;1;36m __do_is_direct_constructible_impl[0m
[0;34m|-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x4f86190[0m <[0;33mline:972:5[0m, [0;33mline:974:34[0m> [0;33mcol:24[0m[0;1;36m __test[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f85cd8[0m <[0;33mline:972:14[0m, [0;33mcol:23[0m> [0;33mcol:23[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f85d48[0m <[0;33mcol:28[0m, [0;33mcol:37[0m> [0;33mcol:37[0m referenced typename depth 0 index 1[0;1;36m _Arg[0m
[0;34m| |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f85f88[0m <[0;33mcol:43[0m, [0;33mline:973:9[0m> [0;33mline:972:43[0m typename depth 0 index 2
[0;34m| | `-[0mTemplateArgument type [0;32m'decltype(::new _Tp((declval<_Arg>())))'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x4f860f0[0m <[0;33mline:974:7[0m, [0;33mcol:34[0m> [0;33mcol:24[0m[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x4f86038[0m <[0;33mcol:31[0m> [0;33mcol:34[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5a50950[0m <[0;33mcol:7[0m, [0;33mcol:34[0m> [0;33mcol:24[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| | |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| | |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base **'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5a508c0[0m <[0;33mcol:31[0m> [0;33mcol:34[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5bfcc60[0m <[0;33mcol:7[0m, [0;33mcol:34[0m> [0;33mcol:24[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| | |-[0mTemplateArgument type [0;32m'const long long &'[0m
[0;34m| | |-[0mTemplateArgument type [0;32m'long long *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bfcbd0[0m <[0;33mcol:31[0m> [0;33mcol:34[0m [0;32m'int'[0m
[0;34m| |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5c088a0[0m <[0;33mcol:7[0m, [0;33mcol:34[0m> [0;33mcol:24[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m| | |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| | |-[0mTemplateArgument type [0;32m'long long &'[0m
[0;34m| | |-[0mTemplateArgument type [0;32m'long long *'[0m
[0;34m| | `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c08810[0m <[0;33mcol:31[0m> [0;33mcol:34[0m [0;32m'int'[0m
[0;34m| `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5c11c60[0m <[0;33mcol:7[0m, [0;33mcol:34[0m> [0;33mcol:24[0m referenced[0;1;36m __test[0m [0;32m'std::true_type (int)'[0m static
[0;34m|   |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m|   |-[0mTemplateArgument type [0;32m'const long long &&'[0m
[0;34m|   |-[0mTemplateArgument type [0;32m'long long *'[0m
[0;34m|   `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5c11bd0[0m <[0;33mcol:31[0m> [0;33mcol:34[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;32mFunctionTemplateDecl[0m[0;33m 0x4f863b8[0m <[0;33mline:976:5[0m, [0;33mline:977:35[0m> [0;33mcol:25[0m[0;1;36m __test[0m
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f861f0[0m <[0;33mline:976:14[0m> [0;33mcol:14[0m typename depth 0 index 0
[0;34m  |-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f86268[0m <[0;33mcol:24[0m> [0;33mcol:24[0m typename depth 0 index 1
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x4f86318[0m <[0;33mline:977:7[0m, [0;33mcol:35[0m> [0;33mcol:25[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5a50b80[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:25[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  | |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m  | `-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5a64aa0[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:25[0m referenced[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  | |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m  | `-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5bfce10[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:25[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  | |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m  | `-[0mTemplateArgument type [0;32m'const long long &'[0m
[0;34m  |-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5c08a50[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:25[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m  | |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m  | `-[0mTemplateArgument type [0;32m'long long &'[0m
[0;34m  `-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x5c11e10[0m <[0;33mcol:7[0m, [0;33mcol:35[0m> [0;33mcol:25[0m[0;1;36m __test[0m [0;32m'std::false_type (...)'[0m static
[0;34m    |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m    `-[0mTemplateArgument type [0;32m'const long long &&'[0m

Dumping std::__is_direct_constructible_impl:
[0;1;32mClassTemplateDecl[0m[0;33m 0x4f86ac0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:980:3[0m, [0;33mline:985:5[0m> [0;33mline:981:12[0m[0;1;36m __is_direct_constructible_impl[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f86428[0m <[0;33mline:980:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f86498[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Arg[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f86a30[0m <[0;33mline:981:5[0m, [0;33mline:985:5[0m> [0;33mline:981:12[0m struct[0;1;36m __is_direct_constructible_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::__do_is_direct_constructible_impl'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f86d90[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_impl[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x4f86f98[0m <[0;33mline:984:7[0m, [0;33mcol:46[0m> [0;33mcol:46[0m[0;1;36m type[0m [0;32m'decltype(__test<_Tp, _Arg>(0))'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x4f86f60[0m [0;32m'decltype(__test<_Tp, _Arg>(0))'[0m dependent
[0;34m|     `-[0m[0;1;35mCallExpr[0m[0;33m 0x4f86f38[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'<dependent type>'[0m[0;36m[0m[0;36m[0m
[0;34m|       |-[0m[0;1;35mUnresolvedLookupExpr[0m[0;33m 0x4f86e58[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'<dependent type>'[0m[0;36m lvalue[0m[0;36m[0m (no ADL) = '__test'[0;33m 0x4f86190[0m[0;33m 0x4f863b8[0m
[0;34m|       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4f86f18[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a45998[0m <[0;33mline:980:3[0m, [0;33mline:985:5[0m> [0;33mline:981:12[0m struct[0;1;36m __is_direct_constructible_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::__do_is_direct_constructible_impl'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5a500f8[0m prev 0x5a45998 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_impl[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5a50dc8[0m <[0;33mline:984:7[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *const &>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x5a50d90[0m [0;32m'decltype(__test<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *const &>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x5a50d40[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a50d28[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a50c90[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a50950[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4f86190[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4f86f18[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x4f309f0[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x4f291c8[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x4f290e0[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x4f28fa8[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x4f28f50[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x4f290c0[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x4f28fc8[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a5e0b8[0m <[0;33mline:980:3[0m, [0;33mline:985:5[0m> [0;33mline:981:12[0m struct[0;1;36m __is_direct_constructible_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::__do_is_direct_constructible_impl'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5a5ec28[0m prev 0x5a5e0b8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_impl[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5a64d48[0m <[0;33mline:984:7[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<std::_Rb_tree_node_base *, int &&>(0))':'std::integral_constant<bool, false>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x5a64d10[0m [0;32m'decltype(__test<std::_Rb_tree_node_base *, int &&>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x5a64cc0[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'std::false_type':'std::integral_constant<bool, false>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5a64ca8[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::false_type (*)(...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5a64bb0[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::false_type (...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5a64aa0[0m[0;1;36m '__test'[0m [0;32m'std::false_type (...)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4f863b8[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4f86f18[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x4f2a250[0m [0;32m'std::false_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x4f29488[0m[0;1;36m 'false_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x4f293a0[0m [0;32m'integral_constant<bool, false>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x4f29260[0m <[0;33mline:90:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m false[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x4f29230[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x4f29380[0m [0;32m'std::integral_constant<bool, false>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x4f29280[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5bf4c38[0m <[0;33mline:980:3[0m, [0;33mline:985:5[0m> [0;33mline:981:12[0m struct[0;1;36m __is_direct_constructible_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::__do_is_direct_constructible_impl'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const long long &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5bfc4b8[0m prev 0x5bf4c38 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_impl[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5bfd058[0m <[0;33mline:984:7[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<long long, const long long &>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x5bfd020[0m [0;32m'decltype(__test<long long, const long long &>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x5bfcfd0[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bfcfb8[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bfcf20[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5bfcc60[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4f86190[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4f86f18[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x4f309f0[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x4f291c8[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x4f290e0[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x4f28fa8[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x4f28f50[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x4f290c0[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x4f28fc8[0m[0;1;36m 'integral_constant'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c07618[0m <[0;33mline:980:3[0m, [0;33mline:985:5[0m> [0;33mline:981:12[0m struct[0;1;36m __is_direct_constructible_impl[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'std::__do_is_direct_constructible_impl'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long &'[0m
[0;34m| |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c08188[0m prev 0x5c07618 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_impl[0m
[0;34m| `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c08c98[0m <[0;33mline:984:7[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<long long, long long &>(0))':'std::integral_constant<bool, true>'[0m
[0;34m|   `-[0m[0;32mDecltypeType[0m[0;33m 0x5c08c60[0m [0;32m'decltype(__test<long long, long long &>(0))'[0m sugar
[0;34m|     |-[0m[0;1;35mCallExpr[0m[0;33m 0x5c08c10[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m|     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c08bf8[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m|     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c08b60[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5c088a0[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4f86190[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m|     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4f86f18[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m|     `-[0m[0;32mTypedefType[0m[0;33m 0x4f309f0[0m [0;32m'std::true_type'[0m sugar
[0;34m|       |-[0m[0;1;32mTypedef[0m[0;33m 0x4f291c8[0m[0;1;36m 'true_type'[0m
[0;34m|       `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x4f290e0[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m|         |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m|         |-[0mTemplateArgument expr
[0;34m|         | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x4f28fa8[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m|         |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x4f28f50[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m|         `-[0m[0;32mRecordType[0m[0;33m 0x4f290c0[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m|           `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x4f28fc8[0m[0;1;36m 'integral_constant'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c0b188[0m <[0;33mline:980:3[0m, [0;33mline:985:5[0m> [0;33mline:981:12[0m struct[0;1;36m __is_direct_constructible_impl[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'std::__do_is_direct_constructible_impl'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'const long long &&'[0m
[0;34m  |-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c0bcf8[0m prev 0x5c0b188 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_impl[0m
[0;34m  `-[0m[0;1;32mTypedefDecl[0m[0;33m 0x5c12058[0m <[0;33mline:984:7[0m, [0;33mcol:46[0m> [0;33mcol:46[0m referenced[0;1;36m type[0m [0;32m'decltype(__test<long long, const long long &&>(0))':'std::integral_constant<bool, true>'[0m
[0;34m    `-[0m[0;32mDecltypeType[0m[0;33m 0x5c12020[0m [0;32m'decltype(__test<long long, const long long &&>(0))'[0m sugar
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x5c11fd0[0m <[0;33mcol:24[0m, [0;33mcol:43[0m> [0;32m'std::true_type':'std::integral_constant<bool, true>'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c11fb8[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::true_type (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c11f20[0m <[0;33mcol:24[0m, [0;33mcol:40[0m> [0;32m'std::true_type (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5c11c60[0m[0;1;36m '__test'[0m [0;32m'std::true_type (int)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x4f86190[0m[0;1;36m '__test'[0m) non_odr_use_unevaluated
[0;34m      | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4f86f18[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      `-[0m[0;32mTypedefType[0m[0;33m 0x4f309f0[0m [0;32m'std::true_type'[0m sugar
[0;34m        |-[0m[0;1;32mTypedef[0m[0;33m 0x4f291c8[0m[0;1;36m 'true_type'[0m
[0;34m        `-[0m[0;32mTemplateSpecializationType[0m[0;33m 0x4f290e0[0m [0;32m'integral_constant<bool, true>'[0m sugar integral_constant
[0;34m          |-[0mTemplateArgument type [0;32m'bool'[0m
[0;34m          |-[0mTemplateArgument expr
[0;34m          | `-[0m[0;1;35mConstantExpr[0m[0;33m 0x4f28fa8[0m <[0;33mline:87:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m[0;1;36m true[0m
[0;34m          |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x4f28f50[0m <[0;33mcol:35[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m          `-[0m[0;32mRecordType[0m[0;33m 0x4f290c0[0m [0;32m'std::integral_constant<bool, true>'[0m
[0;34m            `-[0m[0;1;32mClassTemplateSpecialization[0m[0;33m 0x4f28fc8[0m[0;1;36m 'integral_constant'[0m

Dumping std::__is_direct_constructible_new_safe:
[0;1;32mClassTemplateDecl[0m[0;33m 0x4f87198[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:987:3[0m, [0;33mline:991:7[0m> [0;33mline:988:12[0m[0;1;36m __is_direct_constructible_new_safe[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f87008[0m <[0;33mline:987:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f87078[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Arg[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f87108[0m <[0;33mline:988:5[0m, [0;33mline:991:7[0m> [0;33mline:988:12[0m struct[0;1;36m __is_direct_constructible_new_safe[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__and_<is_destructible<_Tp>, __is_direct_constructible_impl<_Tp, _Arg> >'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f87760[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new_safe[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a45010[0m <[0;33mline:987:3[0m, [0;33mline:991:7[0m> [0;33mline:988:12[0m struct[0;1;36m __is_direct_constructible_new_safe[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__and_<is_destructible<std::_Rb_tree_node_base *>, __is_direct_constructible_impl<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *const &> >':'std::__and_<std::is_destructible<std::_Rb_tree_node_base *>, std::__is_direct_constructible_impl<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *const &> >'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5a50f40[0m prev 0x5a45010 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new_safe[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a5d860[0m <[0;33mline:987:3[0m, [0;33mline:991:7[0m> [0;33mline:988:12[0m struct[0;1;36m __is_direct_constructible_new_safe[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__and_<is_destructible<std::_Rb_tree_node_base *>, __is_direct_constructible_impl<std::_Rb_tree_node_base *, int &&> >':'std::__and_<std::is_destructible<std::_Rb_tree_node_base *>, std::__is_direct_constructible_impl<std::_Rb_tree_node_base *, int &&> >'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5a64ec0[0m prev 0x5a5d860 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new_safe[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5bf42b0[0m <[0;33mline:987:3[0m, [0;33mline:991:7[0m> [0;33mline:988:12[0m struct[0;1;36m __is_direct_constructible_new_safe[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__and_<is_destructible<long long>, __is_direct_constructible_impl<long long, const long long &> >':'std::__and_<std::is_destructible<long long>, std::__is_direct_constructible_impl<long long, const long long &> >'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const long long &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5bfd1d0[0m prev 0x5bf42b0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new_safe[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c06dc0[0m <[0;33mline:987:3[0m, [0;33mline:991:7[0m> [0;33mline:988:12[0m struct[0;1;36m __is_direct_constructible_new_safe[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__and_<is_destructible<long long>, __is_direct_constructible_impl<long long, long long &> >':'std::__and_<std::is_destructible<long long>, std::__is_direct_constructible_impl<long long, long long &> >'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c08e10[0m prev 0x5c06dc0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new_safe[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c0a930[0m <[0;33mline:987:3[0m, [0;33mline:991:7[0m> [0;33mline:988:12[0m struct[0;1;36m __is_direct_constructible_new_safe[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__and_<is_destructible<long long>, __is_direct_constructible_impl<long long, const long long &&> >':'std::__and_<std::is_destructible<long long>, std::__is_direct_constructible_impl<long long, const long long &&> >'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'const long long &&'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c121d0[0m prev 0x5c0a930 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new_safe[0m

Dumping std::__is_direct_constructible_ref_cast:
[0;1;32mClassTemplateDecl[0m[0;33m 0x4f916d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1061:3[0m, [0;33mline:1067:7[0m> [0;33mline:1062:12[0m[0;1;36m __is_direct_constructible_ref_cast[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f91540[0m <[0;33mline:1061:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f915b8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Arg[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f91648[0m <[0;33mline:1062:5[0m, [0;33mline:1067:7[0m> [0;33mline:1062:12[0m struct[0;1;36m __is_direct_constructible_ref_cast[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__and_<__is_static_castable<_Arg, _Tp>, __not_<__or_<__is_base_to_derived_ref<_Arg, _Tp>, __is_lvalue_to_rvalue_ref<_Arg, _Tp> > > >'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f92e10[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_ref_cast[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a44e38[0m <[0;33mline:1061:3[0m, [0;33mline:1067:7[0m> [0;33mline:1062:12[0m struct[0;1;36m __is_direct_constructible_ref_cast[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| `-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a5d688[0m <[0;33mline:1061:3[0m, [0;33mline:1067:7[0m> [0;33mline:1062:12[0m struct[0;1;36m __is_direct_constructible_ref_cast[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| `-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5bf40d8[0m <[0;33mline:1061:3[0m, [0;33mline:1067:7[0m> [0;33mline:1062:12[0m struct[0;1;36m __is_direct_constructible_ref_cast[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| `-[0mTemplateArgument type [0;32m'const long long &'[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c06be8[0m <[0;33mline:1061:3[0m, [0;33mline:1067:7[0m> [0;33mline:1062:12[0m struct[0;1;36m __is_direct_constructible_ref_cast[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| `-[0mTemplateArgument type [0;32m'long long &'[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c0a758[0m <[0;33mline:1061:3[0m, [0;33mline:1067:7[0m> [0;33mline:1062:12[0m struct[0;1;36m __is_direct_constructible_ref_cast[0m
[0;34m  |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m  `-[0mTemplateArgument type [0;32m'const long long &&'[0m

Dumping std::__is_direct_constructible_new:
[0;1;32mClassTemplateDecl[0m[0;33m 0x4f93048[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1069:3[0m, [0;33mline:1075:7[0m> [0;33mline:1070:12[0m[0;1;36m __is_direct_constructible_new[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f92eb8[0m <[0;33mline:1069:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f92f28[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Arg[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f92fb8[0m <[0;33mline:1070:5[0m, [0;33mline:1075:7[0m> [0;33mline:1070:12[0m struct[0;1;36m __is_direct_constructible_new[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'conditional<is_reference<_Tp>::value, __is_direct_constructible_ref_cast<_Tp, _Arg>, __is_direct_constructible_new_safe<_Tp, _Arg> >::type'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f93a60[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a44a68[0m <[0;33mline:1069:3[0m, [0;33mline:1075:7[0m> [0;33mline:1070:12[0m struct[0;1;36m __is_direct_constructible_new[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'conditional<is_reference<_Rb_tree_node_base *>::value, __is_direct_constructible_ref_cast<_Rb_tree_node_base *, _Rb_tree_node_base *const &>, __is_direct_constructible_new_safe<_Rb_tree_node_base *, _Rb_tree_node_base *const &> >::type':'std::__is_direct_constructible_new_safe<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *const &>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5a51018[0m prev 0x5a44a68 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a5d2e8[0m <[0;33mline:1069:3[0m, [0;33mline:1075:7[0m> [0;33mline:1070:12[0m struct[0;1;36m __is_direct_constructible_new[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'conditional<is_reference<_Rb_tree_node_base *>::value, __is_direct_constructible_ref_cast<_Rb_tree_node_base *, int &&>, __is_direct_constructible_new_safe<_Rb_tree_node_base *, int &&> >::type':'std::__is_direct_constructible_new_safe<std::_Rb_tree_node_base *, int &&>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5a64f98[0m prev 0x5a5d2e8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5bf3d08[0m <[0;33mline:1069:3[0m, [0;33mline:1075:7[0m> [0;33mline:1070:12[0m struct[0;1;36m __is_direct_constructible_new[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'conditional<is_reference<long long>::value, __is_direct_constructible_ref_cast<long long, const long long &>, __is_direct_constructible_new_safe<long long, const long long &> >::type':'std::__is_direct_constructible_new_safe<long long, const long long &>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const long long &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5bfd2a8[0m prev 0x5bf3d08 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c06848[0m <[0;33mline:1069:3[0m, [0;33mline:1075:7[0m> [0;33mline:1070:12[0m struct[0;1;36m __is_direct_constructible_new[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'conditional<is_reference<long long>::value, __is_direct_constructible_ref_cast<long long, long long &>, __is_direct_constructible_new_safe<long long, long long &> >::type':'std::__is_direct_constructible_new_safe<long long, long long &>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c08ee8[0m prev 0x5c06848 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c0a3b8[0m <[0;33mline:1069:3[0m, [0;33mline:1075:7[0m> [0;33mline:1070:12[0m struct[0;1;36m __is_direct_constructible_new[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'conditional<is_reference<long long>::value, __is_direct_constructible_ref_cast<long long, const long long &&>, __is_direct_constructible_new_safe<long long, const long long &&> >::type':'std::__is_direct_constructible_new_safe<long long, const long long &&>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'const long long &&'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c122a8[0m prev 0x5c0a3b8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible_new[0m

Dumping std::__is_direct_constructible:
[0;1;32mClassTemplateDecl[0m[0;33m 0x4f93c98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/type_traits:1077:3[0m, [0;33mline:1080:7[0m> [0;33mline:1078:12[0m[0;1;36m __is_direct_constructible[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f93b08[0m <[0;33mline:1077:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _Tp[0m
[0;34m|-[0m[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x4f93b78[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;33mcol:35[0m referenced typename depth 0 index 1[0;1;36m _Arg[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f93c08[0m <[0;33mline:1078:5[0m, [0;33mline:1080:7[0m> [0;33mline:1078:12[0m struct[0;1;36m __is_direct_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_direct_constructible_new<_Tp, _Arg>::type'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x4f94100[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a447c0[0m <[0;33mline:1077:3[0m, [0;33mline:1080:7[0m> [0;33mline:1078:12[0m struct[0;1;36m __is_direct_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_direct_constructible_new<_Rb_tree_node_base *, _Rb_tree_node_base *const &>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *const &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5a51160[0m prev 0x5a447c0 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5a5d070[0m <[0;33mline:1077:3[0m, [0;33mline:1080:7[0m> [0;33mline:1078:12[0m struct[0;1;36m __is_direct_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_direct_constructible_new<_Rb_tree_node_base *, int &&>::type':'std::integral_constant<bool, false>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'std::_Rb_tree_node_base *'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'int &&'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5a650e0[0m prev 0x5a5d070 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5bf3a60[0m <[0;33mline:1077:3[0m, [0;33mline:1080:7[0m> [0;33mline:1078:12[0m struct[0;1;36m __is_direct_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_direct_constructible_new<long long, const long long &>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'const long long &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5bfd3f0[0m prev 0x5bf3a60 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible[0m
[0;34m|-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c065d8[0m <[0;33mline:1077:3[0m, [0;33mline:1080:7[0m> [0;33mline:1078:12[0m struct[0;1;36m __is_direct_constructible[0m definition
[0;34m| |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m| | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m| | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m| |-[0mpublic [0;32m'__is_direct_constructible_new<long long, long long &>::type':'std::integral_constant<bool, true>'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m| |-[0mTemplateArgument type [0;32m'long long &'[0m
[0;34m| `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c09030[0m prev 0x5c065d8 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible[0m
[0;34m`-[0m[0;1;32mClassTemplateSpecializationDecl[0m[0;33m 0x5c0a148[0m <[0;33mline:1077:3[0m, [0;33mline:1080:7[0m> [0;33mline:1078:12[0m struct[0;1;36m __is_direct_constructible[0m definition
[0;34m  |-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m  | |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr needs_implicit defaulted_is_constexpr
[0;34m  | |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveConstructor[0m exists simple trivial needs_implicit
[0;34m  | |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m  | |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m  | `-[0m[0;1;32mDestructor[0m simple irrelevant trivial needs_implicit
[0;34m  |-[0mpublic [0;32m'__is_direct_constructible_new<long long, const long long &&>::type':'std::integral_constant<bool, true>'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'long long'[0m
[0;34m  |-[0mTemplateArgument type [0;32m'const long long &&'[0m
[0;34m  `-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x5c123f0[0m prev 0x5c0a148 <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;33mcol:12[0m implicit struct[0;1;36m __is_direct_constructible[0m

Dumping std::bidirectional_iterator_tag:
[0;1;32mCXXRecordDecl[0m[0;33m 0x50d2e30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_types.h:99:3[0m, [0;33mcol:69[0m> [0;33mcol:10[0m referenced struct[0;1;36m bidirectional_iterator_tag[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m exists trivial constexpr defaulted_is_constexpr
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m exists simple trivial
[0;34m| |-[0m[0;1;32mCopyAssignment[0m trivial has_const_param needs_implicit implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m exists simple trivial needs_implicit
[0;34m| `-[0m[0;1;32mDestructor[0m simple irrelevant trivial
[0;34m|-[0mpublic [0;32m'std::forward_iterator_tag'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x50d2f88[0m <[0;33mcol:3[0m, [0;33mcol:10[0m> [0;33mcol:10[0m implicit struct[0;1;36m bidirectional_iterator_tag[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x58f6548[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit referenced constexpr[0;1;36m bidirectional_iterator_tag[0m [0;32m'void () noexcept'[0m inline default trivial
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x58f70a8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit constexpr[0;1;36m bidirectional_iterator_tag[0m [0;32m'void (const std::bidirectional_iterator_tag &)'[0m inline default trivial noexcept-unevaluated 0x58f70a8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f71b8[0m <[0;33mcol:10[0m> [0;33mcol:10[0m [0;32m'const std::bidirectional_iterator_tag &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x58f7258[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit used constexpr[0;1;36m bidirectional_iterator_tag[0m [0;32m'void (std::bidirectional_iterator_tag &&) noexcept'[0m inline default trivial
[0;34m| |-[0m[0;1;32mParmVarDecl[0m[0;33m 0x58f7368[0m <[0;33mcol:10[0m> [0;33mcol:10[0m used [0;32m'std::bidirectional_iterator_tag &&'[0m
[0;34m| |-[0mCXXCtorInitializer [0;32m'std::forward_iterator_tag'[0m
[0;34m| | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x5c74680[0m <[0;33mcol:10[0m> [0;32m'std::forward_iterator_tag'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::forward_iterator_tag &&) noexcept'[0m
[0;34m| |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5c74660[0m <[0;33mcol:10[0m> [0;32m'std::forward_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m <[0;31mUncheckedDerivedToBase[0m (forward_iterator_tag)>
[0;34m| |     `-[0m[0;1;35mCXXStaticCastExpr[0m[0;33m 0x5c74630[0m <[0;33mcol:10[0m> [0;32m'std::bidirectional_iterator_tag'[0m[0;36m xvalue[0m[0;36m[0m static_cast<struct std::bidirectional_iterator_tag &&> <NoOp>
[0;34m| |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5c74600[0m <[0;33mcol:10[0m> [0;32m'std::bidirectional_iterator_tag'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x58f7368[0m[0;1;36m ''[0m [0;32m'std::bidirectional_iterator_tag &&'[0m
[0;34m| `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5c746f0[0m <[0;33mcol:10[0m>
[0;34m`-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x58f7408[0m <[0;33mcol:10[0m> [0;33mcol:10[0m implicit referenced[0;1;36m ~bidirectional_iterator_tag[0m [0;32m'void () noexcept'[0m inline default trivial

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x50e1538[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:156:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x50e2de8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_iterator_base_funcs.h:218:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping __gnu_debug::<using-directive>:
[0;1;32mUsingDirectiveDecl[0m[0;33m 0x511c718[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/debug/debug.h:58:3[0m, [0;33mcol:24[0m> [0;33mcol:24[0m [0;1;32mNamespace[0m[0;33m 0x511c618[0m[0;1;36m '__debug'[0m

Dumping lconv::p_cs_precedes:
[0;1;32mFieldDecl[0m[0;33m 0x51b58a8[0m <[0;33m/usr/include/locale.h:78:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m p_cs_precedes[0m [0;32m'char'[0m

Dumping lconv::n_cs_precedes:
[0;1;32mFieldDecl[0m[0;33m 0x51b5968[0m <[0;33m/usr/include/locale.h:82:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m n_cs_precedes[0m [0;32m'char'[0m

Dumping lconv::int_p_cs_precedes:
[0;1;32mFieldDecl[0m[0;33m 0x51b5ae8[0m <[0;33m/usr/include/locale.h:95:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_p_cs_precedes[0m [0;32m'char'[0m

Dumping lconv::int_n_cs_precedes:
[0;1;32mFieldDecl[0m[0;33m 0x51b5ba8[0m <[0;33m/usr/include/locale.h:99:3[0m, [0;33mcol:8[0m> [0;33mcol:8[0m[0;1;36m int_n_cs_precedes[0m [0;32m'char'[0m

Dumping timex::precision:
[0;1;32mFieldDecl[0m[0;33m 0x52010b8[0m <[0;33m/usr/include/x86_64-linux-gnu/bits/timex.h:35:3[0m, [0;33mcol:21[0m> [0;33mcol:21[0m[0;1;36m precision[0m [0;32m'__syscall_slong_t':'long'[0m

Dumping __gthread_recursive_mutex_t:
[0;1;32mTypedefDecl[0m[0;33m 0x52555c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/gthr-default.h:51:1[0m, [0;33mcol:25[0m> [0;33mcol:25[0m referenced[0;1;36m __gthread_recursive_mutex_t[0m [0;32m'pthread_mutex_t':'pthread_mutex_t'[0m
[0;34m`-[0m[0;32mTypedefType[0m[0;33m 0x5247130[0m [0;32m'pthread_mutex_t'[0m sugar
[0;34m  |-[0m[0;1;32mTypedef[0m[0;33m 0x522b7e8[0m[0;1;36m 'pthread_mutex_t'[0m
[0;34m  `-[0m[0;32mElaboratedType[0m[0;33m 0x522b790[0m [0;32m'union pthread_mutex_t'[0m sugar
[0;34m    `-[0m[0;32mRecordType[0m[0;33m 0x522b4b0[0m [0;32m'pthread_mutex_t'[0m
[0;34m      `-[0m[0;1;32mCXXRecord[0m[0;33m 0x522b418[0m[0;1;36m ''[0m

Dumping __gthread_recursive_mutex_lock:
[0;1;32mFunctionDecl[0m[0;33m 0x514a240[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/gthr-default.h:807:1[0m, [0;33mline:811:1[0m> [0;33mline:808:1[0m[0;1;36m __gthread_recursive_mutex_lock[0m [0;32m'int (__gthread_recursive_mutex_t *)'[0m static inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514a178[0m <[0;33mcol:33[0m, [0;33mcol:62[0m> [0;33mcol:62[0m used[0;1;36m __mutex[0m [0;32m'__gthread_recursive_mutex_t *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x514a400[0m <[0;33mline:809:1[0m, [0;33mline:811:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x514a3f0[0m <[0;33mline:810:3[0m, [0;33mcol:39[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x514a3b0[0m <[0;33mcol:10[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514a398[0m <[0;33mcol:10[0m> [0;32m'int (*)(__gthread_mutex_t *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514a350[0m <[0;33mcol:10[0m> [0;32m'int (__gthread_mutex_t *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5149208[0m[0;1;36m '__gthread_mutex_lock'[0m [0;32m'int (__gthread_mutex_t *)'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514a3d8[0m <[0;33mcol:32[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514a330[0m <[0;33mcol:32[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x514a178[0m[0;1;36m '__mutex'[0m [0;32m'__gthread_recursive_mutex_t *'[0m

Dumping __gthread_recursive_mutex_trylock:
[0;1;32mFunctionDecl[0m[0;33m 0x514a4c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/gthr-default.h:813:1[0m, [0;33mline:817:1[0m> [0;33mline:814:1[0m[0;1;36m __gthread_recursive_mutex_trylock[0m [0;32m'int (__gthread_recursive_mutex_t *)'[0m static inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514a428[0m <[0;33mcol:36[0m, [0;33mcol:65[0m> [0;33mcol:65[0m used[0;1;36m __mutex[0m [0;32m'__gthread_recursive_mutex_t *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x514a658[0m <[0;33mline:815:1[0m, [0;33mline:817:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x514a648[0m <[0;33mline:816:3[0m, [0;33mcol:42[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x514a608[0m <[0;33mcol:10[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514a5f0[0m <[0;33mcol:10[0m> [0;32m'int (*)(__gthread_mutex_t *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514a5d0[0m <[0;33mcol:10[0m> [0;32m'int (__gthread_mutex_t *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5149598[0m[0;1;36m '__gthread_mutex_trylock'[0m [0;32m'int (__gthread_mutex_t *)'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514a630[0m <[0;33mcol:35[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514a5b0[0m <[0;33mcol:35[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x514a428[0m[0;1;36m '__mutex'[0m [0;32m'__gthread_recursive_mutex_t *'[0m

Dumping __gthread_recursive_mutex_timedlock:
[0;1;32mFunctionDecl[0m[0;33m 0x514a7d0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/gthr-default.h:820:1[0m, [0;33mline:825:1[0m> [0;33mline:821:1[0m[0;1;36m __gthread_recursive_mutex_timedlock[0m [0;32m'int (__gthread_recursive_mutex_t *, const __gthread_time_t *)'[0m static inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514a680[0m <[0;33mcol:38[0m, [0;33mcol:67[0m> [0;33mcol:67[0m used[0;1;36m __mutex[0m [0;32m'__gthread_recursive_mutex_t *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514a6f8[0m <[0;33mline:822:10[0m, [0;33mcol:34[0m> [0;33mcol:34[0m used[0;1;36m __abs_timeout[0m [0;32m'const __gthread_time_t *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x514a9e0[0m <[0;33mline:823:1[0m, [0;33mline:825:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x514a9d0[0m <[0;33mline:824:3[0m, [0;33mcol:59[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x514a970[0m <[0;33mcol:10[0m, [0;33mcol:59[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514a958[0m <[0;33mcol:10[0m> [0;32m'int (*)(__gthread_mutex_t *, const __gthread_time_t *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514a908[0m <[0;33mcol:10[0m> [0;32m'int (__gthread_mutex_t *, const __gthread_time_t *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5149a30[0m[0;1;36m '__gthread_mutex_timedlock'[0m [0;32m'int (__gthread_mutex_t *, const __gthread_time_t *)'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514a9a0[0m <[0;33mcol:37[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514a8c8[0m <[0;33mcol:37[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x514a680[0m[0;1;36m '__mutex'[0m [0;32m'__gthread_recursive_mutex_t *'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514a9b8[0m <[0;33mcol:46[0m> [0;32m'const __gthread_time_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514a8e8[0m <[0;33mcol:46[0m> [0;32m'const __gthread_time_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x514a6f8[0m[0;1;36m '__abs_timeout'[0m [0;32m'const __gthread_time_t *'[0m

Dumping __gthread_recursive_mutex_unlock:
[0;1;32mFunctionDecl[0m[0;33m 0x514ab40[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/gthr-default.h:828:1[0m, [0;33mline:832:1[0m> [0;33mline:829:1[0m[0;1;36m __gthread_recursive_mutex_unlock[0m [0;32m'int (__gthread_recursive_mutex_t *)'[0m static inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514aa08[0m <[0;33mcol:35[0m, [0;33mcol:64[0m> [0;33mcol:64[0m used[0;1;36m __mutex[0m [0;32m'__gthread_recursive_mutex_t *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x514acd8[0m <[0;33mline:830:1[0m, [0;33mline:832:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x514acc8[0m <[0;33mline:831:3[0m, [0;33mcol:41[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x514ac88[0m <[0;33mcol:10[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514ac70[0m <[0;33mcol:10[0m> [0;32m'int (*)(__gthread_mutex_t *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514ac50[0m <[0;33mcol:10[0m> [0;32m'int (__gthread_mutex_t *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5149e38[0m[0;1;36m '__gthread_mutex_unlock'[0m [0;32m'int (__gthread_mutex_t *)'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514acb0[0m <[0;33mcol:34[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514ac30[0m <[0;33mcol:34[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x514aa08[0m[0;1;36m '__mutex'[0m [0;32m'__gthread_recursive_mutex_t *'[0m

Dumping __gthread_recursive_mutex_destroy:
[0;1;32mFunctionDecl[0m[0;33m 0x514ad98[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/gthr-default.h:834:1[0m, [0;33mline:838:1[0m> [0;33mline:835:1[0m[0;1;36m __gthread_recursive_mutex_destroy[0m [0;32m'int (__gthread_recursive_mutex_t *)'[0m static inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514ad00[0m <[0;33mcol:36[0m, [0;33mcol:65[0m> [0;33mcol:65[0m used[0;1;36m __mutex[0m [0;32m'__gthread_recursive_mutex_t *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x514af30[0m <[0;33mline:836:1[0m, [0;33mline:838:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x514af20[0m <[0;33mline:837:3[0m, [0;33mcol:42[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x514aee0[0m <[0;33mcol:10[0m, [0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514aec8[0m <[0;33mcol:10[0m> [0;32m'int (*)(__gthread_mutex_t *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514aea8[0m <[0;33mcol:10[0m> [0;32m'int (__gthread_mutex_t *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5148e40[0m[0;1;36m '__gthread_mutex_destroy'[0m [0;32m'int (__gthread_mutex_t *)'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514af08[0m <[0;33mcol:35[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514ae88[0m <[0;33mcol:35[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x514ad00[0m[0;1;36m '__mutex'[0m [0;32m'__gthread_recursive_mutex_t *'[0m

Dumping __gthread_cond_wait_recursive:
[0;1;32mFunctionDecl[0m[0;33m 0x514bea0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/gthr-default.h:874:1[0m, [0;33mline:879:1[0m> [0;33mline:875:1[0m[0;1;36m __gthread_cond_wait_recursive[0m [0;32m'int (__gthread_cond_t *, __gthread_recursive_mutex_t *)'[0m static inline
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514bd48[0m <[0;33mcol:32[0m, [0;33mcol:50[0m> [0;33mcol:50[0m used[0;1;36m __cond[0m [0;32m'__gthread_cond_t *'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x514bdc0[0m <[0;33mline:876:11[0m, [0;33mcol:40[0m> [0;33mcol:40[0m used[0;1;36m __mutex[0m [0;32m'__gthread_recursive_mutex_t *'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x514c0b0[0m <[0;33mline:877:1[0m, [0;33mline:879:1[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x514c0a0[0m <[0;33mline:878:3[0m, [0;33mcol:46[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x514c040[0m <[0;33mcol:10[0m, [0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514c028[0m <[0;33mcol:10[0m> [0;32m'int (*)(__gthread_cond_t *, __gthread_mutex_t *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514bfd8[0m <[0;33mcol:10[0m> [0;32m'int (__gthread_cond_t *, __gthread_mutex_t *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x514b660[0m[0;1;36m '__gthread_cond_wait'[0m [0;32m'int (__gthread_cond_t *, __gthread_mutex_t *)'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514c070[0m <[0;33mcol:31[0m> [0;32m'__gthread_cond_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514bf98[0m <[0;33mcol:31[0m> [0;32m'__gthread_cond_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x514bd48[0m[0;1;36m '__cond'[0m [0;32m'__gthread_cond_t *'[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x514c088[0m <[0;33mcol:39[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x514bfb8[0m <[0;33mcol:39[0m> [0;32m'__gthread_recursive_mutex_t *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x514bdc0[0m[0;1;36m '__mutex'[0m [0;32m'__gthread_recursive_mutex_t *'[0m

Dumping std::errc::directory_not_empty:
[0;1;32mEnumConstantDecl[0m[0;33m 0x55c6780[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:63:7[0m, [0;33m/usr/include/asm-generic/errno.h:20:19[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:63:7[0m[0;1;36m directory_not_empty[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x55c6760[0m <[0;33m/usr/include/asm-generic/errno.h:20:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 39[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x55c6740[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 39[0m

Dumping std::errc::is_a_directory:
[0;1;32mEnumConstantDecl[0m[0;33m 0x55c6f60[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:81:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:25:17[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:81:7[0m[0;1;36m is_a_directory[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x55c6f40[0m <[0;33m/usr/include/asm-generic/errno-base.h:25:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 21[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x55c6f20[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 21[0m

Dumping std::errc::no_such_file_or_directory:
[0;1;32mEnumConstantDecl[0m[0;33m 0x55c7860[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:109:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:6:18[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:109:7[0m[0;1;36m no_such_file_or_directory[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x55c7840[0m <[0;33m/usr/include/asm-generic/errno-base.h:6:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x55c7820[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m

Dumping std::errc::not_a_directory:
[0;1;32mEnumConstantDecl[0m[0;33m 0x55c7980[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:111:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:24:18[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:111:7[0m[0;1;36m not_a_directory[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x55c7960[0m <[0;33m/usr/include/asm-generic/errno-base.h:24:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 20[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x55c7940[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 20[0m

Dumping std::errc::state_not_recoverable:
[0;1;32mEnumConstantDecl[0m[0;33m 0x55c8430[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:151:7[0m, [0;33m/usr/include/asm-generic/errno.h:117:25[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:151:7[0m[0;1;36m state_not_recoverable[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x55c8410[0m <[0;33m/usr/include/asm-generic/errno.h:117:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 131[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x55c83f0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 131[0m

Dumping std::ios_base::_M_precision:
[0;1;32mFieldDecl[0m[0;33m 0x5625f30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:520:5[0m, [0;33mcol:17[0m> [0;33mcol:17[0m referenced[0;1;36m _M_precision[0m [0;32m'std::streamsize':'long'[0m

Dumping std::ios_base::precision:
[0;1;32mCXXMethodDecl[0m[0;33m 0x5628688[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:688:5[0m, [0;33mline:690:28[0m> [0;33mline:689:5[0m referenced[0;1;36m precision[0m [0;32m'std::streamsize () const'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5614588[0m <[0;33mline:690:5[0m, [0;33mcol:28[0m>
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5614578[0m <[0;33mcol:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5614560[0m <[0;33mcol:14[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5614530[0m <[0;33mcol:14[0m> [0;32m'const std::streamsize':'const long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_precision[0;33m 0x5625f30[0m
[0;34m        `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5614520[0m <[0;33mcol:14[0m> [0;32m'const std::ios_base *'[0m[0;36m[0m[0;36m[0m implicit this

Dumping std::ios_base::precision:
[0;1;32mCXXMethodDecl[0m[0;33m 0x56287f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/ios_base.h:697:5[0m, [0;33mline:703:5[0m> [0;33mline:698:5[0m[0;1;36m precision[0m [0;32m'std::streamsize (std::streamsize)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5628738[0m <[0;33mcol:15[0m, [0;33mcol:26[0m> [0;33mcol:26[0m used[0;1;36m __prec[0m [0;32m'std::streamsize':'long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5614768[0m <[0;33mline:699:5[0m, [0;33mline:703:5[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5614670[0m <[0;33mline:700:7[0m, [0;33mcol:38[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56145b0[0m <[0;33mcol:7[0m, [0;33mcol:26[0m> [0;33mcol:18[0m used[0;1;36m __old[0m [0;32m'std::streamsize':'long'[0m cinit
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5614658[0m <[0;33mcol:26[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5614628[0m <[0;33mcol:26[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_precision[0;33m 0x5625f30[0m
[0;34m  |       `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5614618[0m <[0;33mcol:26[0m> [0;32m'std::ios_base *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5614700[0m <[0;33mline:701:7[0m, [0;33mcol:22[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5614698[0m <[0;33mcol:7[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m ->_M_precision[0;33m 0x5625f30[0m
[0;34m  | | `-[0m[0;1;35mCXXThisExpr[0m[0;33m 0x5614688[0m <[0;33mcol:7[0m> [0;32m'std::ios_base *'[0m[0;36m[0m[0;36m[0m implicit this
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56146e8[0m <[0;33mcol:22[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56146c8[0m <[0;33mcol:22[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5628738[0m[0;1;36m '__prec'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5614758[0m <[0;33mline:702:7[0m, [0;33mcol:14[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5614740[0m <[0;33mcol:14[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5614720[0m <[0;33mcol:14[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56145b0[0m[0;1;36m '__old'[0m [0;32m'std::streamsize':'long'[0m

Dumping __prec:
[0;1;32mVarDecl[0m[0;33m 0x56ef150[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.tcc:984:2[0m, [0;33mcol:70[0m> [0;33mcol:19[0m referenced[0;1;36m __prec[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mConditionalOperator[0m[0;33m 0x56ef418[0m <[0;33mcol:28[0m, [0;33mcol:70[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56ef2d8[0m <[0;33mcol:28[0m, [0;33mcol:47[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x56ef268[0m <[0;33mcol:28[0m, [0;33mcol:43[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m
[0;34m  | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ef238[0m <[0;33mcol:28[0m, [0;33mcol:33[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .precision[0;33m 0x5628688[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56ef288[0m <[0;33mcol:28[0m> [0;32m'const std::ios_base'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ef1b8[0m <[0;33mcol:28[0m> [0;32m'std::ios_base'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ee840[0m[0;1;36m '__io'[0m [0;32m'std::ios_base &'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56ef2c0[0m <[0;33mcol:47[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56ef2a0[0m <[0;33mcol:47[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56ef400[0m <[0;33mcol:51[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56ef2f8[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 6[0m
[0;34m  `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x56ef3c8[0m <[0;33mcol:55[0m, [0;33mcol:70[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m
[0;34m    `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56ef398[0m <[0;33mcol:55[0m, [0;33mcol:60[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .precision[0;33m 0x5628688[0m
[0;34m      `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56ef3e8[0m <[0;33mcol:55[0m> [0;32m'const std::ios_base'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m        `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56ef318[0m <[0;33mcol:55[0m> [0;32m'std::ios_base'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ee840[0m[0;1;36m '__io'[0m [0;32m'std::ios_base &'[0m

Dumping __use_prec:
[0;1;32mVarDecl[0m[0;33m 0x56ef9b0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/locale_facets.tcc:997:2[0m, [0;33mline:998:55[0m> [0;33mline:997:13[0m referenced[0;1;36m __use_prec[0m [0;32m'const bool'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56eff60[0m <[0;33mline:998:4[0m, [0;33mcol:55[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56eff30[0m <[0;33mcol:4[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | `-[0m[0;1;35mParenExpr[0m[0;33m 0x56efc20[0m <[0;33mcol:4[0m, [0;33mcol:40[0m> [0;32m'std::_Ios_Fmtflags'[0m[0;36m[0m[0;36m[0m
[0;34m  |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x56efbe8[0m <[0;33mcol:5[0m, [0;33mcol:30[0m> [0;32m'std::_Ios_Fmtflags'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56efbd0[0m <[0;33mcol:18[0m> [0;32m'std::_Ios_Fmtflags (*)(std::_Ios_Fmtflags, std::_Ios_Fmtflags)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56efbb0[0m <[0;33mcol:18[0m> [0;32m'std::_Ios_Fmtflags (std::_Ios_Fmtflags, std::_Ios_Fmtflags)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x55ff538[0m[0;1;36m 'operator&'[0m [0;32m'std::_Ios_Fmtflags (std::_Ios_Fmtflags, std::_Ios_Fmtflags)'[0m
[0;34m  |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x56efac8[0m <[0;33mcol:5[0m, [0;33mcol:16[0m> [0;32m'std::ios_base::fmtflags':'std::_Ios_Fmtflags'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x56efa98[0m <[0;33mcol:5[0m, [0;33mcol:10[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .flags[0;33m 0x5627f28[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56efae8[0m <[0;33mcol:5[0m> [0;32m'const std::ios_base'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56efa18[0m <[0;33mcol:5[0m> [0;32m'std::ios_base'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x56ee840[0m[0;1;36m '__io'[0m [0;32m'std::ios_base &'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56efb98[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;32m'std::ios_base::fmtflags':'std::_Ios_Fmtflags'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56efb68[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;32m'const std::ios_base::fmtflags':'const std::_Ios_Fmtflags'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56245a0[0m[0;1;36m 'floatfield'[0m [0;32m'const std::ios_base::fmtflags':'const std::_Ios_Fmtflags'[0m non_odr_use_constant
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56eff48[0m <[0;33mcol:45[0m, [0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56eff18[0m <[0;33mcol:45[0m, [0;33mcol:55[0m> [0;32m'std::ios_base::fmtflags':'std::_Ios_Fmtflags'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56efee8[0m <[0;33mcol:45[0m, [0;33mcol:55[0m> [0;32m'const std::ios_base::fmtflags':'const std::_Ios_Fmtflags'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56245a0[0m[0;1;36m 'floatfield'[0m [0;32m'const std::ios_base::fmtflags':'const std::_Ios_Fmtflags'[0m non_odr_use_constant

Dumping _BidirectionalIterator1:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58e1108[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:362:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator1[0m

Dumping _BidirectionalIterator2:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58e1178[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:362:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 1[0;1;36m _BidirectionalIterator2[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58f0560[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:1130:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58f15a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:1178:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58f3ac0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:1205:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58f5cf0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:1288:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x58fe7e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:1511:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator1:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5915410[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2327:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator1[0m

Dumping _BidirectionalIterator2:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5915488[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2327:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 1[0;1;36m _BidirectionalIterator2[0m

Dumping _BidirectionalIterator3:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x59154f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2328:5[0m, [0;33mcol:14[0m> [0;33mcol:14[0m referenced typename depth 0 index 2[0;1;36m _BidirectionalIterator3[0m

Dumping _BidirectionalIterator1:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x59167c0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2370:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator1[0m

Dumping _BidirectionalIterator2:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5916838[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2370:46[0m, [0;33mcol:55[0m> [0;33mcol:55[0m referenced typename depth 0 index 1[0;1;36m _BidirectionalIterator2[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5917df8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2412:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x591a5c8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2473:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x591c8d8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2524:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x591df88[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2572:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x591e4f0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2613:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5926980[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2903:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5927bb8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2952:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5928060[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:2984:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5928650[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:3002:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5929888[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:3052:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping _BidirectionalIterator:
[0;1;32mTemplateTypeParmDecl[0m[0;33m 0x5929d30[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:3084:12[0m, [0;33mcol:21[0m> [0;33mcol:21[0m referenced typename depth 0 index 0[0;1;36m _BidirectionalIterator[0m

Dumping <using-directive>:
[0;1;32mUsingDirectiveDecl[0m[0;33m 0x5bb09e8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/ankit.shukla/1781488_1485490_ankit.shukla.cpp:5:1[0m, [0;33mcol:17[0m> [0;33mcol:17[0m [0;1;32mNamespace[0m[0;33m 0x4e35070[0m[0;1;36m 'std'[0m

Dumping rec:
[0;1;32mFunctionDecl[0m[0;33m 0x5bef5a0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/ankit.shukla/1781488_1485490_ankit.shukla.cpp:15:1[0m, [0;33mline:26:1[0m> [0;33mline:15:15[0m referenced[0;1;36m rec[0m [0;32m'long long (int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bef440[0m <[0;33mcol:19[0m, [0;33mcol:23[0m> [0;33mcol:23[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bef4c0[0m <[0;33mcol:25[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m j[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bf12c8[0m <[0;33mline:16:1[0m, [0;33mline:26:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bef7d8[0m <[0;33mline:17:5[0m, [0;33mcol:30[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bef770[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bef6c0[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef690[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bef650[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef440[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef6a8[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bef670[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef3a0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bef750[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef720[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bef6e0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef4c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef738[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bef700[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef3a0[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bef7c8[0m <[0;33mcol:23[0m, [0;33mcol:30[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef7b0[0m <[0;33mcol:30[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bef790[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5befa20[0m <[0;33mline:18:5[0m, [0;33mcol:34[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bef808[0m <[0;33mcol:5[0m, [0;33mcol:33[0m> [0;33mcol:20[0m used[0;1;36m ret[0m [0;32m'long long &'[0m cinit
[0;34m  |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5bef9a8[0m <[0;33mcol:26[0m, [0;33mcol:33[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef978[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5bef908[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'long long [1001]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef8d8[0m <[0;33mcol:26[0m> [0;32m'long long (*)[1001]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bef870[0m <[0;33mcol:26[0m> [0;32m'long long [1001][1001]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef320[0m[0;1;36m 'dp'[0m [0;32m'long long [1001][1001]'[0m
[0;34m  |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef8f0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bef890[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef440[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bef990[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bef928[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef4c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5befb28[0m <[0;33mline:19:5[0m, [0;33mcol:25[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5befac0[0m <[0;33mcol:10[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '!='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befa90[0m <[0;33mcol:10[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befa38[0m <[0;33mcol:10[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef808[0m[0;1;36m 'ret'[0m [0;32m'long long &'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befaa8[0m <[0;33mcol:15[0m, [0;33mcol:16[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5befa78[0m <[0;33mcol:15[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m prefix '-'
[0;34m  | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5befa58[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5befb18[0m <[0;33mcol:18[0m, [0;33mcol:25[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befb00[0m <[0;33mcol:25[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befae0[0m <[0;33mcol:25[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef808[0m[0;1;36m 'ret'[0m [0;32m'long long &'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5befb98[0m <[0;33mline:20:5[0m, [0;33mcol:11[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befb40[0m <[0;33mcol:5[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef808[0m[0;1;36m 'ret'[0m [0;32m'long long &'[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befb80[0m <[0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5befb60[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5bf05f8[0m <[0;33mline:21:5[0m, [0;33mcol:36[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf05d8[0m <[0;33mcol:5[0m, [0;33mcol:36[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befbb8[0m <[0;33mcol:5[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef808[0m[0;1;36m 'ret'[0m [0;32m'long long &'[0m
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf05c0[0m <[0;33mcol:11[0m, [0;33mcol:36[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x5bf0560[0m <[0;33mcol:11[0m, [0;33mcol:36[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0548[0m <[0;33mcol:11[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0330[0m <[0;33mcol:11[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bf01f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5837588[0m[0;1;36m 'max'[0m)
[0;34m  |       |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5bf0590[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       | `-[0m[0;1;35mCallExpr[0m[0;33m 0x5befd80[0m <[0;33mcol:15[0m, [0;33mcol:24[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befd68[0m <[0;33mcol:15[0m> [0;32m'long long (*)(int, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befd18[0m <[0;33mcol:15[0m> [0;32m'long long (int, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bef5a0[0m[0;1;36m 'rec'[0m [0;32m'long long (int, int)'[0m
[0;34m  |       |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5befcd8[0m <[0;33mcol:19[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befcc0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befc80[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef440[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |       |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5befca0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befdb0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befcf8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef4c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5bf05a8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         `-[0m[0;1;35mCallExpr[0m[0;33m 0x5befef8[0m <[0;33mcol:26[0m, [0;33mcol:35[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befee0[0m <[0;33mcol:26[0m> [0;32m'long long (*)(int, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befec0[0m <[0;33mcol:26[0m> [0;32m'long long (int, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bef5a0[0m[0;1;36m 'rec'[0m [0;32m'long long (int, int)'[0m
[0;34m  |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5beff28[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befe10[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef440[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5befea0[0m <[0;33mcol:32[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5befe70[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5befe30[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef4c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |             `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5befe50[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bf1268[0m <[0;33mline:22:5[0m, [0;33mline:23:58[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf0760[0m <[0;33mline:22:10[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0730[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5bf0680[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0650[0m <[0;33mcol:10[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0610[0m <[0;33mcol:10[0m> [0;32m'long long [1000]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef0a0[0m[0;1;36m 'ta'[0m [0;32m'long long [1000]'[0m
[0;34m  | | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0668[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0630[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef440[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0748[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5bf0710[0m <[0;33mcol:17[0m, [0;33mcol:21[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf06e0[0m <[0;33mcol:17[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf06a0[0m <[0;33mcol:17[0m> [0;32m'long long [1000]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef170[0m[0;1;36m 'tb'[0m [0;32m'long long [1000]'[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf06f8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf06c0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef4c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5bf1250[0m <[0;33mline:23:9[0m, [0;33mcol:58[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf1230[0m <[0;33mcol:9[0m, [0;33mcol:58[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0780[0m <[0;33mcol:9[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef808[0m[0;1;36m 'ret'[0m [0;32m'long long &'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf1218[0m <[0;33mcol:15[0m, [0;33mcol:58[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x5bf11b8[0m <[0;33mcol:15[0m, [0;33mcol:58[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf11a0[0m <[0;33mcol:15[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf1178[0m <[0;33mcol:15[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bf01f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5837588[0m[0;1;36m 'max'[0m)
[0;34m  |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf11e8[0m <[0;33mcol:19[0m> [0;32m'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0800[0m <[0;33mcol:19[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef808[0m[0;1;36m 'ret'[0m [0;32m'long long &'[0m
[0;34m  |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5bf1200[0m <[0;33mcol:23[0m, [0;33mcol:57[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |           `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf10e8[0m <[0;33mcol:23[0m, [0;33mcol:57[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |             |-[0m[0;1;35mCallExpr[0m[0;33m 0x5bf0990[0m <[0;33mcol:23[0m, [0;33mcol:34[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0978[0m <[0;33mcol:23[0m> [0;32m'long long (*)(int, int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0958[0m <[0;33mcol:23[0m> [0;32m'long long (int, int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bef5a0[0m[0;1;36m 'rec'[0m [0;32m'long long (int, int)'[0m
[0;34m  |             | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf08c0[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |             | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf08a8[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |             | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0868[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef440[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |             | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bf0888[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |             | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf0938[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |             |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0920[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |             |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf08e0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef4c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |             |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bf0900[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf10d0[0m <[0;33mcol:36[0m, [0;33mcol:57[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |               `-[0m[0;1;35mCallExpr[0m[0;33m 0x5bf1070[0m <[0;33mcol:36[0m, [0;33mcol:57[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |                 |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf1058[0m <[0;33mcol:36[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |                 | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0e70[0m <[0;33mcol:36[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5bf0d38[0m[0;1;36m 'min'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x5837cc8[0m[0;1;36m 'min'[0m)
[0;34m  |                 |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf10a0[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;32m'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |                 | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5bf0a90[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |                 |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0a60[0m <[0;33mcol:40[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |                 |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0a20[0m <[0;33mcol:40[0m> [0;32m'long long [1000]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5beefd0[0m[0;1;36m 'items'[0m [0;32m'long long [1000]'[0m
[0;34m  |                 |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0a78[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |                 |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0a40[0m <[0;33mcol:46[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef440[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |                 `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf10b8[0m <[0;33mcol:49[0m, [0;33mcol:56[0m> [0;32m'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |                   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5bf0b20[0m <[0;33mcol:49[0m, [0;33mcol:56[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |                     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0af0[0m <[0;33mcol:49[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |                     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0ab0[0m <[0;33mcol:49[0m> [0;32m'long long [1000]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5beefd0[0m[0;1;36m 'items'[0m [0;32m'long long [1000]'[0m
[0;34m  |                     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf0b08[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |                       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf0ad0[0m <[0;33mcol:55[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bef4c0[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bf12b8[0m <[0;33mline:24:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf12a0[0m <[0;33mcol:12[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf1280[0m <[0;33mcol:12[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef808[0m[0;1;36m 'ret'[0m [0;32m'long long &'[0m

Dumping anrec:
[0;1;32mFunctionDecl[0m[0;33m 0x5bf1448[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/ankit.shukla/1781488_1485490_ankit.shukla.cpp:27:1[0m, [0;33mline:32:1[0m> [0;33mline:27:15[0m[0;1;36m anrec[0m [0;32m'long long (int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bf1328[0m <[0;33mcol:21[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5bf13a8[0m <[0;33mcol:27[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m j[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5bf1888[0m <[0;33mline:28:1[0m, [0;33mline:32:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5bf1680[0m <[0;33mline:29:5[0m, [0;33mcol:30[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf1618[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf1568[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf1538[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf14f8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bf1328[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf1550[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf1518[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bb0ce8[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5bf15f8[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf15c8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf1588[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bf13a8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf15e0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf15a8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bb0d68[0m[0;1;36m 'M'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5bf1670[0m <[0;33mcol:23[0m, [0;33mcol:30[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf1658[0m <[0;33mcol:30[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5bf1638[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  `-[0m[0;1;35mDeclStmt[0m[0;33m 0x5bf1870[0m <[0;33mline:30:5[0m, [0;33mcol:34[0m>
[0;34m    `-[0m[0;1;32mVarDecl[0m[0;33m 0x5bf16b0[0m <[0;33mcol:5[0m, [0;33mcol:33[0m> [0;33mcol:20[0m[0;1;36m ret[0m [0;32m'long long &'[0m cinit
[0;34m      `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5bf17f8[0m <[0;33mcol:26[0m, [0;33mcol:33[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf17c8[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5bf1788[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'long long [1001]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf1758[0m <[0;33mcol:26[0m> [0;32m'long long (*)[1001]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf1718[0m <[0;33mcol:26[0m> [0;32m'long long [1001][1001]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5bef320[0m[0;1;36m 'dp'[0m [0;32m'long long [1001][1001]'[0m
[0;34m        |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf1770[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf1738[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bf1328[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5bf17e0[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5bf17a8[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5bf13a8[0m[0;1;36m 'j'[0m [0;32m'int'[0m

Dumping anrec:
[0;1;32mFunctionDecl[0m[0;33m 0x60ee278[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/ankit.shukla/1781488_1485490_ankit.shukla.cpp:27:1[0m, [0;33mline:32:1[0m> [0;33mline:27:15[0m[0;1;36m anrec[0m [0;32m'long long (int, int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ee158[0m <[0;33mcol:21[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x60ee1d8[0m <[0;33mcol:27[0m, [0;33mcol:31[0m> [0;33mcol:31[0m used[0;1;36m j[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x60ee6b8[0m <[0;33mline:28:1[0m, [0;33mline:32:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x60ee4b0[0m <[0;33mline:29:5[0m, [0;33mcol:30[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60ee448[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '||'
[0;34m  | | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60ee398[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee368[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ee328[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ee158[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee380[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ee348[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60ada28[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x60ee428[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee3f8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ee3b8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ee1d8[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee410[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ee3d8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60adaa8[0m[0;1;36m 'M'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x60ee4a0[0m <[0;33mcol:23[0m, [0;33mcol:30[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee488[0m <[0;33mcol:30[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x60ee468[0m <[0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  `-[0m[0;1;35mDeclStmt[0m[0;33m 0x60ee6a0[0m <[0;33mline:30:5[0m, [0;33mcol:34[0m>
[0;34m    `-[0m[0;1;32mVarDecl[0m[0;33m 0x60ee4e0[0m <[0;33mcol:5[0m, [0;33mcol:33[0m> [0;33mcol:20[0m[0;1;36m ret[0m [0;32m'long long &'[0m cinit
[0;34m      `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x60ee628[0m <[0;33mcol:26[0m, [0;33mcol:33[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee5f8[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x60ee5b8[0m <[0;33mcol:26[0m, [0;33mcol:30[0m> [0;32m'long long [1001]'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m        |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee588[0m <[0;33mcol:26[0m> [0;32m'long long (*)[1001]'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ee548[0m <[0;33mcol:26[0m> [0;32m'long long [1001][1001]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x60ec150[0m[0;1;36m 'dp'[0m [0;32m'long long [1001][1001]'[0m
[0;34m        |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee5a0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ee568[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ee158[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x60ee610[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x60ee5d8[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x60ee1d8[0m[0;1;36m 'j'[0m [0;32m'int'[0m

Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x4b4ed08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x4b4ec78[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x4d1ef20[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::errc::argument_out_of_domain:
[0;1;32mEnumConstantDecl[0m[0;33m 0x50cc440[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m[0;1;36m argument_out_of_domain[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x50cc420[0m <[0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x50cc400[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x50d0e78[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x50d0fd8[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x50d1068[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x50d1178[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x50d10a0[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x50d12d0[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x50d1240[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x50d13d0[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x50d0cc8 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x50d14a8[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x50d14a8
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x50d15b8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x50d1658[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x50d1658
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x50d1768[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x5144d28[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:54:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5144e00[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5144dd0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5144d90[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x51447e0[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5144de8[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5144db0[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5144978[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x5146888[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:88:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5146960[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5146930[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x51468f0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5146340[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5146948[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5146910[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x51464d8[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remainder:
[0;1;32mVarDecl[0m[0;33m 0x53e54e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:297:7[0m, [0;33mcol:35[0m> [0;33mcol:21[0m referenced[0;1;36m __remainder[0m [0;32m'_DistanceType':'typename std::iterator_traits<_RandomAccessIter>::difference_type'[0m cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x53e5550[0m <[0;33mcol:35[0m> [0;32m'_Integer'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x53e4de0[0m[0;1;36m '__count'[0m [0;32m'_Integer'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x56f69d0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/ankit.shukla/1781488_1485490_ankit.shukla.cpp:33:1[0m, [0;33mline:122:1[0m> [0;33mline:33:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573eff0[0m <[0;33mcol:11[0m, [0;33mline:122:1[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f6bc0[0m <[0;33mline:34:5[0m, [0;33mcol:44[0m> [0;32m'FILE *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6ba8[0m <[0;33mcol:5[0m> [0;32m'FILE *(*)(const char *__restrict, const char *__restrict, FILE *__restrict)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f6b28[0m <[0;33mcol:5[0m> [0;32m'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4f2d8a8[0m[0;1;36m 'freopen'[0m [0;32m'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6bf8[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56f6ab8[0m <[0;33mcol:13[0m> [0;32m'const char [20]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "C-small-attempt0.in"[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6c10[0m <[0;33mcol:35[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56f6ae8[0m <[0;33mcol:35[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "r"[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6c28[0m <[0;33m/usr/include/stdio.h:139:15[0m> [0;32m'struct _IO_FILE *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f6b08[0m <[0;33mcol:15[0m> [0;32m'struct _IO_FILE *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4f2bd20[0m[0;1;36m 'stdin'[0m [0;32m'struct _IO_FILE *'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f6d30[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/ankit.shukla/1781488_1485490_ankit.shukla.cpp:35:5[0m, [0;33mcol:46[0m> [0;32m'FILE *'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6d18[0m <[0;33mcol:5[0m> [0;32m'FILE *(*)(const char *__restrict, const char *__restrict, FILE *__restrict)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f6cf8[0m <[0;33mcol:5[0m> [0;32m'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4f2d8a8[0m[0;1;36m 'freopen'[0m [0;32m'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6d68[0m <[0;33mcol:13[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56f6c88[0m <[0;33mcol:13[0m> [0;32m'const char [21]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "C-small-attempt0.out"[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6d80[0m <[0;33mcol:36[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56f6cb8[0m <[0;33mcol:36[0m> [0;32m'const char [2]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "w"[0m
[0;34m  | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6d98[0m <[0;33m/usr/include/stdio.h:140:16[0m> [0;32m'struct _IO_FILE *'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f6cd8[0m <[0;33mcol:16[0m> [0;32m'struct _IO_FILE *'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4f2bdb0[0m[0;1;36m 'stdout'[0m [0;32m'struct _IO_FILE *'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f6e30[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/ankit.shukla/1781488_1485490_ankit.shukla.cpp:36:5[0m, [0;33mcol:10[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f6dc8[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m T[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f6f80[0m <[0;33mline:37:5[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6f68[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f6ee8[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4f34e70[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f6fb0[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56f6e90[0m <[0;33mcol:11[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f6ed0[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f6eb0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f6dc8[0m[0;1;36m 'T'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x573ef88[0m <[0;33mline:38:5[0m, [0;33mline:120:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f7068[0m <[0;33mline:38:9[0m, [0;33mcol:16[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f6fe0[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m I[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56f7048[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f70f0[0m <[0;33mcol:17[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f70c0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7080[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f6fe0[0m[0;1;36m 'I'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f70d8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f70a0[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f6dc8[0m[0;1;36m 'T'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f7130[0m <[0;33mcol:22[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7110[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f6fe0[0m[0;1;36m 'I'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573ef28[0m <[0;33mcol:26[0m, [0;33mline:120:5[0m>
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f7258[0m <[0;33mline:39:9[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f7240[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7220[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4f34e70[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f7290[0m <[0;33mcol:15[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56f7190[0m <[0;33mcol:15[0m> [0;32m'const char [5]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d%d"[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f71d0[0m <[0;33mcol:22[0m, [0;33mcol:23[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f71b0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b60f8[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f7208[0m <[0;33mcol:25[0m, [0;33mcol:26[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f71e8[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b6178[0m[0;1;36m 'M'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f7348[0m <[0;33mline:40:9[0m, [0;33mcol:16[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f72c0[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m x[0m [0;32m'int'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56f7328[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x5732618[0m <[0;33mline:41:9[0m, [0;33mline:52:9[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f7400[0m <[0;33mline:41:13[0m, [0;33mcol:20[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f7378[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:17[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56f73e0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f7488[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f7458[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7418[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f7378[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f7470[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7438[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b60f8[0m[0;1;36m 'N'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f74c8[0m <[0;33mcol:25[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f74a8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f7378[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57325f0[0m <[0;33mcol:29[0m, [0;33mline:52:9[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x56f75f8[0m <[0;33mline:42:13[0m, [0;33mcol:30[0m>
[0;34m  |   |   | |-[0m[0;1;32mVarDecl[0m[0;33m 0x56f74f8[0m <[0;33mcol:13[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'long long'[0m
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56f7578[0m <[0;33mcol:13[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m b[0m [0;32m'long long'[0m
[0;34m  |   |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x56f77a0[0m <[0;33mline:43:13[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f7788[0m <[0;33mcol:13[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7768[0m <[0;33mcol:13[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4f34e70[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f77d8[0m <[0;33mcol:19[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x56f76d8[0m <[0;33mcol:19[0m> [0;32m'const char [9]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%lld%lld"[0m
[0;34m  |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f7718[0m <[0;33mcol:30[0m, [0;33mcol:31[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f76f8[0m <[0;33mcol:31[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f74f8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f7750[0m <[0;33mcol:33[0m, [0;33mcol:34[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7730[0m <[0;33mcol:34[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f7578[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x57325c8[0m <[0;33mline:44:13[0m, [0;33mline:51:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56f7848[0m <[0;33mline:44:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f7830[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f77f0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f72c0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56f7810[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |     |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x572f1b8[0m <[0;33mcol:23[0m, [0;33mcol:38[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x572f180[0m <[0;33mcol:23[0m, [0;33mcol:38[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f168[0m <[0;33mcol:30[0m> [0;32m'std::pair<long long, long long> &(*)(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f0e8[0m <[0;33mcol:30[0m> [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x56e8488[0m[0;1;36m 'operator='[0m [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m
[0;34m  |   |     |   |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x56f7930[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56f7918[0m <[0;33mcol:23[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7868[0m <[0;33mcol:23[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |     |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56f78a8[0m <[0;33mcol:25[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |     |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7888[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f72c0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x572c390[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |     |     `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x5729ce0[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m [0;32m'void (long long &, long long &)'[0m
[0;34m  |   |     |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7960[0m <[0;33mcol:35[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f74f8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56f7980[0m <[0;33mcol:37[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f7578[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x57325b0[0m <[0;33mline:45:17[0m, [0;33mline:51:13[0m>
[0;34m  |   |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x5732588[0m <[0;33mline:46:17[0m, [0;33mline:50:36[0m> has_else
[0;34m  |   |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x572f320[0m <[0;33mline:46:22[0m, [0;33mcol:34[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f2f0[0m <[0;33mcol:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x572f2a0[0m <[0;33mline:46:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |         | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x572f280[0m <[0;33mline:46:22[0m, [0;33mcol:27[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f268[0m <[0;33mcol:22[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |         | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f1d0[0m <[0;33mcol:22[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |         | |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x572f248[0m <[0;33mcol:24[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |         | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f230[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f1f0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f72c0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   |         | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x572f210[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f308[0m <[0;33mcol:34[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f2d0[0m <[0;33mcol:34[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f7578[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |         |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x572f4a8[0m <[0;33mcol:37[0m, [0;33mline:48:17[0m>
[0;34m  |   |         | `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x572f478[0m <[0;33mline:47:21[0m, [0;33mcol:31[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   |         |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x572f410[0m <[0;33mcol:21[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |         |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x572f3f0[0m <[0;33mline:47:21[0m, [0;33mcol:26[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f3d8[0m <[0;33mcol:21[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |         |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f340[0m <[0;33mcol:21[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |         |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x572f3b8[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |         |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f3a0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f360[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f72c0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   |         |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x572f380[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f460[0m <[0;33mcol:31[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f440[0m <[0;33mcol:31[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f74f8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |         `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5732570[0m <[0;33mline:50:21[0m, [0;33mcol:36[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5732538[0m <[0;33mcol:21[0m, [0;33mcol:36[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5732520[0m <[0;33mcol:28[0m> [0;32m'std::pair<long long, long long> &(*)(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732500[0m <[0;33mcol:28[0m> [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x56e8488[0m[0;1;36m 'operator='[0m [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m
[0;34m  |   |             |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x572f530[0m <[0;33mcol:21[0m, [0;33mcol:26[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x572f518[0m <[0;33mcol:21[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f4c0[0m <[0;33mcol:21[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |             | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x572f500[0m <[0;33mcol:23[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |             |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f4e0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f72c0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   |             `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x57324e8[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |               `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x57323c8[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m [0;32m'void (long long &, long long &)'[0m
[0;34m  |   |                 |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f560[0m <[0;33mcol:33[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f74f8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x572f580[0m <[0;33mcol:35[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f7578[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57326f0[0m <[0;33mline:53:9[0m, [0;33mcol:16[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5732668[0m <[0;33mcol:9[0m, [0;33mcol:15[0m> [0;33mcol:13[0m used[0;1;36m y[0m [0;32m'int'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57326d0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x573a768[0m <[0;33mline:54:9[0m, [0;33mline:65:9[0m>
[0;34m  |   | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57327a8[0m <[0;33mline:54:13[0m, [0;33mcol:20[0m>
[0;34m  |   | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5732720[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;33mcol:17[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5732788[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5732830[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5732800[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57327c0[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732720[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5732818[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57327e0[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b6178[0m[0;1;36m 'M'[0m [0;32m'int'[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5732870[0m <[0;33mcol:25[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732850[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732720[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573a740[0m <[0;33mcol:29[0m, [0;33mline:65:9[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x57329a0[0m <[0;33mline:55:13[0m, [0;33mcol:30[0m>
[0;34m  |   |   | |-[0m[0;1;32mVarDecl[0m[0;33m 0x57328a0[0m <[0;33mcol:13[0m, [0;33mcol:27[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'long long'[0m
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5732920[0m <[0;33mcol:13[0m, [0;33mcol:29[0m> [0;33mcol:29[0m used[0;1;36m b[0m [0;32m'long long'[0m
[0;34m  |   |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x5732ac8[0m <[0;33mline:56:13[0m, [0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5732ab0[0m <[0;33mcol:13[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732a90[0m <[0;33mcol:13[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4f34e70[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5732b00[0m <[0;33mcol:19[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5732a00[0m <[0;33mcol:19[0m> [0;32m'const char [9]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%lld%lld"[0m
[0;34m  |   |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5732a40[0m <[0;33mcol:30[0m, [0;33mcol:31[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732a20[0m <[0;33mcol:31[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57328a0[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5732a78[0m <[0;33mcol:33[0m, [0;33mcol:34[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732a58[0m <[0;33mcol:34[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732920[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x573a718[0m <[0;33mline:57:13[0m, [0;33mline:64:13[0m> has_else
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5732b70[0m <[0;33mline:57:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5732b58[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732b18[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5732b38[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |     |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5737310[0m <[0;33mcol:23[0m, [0;33mcol:38[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x57372d8[0m <[0;33mcol:23[0m, [0;33mcol:38[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57372c0[0m <[0;33mcol:30[0m> [0;32m'std::pair<long long, long long> &(*)(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57372a0[0m <[0;33mcol:30[0m> [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x56e8488[0m[0;1;36m 'operator='[0m [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m
[0;34m  |   |     |   |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5732c00[0m <[0;33mcol:23[0m, [0;33mcol:28[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5732be8[0m <[0;33mcol:23[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |     |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732b90[0m <[0;33mcol:23[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |     |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5732bd0[0m <[0;33mcol:25[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |     |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732bb0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |     |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5737288[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |     |     `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x5737168[0m <[0;33mcol:32[0m, [0;33mcol:38[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m [0;32m'void (long long &, long long &)'[0m
[0;34m  |   |     |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732c30[0m <[0;33mcol:35[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57328a0[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |     |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5732c50[0m <[0;33mcol:37[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732920[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573a700[0m <[0;33mline:58:17[0m, [0;33mline:64:13[0m>
[0;34m  |   |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x573a6d8[0m <[0;33mline:59:17[0m, [0;33mline:63:36[0m> has_else
[0;34m  |   |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5737478[0m <[0;33mline:59:22[0m, [0;33mcol:34[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5737448[0m <[0;33mcol:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x57373f8[0m <[0;33mline:59:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |         | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x57373d8[0m <[0;33mline:59:22[0m, [0;33mcol:27[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57373c0[0m <[0;33mcol:22[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |         | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5737328[0m <[0;33mcol:22[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |         | |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x57373a0[0m <[0;33mcol:24[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |         | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5737388[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5737348[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |         | |       `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5737368[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5737460[0m <[0;33mcol:34[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5737428[0m <[0;33mcol:34[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732920[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |         |-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5737600[0m <[0;33mcol:37[0m, [0;33mline:61:17[0m>
[0;34m  |   |         | `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x57375d0[0m <[0;33mline:60:21[0m, [0;33mcol:31[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   |         |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5737568[0m <[0;33mcol:21[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |         |   | `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5737548[0m <[0;33mline:60:21[0m, [0;33mcol:26[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |         |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5737530[0m <[0;33mcol:21[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |         |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5737498[0m <[0;33mcol:21[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |         |   |   `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5737510[0m <[0;33mcol:23[0m, [0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |         |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57374f8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57374b8[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |         |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x57374d8[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x57375b8[0m <[0;33mcol:31[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5737598[0m <[0;33mcol:31[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57328a0[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |         `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573a6c0[0m <[0;33mline:63:21[0m, [0;33mcol:36[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x573a688[0m <[0;33mcol:21[0m, [0;33mcol:36[0m> [0;32m'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573a670[0m <[0;33mcol:28[0m> [0;32m'std::pair<long long, long long> &(*)(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573a650[0m <[0;33mcol:28[0m> [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x56e8488[0m[0;1;36m 'operator='[0m [0;32m'std::pair<long long, long long> &(typename conditional<__and_<is_move_assignable<long long>, is_move_assignable<long long> >::value, pair<long long, long long> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<long long>, is_nothrow_move_assignable<long long> >::value)'[0m
[0;34m  |   |             |-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x5737688[0m <[0;33mcol:21[0m, [0;33mcol:26[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5737670[0m <[0;33mcol:21[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5737618[0m <[0;33mcol:21[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |             | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5737658[0m <[0;33mcol:23[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |             |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5737638[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |             `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573a638[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m  |   |               `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x573a518[0m <[0;33mcol:30[0m, [0;33mcol:36[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m[0m[0;36m[0m [0;32m'void (long long &, long long &)'[0m
[0;34m  |   |                 |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57376b8[0m <[0;33mcol:33[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x57328a0[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x57376d8[0m <[0;33mcol:35[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732920[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573a858[0m <[0;33mline:67:9[0m, [0;33mcol:29[0m>
[0;34m  |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573a7b8[0m <[0;33mcol:9[0m, [0;33mcol:28[0m> [0;33mcol:23[0m used[0;1;36m ans[0m [0;32m'long long'[0m cinit
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573a840[0m <[0;33mcol:28[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573a820[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x573ca30[0m <[0;33mline:68:9[0m, [0;33mline:87:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573a8c8[0m <[0;33mline:68:14[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573a8b0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573a870[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f72c0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573a890[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 3[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573ca10[0m <[0;33mcol:19[0m, [0;33mline:87:9[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573a9a0[0m <[0;33mline:69:13[0m, [0;33mcol:30[0m>
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573a900[0m <[0;33mcol:13[0m, [0;33mcol:29[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'long long'[0m cinit
[0;34m  |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573a988[0m <[0;33mcol:29[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573a968[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   `-[0m[0;1;35mForStmt[0m[0;33m 0x573c9d8[0m <[0;33mline:70:13[0m, [0;33mline:85:13[0m>
[0;34m  |   |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573aa58[0m <[0;33mline:70:19[0m, [0;33mcol:26[0m>
[0;34m  |   |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573a9d0[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;33mcol:23[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573aa38[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573aae0[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573aab0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573aa70[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a9d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573aac8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573aa90[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x573ab20[0m <[0;33mcol:31[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ab00[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a9d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573c9b0[0m <[0;33mcol:35[0m, [0;33mline:85:13[0m>
[0;34m  |   |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x573b230[0m <[0;33mline:71:17[0m, [0;33mline:72:53[0m>
[0;34m  |   |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573acd0[0m <[0;33mline:71:22[0m, [0;33mline:7:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |       | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573aca0[0m <[0;33mline:71:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573abb0[0m <[0;33mline:71:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |       | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573ab90[0m <[0;33mline:71:22[0m, [0;33mcol:25[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ab78[0m <[0;33mcol:22[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ab38[0m <[0;33mcol:22[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573ab58[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573acb8[0m <[0;33mcol:32[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573ac70[0m <[0;33mline:71:32[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |       | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573ac50[0m <[0;33mline:71:32[0m, [0;33mcol:35[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ac20[0m <[0;33mcol:32[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573abe0[0m <[0;33mcol:32[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ac38[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ac00[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a9d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573b218[0m <[0;33mline:72:21[0m, [0;33mcol:53[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x573b1e8[0m <[0;33mcol:21[0m, [0;33mcol:53[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   |       |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573acf0[0m <[0;33mcol:21[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a900[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b1d0[0m <[0;33mcol:25[0m, [0;33mcol:53[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x573b188[0m <[0;33mcol:25[0m, [0;33mcol:53[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b170[0m <[0;33mcol:25[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b148[0m <[0;33mcol:25[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |       |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x573b058[0m <[0;33mcol:29[0m, [0;33mcol:48[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b040[0m <[0;33mcol:29[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b018[0m <[0;33mcol:29[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f5e38[0m[0;1;36m 'min'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533deb8[0m[0;1;36m 'min'[0m)
[0;34m  |   |       |         | |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573b088[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573aec8[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |       |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ae98[0m <[0;33mcol:33[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573ae48[0m <[0;33mline:72:33[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |       |         | |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573ae28[0m <[0;33mline:72:33[0m, [0;33mcol:36[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ae10[0m <[0;33mcol:33[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       |         | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573add0[0m <[0;33mcol:33[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       |         | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573adf0[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573aeb0[0m <[0;33mcol:40[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ae78[0m <[0;33mcol:40[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a900[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |       |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b0a0[0m <[0;33mcol:42[0m, [0;33mline:6:11[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |       |         |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573af78[0m <[0;33mline:72:42[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |       |         |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573af58[0m <[0;33mline:72:42[0m, [0;33mcol:45[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573af28[0m <[0;33mcol:42[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       |         |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573aee8[0m <[0;33mcol:42[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573af40[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573af08[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a9d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573b1b8[0m <[0;33mcol:50[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573b0b8[0m <[0;33mcol:50[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573b300[0m <[0;33mline:73:17[0m, [0;33mcol:34[0m>
[0;34m  |   |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573b260[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:31[0m used[0;1;36m b[0m [0;32m'long long'[0m cinit
[0;34m  |   |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b2e8[0m <[0;33mcol:33[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |       |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573b2c8[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       `-[0m[0;1;35mForStmt[0m[0;33m 0x573c978[0m <[0;33mline:74:17[0m, [0;33mline:84:17[0m>
[0;34m  |   |         |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573b3d0[0m <[0;33mline:74:23[0m, [0;33mcol:30[0m>
[0;34m  |   |         | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573b330[0m <[0;33mcol:23[0m, [0;33mcol:29[0m> [0;33mcol:27[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b3b8[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b398[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a9d0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |         |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573b458[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b428[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b3e8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573b330[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b440[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b408[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |         |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x573b498[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b478[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573b330[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573c950[0m <[0;33mcol:39[0m, [0;33mline:84:17[0m>
[0;34m  |   |           |-[0m[0;1;35mIfStmt[0m[0;33m 0x573bba8[0m <[0;33mline:75:21[0m, [0;33mline:76:57[0m>
[0;34m  |   |           | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573b648[0m <[0;33mline:75:26[0m, [0;33mline:7:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |           | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b618[0m <[0;33mline:75:26[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573b528[0m <[0;33mline:75:26[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |           | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573b508[0m <[0;33mline:75:26[0m, [0;33mcol:29[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b4f0[0m <[0;33mcol:26[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |           | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b4b0[0m <[0;33mcol:26[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |           | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573b4d0[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |           | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b630[0m <[0;33mcol:36[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573b5e8[0m <[0;33mline:75:36[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |           | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573b5c8[0m <[0;33mline:75:36[0m, [0;33mcol:39[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b598[0m <[0;33mcol:36[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |           | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b558[0m <[0;33mcol:36[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |           | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b5b0[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b578[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573b330[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |           | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573bb90[0m <[0;33mline:76:25[0m, [0;33mcol:57[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x573bb60[0m <[0;33mcol:25[0m, [0;33mcol:57[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   |           |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b668[0m <[0;33mcol:25[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573b260[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bb48[0m <[0;33mcol:29[0m, [0;33mcol:57[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x573bb00[0m <[0;33mcol:29[0m, [0;33mcol:57[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bae8[0m <[0;33mcol:29[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |           |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573bac0[0m <[0;33mcol:29[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |           |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x573b9d0[0m <[0;33mcol:33[0m, [0;33mcol:52[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b9b8[0m <[0;33mcol:33[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |           |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b990[0m <[0;33mcol:33[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f5e38[0m[0;1;36m 'min'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533deb8[0m[0;1;36m 'min'[0m)
[0;34m  |   |           |         | |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573ba00[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573b840[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |           |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b810[0m <[0;33mcol:37[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |         | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573b7c0[0m <[0;33mline:76:37[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |           |         | |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573b7a0[0m <[0;33mline:76:37[0m, [0;33mcol:40[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b788[0m <[0;33mcol:37[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |           |         | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b748[0m <[0;33mcol:37[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |           |         | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573b768[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |           |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b828[0m <[0;33mcol:44[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b7f0[0m <[0;33mcol:44[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573b260[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |           |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ba18[0m <[0;33mcol:46[0m, [0;33mline:6:11[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |           |         |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573b8f0[0m <[0;33mline:76:46[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |           |         |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573b8d0[0m <[0;33mline:76:46[0m, [0;33mcol:49[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b8a0[0m <[0;33mcol:46[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |           |         |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b860[0m <[0;33mcol:46[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |           |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573b8b8[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573b880[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573b330[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |           |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573bb30[0m <[0;33mcol:54[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573ba30[0m <[0;33mcol:54[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |           |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573bc78[0m <[0;33mline:77:21[0m, [0;33mcol:38[0m>
[0;34m  |   |           | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573bbd8[0m <[0;33mcol:21[0m, [0;33mcol:37[0m> [0;33mcol:35[0m used[0;1;36m c[0m [0;32m'long long'[0m cinit
[0;34m  |   |           |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bc60[0m <[0;33mcol:37[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |           |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573bc40[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |           `-[0m[0;1;35mForStmt[0m[0;33m 0x573c918[0m <[0;33mline:78:21[0m, [0;33mline:83:21[0m>
[0;34m  |   |             |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573bd48[0m <[0;33mline:78:27[0m, [0;33mcol:34[0m>
[0;34m  |   |             | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573bca8[0m <[0;33mcol:27[0m, [0;33mcol:33[0m> [0;33mcol:31[0m used[0;1;36m k[0m [0;32m'int'[0m cinit
[0;34m  |   |             |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bd30[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573bd10[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573b330[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |             |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |             |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573bdd0[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |             | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bda0[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573bd60[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573bca8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m  |   |             | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bdb8[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |             |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573bd80[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |             |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x573be10[0m <[0;33mcol:39[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573bdf0[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573bca8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m  |   |             `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573c8f0[0m <[0;33mcol:43[0m, [0;33mline:83:21[0m>
[0;34m  |   |               |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573bee0[0m <[0;33mline:79:25[0m, [0;33mcol:42[0m>
[0;34m  |   |               | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573be40[0m <[0;33mcol:25[0m, [0;33mcol:41[0m> [0;33mcol:39[0m[0;1;36m v[0m [0;32m'long long'[0m cinit
[0;34m  |   |               |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bec8[0m <[0;33mcol:41[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |               |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573bea8[0m <[0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |               |-[0m[0;1;35mIfStmt[0m[0;33m 0x573c5f0[0m <[0;33mline:80:25[0m, [0;33mline:81:60[0m>
[0;34m  |   |               | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573c090[0m <[0;33mline:80:30[0m, [0;33mline:7:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |               | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c060[0m <[0;33mline:80:30[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573bf70[0m <[0;33mline:80:30[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |               | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573bf50[0m <[0;33mline:80:30[0m, [0;33mcol:33[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bf38[0m <[0;33mcol:30[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |               | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573bef8[0m <[0;33mcol:30[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |               | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573bf18[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |               | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c078[0m <[0;33mcol:40[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573c030[0m <[0;33mline:80:40[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |               | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573c010[0m <[0;33mline:80:40[0m, [0;33mcol:43[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bfe0[0m <[0;33mcol:40[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |               | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573bfa0[0m <[0;33mcol:40[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |               | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573bff8[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573bfc0[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573bca8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m  |   |               | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573c5d8[0m <[0;33mline:81:29[0m, [0;33mcol:60[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x573c5a8[0m <[0;33mcol:29[0m, [0;33mcol:60[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   |               |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c0b0[0m <[0;33mcol:29[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573bbd8[0m[0;1;36m 'c'[0m [0;32m'long long'[0m
[0;34m  |   |               |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c590[0m <[0;33mcol:32[0m, [0;33mcol:60[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x573c548[0m <[0;33mcol:32[0m, [0;33mcol:60[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c530[0m <[0;33mcol:32[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |               |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c508[0m <[0;33mcol:32[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |               |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x573c418[0m <[0;33mcol:36[0m, [0;33mcol:55[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c400[0m <[0;33mcol:36[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |               |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c3d8[0m <[0;33mcol:36[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f5e38[0m[0;1;36m 'min'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533deb8[0m[0;1;36m 'min'[0m)
[0;34m  |   |               |         | |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573c448[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573c288[0m <[0;33mcol:40[0m, [0;33mcol:47[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |               |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c258[0m <[0;33mcol:40[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               |         | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573c208[0m <[0;33mline:81:40[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |               |         | |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573c1e8[0m <[0;33mline:81:40[0m, [0;33mcol:43[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               |         | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c1d0[0m <[0;33mcol:40[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |               |         | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c190[0m <[0;33mcol:40[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |               |         | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573c1b0[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   |               |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c270[0m <[0;33mcol:47[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c238[0m <[0;33mcol:47[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573bbd8[0m[0;1;36m 'c'[0m [0;32m'long long'[0m
[0;34m  |   |               |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c460[0m <[0;33mcol:49[0m, [0;33mline:6:11[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |               |         |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573c338[0m <[0;33mline:81:49[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |               |         |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573c318[0m <[0;33mline:81:49[0m, [0;33mcol:52[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               |         |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c2e8[0m <[0;33mcol:49[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |               |         |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c2a8[0m <[0;33mcol:49[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |               |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c300[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |               |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c2c8[0m <[0;33mcol:51[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573bca8[0m[0;1;36m 'k'[0m [0;32m'int'[0m
[0;34m  |   |               |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573c578[0m <[0;33mcol:57[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |               |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573c478[0m <[0;33mcol:57[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |               `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573c8d8[0m <[0;33mline:82:25[0m, [0;33mcol:44[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |                 `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573c8b8[0m <[0;33mcol:25[0m, [0;33mcol:44[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |                   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c608[0m <[0;33mcol:25[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a7b8[0m[0;1;36m 'ans'[0m [0;32m'long long'[0m
[0;34m  |   |                   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c8a0[0m <[0;33mcol:31[0m, [0;33mcol:44[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |                     `-[0m[0;1;35mCallExpr[0m[0;33m 0x573c840[0m <[0;33mcol:31[0m, [0;33mcol:44[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |                       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c828[0m <[0;33mcol:31[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |                       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c800[0m <[0;33mcol:31[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |                       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c870[0m <[0;33mcol:35[0m> [0;32m'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |                       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c688[0m <[0;33mcol:35[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a7b8[0m[0;1;36m 'ans'[0m [0;32m'long long'[0m
[0;34m  |   |                       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573c888[0m <[0;33mcol:39[0m, [0;33mcol:43[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |                         `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573c770[0m <[0;33mcol:39[0m, [0;33mcol:43[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |                           |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573c718[0m <[0;33mcol:39[0m, [0;33mcol:41[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |                           | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c6e8[0m <[0;33mcol:39[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |                           | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c6a8[0m <[0;33mcol:39[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a900[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |                           | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c700[0m <[0;33mcol:41[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |                           |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c6c8[0m <[0;33mcol:41[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573b260[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |                           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573c758[0m <[0;33mcol:43[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |                             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573c738[0m <[0;33mcol:43[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573bbd8[0m[0;1;36m 'c'[0m [0;32m'long long'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x573e100[0m <[0;33mline:88:9[0m, [0;33mline:100:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573caa0[0m <[0;33mline:88:14[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ca88[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ca48[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f72c0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573ca68[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 2[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573e0e0[0m <[0;33mcol:19[0m, [0;33mline:100:9[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573cb78[0m <[0;33mline:89:13[0m, [0;33mcol:30[0m>
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573cad8[0m <[0;33mcol:13[0m, [0;33mcol:29[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'long long'[0m cinit
[0;34m  |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573cb60[0m <[0;33mcol:29[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573cb40[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   `-[0m[0;1;35mForStmt[0m[0;33m 0x573e0a8[0m <[0;33mline:90:13[0m, [0;33mline:99:13[0m>
[0;34m  |   |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573cc30[0m <[0;33mline:90:19[0m, [0;33mcol:26[0m>
[0;34m  |   |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573cba8[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;33mcol:23[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573cc10[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573ccb8[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573cc88[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573cc48[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573cba8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573cca0[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573cc68[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x573ccf8[0m <[0;33mcol:31[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ccd8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573cba8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573e080[0m <[0;33mcol:35[0m, [0;33mline:99:13[0m>
[0;34m  |   |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x573d408[0m <[0;33mline:91:17[0m, [0;33mline:92:53[0m>
[0;34m  |   |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573cea8[0m <[0;33mline:91:22[0m, [0;33mline:7:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |       | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ce78[0m <[0;33mline:91:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573cd88[0m <[0;33mline:91:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |       | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573cd68[0m <[0;33mline:91:22[0m, [0;33mcol:25[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573cd50[0m <[0;33mcol:22[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573cd10[0m <[0;33mcol:22[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573cd30[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ce90[0m <[0;33mcol:32[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573ce48[0m <[0;33mline:91:32[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |       | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573ce28[0m <[0;33mline:91:32[0m, [0;33mcol:35[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573cdf8[0m <[0;33mcol:32[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573cdb8[0m <[0;33mcol:32[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ce10[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573cdd8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573cba8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573d3f0[0m <[0;33mline:92:21[0m, [0;33mcol:53[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x573d3c0[0m <[0;33mcol:21[0m, [0;33mcol:53[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   |       |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573cec8[0m <[0;33mcol:21[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573cad8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d3a8[0m <[0;33mcol:25[0m, [0;33mcol:53[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x573d360[0m <[0;33mcol:25[0m, [0;33mcol:53[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d348[0m <[0;33mcol:25[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d320[0m <[0;33mcol:25[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |       |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x573d230[0m <[0;33mcol:29[0m, [0;33mcol:48[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d218[0m <[0;33mcol:29[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d1f0[0m <[0;33mcol:29[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f5e38[0m[0;1;36m 'min'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533deb8[0m[0;1;36m 'min'[0m)
[0;34m  |   |       |         | |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573d260[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573d0a0[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |       |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d070[0m <[0;33mcol:33[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573d020[0m <[0;33mline:92:33[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |       |         | |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573d000[0m <[0;33mline:92:33[0m, [0;33mcol:36[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573cfe8[0m <[0;33mcol:33[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       |         | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573cfa8[0m <[0;33mcol:33[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       |         | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573cfc8[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d088[0m <[0;33mcol:40[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d050[0m <[0;33mcol:40[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573cad8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |       |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d278[0m <[0;33mcol:42[0m, [0;33mline:6:11[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |       |         |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573d150[0m <[0;33mline:92:42[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |       |         |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573d130[0m <[0;33mline:92:42[0m, [0;33mcol:45[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d100[0m <[0;33mcol:42[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       |         |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d0c0[0m <[0;33mcol:42[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d118[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d0e0[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573cba8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573d390[0m <[0;33mcol:50[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573d290[0m <[0;33mcol:50[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573d4d8[0m <[0;33mline:93:17[0m, [0;33mcol:34[0m>
[0;34m  |   |       | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573d438[0m <[0;33mcol:17[0m, [0;33mcol:33[0m> [0;33mcol:31[0m used[0;1;36m b[0m [0;32m'long long'[0m cinit
[0;34m  |   |       |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d4c0[0m <[0;33mcol:33[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |       |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573d4a0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       `-[0m[0;1;35mForStmt[0m[0;33m 0x573e048[0m <[0;33mline:94:17[0m, [0;33mline:98:17[0m>
[0;34m  |   |         |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573d5a8[0m <[0;33mline:94:23[0m, [0;33mcol:30[0m>
[0;34m  |   |         | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573d508[0m <[0;33mcol:23[0m, [0;33mcol:29[0m> [0;33mcol:27[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m  |   |         |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d590[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d570[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573cba8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |         |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573d630[0m <[0;33mcol:31[0m, [0;33mcol:33[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d600[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d5c0[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573d508[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d618[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d5e0[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |         |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x573d670[0m <[0;33mcol:35[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d650[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573d508[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |         `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573e028[0m <[0;33mcol:39[0m, [0;33mline:98:17[0m>
[0;34m  |   |           |-[0m[0;1;35mIfStmt[0m[0;33m 0x573dd80[0m <[0;33mline:95:21[0m, [0;33mline:96:57[0m>
[0;34m  |   |           | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573d820[0m <[0;33mline:95:26[0m, [0;33mline:7:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |           | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d7f0[0m <[0;33mline:95:26[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573d700[0m <[0;33mline:95:26[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |           | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573d6e0[0m <[0;33mline:95:26[0m, [0;33mcol:29[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d6c8[0m <[0;33mcol:26[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |           | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d688[0m <[0;33mcol:26[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |           | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573d6a8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |           | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d808[0m <[0;33mcol:36[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573d7c0[0m <[0;33mline:95:36[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |           | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573d7a0[0m <[0;33mline:95:36[0m, [0;33mcol:39[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d770[0m <[0;33mcol:36[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |           | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d730[0m <[0;33mcol:36[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |           | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d788[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d750[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573d508[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |           | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573dd68[0m <[0;33mline:96:25[0m, [0;33mcol:57[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x573dd38[0m <[0;33mcol:25[0m, [0;33mcol:57[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   |           |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d840[0m <[0;33mcol:25[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573d438[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |           |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573dd20[0m <[0;33mcol:29[0m, [0;33mcol:57[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x573dcd8[0m <[0;33mcol:29[0m, [0;33mcol:57[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573dcc0[0m <[0;33mcol:29[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |           |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573dc98[0m <[0;33mcol:29[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |           |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x573dba8[0m <[0;33mcol:33[0m, [0;33mcol:52[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573db90[0m <[0;33mcol:33[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |           |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573db68[0m <[0;33mcol:33[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f5e38[0m[0;1;36m 'min'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533deb8[0m[0;1;36m 'min'[0m)
[0;34m  |   |           |         | |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573dbd8[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573da18[0m <[0;33mcol:37[0m, [0;33mcol:44[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |           |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d9e8[0m <[0;33mcol:37[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |         | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573d998[0m <[0;33mline:96:37[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |           |         | |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573d978[0m <[0;33mline:96:37[0m, [0;33mcol:40[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573d960[0m <[0;33mcol:37[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |           |         | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d920[0m <[0;33mcol:37[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |           |         | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573d940[0m <[0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |           |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573da00[0m <[0;33mcol:44[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573d9c8[0m <[0;33mcol:44[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573d438[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |           |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573dbf0[0m <[0;33mcol:46[0m, [0;33mline:6:11[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |           |         |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573dac8[0m <[0;33mline:96:46[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |           |         |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573daa8[0m <[0;33mline:96:46[0m, [0;33mcol:49[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |         |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573da78[0m <[0;33mcol:46[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |           |         |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573da38[0m <[0;33mcol:46[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |           |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573da90[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573da58[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573d508[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m  |   |           |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573dd08[0m <[0;33mcol:54[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |           |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573dc08[0m <[0;33mcol:54[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |           `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573e010[0m <[0;33mline:97:21[0m, [0;33mcol:38[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573dff0[0m <[0;33mcol:21[0m, [0;33mcol:38[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |               |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573dd98[0m <[0;33mcol:21[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a7b8[0m[0;1;36m 'ans'[0m [0;32m'long long'[0m
[0;34m  |   |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573dfd8[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |                 `-[0m[0;1;35mCallExpr[0m[0;33m 0x573df78[0m <[0;33mcol:27[0m, [0;33mcol:38[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |                   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573df60[0m <[0;33mcol:27[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |                   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573df38[0m <[0;33mcol:27[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |                   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573dfa8[0m <[0;33mcol:31[0m> [0;32m'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |                   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573de18[0m <[0;33mcol:31[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a7b8[0m[0;1;36m 'ans'[0m [0;32m'long long'[0m
[0;34m  |   |                   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573dfc0[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |                     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573dea8[0m <[0;33mcol:35[0m, [0;33mcol:37[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |                       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573de78[0m <[0;33mcol:35[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |                       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573de38[0m <[0;33mcol:35[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573cad8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |                       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573de90[0m <[0;33mcol:37[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |                         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573de58[0m <[0;33mcol:37[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573d438[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x573ed70[0m <[0;33mline:101:9[0m, [0;33mline:109:9[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573e170[0m <[0;33mline:101:14[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e158[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e118[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f72c0[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573e138[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573ed50[0m <[0;33mcol:19[0m, [0;33mline:109:9[0m>
[0;34m  |   |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573e248[0m <[0;33mline:102:13[0m, [0;33mcol:30[0m>
[0;34m  |   |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573e1a8[0m <[0;33mcol:13[0m, [0;33mcol:29[0m> [0;33mcol:27[0m used[0;1;36m a[0m [0;32m'long long'[0m cinit
[0;34m  |   |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e230[0m <[0;33mcol:29[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573e210[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |   `-[0m[0;1;35mForStmt[0m[0;33m 0x573ed18[0m <[0;33mline:103:13[0m, [0;33mline:108:13[0m>
[0;34m  |   |     |-[0m[0;1;35mDeclStmt[0m[0;33m 0x573e300[0m <[0;33mline:103:19[0m, [0;33mcol:26[0m>
[0;34m  |   |     | `-[0m[0;1;32mVarDecl[0m[0;33m 0x573e278[0m <[0;33mcol:19[0m, [0;33mcol:25[0m> [0;33mcol:23[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  |   |     |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573e2e0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573e388[0m <[0;33mcol:27[0m, [0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e358[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e318[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573e278[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e370[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e338[0m <[0;33mcol:29[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5732668[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x573e3c8[0m <[0;33mcol:31[0m, [0;33mcol:32[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e3a8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573e278[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x573ecf8[0m <[0;33mcol:35[0m, [0;33mline:108:13[0m>
[0;34m  |   |       |-[0m[0;1;35mIfStmt[0m[0;33m 0x573ead8[0m <[0;33mline:105:17[0m, [0;33mline:106:53[0m>
[0;34m  |   |       | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573e578[0m <[0;33mline:105:22[0m, [0;33mline:7:11[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |       | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e548[0m <[0;33mline:105:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | | | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573e458[0m <[0;33mline:105:22[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |       | | |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573e438[0m <[0;33mline:105:22[0m, [0;33mcol:25[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       | | |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e420[0m <[0;33mcol:22[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       | | |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e3e0[0m <[0;33mcol:22[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       | | |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573e400[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e560[0m <[0;33mcol:32[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573e518[0m <[0;33mline:105:32[0m, [0;33mline:7:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .second[0;33m 0x56b7148[0m
[0;34m  |   |       | |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573e4f8[0m <[0;33mline:105:32[0m, [0;33mcol:35[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e4c8[0m <[0;33mcol:32[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e488[0m <[0;33mcol:32[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e4e0[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e4a8[0m <[0;33mcol:34[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573e278[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x573eac0[0m <[0;33mline:106:21[0m, [0;33mcol:53[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |   `-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x573ea90[0m <[0;33mcol:21[0m, [0;33mcol:53[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '+=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   |       |     |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e598[0m <[0;33mcol:21[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573e1a8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |       |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ea78[0m <[0;33mcol:25[0m, [0;33mcol:53[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |       `-[0m[0;1;35mCallExpr[0m[0;33m 0x573ea30[0m <[0;33mcol:25[0m, [0;33mcol:53[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ea18[0m <[0;33mcol:25[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e9f0[0m <[0;33mcol:25[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |       |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x573e900[0m <[0;33mcol:29[0m, [0;33mcol:48[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e8e8[0m <[0;33mcol:29[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |       |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e8c0[0m <[0;33mcol:29[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f5e38[0m[0;1;36m 'min'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533deb8[0m[0;1;36m 'min'[0m)
[0;34m  |   |       |         | |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573e930[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573e770[0m <[0;33mcol:33[0m, [0;33mcol:40[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |   |       |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e740[0m <[0;33mcol:33[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573e6f0[0m <[0;33mline:106:33[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |       |         | |   |   `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573e6d0[0m <[0;33mline:106:33[0m, [0;33mcol:36[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e6b8[0m <[0;33mcol:33[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       |         | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e678[0m <[0;33mcol:33[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56b62f8[0m[0;1;36m 'A'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       |         | |   |     `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573e698[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e758[0m <[0;33mcol:40[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e720[0m <[0;33mcol:40[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573e1a8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   |       |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e948[0m <[0;33mcol:42[0m, [0;33mline:6:11[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |       |         |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x573e820[0m <[0;33mline:106:42[0m, [0;33mline:6:11[0m> [0;32m'long long':'long long'[0m[0;36m lvalue[0m[0;36m[0m .first[0;33m 0x56b70e8[0m
[0;34m  |   |       |         |     `-[0m[0;1;35mArraySubscriptExpr[0m[0;33m 0x573e800[0m <[0;33mline:106:42[0m, [0;33mcol:45[0m> [0;32m'pi':'std::pair<long long, long long>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |         |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e7d0[0m <[0;33mcol:42[0m> [0;32m'pi *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   |       |         |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e790[0m <[0;33mcol:42[0m> [0;32m'pi [101]'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f3420[0m[0;1;36m 'B'[0m [0;32m'pi [101]'[0m
[0;34m  |   |       |         |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573e7e8[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       |         |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573e7b0[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573e278[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |       |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x573ea60[0m <[0;33mcol:50[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |       |           `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573e960[0m <[0;33mcol:50[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   |       `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x573ecd8[0m <[0;33mline:107:17[0m, [0;33mcol:32[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573eaf0[0m <[0;33mcol:17[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a7b8[0m[0;1;36m 'ans'[0m [0;32m'long long'[0m
[0;34m  |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ecc0[0m <[0;33mcol:23[0m, [0;33mcol:32[0m> [0;32m'long long':'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |           `-[0m[0;1;35mCallExpr[0m[0;33m 0x573ec60[0m <[0;33mcol:23[0m, [0;33mcol:32[0m> [0;32m'const long long':'const long long'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ec48[0m <[0;33mcol:23[0m> [0;32m'const long long &(*)(const long long &, const long long &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ec20[0m <[0;33mcol:23[0m> [0;32m'const long long &(const long long &, const long long &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x56f52f8[0m[0;1;36m 'max'[0m [0;32m'const long long &(const long long &, const long long &)'[0m ([0;1;32mFunctionTemplate[0m[0;33m 0x533d778[0m[0;1;36m 'max'[0m)
[0;34m  |   |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ec90[0m <[0;33mcol:27[0m> [0;32m'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573eb70[0m <[0;33mcol:27[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a7b8[0m[0;1;36m 'ans'[0m [0;32m'long long'[0m
[0;34m  |   |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573eca8[0m <[0;33mcol:31[0m> [0;32m'const long long'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |   |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573eb90[0m <[0;33mcol:31[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573e1a8[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  |   `-[0m[0;1;35mCallExpr[0m[0;33m 0x573eea8[0m <[0;33mline:110:9[0m, [0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ee90[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ee70[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4f32740[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573eee0[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x573ee08[0m <[0;33mcol:16[0m> [0;32m'const char [16]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d: %lld\n"[0m
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573eef8[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ee30[0m <[0;33mcol:35[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56f6fe0[0m[0;1;36m 'I'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x573ef10[0m <[0;33mcol:37[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x573ee50[0m <[0;33mcol:37[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x573a7b8[0m[0;1;36m 'ans'[0m [0;32m'long long'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x573efe0[0m <[0;33mline:121:1[0m, [0;33mcol:8[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x573efc0[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

