Dumping tiesuo:
[0;1;32mFunctionDecl[0m[0;33m 0x56179f0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/Andfive/1781488_1674486_Andfive.cpp:15:1[0m, [0;33mline:31:1[0m> [0;33mline:15:6[0m used[0;1;36m tiesuo[0m [0;32m'void ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5646930[0m <[0;33mline:16:1[0m, [0;33mline:31:1[0m>
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x5617c40[0m <[0;33mline:17:5[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5617c28[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5617bb0[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x51aa000[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5617c70[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5617b58[0m <[0;33mcol:11[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5617b98[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5617b78[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5617968[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5644530[0m <[0;33mline:18:5[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5644490[0m <[0;33mcol:5[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5644460[0m <[0;33mcol:5[0m, [0;33mcol:10[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .assign[0;33m 0x55d3458[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5617c88[0m <[0;33mcol:5[0m> [0;32m'vector<vector<int> >':'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x55c28f0[0m[0;1;36m 'haha'[0m [0;32m'vector<vector<int> >':'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >'[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56444e8[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5617d68[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5617d50[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5617d10[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5617968[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5617d30[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5644518[0m <[0;33mcol:21[0m, [0;33mcol:33[0m> [0;32m'const vector<int>':'const std::vector<int, std::allocator<int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644500[0m <[0;33mcol:21[0m, [0;33mcol:33[0m> [0;32m'const vector<int>':'const std::vector<int, std::allocator<int> >'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |       `-[0m[0;1;35mCXXBindTemporaryExpr[0m[0;33m 0x5644408[0m <[0;33mcol:21[0m, [0;33mcol:33[0m> [0;32m'vector<int>':'std::vector<int, std::allocator<int> >'[0m[0;36m[0m[0;36m[0m (CXXTemporary[0;33m 0x5644408[0m)
[0;34m  |         `-[0m[0;1;35mCXXTemporaryObjectExpr[0m[0;33m 0x56443d0[0m <[0;33mcol:21[0m, [0;33mcol:33[0m> [0;32m'vector<int>':'std::vector<int, std::allocator<int> >'[0m[0;36m[0m[0;36m[0m [0;32m'void () noexcept(is_nothrow_default_constructible<allocator<int> >::value)'[0m
[0;34m  |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5644748[0m <[0;33mline:19:5[0m, [0;33mcol:23[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x56446c0[0m <[0;33mcol:5[0m, [0;33mcol:23[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5644690[0m <[0;33mcol:5[0m, [0;33mcol:8[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .assign[0;33m 0x5602690[0m
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644548[0m <[0;33mcol:5[0m> [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x55e6f30[0m[0;1;36m 'in'[0m [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644718[0m <[0;33mcol:15[0m, [0;33mcol:17[0m> [0;32m'std::vector<bool, type-parameter-0-0>::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5644628[0m <[0;33mcol:15[0m, [0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644610[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56445d0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5617968[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x56445f0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5644730[0m <[0;33mcol:19[0m> [0;32m'const bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5644648[0m <[0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5644878[0m <[0;33mline:20:5[0m, [0;33mcol:12[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5644778[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m x[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56447f8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m used[0;1;36m y[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mForStmt[0m[0;33m 0x56468f8[0m <[0;33mline:21:5[0m, [0;33mline:30:5[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5644930[0m <[0;33mline:21:9[0m, [0;33mcol:18[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x56448a8[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5644910[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x56449b8[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644988[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644948[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56448a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56449a0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644968[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5617968[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x56449f8[0m <[0;33mcol:28[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56449d8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56448a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x56468d8[0m <[0;33mline:22:5[0m, [0;33mline:30:5[0m>
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x5644ae8[0m <[0;33mline:23:1[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644ad0[0m <[0;33mcol:1[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644ab0[0m <[0;33mcol:1[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x51aa000[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644b18[0m <[0;33mcol:7[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5644a58[0m <[0;33mcol:7[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m      | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5644a98[0m <[0;33mcol:12[0m, [0;33mcol:13[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644a78[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5644778[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m      `-[0m[0;1;35mForStmt[0m[0;33m 0x56468a0[0m <[0;33mline:24:1[0m, [0;33mline:29:9[0m>
[0;34m        |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5644bd0[0m <[0;33mline:24:5[0m, [0;33mcol:14[0m>
[0;34m        | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5644b48[0m <[0;33mcol:5[0m, [0;33mcol:13[0m> [0;33mcol:9[0m used[0;1;36m j[0m [0;32m'int'[0m cinit
[0;34m        |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5644bb0[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m        |-[0m[0;34m<<<NULL>>>[0m
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5644c58[0m <[0;33mcol:16[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644c28[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644be8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5644b48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m        | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644c40[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644c08[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5644778[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m        |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5644c98[0m <[0;33mcol:23[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644c78[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5644b48[0m[0;1;36m 'j'[0m [0;32m'int'[0m
[0;34m        `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5646878[0m <[0;33mline:25:1[0m, [0;33mline:29:9[0m>
[0;34m          |-[0m[0;1;35mCallExpr[0m[0;33m 0x5644d88[0m <[0;33mline:26:1[0m, [0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644d70[0m <[0;33mcol:1[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644d50[0m <[0;33mcol:1[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x51aa000[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m          | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644db8[0m <[0;33mcol:7[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m          | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x5644cf8[0m <[0;33mcol:7[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m          | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5644d38[0m <[0;33mcol:12[0m, [0;33mcol:13[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644d18[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56447f8[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m          |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5646648[0m <[0;33mline:27:13[0m, [0;33mcol:32[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m          | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5646618[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .push_back[0;33m 0x5632f28[0m
[0;34m          | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5646560[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int, std::allocator<int> > > >::value_type':'std::vector<int, std::allocator<int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m          | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5646548[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m          | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56464c8[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x55d54f0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m          | |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644dd0[0m <[0;33mcol:13[0m> [0;32m'vector<vector<int> >':'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x55c28f0[0m[0;1;36m 'haha'[0m [0;32m'vector<vector<int> >':'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >'[0m
[0;34m          | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56464b0[0m <[0;33mcol:18[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m          | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5644e10[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5644df0[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56448a8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m          | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5646670[0m <[0;33mcol:31[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m          |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56465f8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56447f8[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m          `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5646860[0m <[0;33mline:28:13[0m, [0;33mcol:21[0m> [0;32m'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m            `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5646828[0m <[0;33mcol:13[0m, [0;33mcol:21[0m> [0;32m'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5646810[0m <[0;33mcol:19[0m> [0;32m'std::_Bit_reference &(*)(bool) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56467f0[0m <[0;33mcol:19[0m> [0;32m'std::_Bit_reference &(bool) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x552bd20[0m[0;1;36m 'operator='[0m [0;32m'std::_Bit_reference &(bool) noexcept'[0m
[0;34m              |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x56467d8[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m              | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5646790[0m <[0;33mcol:13[0m, [0;33mcol:17[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m[0m[0;36m[0m
[0;34m              |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5646778[0m <[0;33mcol:15[0m, [0;33mcol:17[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (*)(std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m              |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56466f8[0m <[0;33mcol:15[0m, [0;33mcol:17[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5603cb8[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m
[0;34m              |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5646688[0m <[0;33mcol:13[0m> [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x55e6f30[0m[0;1;36m 'in'[0m [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m
[0;34m              |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56466e0[0m <[0;33mcol:16[0m> [0;32m'std::vector<bool, type-parameter-0-0>::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m              |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x56466c8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m              |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x56466a8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x56447f8[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m              `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x56467c8[0m <[0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping sha:
[0;1;32mFunctionDecl[0m[0;33m 0x5e57648[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/Andfive/1781488_1674486_Andfive.cpp:32:1[0m, [0;33mline:43:1[0m> [0;33mline:32:6[0m used[0;1;36m sha[0m [0;32m'bool (int)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x5e57580[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;33mcol:14[0m used[0;1;36m x[0m [0;32m'int'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5e581a0[0m <[0;33mline:33:1[0m, [0;33mline:43:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x5e578a0[0m <[0;33mline:34:5[0m, [0;33mcol:24[0m>
[0;34m  | |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5e57868[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57850[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mUserDefinedConversion[0m>
[0;34m  | |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5e57830[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  | |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5e57800[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .operator bool[0;33m 0x5d3cae0[0m
[0;34m  | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e577e8[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'const std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5e577d0[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5e57798[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m[0m[0;36m[0m
[0;34m  | |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57780[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (*)(std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57760[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e14558[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m
[0;34m  | |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e576f0[0m <[0;33mcol:8[0m> [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e284c0[0m[0;1;36m 'hehe'[0m [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m
[0;34m  | |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57748[0m <[0;33mcol:13[0m> [0;32m'std::vector<bool, type-parameter-0-0>::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57730[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57710[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e57580[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5e57890[0m <[0;33mcol:17[0m, [0;33mcol:24[0m>
[0;34m  |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5e57880[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5e57a30[0m <[0;33mline:35:5[0m, [0;33mcol:15[0m> [0;32m'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5e579f8[0m <[0;33mcol:5[0m, [0;33mcol:15[0m> [0;32m'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e579e0[0m <[0;33mcol:13[0m> [0;32m'std::_Bit_reference &(*)(bool) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e579c0[0m <[0;33mcol:13[0m> [0;32m'std::_Bit_reference &(bool) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5d3ccd0[0m[0;1;36m 'operator='[0m [0;32m'std::_Bit_reference &(bool) noexcept'[0m
[0;34m  |   |-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5e579a8[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5e57960[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57948[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (*)(std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57928[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e14558[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m
[0;34m  |   |   |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e578b8[0m <[0;33mcol:5[0m> [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e284c0[0m[0;1;36m 'hehe'[0m [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57910[0m <[0;33mcol:10[0m> [0;32m'std::vector<bool, type-parameter-0-0>::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e578f8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e578d8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e57580[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5e57998[0m <[0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5e58148[0m <[0;33mline:36:5[0m, [0;33mline:41:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5e57b80[0m <[0;33mline:36:9[0m, [0;33mcol:20[0m>
[0;34m  | | |-[0m[0;1;32mVarDecl[0m[0;33m 0x5e57a60[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e57ac8[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5e57b00[0m <[0;33mcol:9[0m, [0;33mcol:19[0m> [0;33mcol:19[0m used[0;1;36m y[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5e57d30[0m <[0;33mcol:22[0m, [0;33mcol:39[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57d18[0m <[0;33mcol:22[0m> [0;32m'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57d00[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57b98[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e57a60[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5e57cc8[0m <[0;33mcol:26[0m, [0;33mcol:39[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m
[0;34m  | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5e57c98[0m <[0;33mcol:26[0m, [0;33mcol:34[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .size[0;33m 0x5e42328[0m
[0;34m  | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57ce8[0m <[0;33mcol:26[0m, [0;33mcol:32[0m> [0;32m'const std::vector<int, std::allocator<int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  | |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5e57c60[0m <[0;33mcol:26[0m, [0;33mcol:32[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int, std::allocator<int> > > >::value_type':'std::vector<int, std::allocator<int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  | |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57c48[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57c28[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5de62d0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  | |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57bb8[0m <[0;33mcol:26[0m> [0;32m'vector<vector<int> >':'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5dd36d0[0m[0;1;36m 'haha'[0m [0;32m'vector<vector<int> >':'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >'[0m
[0;34m  | |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57c10[0m <[0;33mcol:31[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57bf8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57bd8[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e57580[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5e57d70[0m <[0;33mcol:42[0m, [0;33mcol:43[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57d50[0m <[0;33mcol:42[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e57a60[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5e58128[0m <[0;33mline:37:5[0m, [0;33mline:41:5[0m>
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5e57fc0[0m <[0;33mline:38:9[0m, [0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57d88[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e57b00[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57fa8[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5e57f70[0m <[0;33mcol:13[0m, [0;33mcol:22[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type':'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57f58[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::vector<int, std::allocator<int> >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57ed8[0m <[0;33mcol:20[0m, [0;33mcol:22[0m> [0;32m'std::vector<int, std::allocator<int> >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e42c20[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<int, std::allocator<int> >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |   |     |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5e57e50[0m <[0;33mcol:13[0m, [0;33mcol:19[0m> [0;32m'__gnu_cxx::__alloc_traits<std::allocator<std::vector<int, std::allocator<int> > > >::value_type':'std::vector<int, std::allocator<int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57e38[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (*)(std::vector::size_type) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57e18[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (std::vector::size_type) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5de62d0[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::reference (std::vector::size_type) noexcept'[0m
[0;34m  |   |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57da8[0m <[0;33mcol:13[0m> [0;32m'vector<vector<int> >':'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5dd36d0[0m[0;1;36m 'haha'[0m [0;32m'vector<vector<int> >':'std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >'[0m
[0;34m  |   |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57e00[0m <[0;33mcol:18[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57de8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57dc8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x5e57580[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57ec0[0m <[0;33mcol:21[0m> [0;32m'std::vector::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |   |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e57ea8[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e57e88[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e57a60[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5e58110[0m <[0;33mline:39:9[0m, [0;33mline:40:20[0m>
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x5e580b0[0m <[0;33mline:39:12[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e58098[0m <[0;33mcol:12[0m> [0;32m'bool (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58048[0m <[0;33mcol:12[0m> [0;32m'bool (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e57648[0m[0;1;36m 'sha'[0m [0;32m'bool (int)'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e580d8[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58028[0m <[0;33mcol:16[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e57b00[0m[0;1;36m 'y'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5e58100[0m <[0;33mline:40:13[0m, [0;33mcol:20[0m>
[0;34m  |       `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5e580f0[0m <[0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5e58190[0m <[0;33mline:42:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5e58180[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping shan:
[0;1;32mFunctionDecl[0m[0;33m 0x5e58220[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/Andfive/1781488_1674486_Andfive.cpp:44:1[0m, [0;33mline:56:1[0m> [0;33mline:44:6[0m used[0;1;36m shan[0m [0;32m'bool ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5e58980[0m <[0;33mline:45:1[0m, [0;33mline:56:1[0m>
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x5e58928[0m <[0;33mline:46:5[0m, [0;33mline:54:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5e58360[0m <[0;33mline:46:9[0m, [0;33mcol:18[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5e582d8[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e58340[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5e583e8[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e583b8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58378[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e582d8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e583d0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58398[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e28568[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5e58428[0m <[0;33mcol:28[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58408[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e582d8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5e58910[0m <[0;33mline:47:5[0m, [0;33mline:54:5[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x5e588f8[0m <[0;33mline:48:9[0m, [0;33mline:53:9[0m>
[0;34m  |     |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5e585b8[0m <[0;33mline:48:12[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e585a0[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mUserDefinedConversion[0m>
[0;34m  |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5e58580[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5e58550[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .operator bool[0;33m 0x5d3cae0[0m
[0;34m  |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e58538[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'const std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5e58520[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5e584e8[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e584d0[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (*)(std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e584b0[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x5e14558[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m
[0;34m  |     |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58440[0m <[0;33mcol:12[0m> [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5df74d0[0m[0;1;36m 'in'[0m [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m
[0;34m  |     |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e58498[0m <[0;33mcol:15[0m> [0;32m'std::vector<bool, type-parameter-0-0>::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e58480[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58460[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e582d8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5e588d8[0m <[0;33mline:49:9[0m, [0;33mline:53:9[0m>
[0;34m  |       |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5e587a8[0m <[0;33mline:50:13[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5e58748[0m <[0;33mcol:13[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5e58718[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .assign[0;33m 0x5e12f30[0m
[0;34m  |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e585d0[0m <[0;33mcol:13[0m> [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e284c0[0m[0;1;36m 'hehe'[0m [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m
[0;34m  |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e58778[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'std::vector<bool, type-parameter-0-0>::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5e586b0[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e58698[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58658[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e28568[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |       |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5e58678[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5e58790[0m <[0;33mcol:29[0m> [0;32m'const bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5e586d0[0m <[0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x5e588c0[0m <[0;33mline:51:13[0m, [0;33mline:52:24[0m>
[0;34m  |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x5e58860[0m <[0;33mline:51:16[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e58848[0m <[0;33mcol:16[0m> [0;32m'bool (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58828[0m <[0;33mcol:16[0m> [0;32m'bool (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5e57648[0m[0;1;36m 'sha'[0m [0;32m'bool (int)'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5e58888[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5e58808[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5e582d8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5e588b0[0m <[0;33mline:52:17[0m, [0;33mcol:24[0m>
[0;34m  |           `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5e588a0[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5e58970[0m <[0;33mline:55:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5e58960[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping shan:
[0;1;32mFunctionDecl[0m[0;33m 0x55909d0[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/Andfive/1781488_1674486_Andfive.cpp:44:1[0m, [0;33mline:56:1[0m> [0;33mline:44:6[0m used[0;1;36m shan[0m [0;32m'bool ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5591130[0m <[0;33mline:45:1[0m, [0;33mline:56:1[0m>
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x55910d8[0m <[0;33mline:46:5[0m, [0;33mline:54:5[0m>
[0;34m  | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x5590b10[0m <[0;33mline:46:9[0m, [0;33mcol:18[0m>
[0;34m  | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x5590a88[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;33mcol:13[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5590af0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5590b98[0m <[0;33mcol:20[0m, [0;33mcol:25[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590b68[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590b28[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5590a88[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590b80[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590b48[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5560d18[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x5590bd8[0m <[0;33mcol:28[0m, [0;33mcol:29[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590bb8[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5590a88[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x55910c0[0m <[0;33mline:47:5[0m, [0;33mline:54:5[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x55910a8[0m <[0;33mline:48:9[0m, [0;33mline:53:9[0m>
[0;34m  |     |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5590d68[0m <[0;33mline:48:12[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590d50[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mUserDefinedConversion[0m>
[0;34m  |     |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5590d30[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x5590d00[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .operator bool[0;33m 0x5474bc0[0m
[0;34m  |     |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590ce8[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'const std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m  |     |         `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5590cd0[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |     |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x5590c98[0m <[0;33mcol:12[0m, [0;33mcol:16[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference':'std::_Bit_reference'[0m[0;36m[0m[0;36m[0m
[0;34m  |     |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590c80[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (*)(std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590c60[0m <[0;33mcol:14[0m, [0;33mcol:16[0m> [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x554cd08[0m[0;1;36m 'operator[]'[0m [0;32m'std::vector<bool, std::allocator<bool> >::reference (std::vector<bool, type-parameter-0-0>::size_type)'[0m
[0;34m  |     |             |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590bf0[0m <[0;33mcol:12[0m> [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x552fc40[0m[0;1;36m 'in'[0m [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m
[0;34m  |     |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590c48[0m <[0;33mcol:15[0m> [0;32m'std::vector<bool, type-parameter-0-0>::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |     |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590c30[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590c10[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5590a88[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x5591088[0m <[0;33mline:49:9[0m, [0;33mline:53:9[0m>
[0;34m  |       |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x5590f58[0m <[0;33mline:50:13[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x5590ef8[0m <[0;33mcol:13[0m, [0;33mcol:34[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x5590ec8[0m <[0;33mcol:13[0m, [0;33mcol:18[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .assign[0;33m 0x554b6e0[0m
[0;34m  |       |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590d80[0m <[0;33mcol:13[0m> [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5560c70[0m[0;1;36m 'hehe'[0m [0;32m'vector<bool>':'std::vector<bool, std::allocator<bool> >'[0m
[0;34m  |       |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590f28[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'std::vector<bool, type-parameter-0-0>::size_type':'unsigned long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  |       |   | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x5590e60[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m  |       |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590e48[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |       |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590e08[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5560d18[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m  |       |   |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x5590e28[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |       |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x5590f40[0m <[0;33mcol:29[0m> [0;32m'const bool'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m  |       |     `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5590e80[0m <[0;33mcol:29[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x5591070[0m <[0;33mline:51:13[0m, [0;33mline:52:24[0m>
[0;34m  |         |-[0m[0;1;35mCallExpr[0m[0;33m 0x5591010[0m <[0;33mline:51:16[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |         | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5590ff8[0m <[0;33mcol:16[0m> [0;32m'bool (*)(int)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |         | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590fd8[0m <[0;33mcol:16[0m> [0;32m'bool (int)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x558fdf8[0m[0;1;36m 'sha'[0m [0;32m'bool (int)'[0m
[0;34m  |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x5591038[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x5590fb8[0m <[0;33mcol:20[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x5590a88[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |         `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5591060[0m <[0;33mline:52:17[0m, [0;33mcol:24[0m>
[0;34m  |           `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5591050[0m <[0;33mcol:24[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x5591120[0m <[0;33mline:55:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x5591110[0m <[0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false

Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x4c3ad08[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x4c3ac78[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x50c6178[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/Andfive/1781488_1674486_Andfive.cpp:57:1[0m, [0;33mline:71:1[0m> [0;33mline:57:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x50c6a98[0m <[0;33mline:58:1[0m, [0;33mline:71:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x50c6330[0m <[0;33mline:59:5[0m, [0;33mcol:14[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x50c6230[0m <[0;33mcol:5[0m, [0;33mcol:9[0m> [0;33mcol:9[0m used[0;1;36m t[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x50c62b0[0m <[0;33mcol:5[0m, [0;33mcol:11[0m> [0;33mcol:11[0m used[0;1;36m tao[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x50c6420[0m <[0;33mline:61:5[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c6408[0m <[0;33mcol:5[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c63e8[0m <[0;33mcol:5[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4c28000[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c6450[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x50c6390[0m <[0;33mcol:11[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x50c63d0[0m <[0;33mcol:16[0m, [0;33mcol:17[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c63b0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x50c6230[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x50c64a8[0m <[0;33mline:62:5[0m, [0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c6468[0m <[0;33mcol:5[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x50c62b0[0m[0;1;36m 'tao'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x50c6488[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |-[0m[0;1;35mWhileStmt[0m[0;33m 0x50c6a50[0m <[0;33mline:63:5[0m, [0;33mline:69:5[0m>
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c6500[0m <[0;33mline:63:11[0m, [0;33mcol:12[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralToBoolean[0m>
[0;34m  | | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x50c64e8[0m <[0;33mcol:11[0m, [0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c64c8[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x50c6230[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x50c6a28[0m <[0;33mline:64:5[0m, [0;33mline:69:5[0m>
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x50c6670[0m <[0;33mline:65:9[0m, [0;33mcol:34[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c6658[0m <[0;33mcol:9[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c6638[0m <[0;33mcol:9[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4c257b0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c66a0[0m <[0;33mcol:16[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x50c65d8[0m <[0;33mcol:16[0m> [0;32m'const char [11]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d: "[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c66b8[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x50c6620[0m <[0;33mcol:29[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m prefix '++'
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c6600[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x50c62b0[0m[0;1;36m 'tao'[0m [0;32m'int'[0m
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x50c6750[0m <[0;33mline:66:9[0m, [0;33mcol:16[0m> [0;32m'void'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c6738[0m <[0;33mcol:9[0m> [0;32m'void (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c6718[0m <[0;33mcol:9[0m> [0;32m'void ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x5095da0[0m[0;1;36m 'tiesuo'[0m [0;32m'void ()'[0m
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x50c6a00[0m <[0;33mline:67:9[0m, [0;33mline:68:23[0m> has_else
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x50c67f0[0m <[0;33mline:67:12[0m, [0;33mcol:17[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c67d8[0m <[0;33mcol:12[0m> [0;32m'bool (*)()'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c67b8[0m <[0;33mcol:12[0m> [0;32m'bool ()'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x50c59d0[0m[0;1;36m 'shan'[0m [0;32m'bool ()'[0m
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x50c68e0[0m <[0;33mcol:20[0m, [0;33mcol:30[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c68c8[0m <[0;33mcol:20[0m> [0;32m'int (*)(const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c6878[0m <[0;33mcol:20[0m> [0;32m'int (const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4c2d688[0m[0;1;36m 'puts'[0m [0;32m'int (const char *)'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c6908[0m <[0;33mcol:25[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     |   `-[0m[0;1;35mStringLiteral[0m[0;33m 0x50c6858[0m <[0;33mcol:25[0m> [0;32m'const char [4]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Yes"[0m
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x50c69c0[0m <[0;33mline:68:14[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c69a8[0m <[0;33mcol:14[0m> [0;32m'int (*)(const char *)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x50c6988[0m <[0;33mcol:14[0m> [0;32m'int (const char *)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4c2d688[0m[0;1;36m 'puts'[0m [0;32m'int (const char *)'[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x50c69e8[0m <[0;33mcol:19[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |         `-[0m[0;1;35mStringLiteral[0m[0;33m 0x50c6968[0m <[0;33mcol:19[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "No"[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x50c6a88[0m <[0;33mline:70:5[0m, [0;33mcol:12[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x50c6a68[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

