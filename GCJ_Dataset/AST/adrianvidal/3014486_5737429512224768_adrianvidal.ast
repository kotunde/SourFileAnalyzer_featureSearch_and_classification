Dumping std::__throw_domain_error:
[0;1;32mFunctionDecl[0m[0;33m 0x64132f8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/functexcept.h:65:3[0m, [0;33mline:66:65[0m> [0;33mcol:3[0m[0;1;36m __throw_domain_error[0m [0;32m'void (const char *) __attribute__((noreturn))'[0m
[0;34m`-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6413268[0m <[0;33mcol:24[0m, [0;33mcol:34[0m> [0;33mcol:35[0m [0;32m'const char *'[0m

Dumping __remaining:
[0;1;32mParmVarDecl[0m[0;33m 0x65e3420[0m <[0;33m/usr/include/time.h:212:9[0m, [0;33mcol:26[0m> [0;33mcol:26[0m[0;1;36m __remaining[0m [0;32m'struct timespec *'[0m

Dumping std::errc::argument_out_of_domain:
[0;1;32mEnumConstantDecl[0m[0;33m 0x69902a0[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m, [0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/error_constants.h:47:7[0m[0;1;36m argument_out_of_domain[0m [0;32m'std::errc'[0m
[0;34m`-[0m[0;1;35mConstantExpr[0m[0;33m 0x6990280[0m <[0;33m/usr/include/asm-generic/errno-base.h:37:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m
[0;34m  `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x6990260[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 33[0m

Dumping std::domain_error:
[0;1;32mCXXRecordDecl[0m[0;33m 0x6994cd8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:147:3[0m, [0;33mline:155:3[0m> [0;33mline:147:9[0m class[0;1;36m domain_error[0m definition
[0;34m|-[0m[0;1;32mDefinitionData[0m polymorphic has_user_declared_ctor can_const_default_init
[0;34m| |-[0m[0;1;32mDefaultConstructor[0m
[0;34m| |-[0m[0;1;32mCopyConstructor[0m simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveConstructor[0m needs_overload_resolution
[0;34m| |-[0m[0;1;32mCopyAssignment[0m non_trivial has_const_param implicit_has_const_param
[0;34m| |-[0m[0;1;32mMoveAssignment[0m needs_overload_resolution
[0;34m| `-[0m[0;1;32mDestructor[0m non_trivial user_declared needs_overload_resolution
[0;34m|-[0mpublic [0;32m'std::logic_error'[0m
[0;34m|-[0m[0;1;32mCXXRecordDecl[0m[0;33m 0x6994e38[0m <[0;33mcol:3[0m, [0;33mcol:9[0m> [0;33mcol:9[0m implicit referenced class[0;1;36m domain_error[0m
[0;34m|-[0m[0;1;32mAccessSpecDecl[0m[0;33m 0x6994ec8[0m <[0;33mline:149:3[0m, [0;33mcol:9[0m> [0;33mcol:3[0m public
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6994fd8[0m <[0;33mline:150:5[0m, [0;33mcol:46[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const std::__cxx11::string &)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6994f00[0m <[0;33mcol:27[0m, [0;33mcol:41[0m> [0;33mcol:41[0m[0;1;36m __arg[0m [0;32m'const std::__cxx11::string &'[0m
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6995130[0m <[0;33mline:152:5[0m, [0;33mcol:38[0m> [0;33mcol:14[0m[0;1;36m domain_error[0m [0;32m'void (const char *)'[0m
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x69950a0[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:38[0m [0;32m'const char *'[0m
[0;34m|-[0m[0;1;32mCXXDestructorDecl[0m[0;33m 0x6995230[0m <[0;33mline:154:5[0m, [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h:138:33[0m> [0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/stdexcept:154:13[0m[0;1;36m ~domain_error[0m [0;32m'void () noexcept'[0m virtual
[0;34m| `-[0mOverrides: [ 0x6994b28 logic_error::~logic_error 'void () noexcept' ]
[0;34m|-[0m[0;1;32mCXXConstructorDecl[0m[0;33m 0x6995308[0m <[0;33mline:147:9[0m> [0;33mcol:9[0m implicit[0;1;36m domain_error[0m [0;32m'void (const std::domain_error &)'[0m inline default noexcept-unevaluated 0x6995308
[0;34m| `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x6995418[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m
[0;34m`-[0m[0;1;32mCXXMethodDecl[0m[0;33m 0x69954b8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m implicit[0;1;36m operator=[0m [0;32m'std::domain_error &(const std::domain_error &)'[0m inline default noexcept-unevaluated 0x69954b8
[0;34m  `-[0m[0;1;32mParmVarDecl[0m[0;33m 0x69955c8[0m <[0;33mcol:9[0m> [0;33mcol:9[0m [0;32m'const std::domain_error &'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x6a088e8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:54:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a089c0[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a08990[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a08950[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a083a0[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a089a8[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a08970[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a08538[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remaining:
[0;1;32mVarDecl[0m[0;33m 0x6a0a448[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/streambuf.tcc:88:8[0m, [0;33mcol:45[0m> [0;33mcol:25[0m referenced[0;1;36m __remaining[0m [0;32m'const std::streamsize':'const long'[0m cinit
[0;34m`-[0m[0;1;35mBinaryOperator[0m[0;33m 0x6a0a520[0m <[0;33mcol:39[0m, [0;33mcol:45[0m> [0;32m'long'[0m[0;36m[0m[0;36m[0m '-'
[0;34m  |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a0a4f0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a0a4b0[0m <[0;33mcol:39[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6a09f00[0m[0;1;36m '__n'[0m [0;32m'std::streamsize':'long'[0m
[0;34m  `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x6a0a508[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6a0a4d0[0m <[0;33mcol:45[0m> [0;32m'std::streamsize':'long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x6a0a098[0m[0;1;36m '__ret'[0m [0;32m'std::streamsize':'long'[0m

Dumping __remainder:
[0;1;32mVarDecl[0m[0;33m 0x6ca9ae8[0m <[0;33m/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/stl_algo.h:297:7[0m, [0;33mcol:35[0m> [0;33mcol:21[0m referenced[0;1;36m __remainder[0m [0;32m'_DistanceType':'typename std::iterator_traits<_RandomAccessIter>::difference_type'[0m cinit
[0;34m`-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x6ca9b50[0m <[0;33mcol:35[0m> [0;32m'_Integer'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x6ca93e0[0m[0;1;36m '__count'[0m [0;32m'_Integer'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x71904d8[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/adrianvidal/3014486_5737429512224768_adrianvidal.cpp:18:1[0m, [0;33mline:49:1[0m> [0;33mline:18:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7246cf0[0m <[0;33mcol:11[0m, [0;33mline:49:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71905f8[0m <[0;33mline:19:4[0m, [0;33mcol:9[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7190590[0m <[0;33mcol:4[0m, [0;33mcol:8[0m> [0;33mcol:8[0m used[0;1;36m T[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x7190740[0m <[0;33mcol:11[0m, [0;33mcol:24[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7190728[0m <[0;33mcol:11[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71906b0[0m <[0;33mcol:11[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67f8410[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7190770[0m <[0;33mcol:17[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7190658[0m <[0;33mcol:17[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7190698[0m <[0;33mcol:22[0m, [0;33mcol:23[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7190678[0m <[0;33mcol:23[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7190590[0m[0;1;36m 'T'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mForStmt[0m[0;33m 0x7246cb8[0m <[0;33mline:20:4[0m, [0;33mline:48:4[0m>
[0;34m    |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7190828[0m <[0;33mline:20:8[0m, [0;33mcol:16[0m>
[0;34m    | `-[0m[0;1;32mVarDecl[0m[0;33m 0x71907a0[0m <[0;33mcol:8[0m, [0;33mcol:15[0m> [0;33mcol:12[0m used[0;1;36m cs[0m [0;32m'int'[0m cinit
[0;34m    |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7190808[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m    |-[0m[0;34m<<<NULL>>>[0m
[0;34m    |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x71908b0[0m <[0;33mcol:18[0m, [0;33mcol:21[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m    | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7190880[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7190840[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71907a0[0m[0;1;36m 'cs'[0m [0;32m'int'[0m
[0;34m    | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7190898[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m    |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7190860[0m <[0;33mcol:21[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7190590[0m[0;1;36m 'T'[0m [0;32m'int'[0m
[0;34m    |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x71908f0[0m <[0;33mcol:24[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m    | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x71908d0[0m <[0;33mcol:24[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71907a0[0m[0;1;36m 'cs'[0m [0;32m'int'[0m
[0;34m    `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7246c50[0m <[0;33mcol:29[0m, [0;33mline:48:4[0m>
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7190988[0m <[0;33mline:21:7[0m, [0;33mcol:12[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7190920[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;33mcol:11[0m used[0;1;36m n[0m [0;32m'int'[0m
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x7190a78[0m <[0;33mcol:14[0m, [0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7190a60[0m <[0;33mcol:14[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7190a40[0m <[0;33mcol:14[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67f8410[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7190aa8[0m <[0;33mcol:20[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x71909e8[0m <[0;33mcol:20[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m      | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7190a28[0m <[0;33mcol:25[0m, [0;33mcol:26[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7190a08[0m <[0;33mcol:26[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7190920[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7190b40[0m <[0;33mline:22:4[0m, [0;33mcol:11[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7190ad8[0m <[0;33mcol:4[0m, [0;33mcol:8[0m> [0;33mcol:8[0m used[0;1;36m cap[0m [0;32m'int'[0m
[0;34m      |-[0m[0;1;35mCallExpr[0m[0;33m 0x7190c30[0m <[0;33mcol:13[0m, [0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7190c18[0m <[0;33mcol:13[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7190bf8[0m <[0;33mcol:13[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67f8410[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m      | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7190c60[0m <[0;33mcol:19[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7190ba0[0m <[0;33mcol:19[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m      | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7190be0[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7190bc0[0m <[0;33mcol:25[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7190ad8[0m[0;1;36m 'cap'[0m [0;32m'int'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x71d5de0[0m <[0;33mline:23:4[0m, [0;33mcol:52[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7191480[0m <[0;33mcol:4[0m, [0;33mcol:50[0m> [0;33mcol:50[0m[0;1;36m pq[0m [0;32m'priority_queue<int, vector<int>, greater<int> >':'std::priority_queue<int, std::vector<int, std::allocator<int> >, std::greater<int> >'[0m callinit
[0;34m      |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x71d5da8[0m <[0;33mcol:50[0m> [0;32m'priority_queue<int, vector<int>, greater<int> >':'std::priority_queue<int, std::vector<int, std::allocator<int> >, std::greater<int> >'[0m[0;36m[0m[0;36m[0m [0;32m'void ()'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x720d2c0[0m <[0;33mline:24:4[0m, [0;33mcol:18[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x71d6658[0m <[0;33mcol:4[0m, [0;33mcol:17[0m> [0;33mcol:17[0m used[0;1;36m S[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m callinit
[0;34m      |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x720d288[0m <[0;33mcol:17[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m[0m[0;36m[0m [0;32m'void () throw()'[0m
[0;34m      |-[0m[0;1;35mForStmt[0m[0;33m 0x7241ba8[0m <[0;33mline:25:4[0m, [0;33mline:29:4[0m>
[0;34m      | |-[0m[0;1;35mDeclStmt[0m[0;33m 0x720d378[0m <[0;33mline:25:8[0m, [0;33mcol:15[0m>
[0;34m      | | `-[0m[0;1;32mVarDecl[0m[0;33m 0x720d2f0[0m <[0;33mcol:8[0m, [0;33mcol:14[0m> [0;33mcol:12[0m used[0;1;36m i[0m [0;32m'int'[0m cinit
[0;34m      | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x720d358[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      | |-[0m[0;34m<<<NULL>>>[0m
[0;34m      | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x720d400[0m <[0;33mcol:17[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<'
[0;34m      | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720d3d0[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720d390[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x720d2f0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m      | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720d3e8[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720d3b0[0m <[0;33mcol:19[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7190920[0m[0;1;36m 'n'[0m [0;32m'int'[0m
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x720d440[0m <[0;33mcol:22[0m, [0;33mcol:23[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m      | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720d420[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x720d2f0[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m      | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7241b80[0m <[0;33mcol:26[0m, [0;33mline:29:4[0m>
[0;34m      |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x720d4d8[0m <[0;33mline:26:7[0m, [0;33mcol:14[0m>
[0;34m      |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x720d470[0m <[0;33mcol:7[0m, [0;33mcol:11[0m> [0;33mcol:11[0m used[0;1;36m tmp[0m [0;32m'int'[0m
[0;34m      |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x720d5c8[0m <[0;33mcol:16[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720d5b0[0m <[0;33mcol:16[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720d590[0m <[0;33mcol:16[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67f8410[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x720d5f8[0m <[0;33mcol:22[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m      |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x720d538[0m <[0;33mcol:22[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m      |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x720d578[0m <[0;33mcol:27[0m, [0;33mcol:28[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m      |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720d558[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x720d470[0m[0;1;36m 'tmp'[0m [0;32m'int'[0m
[0;34m      |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x7241b58[0m <[0;33mline:27:4[0m, [0;33mline:28:15[0m> has_else
[0;34m      |     |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x72418f8[0m <[0;33mline:27:8[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |     | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x72418c0[0m <[0;33mcol:8[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72418a8[0m <[0;33mcol:19[0m> [0;32m'bool (*)(const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |     |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241828[0m <[0;33mcol:19[0m> [0;32m'bool (const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7212300[0m[0;1;36m 'operator=='[0m [0;32m'bool (const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m
[0;34m      |     |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7241810[0m <[0;33mcol:8[0m, [0;33mcol:18[0m> [0;32m'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     |   | `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72417f8[0m <[0;33mcol:8[0m, [0;33mcol:18[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |     |   |   `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x720e5d0[0m <[0;33mcol:8[0m, [0;33mcol:18[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |   |     |-[0m[0;1;35mMemberExpr[0m[0;33m 0x720e5a0[0m <[0;33mcol:8[0m, [0;33mcol:10[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .find[0;33m 0x7203228[0m
[0;34m      |     |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720d610[0m <[0;33mcol:8[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |     |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7212580[0m <[0;33mcol:15[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     |   |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x720d6a0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x720d470[0m[0;1;36m 'tmp'[0m [0;32m'int'[0m
[0;34m      |     |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72417b0[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |     |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7241798[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7212730[0m <[0;33mcol:21[0m, [0;33mcol:27[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7212700[0m <[0;33mcol:21[0m, [0;33mcol:23[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .end[0;33m 0x71fe878[0m
[0;34m      |     |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7212680[0m <[0;33mcol:21[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7241a58[0m <[0;33mcol:30[0m, [0;33mcol:37[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type':'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m      |     | |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7241a00[0m <[0;33mcol:30[0m, [0;33mcol:35[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type':'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |     | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72419e8[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(*)(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |     | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241968[0m <[0;33mcol:31[0m, [0;33mcol:35[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x71ff578[0m[0;1;36m 'operator[]'[0m [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m
[0;34m      |     | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241910[0m <[0;33mcol:30[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |     | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7241950[0m <[0;33mcol:32[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241930[0m <[0;33mcol:32[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x720d470[0m[0;1;36m 'tmp'[0m [0;32m'int'[0m
[0;34m      |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7241a38[0m <[0;33mcol:37[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7241b40[0m <[0;33mline:28:9[0m, [0;33mcol:15[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type':'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m      |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7241b08[0m <[0;33mcol:9[0m, [0;33mcol:14[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type':'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7241af0[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(*)(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241ad0[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x71ff578[0m[0;1;36m 'operator[]'[0m [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::mapped_type &(const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type &)'[0m
[0;34m      |         |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241a78[0m <[0;33mcol:9[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7241ab8[0m <[0;33mcol:11[0m> [0;32m'const int'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241a98[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x720d470[0m[0;1;36m 'tmp'[0m [0;32m'int'[0m
[0;34m      |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7241c90[0m <[0;33mline:30:4[0m, [0;33mcol:14[0m> [0;32m'bitset<100000UL>':'std::bitset<100000>'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7241c60[0m <[0;33mcol:4[0m, [0;33mcol:8[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .reset[0;33m 0x71899a8[0m
[0;34m      |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241be0[0m <[0;33mcol:4[0m> [0;32m'bitset<100000>':'std::bitset<100000>'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7180320[0m[0;1;36m 'vis'[0m [0;32m'bitset<100000>':'std::bitset<100000>'[0m
[0;34m      |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7241d78[0m <[0;33mline:32:4[0m, [0;33mcol:13[0m>
[0;34m      | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7241cf0[0m <[0;33mcol:4[0m, [0;33mcol:12[0m> [0;33mcol:8[0m used[0;1;36m ctr[0m [0;32m'int'[0m cinit
[0;34m      |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7241d58[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      |-[0m[0;1;35mWhileStmt[0m[0;33m 0x7246a90[0m <[0;33mline:33:4[0m, [0;33mline:46:4[0m>
[0;34m      | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7241e18[0m <[0;33mline:33:10[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m prefix '!' cannot overflow
[0;34m      | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7241de0[0m <[0;33mcol:11[0m, [0;33mcol:19[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7241db0[0m <[0;33mcol:11[0m, [0;33mcol:13[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .empty[0;33m 0x71ff150[0m
[0;34m      | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7241e00[0m <[0;33mcol:11[0m> [0;32m'const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      | |       `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241d90[0m <[0;33mcol:11[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x7246a48[0m <[0;33mcol:21[0m, [0;33mline:46:4[0m>
[0;34m      |   |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7241e50[0m <[0;33mline:34:7[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m      |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241e30[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7241cf0[0m[0;1;36m 'ctr'[0m [0;32m'int'[0m
[0;34m      |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7242110[0m <[0;33mline:35:4[0m, [0;33mcol:26[0m>
[0;34m      |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7241e80[0m <[0;33mcol:4[0m, [0;33mcol:21[0m> [0;33mcol:8[0m used[0;1;36m x[0m [0;32m'int'[0m cinit
[0;34m      |   |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x72420f8[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72420e0[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |       `-[0m[0;1;35mMemberExpr[0m[0;33m 0x72420b0[0m <[0;33mcol:10[0m, [0;33mcol:21[0m> [0;32m'const int':'const int'[0m[0;36m lvalue[0m[0;36m[0m ->first[0;33m 0x72146d8[0m
[0;34m      |   |         `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7242080[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer':'std::pair<const int, int> *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |           |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7242068[0m <[0;33mcol:19[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241fe8[0m <[0;33mcol:19[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7211b60[0m[0;1;36m 'operator->'[0m [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m
[0;34m      |   |           `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7241fd0[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |             `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7241fb8[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   |               `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7241f98[0m <[0;33mcol:10[0m, [0;33mcol:18[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |                 `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7241f68[0m <[0;33mcol:10[0m, [0;33mcol:12[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x71fa240[0m
[0;34m      |   |                   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7241ee8[0m <[0;33mcol:10[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x72446e8[0m <[0;33mline:37:4[0m, [0;33mline:38:26[0m> has_else
[0;34m      |   | |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7242318[0m <[0;33mline:37:8[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72422f8[0m <[0;33mcol:8[0m, [0;33mcol:27[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m      |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72422e0[0m <[0;33mcol:8[0m, [0;33mcol:19[0m> [0;32m'int':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   | |   | `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7242290[0m <[0;33mcol:8[0m, [0;33mcol:19[0m> [0;32m'int':'int'[0m[0;36m lvalue[0m[0;36m[0m ->second[0;33m 0x7214738[0m
[0;34m      |   | |   |   `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7242260[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer':'std::pair<const int, int> *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |   |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7242248[0m <[0;33mcol:17[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7242228[0m <[0;33mcol:17[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7211b60[0m[0;1;36m 'operator->'[0m [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m
[0;34m      |   | |   |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7242210[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   | |   |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72421f8[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   | |   |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x72421d8[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |   |           `-[0m[0;1;35mMemberExpr[0m[0;33m 0x72421a8[0m <[0;33mcol:8[0m, [0;33mcol:10[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x71fa240[0m
[0;34m      |   | |   |             `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7242128[0m <[0;33mcol:8[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |   | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x72422c0[0m <[0;33mcol:27[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |   | |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7244508[0m <[0;33mcol:30[0m, [0;33mcol:47[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | | `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7244078[0m <[0;33mcol:30[0m, [0;33mcol:47[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |   |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7244048[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .erase[0;33m 0x72027c8[0m
[0;34m      |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7242330[0m <[0;33mcol:30[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |   | |   `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x72444d8[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::_Rb_tree_iterator<std::pair<const int, int> > &&) noexcept'[0m elidable
[0;34m      |   | |     `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72443a8[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   | |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7242470[0m <[0;33mcol:38[0m, [0;33mcol:46[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7242440[0m <[0;33mcol:38[0m, [0;33mcol:40[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x71fa240[0m
[0;34m      |   | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72423c0[0m <[0;33mcol:38[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |   | `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x72446d0[0m <[0;33mline:38:9[0m, [0;33mcol:26[0m> [0;32m'int':'int'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |   `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x72446b8[0m <[0;33mcol:9[0m, [0;33mcol:26[0m> [0;32m'int':'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m      |   |     `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7244688[0m <[0;33mcol:9[0m, [0;33mcol:20[0m> [0;32m'int':'int'[0m[0;36m lvalue[0m[0;36m[0m ->second[0;33m 0x7214738[0m
[0;34m      |   |       `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7244658[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer':'std::pair<const int, int> *'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |         |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244640[0m <[0;33mcol:18[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   |         | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7244620[0m <[0;33mcol:18[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7211b60[0m[0;1;36m 'operator->'[0m [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m
[0;34m      |   |         `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244608[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;32m'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   |           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72445f0[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   |             `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x72445d0[0m <[0;33mcol:9[0m, [0;33mcol:17[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |               `-[0m[0;1;35mMemberExpr[0m[0;33m 0x72445a0[0m <[0;33mcol:9[0m, [0;33mcol:11[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x71fa240[0m
[0;34m      |   |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7244520[0m <[0;33mcol:9[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |   |-[0m[0;1;35mDeclStmt[0m[0;33m 0x7245550[0m <[0;33mline:40:4[0m, [0;33mcol:50[0m>
[0;34m      |   | `-[0m[0;1;32mVarDecl[0m[0;33m 0x7244af0[0m <[0;33mcol:4[0m, [0;33mcol:49[0m> [0;33mcol:27[0m used[0;1;36m it[0m [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m cinit
[0;34m      |   |   `-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7245538[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |     `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x7245508[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (std::_Rb_tree_iterator<std::pair<const int, int> > &&) noexcept'[0m elidable
[0;34m      |   |       `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72454f0[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m xvalue[0m[0;36m[0m
[0;34m      |   |         `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x72454b0[0m <[0;33mcol:30[0m, [0;33mcol:49[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   |           |-[0m[0;1;35mMemberExpr[0m[0;33m 0x7245480[0m <[0;33mcol:30[0m, [0;33mcol:32[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .upper_bound[0;33m 0x7205068[0m
[0;34m      |   |           | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7244b58[0m <[0;33mcol:30[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |   |           `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x72454d8[0m <[0;33mcol:44[0m, [0;33mcol:48[0m> [0;32m'const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::key_type':'const int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   |             `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7244c58[0m <[0;33mcol:44[0m, [0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '-'
[0;34m      |   |               |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244c28[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |               | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7244be8[0m <[0;33mcol:44[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7190ad8[0m[0;1;36m 'cap'[0m [0;32m'int'[0m
[0;34m      |   |               `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7244c40[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |   |                 `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7244c08[0m <[0;33mcol:48[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7241e80[0m[0;1;36m 'x'[0m [0;32m'int'[0m
[0;34m      |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x7246458[0m <[0;33mline:41:4[0m, [0;33mcol:23[0m>
[0;34m      |   | |-[0m[0;1;35mExprWithCleanups[0m[0;33m 0x7246438[0m <[0;33mcol:8[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | | `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7246400[0m <[0;33mcol:8[0m, [0;33mcol:20[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72463e8[0m <[0;33mcol:10[0m> [0;32m'bool (*)(const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72463c8[0m <[0;33mcol:10[0m> [0;32m'bool (const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7212300[0m[0;1;36m 'operator=='[0m [0;32m'bool (const std::_Rb_tree_iterator<std::pair<const int, int> >::_Self &) const noexcept'[0m
[0;34m      |   | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72463b0[0m <[0;33mcol:8[0m> [0;32m'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7245568[0m <[0;33mcol:8[0m> [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7244af0[0m[0;1;36m 'it'[0m [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m
[0;34m      |   | |   `-[0m[0;1;35mMaterializeTemporaryExpr[0m[0;33m 0x7246398[0m <[0;33mcol:12[0m, [0;33mcol:20[0m> [0;32m'const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |   | |     `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246380[0m <[0;33mcol:12[0m, [0;33mcol:20[0m> [0;32m'const std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |   | |       `-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x7245638[0m <[0;33mcol:12[0m, [0;33mcol:20[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7245608[0m <[0;33mcol:12[0m, [0;33mcol:14[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .begin[0;33m 0x71fa240[0m
[0;34m      |   | |           `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7245588[0m <[0;33mcol:12[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |   | `-[0m[0;1;35mContinueStmt[0m[0;33m 0x7246450[0m <[0;33mcol:23[0m>
[0;34m      |   |-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7246570[0m <[0;33mline:42:4[0m, [0;33mcol:6[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::_Self':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246558[0m <[0;33mcol:6[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::_Self (*)(int) noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72464d8[0m <[0;33mcol:6[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::_Self (int) noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x72120e8[0m[0;1;36m 'operator--'[0m [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::_Self (int) noexcept'[0m
[0;34m      |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7246470[0m <[0;33mcol:4[0m> [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7244af0[0m[0;1;36m 'it'[0m [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m
[0;34m      |   | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7246490[0m <[0;33m<invalid sloc>[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m      |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x7246a20[0m <[0;33mline:44:4[0m, [0;33mline:45:21[0m> has_else
[0;34m      |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x72466d0[0m <[0;33mline:44:8[0m, [0;33mcol:22[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m      |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72466b8[0m <[0;33mcol:8[0m, [0;33mcol:19[0m> [0;32m'int':'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      |     | | `-[0m[0;1;35mParenExpr[0m[0;33m 0x7246678[0m <[0;33mcol:8[0m, [0;33mcol:19[0m> [0;32m'int':'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |     | |   `-[0m[0;1;35mMemberExpr[0m[0;33m 0x7246648[0m <[0;33mcol:9[0m, [0;33mcol:13[0m> [0;32m'int':'int'[0m[0;36m lvalue[0m[0;36m[0m ->second[0;33m 0x7214738[0m
[0;34m      |     | |     `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7246618[0m <[0;33mcol:9[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer':'std::pair<const int, int> *'[0m[0;36m[0m[0;36m[0m
[0;34m      |     | |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246600[0m <[0;33mcol:11[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |     | |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72465e0[0m <[0;33mcol:11[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7211b60[0m[0;1;36m 'operator->'[0m [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m
[0;34m      |     | |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72465c8[0m <[0;33mcol:9[0m> [0;32m'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     | |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72465a8[0m <[0;33mcol:9[0m> [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7244af0[0m[0;1;36m 'it'[0m [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m
[0;34m      |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7246698[0m <[0;33mcol:22[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m      |     |-[0m[0;1;35mCXXMemberCallExpr[0m[0;33m 0x72467d0[0m <[0;33mcol:25[0m, [0;33mcol:35[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m
[0;34m      |     | |-[0m[0;1;35mMemberExpr[0m[0;33m 0x72467a0[0m <[0;33mcol:25[0m, [0;33mcol:27[0m> [0;32m'<bound member function type>'[0m[0;36m[0m[0;36m[0m .erase[0;33m 0x72027c8[0m
[0;34m      |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x72466f0[0m <[0;33mcol:25[0m> [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71d6658[0m[0;1;36m 'S'[0m [0;32m'map<int, int>':'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >'[0m
[0;34m      |     | `-[0m[0;1;35mCXXConstructExpr[0m[0;33m 0x72468e8[0m <[0;33mcol:33[0m> [0;32m'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int> > >::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m[0m[0;36m[0m [0;32m'void (const std::_Rb_tree_iterator<std::pair<const int, int> > &) noexcept'[0m
[0;34m      |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x72467f8[0m <[0;33mcol:33[0m> [0;32m'const map<int, int>::iterator':'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7246780[0m <[0;33mcol:33[0m> [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7244af0[0m[0;1;36m 'it'[0m [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m
[0;34m      |     `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x7246a08[0m <[0;33mline:45:9[0m, [0;33mcol:21[0m> [0;32m'int':'int'[0m[0;36m[0m[0;36m[0m postfix '--'
[0;34m      |       `-[0m[0;1;35mParenExpr[0m[0;33m 0x72469e8[0m <[0;33mcol:9[0m, [0;33mcol:20[0m> [0;32m'int':'int'[0m[0;36m lvalue[0m[0;36m[0m
[0;34m      |         `-[0m[0;1;35mMemberExpr[0m[0;33m 0x72469b8[0m <[0;33mcol:10[0m, [0;33mcol:14[0m> [0;32m'int':'int'[0m[0;36m lvalue[0m[0;36m[0m ->second[0;33m 0x7214738[0m
[0;34m      |           `-[0m[0;1;35mCXXOperatorCallExpr[0m[0;33m 0x7246988[0m <[0;33mcol:10[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer':'std::pair<const int, int> *'[0m[0;36m[0m[0;36m[0m
[0;34m      |             |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246970[0m <[0;33mcol:12[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer (*)() const noexcept'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      |             | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7246950[0m <[0;33mcol:12[0m> [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mCXXMethod[0m[0;33m 0x7211b60[0m[0;1;36m 'operator->'[0m [0;32m'std::_Rb_tree_iterator<std::pair<const int, int> >::pointer () const noexcept'[0m
[0;34m      |             `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246938[0m <[0;33mcol:10[0m> [0;32m'const std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m <[0;31mNoOp[0m>
[0;34m      |               `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7246918[0m <[0;33mcol:10[0m> [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7244af0[0m[0;1;36m 'it'[0m [0;32m'map<int, int>::iterator':'std::_Rb_tree_iterator<std::pair<const int, int> >'[0m
[0;34m      `-[0m[0;1;35mCallExpr[0m[0;33m 0x7246be8[0m <[0;33mline:47:4[0m, [0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246bd0[0m <[0;33mcol:4[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7246bb0[0m <[0;33mcol:4[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x67f5ce0[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246c20[0m <[0;33mcol:11[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m        | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x7246af0[0m <[0;33mcol:11[0m> [0;32m'const char [14]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d: %d\n"[0m
[0;34m        |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x7246b70[0m <[0;33mcol:28[0m, [0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m '+'
[0;34m        | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246b58[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7246b18[0m <[0;33mcol:28[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x71907a0[0m[0;1;36m 'cs'[0m [0;32m'int'[0m
[0;34m        | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x7246b38[0m <[0;33mcol:31[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x7246c38[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x7246b90[0m <[0;33mcol:33[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x7241cf0[0m[0;1;36m 'ctr'[0m [0;32m'int'[0m

