Dumping gcd:
[0;1;32mFunctionDecl[0m[0;33m 0x637a590[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aaaaajack/3004486_5706278382862336_aaaaajack.cpp:3:1[0m, [0;33mline:6:1[0m> [0;33mline:3:11[0m used[0;1;36m gcd[0m [0;32m'long long (long long, long long)'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x637a438[0m <[0;33mcol:15[0m, [0;33mcol:25[0m> [0;33mcol:25[0m used[0;1;36m a[0m [0;32m'long long'[0m
[0;34m|-[0m[0;1;32mParmVarDecl[0m[0;33m 0x637a4b8[0m <[0;33mcol:27[0m, [0;33mcol:37[0m> [0;33mcol:37[0m used[0;1;36m b[0m [0;32m'long long'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x637a8e8[0m <[0;33mcol:39[0m, [0;33mline:6:1[0m>
[0;34m  |-[0m[0;1;35mIfStmt[0m[0;33m 0x637a718[0m <[0;33mline:4:2[0m, [0;33mcol:18[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x637a6b0[0m <[0;33mcol:5[0m, [0;33mcol:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x637a680[0m <[0;33mcol:5[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x637a640[0m <[0;33mcol:5[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x637a4b8[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x637a698[0m <[0;33mcol:8[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mIntegralCast[0m>
[0;34m  | |   `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x637a660[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  | `-[0m[0;1;35mReturnStmt[0m[0;33m 0x637a708[0m <[0;33mcol:11[0m, [0;33mcol:18[0m>
[0;34m  |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x637a6f0[0m <[0;33mcol:18[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x637a6d0[0m <[0;33mcol:18[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x637a438[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x637a8d8[0m <[0;33mline:5:2[0m, [0;33mcol:18[0m>
[0;34m    `-[0m[0;1;35mCallExpr[0m[0;33m 0x637a890[0m <[0;33mcol:9[0m, [0;33mcol:18[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x637a878[0m <[0;33mcol:9[0m> [0;32m'long long (*)(long long, long long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x637a828[0m <[0;33mcol:9[0m> [0;32m'long long (long long, long long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x637a590[0m[0;1;36m 'gcd'[0m [0;32m'long long (long long, long long)'[0m
[0;34m      |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x637a8c0[0m <[0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m      | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x637a778[0m <[0;33mcol:13[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x637a4b8[0m[0;1;36m 'b'[0m [0;32m'long long'[0m
[0;34m      `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x637a808[0m <[0;33mcol:15[0m, [0;33mcol:17[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '%'
[0;34m        |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x637a7d8[0m <[0;33mcol:15[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m        | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x637a798[0m <[0;33mcol:15[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x637a438[0m[0;1;36m 'a'[0m [0;32m'long long'[0m
[0;34m        `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x637a7f0[0m <[0;33mcol:17[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m          `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x637a7b8[0m <[0;33mcol:17[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mParmVar[0m[0;33m 0x637a4b8[0m[0;1;36m 'b'[0m [0;32m'long long'[0m

Dumping main:
[0;1;32mFunctionDecl[0m[0;33m 0x4935930[0m <[0;33m/home/tunde/Linux/Documents/Projekt/Part_II/Clang_GJam/data/aaaaajack/3004486_5706278382862336_aaaaajack.cpp:7:1[0m, [0;33mline:30:1[0m> [0;33mline:7:5[0m[0;1;36m main[0m [0;32m'int ()'[0m
[0;34m`-[0m[0;1;35mCompoundStmt[0m[0;33m 0x4938bf0[0m <[0;33mcol:11[0m, [0;33mline:30:1[0m>
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x4935b70[0m <[0;33mline:8:2[0m, [0;33mcol:11[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x49359e8[0m <[0;33mcol:2[0m, [0;33mcol:6[0m> [0;33mcol:6[0m used[0;1;36m t[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x4935a68[0m <[0;33mcol:2[0m, [0;33mcol:8[0m> [0;33mcol:8[0m used[0;1;36m c[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x4935ae8[0m <[0;33mcol:2[0m, [0;33mcol:10[0m> [0;33mcol:10[0m used[0;1;36m i[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x4936eb8[0m <[0;33mline:9:2[0m, [0;33mcol:17[0m>
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x4935ba0[0m <[0;33mcol:2[0m, [0;33mcol:12[0m> [0;33mcol:12[0m used[0;1;36m p[0m [0;32m'long long'[0m
[0;34m  | |-[0m[0;1;32mVarDecl[0m[0;33m 0x4936db0[0m <[0;33mcol:2[0m, [0;33mcol:14[0m> [0;33mcol:14[0m used[0;1;36m q[0m [0;32m'long long'[0m
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x4936e30[0m <[0;33mcol:2[0m, [0;33mcol:16[0m> [0;33mcol:16[0m used[0;1;36m d[0m [0;32m'long long'[0m
[0;34m  |-[0m[0;1;35mDeclStmt[0m[0;33m 0x4936f48[0m <[0;33mline:10:2[0m, [0;33mcol:11[0m>
[0;34m  | `-[0m[0;1;32mVarDecl[0m[0;33m 0x4936ee0[0m <[0;33mcol:2[0m, [0;33mcol:7[0m> [0;33mcol:7[0m used[0;1;36m flag[0m [0;32m'bool'[0m
[0;34m  |-[0m[0;1;35mCallExpr[0m[0;33m 0x4937110[0m <[0;33mline:11:2[0m, [0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49370f8[0m <[0;33mcol:2[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937080[0m <[0;33mcol:2[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x49225f0[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937140[0m <[0;33mcol:8[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x4937028[0m <[0;33mcol:8[0m> [0;32m'const char [3]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%d"[0m
[0;34m  | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x4937068[0m <[0;33mcol:13[0m, [0;33mcol:14[0m> [0;32m'int *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937048[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x49359e8[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  |-[0m[0;1;35mForStmt[0m[0;33m 0x4938b88[0m <[0;33mline:12:2[0m, [0;33mline:28:2[0m>
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937198[0m <[0;33mline:12:6[0m, [0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937158[0m <[0;33mcol:6[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935a68[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4937178[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937228[0m <[0;33mcol:10[0m, [0;33mcol:13[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49371f8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49371b8[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935a68[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937210[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  | |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49371d8[0m <[0;33mcol:13[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x49359e8[0m[0;1;36m 't'[0m [0;32m'int'[0m
[0;34m  | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x4937268[0m <[0;33mcol:15[0m, [0;33mcol:16[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937248[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935a68[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x4938b38[0m <[0;33mcol:19[0m, [0;33mline:28:2[0m>
[0;34m  |   |-[0m[0;1;35mCallExpr[0m[0;33m 0x4937440[0m <[0;33mline:13:3[0m, [0;33mcol:26[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937428[0m <[0;33mcol:3[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937408[0m <[0;33mcol:3[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x49225f0[0m[0;1;36m 'scanf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937478[0m <[0;33mcol:9[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |   | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x4937348[0m <[0;33mcol:9[0m> [0;32m'const char [10]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "%lld/%lld"[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x49373b8[0m <[0;33mcol:21[0m, [0;33mcol:22[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937370[0m <[0;33mcol:22[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ba0[0m[0;1;36m 'p'[0m [0;32m'long long'[0m
[0;34m  |   | `-[0m[0;1;35mUnaryOperator[0m[0;33m 0x49373f0[0m <[0;33mcol:24[0m, [0;33mcol:25[0m> [0;32m'long long *'[0m[0;36m[0m[0;36m[0m prefix '&' cannot overflow
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49373d0[0m <[0;33mcol:25[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936db0[0m[0;1;36m 'q'[0m [0;32m'long long'[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x49375d0[0m <[0;33mline:14:3[0m, [0;33mcol:12[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937490[0m <[0;33mcol:3[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936e30[0m[0;1;36m 'd'[0m [0;32m'long long'[0m
[0;34m  |   | `-[0m[0;1;35mCallExpr[0m[0;33m 0x4937570[0m <[0;33mcol:5[0m, [0;33mcol:12[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937558[0m <[0;33mcol:5[0m> [0;32m'long long (*)(long long, long long)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937538[0m <[0;33mcol:5[0m> [0;32m'long long (long long, long long)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x4935590[0m[0;1;36m 'gcd'[0m [0;32m'long long (long long, long long)'[0m
[0;34m  |   |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49375a0[0m <[0;33mcol:9[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49374f8[0m <[0;33mcol:9[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ba0[0m[0;1;36m 'p'[0m [0;32m'long long'[0m
[0;34m  |   |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49375b8[0m <[0;33mcol:11[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937518[0m <[0;33mcol:11[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936db0[0m[0;1;36m 'q'[0m [0;32m'long long'[0m
[0;34m  |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x4937648[0m <[0;33mline:15:3[0m, [0;33mcol:6[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '/=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49375f0[0m <[0;33mcol:3[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ba0[0m[0;1;36m 'p'[0m [0;32m'long long'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937630[0m <[0;33mcol:6[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937610[0m <[0;33mcol:6[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936e30[0m[0;1;36m 'd'[0m [0;32m'long long'[0m
[0;34m  |   |-[0m[0;1;35mCompoundAssignOperator[0m[0;33m 0x49376d0[0m <[0;33mline:16:3[0m, [0;33mcol:6[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m '/=' ComputeLHSTy=[0;32m'long long'[0m ComputeResultTy=[0;32m'long long'[0m
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937678[0m <[0;33mcol:3[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936db0[0m[0;1;36m 'q'[0m [0;32m'long long'[0m
[0;34m  |   | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49376b8[0m <[0;33mcol:6[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937698[0m <[0;33mcol:6[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936e30[0m[0;1;36m 'd'[0m [0;32m'long long'[0m
[0;34m  |   |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937730[0m <[0;33mline:17:3[0m, [0;33mcol:8[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937700[0m <[0;33mcol:3[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936ee0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |   | `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x4937720[0m <[0;33mcol:8[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m false
[0;34m  |   |-[0m[0;1;35mForStmt[0m[0;33m 0x49379b0[0m <[0;33mline:18:3[0m, [0;33mline:20:3[0m>
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937790[0m <[0;33mline:18:7[0m, [0;33mcol:9[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   | | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937750[0m <[0;33mcol:7[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4937770[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m
[0;34m  |   | |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   | |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937808[0m <[0;33mcol:11[0m, [0;33mcol:14[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   | | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49377f0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49377b0[0m <[0;33mcol:11[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x49377d0[0m <[0;33mcol:14[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 40[0m
[0;34m  |   | |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x4937848[0m <[0;33mcol:17[0m, [0;33mcol:18[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937828[0m <[0;33mcol:17[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x4937998[0m <[0;33mcol:21[0m, [0;33mline:20:3[0m>
[0;34m  |   |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x4937980[0m <[0;33mline:19:4[0m, [0;33mcol:23[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937910[0m <[0;33mcol:7[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '=='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49378f8[0m <[0;33mcol:7[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937860[0m <[0;33mcol:7[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936db0[0m[0;1;36m 'q'[0m [0;32m'long long'[0m
[0;34m  |   |     | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x49378d8[0m <[0;33mcol:10[0m, [0;33mcol:15[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '<<'
[0;34m  |   |     |   |-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4937880[0m <[0;33mcol:10[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |     |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49378c0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49378a0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937960[0m <[0;33mcol:18[0m, [0;33mcol:23[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |       |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937930[0m <[0;33mcol:18[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936ee0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |   |       `-[0m[0;1;35mCXXBoolLiteralExpr[0m[0;33m 0x4937950[0m <[0;33mcol:23[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m true
[0;34m  |   |-[0m[0;1;35mIfStmt[0m[0;33m 0x4937cc0[0m <[0;33mline:21:3[0m, [0;33mline:25:3[0m>
[0;34m  |   | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937a08[0m <[0;33mline:21:6[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49379e8[0m <[0;33mcol:6[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936ee0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |   | `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x4937ca8[0m <[0;33mcol:11[0m, [0;33mline:25:3[0m>
[0;34m  |   |   `-[0m[0;1;35mForStmt[0m[0;33m 0x4937c70[0m <[0;33mline:22:4[0m, [0;33mline:24:4[0m>
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937a60[0m <[0;33mline:22:8[0m, [0;33mcol:10[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m '='
[0;34m  |   |     | |-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937a20[0m <[0;33mcol:8[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4937a40[0m <[0;33mcol:10[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 1[0m
[0;34m  |   |     |-[0m[0;34m<<<NULL>>>[0m
[0;34m  |   |     |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937ad8[0m <[0;33mcol:12[0m, [0;33mcol:15[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937ac0[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937a80[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     | `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4937aa0[0m <[0;33mcol:15[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 40[0m
[0;34m  |   |     |-[0m[0;1;35mUnaryOperator[0m[0;33m 0x4937b18[0m <[0;33mcol:18[0m, [0;33mcol:19[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m postfix '++'
[0;34m  |   |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937af8[0m <[0;33mcol:18[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |     `-[0m[0;1;35mCompoundStmt[0m[0;33m 0x4937c58[0m <[0;33mcol:22[0m, [0;33mline:24:4[0m>
[0;34m  |   |       `-[0m[0;1;35mIfStmt[0m[0;33m 0x4937c40[0m <[0;33mline:23:5[0m, [0;33mcol:19[0m>
[0;34m  |   |         |-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937c18[0m <[0;33mcol:8[0m, [0;33mcol:16[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m '<='
[0;34m  |   |         | |-[0m[0;1;35mParenExpr[0m[0;33m 0x4937bc0[0m <[0;33mcol:8[0m, [0;33mcol:13[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m
[0;34m  |   |         | | `-[0m[0;1;35mBinaryOperator[0m[0;33m 0x4937ba0[0m <[0;33mcol:9[0m, [0;33mcol:12[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m '>>'
[0;34m  |   |         | |   |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937b70[0m <[0;33mcol:9[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | |   | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937b30[0m <[0;33mcol:9[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936db0[0m[0;1;36m 'q'[0m [0;32m'long long'[0m
[0;34m  |   |         | |   `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937b88[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         | |     `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937b50[0m <[0;33mcol:12[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |   |         | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937c00[0m <[0;33mcol:16[0m> [0;32m'long long'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |   |         |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937be0[0m <[0;33mcol:16[0m> [0;32m'long long'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ba0[0m[0;1;36m 'p'[0m [0;32m'long long'[0m
[0;34m  |   |         `-[0m[0;1;35mBreakStmt[0m[0;33m 0x4937c38[0m <[0;33mcol:19[0m>
[0;34m  |   `-[0m[0;1;35mIfStmt[0m[0;33m 0x4938b10[0m <[0;33mline:26:3[0m, [0;33mline:27:41[0m> has_else
[0;34m  |     |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4937cf8[0m <[0;33mline:26:6[0m> [0;32m'bool'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4937cd8[0m <[0;33mcol:6[0m> [0;32m'bool'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4936ee0[0m[0;1;36m 'flag'[0m [0;32m'bool'[0m
[0;34m  |     |-[0m[0;1;35mCallExpr[0m[0;33m 0x49388e8[0m <[0;33mcol:12[0m, [0;33mcol:39[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x49388d0[0m <[0;33mcol:12[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x49388b0[0m <[0;33mcol:12[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x491ee10[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4938920[0m <[0;33mcol:19[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |     | | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x4938848[0m <[0;33mcol:19[0m> [0;32m'const char [14]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d: %d\n"[0m
[0;34m  |     | |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4938938[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     | | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4938870[0m <[0;33mcol:36[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935a68[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  |     | `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4938950[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |     |   `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4938890[0m <[0;33mcol:38[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935ae8[0m[0;1;36m 'i'[0m [0;32m'int'[0m
[0;34m  |     `-[0m[0;1;35mCallExpr[0m[0;33m 0x4938ab0[0m <[0;33mline:27:8[0m, [0;33mcol:41[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4938a98[0m <[0;33mcol:8[0m> [0;32m'int (*)(const char *__restrict, ...)'[0m[0;36m[0m[0;36m[0m <[0;31mFunctionToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4938a78[0m <[0;33mcol:8[0m> [0;32m'int (const char *__restrict, ...)'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mFunction[0m[0;33m 0x491ee10[0m[0;1;36m 'printf'[0m [0;32m'int (const char *__restrict, ...)'[0m
[0;34m  |       |-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4938ae0[0m <[0;33mcol:15[0m> [0;32m'const char *'[0m[0;36m[0m[0;36m[0m <[0;31mArrayToPointerDecay[0m>
[0;34m  |       | `-[0m[0;1;35mStringLiteral[0m[0;33m 0x4938a28[0m <[0;33mcol:15[0m> [0;32m'const char [22]'[0m[0;36m lvalue[0m[0;36m[0m[0;1;36m "Case #%d: impossible\n"[0m
[0;34m  |       `-[0m[0;1;35mImplicitCastExpr[0m[0;33m 0x4938af8[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m <[0;31mLValueToRValue[0m>
[0;34m  |         `-[0m[0;1;35mDeclRefExpr[0m[0;33m 0x4938a58[0m <[0;33mcol:40[0m> [0;32m'int'[0m[0;36m lvalue[0m[0;36m[0m [0;1;32mVar[0m[0;33m 0x4935a68[0m[0;1;36m 'c'[0m [0;32m'int'[0m
[0;34m  `-[0m[0;1;35mReturnStmt[0m[0;33m 0x4938be0[0m <[0;33mline:29:2[0m, [0;33mcol:9[0m>
[0;34m    `-[0m[0;1;35mIntegerLiteral[0m[0;33m 0x4938bc0[0m <[0;33mcol:9[0m> [0;32m'int'[0m[0;36m[0m[0;36m[0m[0;1;36m 0[0m

